From jlrubin at mit.edu  Wed Jul  1 02:52:16 2015
From: jlrubin at mit.edu (Jeremy)
Date: Wed, 1 Jul 2015 10:52:16 +0800
Subject: [bitcoin-dev] A possible solution for the block size limit:
 Detection and rejection of bloated blocks by full nodes.
In-Reply-To: <CAPg+sBj2P6ZUxJyrn3Dq76USO5kDTfpkF-zuYsKQbpQbTnyq2A@mail.gmail.com>
References: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
	<CAPg+sBj2P6ZUxJyrn3Dq76USO5kDTfpkF-zuYsKQbpQbTnyq2A@mail.gmail.com>
Message-ID: <CAD5xwhj_cieV18zB-5W+dBse1JQkFqh7t3ofqV3_yf=BgnUq9g@mail.gmail.com>

A simple hack to achieve this would be phase shifting the transaction fees
by one block. There may be other problems, but also potential
benefits, with that though.
This hack works because then a miner would orphan a block which didn't
properly reward them, which makes it very costly for even a miner to put in
a bunch of transactions for free. This phase can be adjusted to different
amounts, spread over multiple blocks, or even randomly selected at the time
of mining from a pool of un-fee claimed blocks (although this would require
some seeding to create a pool of any size greater than 1).

Again, this is probably a bad idea and I haven't thought it through
completely, but just tossing it out there.

Ps sorry if you're seeing this many times I think it bounced due to the
not-subscribed rule (sent from my other account)
On Wednesday, July 1, 2015, Pieter Wuille <pieter.wuille at gmail.com> wrote:

> The problem with this approach is that you need 100% exact behaviour for
> every node on the network in their decision to reject a particular block.
> So we need a 100% mempool synchronization across all nodes - otherwise just
> an attempted double spend could result in a fork in the network because
> some nodes saw it and some didn't. And actually, if we had 100% mempool
> synchronization, we wouldn't need a blockchain in the first place, because
> we could just use "first to enter mempool" as validity criterion.
>
> On Wed, Jul 1, 2015 at 1:41 AM, Peter Grigor <peter at grigor.ws
> <javascript:_e(%7B%7D,'cvml','peter at grigor.ws');>> wrote:
>
>> The block size debate centers around one concern it seems. To wit: if
>> block size is increased malicious miners may publish unreasonably large
>> "bloated" blocks. The way a miner would do this is to generate a plethora
>> of private, non-propagated transactions and include these in the block they
>> solve.
>>
>> It seems to me that these bloated blocks could easily be detected by
>> other miners and full nodes: they will contain a very high percentage of
>> transactions that aren't found in the nodes' own memory pools. This
>> signature can be exploited to allow nodes to reject these bloated blocks.
>> The key here is that any malicious miner that publishes a block that is
>> bloated with his own transactions would contain a ridiculous number of
>> transactions that *absolutely no other full node has in its mempool*.
>>
>> Simply put, a threshold would be set by nodes on the allowable number of
>> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I
>> really don't know what it should be). If a block is published which
>> contains more that this threshold of non-mempool transactions then it is
>> rejected.
>>
>> If this idea works the block size limitation could be completely removed.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> <javascript:_e(%7B%7D,'cvml','bitcoin-dev at lists.linuxfoundation.org');>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>

-- 
--
@JeremyRubin <https://twitter.com/JeremyRubin>
<https://twitter.com/JeremyRubin>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/58eeb253/attachment.html>

From mickeybob at gmail.com  Wed Jul  1 07:15:15 2015
From: mickeybob at gmail.com (Michael Naber)
Date: Wed, 1 Jul 2015 03:15:15 -0400
Subject: [bitcoin-dev] Reaching consensus on policy to continually increase
 block size limit as hardware improves, and a few other critical issues
Message-ID: <CALgxB7sqQPvXUX-7g3xVOb8EarXrJkjjpuhSbhP+i2h8vut49g@mail.gmail.com>

This is great: Adam agrees that we should scale the block size limit
discretionarily upward within the limits of technology, and continually so
as hardware improves. Peter and others: What stands in the way of broader
consensus on this?


We also agree on a lot of other important things:
-- block size is not a free variable
-- there are trade-offs between node requirements and block size
-- those trade-offs have impacts on decentralization
-- it is important to keep decentralization strong
-- computing technology is currently not easily capable of running a global
transaction network where every transaction is broadcast to every node
-- we may need some solution (perhaps lightning / hub and spoke / other
things) that can help with this

We likely also agree that:
-- whatever that solution may be, we want bitcoin to be the "hub" / core of
it
-- this hub needs to exhibit the characteristic of globally aware global
consensus, where every node knows about (awareness) and agrees on
(consensus) every transaction
-- Critically, the Bitcoin Core Goal: the goal of Bitcoin core is to build
the "best" globally aware globally consensus network, recognizing there are
complex tradeoffs in doing this.


There are a few important things we still don't agree on though. Our
disagreement on these things is causing us to have trouble making progress
meeting the goal of Bitcoin Core. It is critical we address the following
points of disagreement. Please help get agreement on these issues below by
sharing your thoughts:

1) Some believe that fees and therefore hash-rate will be high by limiting
capacity, and that we need to limit capacity to have a "healthy fee market".

Think of the airplane analogy: If some day technology exists to ship a
hundred million people (transactions) on a plane (block) then do you really
want to fight to outlaw those planes? Airlines are regulated so they have
to pay to screen each passenger to a minimum standard, so even if the plane
has unlimited capacity, they still have to pay to meet minimum security for
each passenger.

Just like we can set the block limit, so can we "regulate the airline
security requirements" and set a minimum fee size for the sake of security.
If technology allows running 100,000 transactions per second in 25 years,
and we set the minimum fee size to one penny, then each block is worth a
minimum of $600,000. Miners should be ok with that and so should everyone
else.


2) Some believe that it is better for (a) network reliability and (b)
validation of transaction integrity, to have every user run a "full node"
in order to use Bitcoin Core.

I don't agree with this. I'll break this into two pieces of network
reliability and transaction integrity.

Network Reliability


Imagine you're setting up an email server for a big company. You decide to
set up a main server, and two fail-over servers. Somebody says that they're
really concerned about reliability and asks you to add another couple
fail-over servers. So you agree. But at some point there's limited benefit
to adding more servers: and there's real cost -- all those servers need to
keep in sync with one another, and they need to be maintained, etc. And
there's limited return: how likely is it really that all those servers are
going to go down?

Bitcoin is obviously different from corporate email servers. In one sense,
you've got miners and volunteer nodes rather than centrally managed ones,
so nodes are much more likely to go down. But at the end of the day, is our
up-time really going to be that much better when you have a million nodes
versus a few thousand?

Cloud storage copies your data a half dozen times to a few different data
centers. But they don't copy it a half a million times. At some point the
added redundancy doesn't matter for reliability. We just don't need
millions of nodes to participate in a broadcast network to ensure network
reliability.

Transaction Integrity

Think of open source software: you trust it because you know it can be
audited easily, but you probably don't take the time to audit yourself
every piece of open source software you use. And so it is with
Bitcoin: People need to be able to easily validate the blockchain, but they
don't need to be able to validate it every time they use it, and they
certainly don't need to validate it when using Bitcoin on their Apple
watches.

If I can lease a server in a data center for a few hours at fifty cents an
hour to validate the block chain, then the total cost for me to
independently validate the blockchain is just a couple dollars. Compare
that to my cost to independently validate other parts of the system -- like
the source code! Where's the real cost here?

If the goal of decentralization is to ensure transaction integrity and
network reliability, then we just don't need lots of nodes or every user
running a node to meet that goal. If the goal of decentralization is
something else: what is it?

3) Some believe that we should make Bitcoin Core to run as a high-memory
server-grade software rather than for people's desktops.

I think this is a great idea.

The meaningful impact to the goals of decentralization by limiting which
hardware nodes can run on will be minimal compared with the huge gains in
capacity. Why does increasing capacity of Bitcoin Core matter when we can
"increase capacity" by moving to hub and spoke / lightning? Maybe we should
ask why does growing more apples matter if we can grow more oranges instead?

Hub and spoke and lightning are useful means of making lower cost
transactions, but they're not the same as Bitcoin Core. Stick to the goal:
the goal of Bitcoin core is to build the "best" globally aware globally
consensus network, recognizing there are complex tradeoffs in doing this.

Hub and spoke and lightning could be great when you want lower-cost fees
and don't really care about global awareness. Poker chips are great when
you're in a casino. We don't talk about lightning networks to the guy who
designs poker chips, and we shouldn't be talking about them to the guy who
builds globally aware consensus networks either.

Do people even want increased capacity when they can use hub and spoke /
lightning? If you think they might be willing to pay $600,000 every ten
minutes for it (see above) then yes. Increase capacity, and let the market
decide if that capacity gets used.



On Tue, Jun 30, 2015 at 3:54 PM, Adam Back <adam at cypherspace.org> wrote:

> Not that I'm arguing against scaling within tech limits - I agree we
> can and should - but note block-size is not a free variable.  The
> system is a balance of factors, interests and incentives.
>
> As Greg said here
>
> https://www.reddit.com/r/Bitcoin/comments/3b0593/to_fork_or_not_to_fork/cshphic?context=3
> there are multiple things we should usefully do with increased
> bandwidth:
>
> a) improve decentralisation and hence security/policy
> neutrality/fungibility (which is quite weak right now by a number of
> measures)
> b) improve privacy (privacy features tend to consume bandwidth, eg see
> the Confidential Transactions feature) or more incremental features.
> c) increase throughput
>
> I think some of the within tech limits bandwidth should be
> pre-allocated to decentralisation improvements given a) above.
>
> And I think that we should also see work to improve decentralisation
> with better pooling protocols that people are working on, to remove
> some of the artificial centralisation in the system.
>
> Secondly on the interests and incentives - miners also play an
> important part of the ecosystem and have gone through some lean times,
> they may not be overjoyed to hear a plan to just whack the block-size
> up to 8MB.  While it's true (within some limits) that miners could
> collectively keep blocks smaller, there is the ongoing reality that
> someone else can take break ranks and take any fee however de minimis
> fee if there is a huge excess of space relative to current demand and
> drive fees to zero for a few years.  A major thing even preserving
> fees is wallet defaults, which could be overridden(plus protocol
> velocity/fee limits).
>
> I think solutions that see growth scale more smoothly - like Jeff
> Garzik's and Greg Maxwell's and Gavin Andresen's (though Gavin's
> starts with a step) are far less likely to create perverse unforeseen
> side-effects.  Well we can foresee this particular effect, but the
> market and game theory can surprise you so I think you generally want
> the game-theory & market effects to operate within some more smoothly
> changing caps, with some user or miner mutual control of the cap.
>
> So to be concrete here's some hypotheticals (unvalidated numbers):
>
> a) X MB cap with miner policy limits (simple, lasts a while)
> b) starting at 1MB and growing to 2*X MB cap with 10%/year growth
> limiter + policy limits
> c) starting at 1MB and growing to 3*X MB cap with 15%/year growth
> limiter + Jeff Garzik's miner vote.
> d) starting at 1MB and growing to 4*X MB cap with 20%/year growth
> limiter + Greg Maxwell's flexcap
>
> I think it would be good to see some tests of achievable network
> bandwidth on a range of networks, but as an illustration say X is 2MB.
>
> Rationale being the weaker the signalling mechanism between users and
> user demanded size (in most models communicated via miners), the more
> risk something will go in an unforeseen direction and hence the lower
> the cap and more conservative the growth curve.
>
> 15% growth limiter is not Nielsen's law by intent.  Akamai have data
> on what they serve, and it's more like 15% per annum, but very
> variable by country
>
> http://www.akamai.com/stateoftheinternet/soti-visualizations.html#stoi-graph
> CISCO expect home DSL to double in 5 years
> (
> http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/VNI_Hyperconnectivity_WP.html
> ), which is about the same number.
>
> (Thanks to Rusty for data sources for 15% number).
>
> This also supports the claim I have made a few times here, that it is
> not realistic to support massive growth without algorithmic
> improvement from Lightning like or extension-block like opt-in
> systems.  People who are proposing that we ramp blocksizes to create
> big headroom are I think from what has been said over time, often
> without advertising it clearly, actually assuming and being ok with
> the idea that full nodes move into data-centers period and small
> business/power user validation becomes a thing of the distant past.
> Further the aggressive auto-growth risks seeing that trend continuing
> into higher tier data-centers with negative implications for
> decentralisation.  The odd proponent seems OK with even that too.
>
> Decentralisation is key to Bitcoin's security model, and it's
> differentiating properties.  I think those aggressive growth numbers
> stray into the zone of losing efficiency.  By which I mean in
> scalability or privacy systems if you make a trade-off too far, it
> becomes time to re-asses what you're doing.  For example at that level
> of centralisation, alternative designs are more network efficient,
> while achieving the same effective (weak) decentralisation.  In
> Bitcoin I see this as a strong argument not to push things to that
> extreme, the core functionality must remain for Lightning and other
> scaling approaches to remain secure by using the Bitcoin as a secure
> anchor.  If we heavily centralise and weaken the security of the main
> Bitcoin chain, there remains nothing secure to build on.
>
> Therefore I think it's more appropriate for high scale to rely on
> lightning, or a semi-centralised trade-offs being in the side-chain
> model or similar, where the higher risk of centralisation is opt-in
> and not exposed back (due to the security firewall) to the Bitcoin
> network itself.
>
> People who would like to try the higher tier data-center and
> throughput by high bandwidth use route should in my opinion run that
> experiment as a layer 2 side-chain or analogous.  There are a few ways
> to do that.  And it would be appropriate to my mind that we discuss
> them here also.
>
> An experiment like that could run in parallel with lightning, maybe it
> could be done faster, or offer different trade-offs, so could be an
> interesting and useful thing to see work on.
>
> > On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:
> >> Which of course raises another issue: if that was the plan, then all you
> >> can do is double capacity, with no clear way to scaling beyond that.
> >> Why bother?
>
> A secondary function can be a market signalling - market evidence
> throughput can increase, and there is a technical process that is
> effectively working on it.  While people may not all understand the
> trade-offs and decentralisation work that should happen in parallel,
> nor the Lightning protocol's expected properties - they can appreciate
> perceived progress and an evidently functioning process.  Kind of a
> weak rationale, from a purely technical perspective, but it may some
> value, and is certainly less risky than a unilateral fork.
>
> As I recall Gavin has said things about this area before also
> (demonstrate throughput progress to the market).
>
> Another factor that people have said, which I think I agree with
> fairly much is that if we can chose something conservative, that there
> is wide-spread support for, it can be safer to do it with moderate
> lead time.  Then if there is an implied 3-6mo lead time we are maybe
> projecting ahead a bit further on block-size utilisation.  Of course
> the risk is we overshoot demand but there probably should be some
> balance between that risk and the risk of doing a more rushed change
> that requires system wide upgrade of all non-SPV software, where
> stragglers risk losing money.
>
> As well as scaling block-size within tech limits, we should include a
> commitment to improve decentralisation, and I think any proposal
> should be reasonably well analysed in terms of bandwidth assumptions
> and game-theory.  eg In IETF documents they have a security
> considerations section, and sometimes a privacy section.  In BIPs
> maybe we need a security, privacy and decentralisation/fungibility
> section.
>
> Adam
>
> NB some new list participants may not be aware that miners are
> imposing local policy limits eg at 750kB and that a 250kB policy
> existed in the past and those limits saw utilisation and were
> unilaterally increased unevenly.  I'm not sure if anyone has a clear
> picture of what limits are imposed by hash-rate even today.  That's
> why Pieter posed the question - are we already at the policy limit -
> maybe the blocks we're seeing are closely tracking policy limits, if
> someone mapped that and asked miners by hash-rate etc.
>
> On 30 June 2015 at 18:35, Michael Naber <mickeybob at gmail.com> wrote:
> > Re: Why bother doubling capacity? So that we could have 2x more network
> > participants of course.
> >
> > Re: No clear way to scaling beyond that: Computers are getting more
> capable
> > aren't they? We'll increase capacity along with hardware.
> >
> > It's a good thing to scale the network if technology permits it. How can
> you
> > argue with that?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/6d43b13a/attachment-0001.html>

From nxtchg at hush.com  Wed Jul  1 08:45:12 2015
From: nxtchg at hush.com (NxtChg)
Date: Wed, 01 Jul 2015 11:45:12 +0300
Subject: [bitcoin-dev] Bitcoin governance
Message-ID: <20150701084512.5924041A40@smtp.hushmail.com>

(sorry for the long post, I tried)

I've been thinking about how we could build an effective Bitcoin governance, but couldn't come up with anything remotely plausible.

It seems we might go a different way, though, with Core and XT continue co-existing in parallel, mostly in a compatible state, out of the need that "there can be only one".

Both having the same technical protocol, but different people, structure, processes and political standing; serving as a kind of two-party system and keeping each other in check.

Their respective power will be determined by the number of Core vs XT nodes running and people/businesses on board. They will have to negotiate any significant change at the risk of yet another full fork.

And occasionally the full forks will still happen and the minority will have to concede and change their protocol to match the winning side.

Can there be any other way? Can you really control a decentralized system with a centralized governance, like Core Devs or TBF?

----

In this view, what's happening is a step _towards_ decentralization, not away from it. It proves that Bitcoin is indeed a decentralized system and that minority cannot impose its will.

For the sides to agree now would actually be a bad thing, because that would mean kicking the governance problem down the road.

And we _need_ to go through this painful split at least once. The block size issue is perfect: controversial enough to push the split, but not controversial enough so one side couldn't win.

----

If this is where we're heading then both sides should probably start thinking of themselves as opposition parties, instead of whatever they think of themselves now.

People and businesses ultimately decide and they need a way to cast a Yes/No vote on proposed changes. Hence the two-party system.

If the split in power is, say, 60/40 and the leading party introduces an unpopular change, it can quickly lose its advantage.

We already have the "democratic party" on the left with Gavin and Mike representing the wish of the majority and the "conservative party" on the right, who would prefer things to stay the way they are.

----

Finally, I propose to improve the voting mechanism of Bitcoin to serve this new reality better.

Using the upcoming fork as an opportunity, we could add something like 8-byte votes into blocks:

* first 4 bytes: fork/party ID, like 'CORE' or 'XT'
* second 4 bytes: proposition number

(or at least add the ID somewhere so the parties wouldn't have to negotiate block version numbers). 


Miners are in the business of mining coins, so they are good "sensors" of where the economic majority will be.

We will have a representative democracy, with miners serving as 'hubs', collecting all the noise and chatter and casting it into a vote.

This is not perfect, but nothing ever is.


From jp at eeqj.com  Wed Jul  1 08:54:10 2015
From: jp at eeqj.com (Jeffrey Paul)
Date: Wed, 1 Jul 2015 10:54:10 +0200
Subject: [bitcoin-dev] Bitcoin governance
In-Reply-To: <20150701084512.5924041A40@smtp.hushmail.com>
References: <20150701084512.5924041A40@smtp.hushmail.com>
Message-ID: <3E6FD4C9-7586-4756-8456-218B9E44B559@eeqj.com>

If people attempt to govern Bitcoin, Bitcoin falls apart.

That's why there is no voting and there are no unnecessary hard forks; Bitcoin operates on consensus.

Engineering and research along these lines is folly, as any attempt to impose such concepts as "voting" will rightfully find itself with nothing to govern.

It is a common misconception that the core devs govern Bitcoin; indeed they are the core devs only because they do not try to govern. I urge you to review the history of the term "unix" for an instructive example of what happens in systems that do not depend on consensus. 

And now back to regularly scheduled development, I hope.

Best,
-jp

PS: A personal request to the list: could we please limit ourselves to posting about the research and development of Bitcoin Core? Many of us must stay continually abreast of all progress on Bitcoin Core by reading all of -dev daily and subjecting everyone's email inboxes to hundreds of pet theories about governance and block size opinions without patches or simulations is simply abusing the list membership to soapbox. I encourage you to make blog posts instead and post them to /r/Bitcoin or suchlike versus taking up attention span on an *engineering* mailing list.

-- 
Jeffrey Paul   +1 (312) 361-0355
5539 AD00 DE4C 42F3 AFE1 1575 0524 43F4 DF2A 55C2

> On 01.07.2015, at 10:45, NxtChg <nxtchg at hush.com> wrote:
> 
> (sorry for the long post, I tried)
> 
> I've been thinking about how we could build an effective Bitcoin governance, but couldn't come up with anything remotely plausible.
> 
> It seems we might go a different way, though, with Core and XT continue co-existing in parallel, mostly in a compatible state, out of the need that "there can be only one".
> 
> Both having the same technical protocol, but different people, structure, processes and political standing; serving as a kind of two-party system and keeping each other in check.
> 
> Their respective power will be determined by the number of Core vs XT nodes running and people/businesses on board. They will have to negotiate any significant change at the risk of yet another full fork.
> 
> And occasionally the full forks will still happen and the minority will have to concede and change their protocol to match the winning side.
> 
> Can there be any other way? Can you really control a decentralized system with a centralized governance, like Core Devs or TBF?
> 
> ----
> 
> In this view, what's happening is a step _towards_ decentralization, not away from it. It proves that Bitcoin is indeed a decentralized system and that minority cannot impose its will.
> 
> For the sides to agree now would actually be a bad thing, because that would mean kicking the governance problem down the road.
> 
> And we _need_ to go through this painful split at least once. The block size issue is perfect: controversial enough to push the split, but not controversial enough so one side couldn't win.
> 
> ----
> 
> If this is where we're heading then both sides should probably start thinking of themselves as opposition parties, instead of whatever they think of themselves now.
> 
> People and businesses ultimately decide and they need a way to cast a Yes/No vote on proposed changes. Hence the two-party system.
> 
> If the split in power is, say, 60/40 and the leading party introduces an unpopular change, it can quickly lose its advantage.
> 
> We already have the "democratic party" on the left with Gavin and Mike representing the wish of the majority and the "conservative party" on the right, who would prefer things to stay the way they are.
> 
> ----
> 
> Finally, I propose to improve the voting mechanism of Bitcoin to serve this new reality better.
> 
> Using the upcoming fork as an opportunity, we could add something like 8-byte votes into blocks:
> 
> * first 4 bytes: fork/party ID, like 'CORE' or 'XT'
> * second 4 bytes: proposition number
> 
> (or at least add the ID somewhere so the parties wouldn't have to negotiate block version numbers). 
> 
> 
> Miners are in the business of mining coins, so they are good "sensors" of where the economic majority will be.
> 
> We will have a representative democracy, with miners serving as 'hubs', collecting all the noise and chatter and casting it into a vote.
> 
> This is not perfect, but nothing ever is.
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From laanwj at gmail.com  Wed Jul  1 11:42:59 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Wed, 1 Jul 2015 13:42:59 +0200
Subject: [bitcoin-dev] Bitcoin core 0.11.0 release candidate 3 available
Message-ID: <20150701114254.GA24012@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Hello,

I've just uploaded Bitcoin Core 0.11.0rc3 executables to:

https://bitcoin.org/bin/bitcoin-core-0.11.0/test/

The source code can be found in the source tarball or in git under the tag 'v0.11.0rc3'

Preliminary release notes can be found here:

https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md

Changes since rc2:
+- #6319 `3f8fcc9` doc: update mailing list address
+- #6303 `b711599` gitian: add a gitian-win-signer descriptor
+- #6246 `8ea6d37` Fix build on FreeBSD
+- #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action
+- #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive
+- #6333 `41bbc85` Hardcoded seeds update June 2015
+- #6354 `bdf0d94` Gitian windows signing normalization

Thanks to everyone that participated in development, translation or in the gitian build process,

Wladimir
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVk9IfAAoJEHSBCwEjRsmmm84H/AoBHiKKEIuT/86+VSs+1ICY
sUTXF5Q0qeAELSKO2auq1wOAA62UuhUd46S+lAWe3cL3G2UJzFt0WWXq2fOUjKur
27HTutmY9Oy/7fGLGT0CNCuXJ8bKGoUzIx4nhNEMvaucangaKpHtSCPAzqkEY4mW
cCuAh3pHR3xgfA5EYfBxq2jGUEC5iUzmsvEL4LXoBKt60f9AI/H08IFSa9uyJZAS
f5HyVtYF5/OZxD1GUyAfSfeSteBRBkoqRNww0LE6b0PQE9ZHLZzsUxngsOkPKMQU
OJGgDMkgO/7c6gfpHCBLdWkSQEJuRfH/EeVnM5poOjwrGiWewc0O/+svT2WdfRo=
=rESk
-----END PGP SIGNATURE-----

From milly at bitcoins.info  Wed Jul  1 12:20:27 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 1 Jul 2015 08:20:27 -0400
Subject: [bitcoin-dev] Bitcoin governance
In-Reply-To: <3E6FD4C9-7586-4756-8456-218B9E44B559@eeqj.com>
References: <20150701084512.5924041A40@smtp.hushmail.com>
	<3E6FD4C9-7586-4756-8456-218B9E44B559@eeqj.com>
Message-ID: <5593DB0B.7050302@bitcoins.info>

 >It is a common misconception that the core devs govern Bitcoin;

They set standards rather than govern.  It is an important standard, but 
it is a voluntary standard.  How important that standard in terms of 
defining the consensus rules is subject to speculation and the amount of 
influence depends on the specific circumstances. Maybe some wording can 
be changed to reflect that it is a voluntary standard.

Russ


From kristovatlas.lists at gmail.com  Wed Jul  1 17:07:23 2015
From: kristovatlas.lists at gmail.com (Kristov Atlas)
Date: Wed, 1 Jul 2015 13:07:23 -0400
Subject: [bitcoin-dev] RFC: HD Bitmessage address derivation based on
	BIP-43
In-Reply-To: <CAHabJ+N3Tr5FtStH6Msmj3d8EsvjeTEV6FhSEiizLVs=5ZvCfw@mail.gmail.com>
References: <CAHabJ+N3Tr5FtStH6Msmj3d8EsvjeTEV6FhSEiizLVs=5ZvCfw@mail.gmail.com>
Message-ID: <CAGH37SJZm0qJL==aBfBGG7QsVfde-V80pnhpyPG_M0uumA+vbw@mail.gmail.com>

Hi Justus,

What are the potential applications for this BIP?

-Kr
On Jun 30, 2015 1:53 PM, "Justus Ranvier" <justus.ranvier at monetas.net>
wrote:

> Monetas has developed a Bitmessage address derivation method from an
> HD seed based on BIP-43.
>
>
> https://github.com/monetas/bips/blob/bitmessage/bip-bm01.mediawiki
>
>
> We're proposing this as a BIP per the BIP-43 recommendation in order
> to reserve a purpose code.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/8418af96/attachment.html>

From justus at openbitcoinprivacyproject.org  Wed Jul  1 17:28:30 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Wed, 01 Jul 2015 12:28:30 -0500
Subject: [bitcoin-dev] Bitcoin governance
In-Reply-To: <3E6FD4C9-7586-4756-8456-218B9E44B559@eeqj.com>
References: <20150701084512.5924041A40@smtp.hushmail.com>
	<3E6FD4C9-7586-4756-8456-218B9E44B559@eeqj.com>
Message-ID: <5594233E.7080607@openbitcoinprivacyproject.org>

On 07/01/2015 03:54 AM, Jeffrey Paul wrote:
> could we please limit ourselves to posting about the research and development of Bitcoin Core?

If that's the purpose of this list, then it is misleadingly named.

If development of Bitcoin Core, the application, is to be considered
independent from development of Bitcoin, the protocol, then Bitcoin Core
development needs its own list.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/d98bb8f5/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/d98bb8f5/attachment-0001.sig>

From odinn.cyberguerrilla at riseup.net  Wed Jul  1 22:34:01 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Wed, 01 Jul 2015 15:34:01 -0700
Subject: [bitcoin-dev] BIP Process and Votes
In-Reply-To: <558C9FE3.6000804@bitcoins.info>
References: <COL402-EAS109000AAC490BCF2DD69116CDAF0@phx.gbl>	<558B4632.8080504@bitcoins.info>	<CAOG=w-sxovqy0kDyBX=cx4CWWb=cd_F5bO3iH8ZBHsa0D_uK+A@mail.gmail.com>	<CAE-z3OVOr=1e=_05Amzb9_JY70Zr+J5_ZTKArUzCFS2jPDAGHA@mail.gmail.com>
	<558C9FE3.6000804@bitcoins.info>
Message-ID: <55946AD9.3070300@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Possibly relevant to this discussion (though old)

https://gist.github.com/gavinandresen/2355445 (last changed in 2012 I
think?)

and

https://bitcoin.stackexchange.com/questions/30817/what-is-a-soft-fork
(which cites gavin's gist shown above)





On 06/25/2015 05:42 PM, Milly Bitcoin wrote:
> That description makes sense.  It also makes sense to separate out
> the hard fork from the soft fork process.   Right now some people
> want to use the soft fork procedure for a hard fork simply because
> there is no other way to do it.
> 
> I am under the impression that most users expect
> changes/improvements that would require a hard fork so I think some
> kind of process needs to be developed.  Taking the responsibility
> off the shoulder of the core maintainer also makes sense.  The hard
> fork issue is too much of a distraction for people trying to
> maintain the nuts and bolts of the underlying system.
> 
> I saw a suggestion that regularly scheduled hard forks should be 
> planned.  That seems to make sense so you would have some sort of 
> schedule where you would have cut off dates for hard-fork BIP 
> submissions.  That way you avoid the debates over whether there
> should be hard forks to what should be contained within the hard
> fork (if needed).  It makes sense to follow the BIP process as
> close as possible.  Possibly adding another step after "Dev
> acceptance" to include input from others such as
> merchants/exchanges/miners/users.  It will only be an approximation
> of "decentralization" and the process won't be perfect but if you
> want to move forward then you need some way to do it.
> 
> Russ
> 
> 
> On 6/25/2015 4:05 PM, Tier Nolan wrote:
>> On Thu, Jun 25, 2015 at 2:50 AM, Mark Friedenbach 
>> <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:
>> 
>> I'm sorry but this is absolutely not the case, Milly. The reason 
>> that people get defensive is that we have a carefully
>> constructed process that does work (thank you very much!) and is
>> well documented.
>> 
>> 
>> There is no process for handling hard forks, which aren't bug
>> fixes.
>> 
>> Soft forks have a defined process of something like
>> 
>> - BIP proposal + discussion - Proposed code - Dev acceptance -
>> Release - Miner vote/acceptance
>> 
>> The devs have a weak veto.  If they refuse to move forward with 
>> changes, miners could perform a soft fork on their own.  They
>> don't want to do that, as it would be controversial and the devs
>> know the software better.
>> 
>> The miner veto is stronger (for soft forks) but not absolute.
>> The devs could checkpoint/blacklist a chain if miners implemented
>> a fork that wasn't acceptable (assuming the community backed
>> them).
>> 
>> When ASICs arrived, it was pointed out by some that the devs
>> could hit back if ASICs weren't made publicly available.  If they
>> slightly tweaked the hashing algorithm, then current generation
>> of ASICs would be useless.   The potential threat may have acted
>> as a disincentive for ASIC manufacturers to use the ASICs
>> themselves.
>> 
>> Moving forward with agreement between all involved is the
>> recommended and desirable approach.
>> 
>> Consensus between all parties is the goal but isn't absolutely 
>> required.  This escape valve is partly what makes consensus work.
>> If you dig your heels in, then the other side can bypass you, but
>> they have an incentive to try to convince you to compromise
>> first.  The outcome is better if a middle ground can be found.
>> 
>> Hard forks are different.  The "checks and balances" of weak
>> vetoes are not present.  This means that things can devolve from
>> consensus to mutual veto.  Consensus ceases to be a goal and
>> becomes a requirement.
>> 
>> This is partly a reflection of the nature of hard forks.
>> Everyone needs to upgrade.  On the other hand, if most of the
>> various groups upgrade, then users of the legacy software would
>> have to upgrade or get left behind.  If 5% of the users decided
>> not to upgrade, should they be allowed to demand that nobody else
>> does?
>> 
>> There is clearly some kind of threshold that is reasonable.
>> 
>> The fundamental problem is that there isn't agreement on what
>> the block size is.  Is it equal in status to the 21 million BTC
>> limit?
>> 
>> If Satoshi had said that 1MB was part of the definition of
>> Bitcoin, then I think people would accept it to the same extent
>> as they accept the 21 million coin limit.  It might cause people
>> to leave the coin though.
>> 
>> It was intended to be temporary, but people have realized that
>> it might be a good idea to keep it.  In effect both sides could
>> argue that they should be considered the status quo.
>> 
>> I wonder if a coin toss would be acceptable :).  "Come to an
>> agreement or we decide by coin toss"
>> 
>> 
>> _______________________________________________ bitcoin-dev
>> mailing list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVlGrZAAoJEGxwq/inSG8C2wYH/3VZgzpbJrgprqNMDwWsMoxx
DFbgjQfOrHbVvAQebSlcH1FXPnzVZZSbxMlQAbDXr4lpREvMPQiomixCmkTTepob
zKhJu/bGYgLVqcXSDYuJTwCKgHfzTj02Q8D8ViFZdsPOHLIuhcAAq+KgioUHH+Ps
v2kWA48ePTHVxqNd79S2CKjk5Gyo99YIMAjbQOuC6DbW/y1hNmQP7iQPn6UUe4pY
qyLLDa6ccKvJslq3chXGK/alhGHZ5lyEYZY43qiL9cBEgqEn6kHC5gveqQxvXMvj
rOoZbAKCAc9GdlhUplRt5MhF35FTFvbaBTAq07/95Xo4C8DIhmXesHgmPtc1OqI=
=n7Pa
-----END PGP SIGNATURE-----

From odinn.cyberguerrilla at riseup.net  Wed Jul  1 22:49:12 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Wed, 01 Jul 2015 15:49:12 -0700
Subject: [bitcoin-dev] Draft BIP : fixed-schedule block size increase
In-Reply-To: <CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
References: <CABsx9T2HegqOBqd1jijk1bZBE6N+NH8x6nfwbaoLBACVf8-WBQ@mail.gmail.com>	<558A0B4A.7090205@riseup.net>
	<558A1E8E.30306@novauri.com>	<CADm_WcZ52_fvNk_rWzu+Nw1CBz2o6t6cMkEfOm3BpdjH7iQKrw@mail.gmail.com>	<0CAB4453-0C88-4CCB-86C1-DA192D4F77A1@gmail.com>	<CALqxMTHQCWSg5Px5iLzNisZchuyzWJ2KwtwbWycywDSjF+4GBA@mail.gmail.com>
	<CAE-z3OXEUE8b_u9Pf8DbPL4jWTqyR7CDJRqKFKoTGpGxnr1QoA@mail.gmail.com>
Message-ID: <55946E68.5070805@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

(My replies below)

On 06/26/2015 06:47 AM, Tier Nolan wrote:
> On Thu, Jun 25, 2015 at 3:07 PM, Adam Back <adam at cypherspace.org 
> <mailto:adam at cypherspace.org>> wrote:
> 
> The hard-cap serves the purpose of a safety limit in case our 
> understanding about the economics, incentives or game-theory is
> wrong worst case.
> 
> 
> True.

Yep.

> 
> BIP 100 and 101 could be combined.  Would that increase consensus?

Possibly ~ In my past message(s), I've suggested that Jeff's BIP 100
is a better alternative to Gavin's proposal(s), but that I didn't
think that this should be taken to mean that I am saying one thing is
"superior" to Gavin's work, rather, I emphasized that Gavin work with
Jeff and Adam.

At least, at this stage the things are in a BIP process.

If the BIP 100 and BIP 101 would be combined, what would that look
like on paper?

> 
> - Miner vote threshold reached - Wait notice period or until
> earliest start time - Block size default target set to 1 MB - Soft
> limit set to 1MB - Hard limit set to 8MB + double every 2 years -
> Miner vote to decide soft limit (lowest size ignoring bottom 20%
> but 1MB minimum)
> 
> Block size updates could be aligned with the difficulty setting
> and based on the last 2016 blocks.
> 
> Miners could leave the 1MB limit in place initially.  The vote is
> to get the option to increase the block size.
> 
> Legacy clients would remain in the network until >80% of miners
> vote to raise the limit and a miner produces a >1MB block.
> 
> If the growth rate over-estimates hardware improvements, the devs
> could add a limit into the core client.  If they give notice and
> enough users update, then miners would have to accept it.
> 
> The block size becomes min(miner's vote, core devs).  Even if 4
> years notice is given, blocks would only be 4X optimal.
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVlG5oAAoJEGxwq/inSG8C0r4H/0eklB9GxgHdl4LK7UoLeYYb
hlCiIJZ1+sRhTRIHrBtZO+nb2Uy3jLdqO9eOL4z9OXk3TCRBFwSdWrwsZXbzy3tC
5TmYlHvLSpfjiUxpP9JcO5E2VwFvB80pKkjPuUhwFVngh0HHsTA1IinUt52ZW1QP
wTdgKFHw3QL9zcfEXljVa3Ih9ssqrl5Eoab8vE2yr3p3QHR7caRLY1gFyKKIRxVH
YQangx6D33JcxyAcDNhYqavyt02lHxscqyZo6I4XUvE/aZVmSVTlm2zg7xdR7aCZ
0PlDwzpMD6Zk2QO/5qPPPos/5VETT0ompFK62go/hY2uB4cm+yZw3FFxR+Kknog=
=rtTH
-----END PGP SIGNATURE-----

From rusty at rustcorp.com.au  Thu Jul  2 02:38:58 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Thu, 02 Jul 2015 12:08:58 +0930
Subject: [bitcoin-dev] BIP 68 Questions
Message-ID: <873817s2pp.fsf@rustcorp.com.au>

Hi Mark,

        It looks like the code in BIP 68 compares the input's nSequence
against the transaction's nLockTime:

        if ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD)
            nMinHeight = std::max(nMinHeight, (int)tx.nLockTime);
        else
            nMinTime = std::max(nMinTime, (int64_t)tx.nLockTime);
    
        if (nMinHeight >= nBlockHeight)
            return nMinHeight;
        if (nMinTime >= nBlockTime)
            return nMinTime;
            
So if transaction B spends the output of transaction A:

1.  If A is in the blockchain already, you don't need a relative
    locktime since you know A's time.
2.  If it isn't, you can't create B since you don't know what
    value to set nLockTime to.

How was this supposed to work?

Thanks,
Rusty.

From jeanpaulkogelman at me.com  Thu Jul  2 04:04:19 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Wed, 01 Jul 2015 21:04:19 -0700
Subject: [bitcoin-dev] Defining a min spec
Message-ID: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>

Hi folks,

I?m a game developer. I write time critical code for a living and have to deal with memory, CPU, GPU and I/O budgets on a daily basis. These budgets are based on what we call a minimum specification (of hardware); min spec for short. In most cases the min spec is based on entry model machines that are available during launch, and will give the user an enjoyable experience when playing our games. Obviously, we can turn on a number of bells and whistles for people with faster machines, but that?s not the point of this mail.

The point is, can we define a min spec for Bitcoin Core? The number one reason for this is: if you know how your changes affect your available budgets, then the risk of breaking something due to capacity problems is reduced to practically zero.

One way of doing so is to work backwards from what we have right now: Block size (network / disk I/O), SigOps/block (CPU), UTXO size (memory), etc. Then there?s Pieter?s analysis of network bottlenecks and how it affects orphan rates that could be used to set some form of cap on what transfer time + verification time should be to keep the orphan rate at an acceptable level.

So taking all of the above (and more) into account, what configuration would be the bare minimum to comfortably run Bitcoin Core at maximum load and can it be reasonably expected to still be out there in the field running Bitcoin Core? Also, can the parameters that were used to determine this min spec be codified in some way so that they can later be used if Bitcoin Core is optimized (or extended with new functionality) and see how it affects the min spec? Basically, with any reasonably big change, one of the first questions could be: ?How does this change affect min spec?"

For example, currently OpenSSL is used to verify the signatures in the transactions. The new secp256k1 implementation is several times faster than (depending on CPU architecture, I?m sure) OpenSSL?s implementation. So it would result in faster verification time. This can then result in the following things; either network I/O and CPU requirements are adjusted downward in the min spec (you can run the new Bitcoin Core on a cheaper configuration), or other parameters can be adjusted upwards (number of SigOps / transaction, block size?), through proper rollout obviously. Since we know how min spec is affected by these changes, they should be non-controversial by default. Nobody running min spec is going to be affected by it, etc.

Every change that has a positive effect on min spec (do more on the same hardware) basically pushes the need to start following any of the curve laws (Nielsen, Moore) forward. No need for miners / node operators to upgrade.

Once we hit what we call SOL (Speed Of Light, the fastest something can go on a specific platform) it?s time to start looking at periodically adjusting min spec upwards, or by that time maybe it?s possible to use conservative plots of the curve laws as a basis.

Lastly, a benchmark test could be developed that can tell everyone running Bitcoin Core how their setup compares to the min spec and how long they can expect to run on this setup.

What do you guys think?


jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/172ef784/attachment.sig>

From dkbryant at gmail.com  Thu Jul  2 04:44:41 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Wed, 1 Jul 2015 23:44:41 -0500
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
	transactions with a bounty.
Message-ID: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>

This is a process BIP request to add functionality to the Bitcoin-Core
reference implementation.  If accepted, this could also add
flexibility into any future fee schedules.

https://github.com/d4n13/bips/blob/master/bip-00nn.mediawiki

Note, left the formatting in, since mediawiki is a fairly light markup.
==================================
<pre>
  BIP: nn
  Title: Sweep unconfirmed transactions by including their outputs in
high fee transactions
  Author: Dan Bryant <dkbryant at gmail.com>
  Status: Draft
  Type: Process
  Created: 2015-07-01
</pre>

==Abstract==

This BIP describes an enhancement to the reference client that
addresses the need incentive inclusion of unconfirmed transactions.
This method will create new high fee (or bounty) transactions that
spend the desired unconfirmed transactions.  To claim the high fee
(bounty) transactions, miners will need to include the desired
unconfirmed transactions.

==Motivation==

There are times when an individual receives a payment from someone
that is in a poorly crafted transaction.  This transaction may include
no fees, or insufficient fees to be included by many miners.  The
recipient would be willing to pay a nominal transaction fee to have
the payment transaction swept into the next block, but has no simple
way to craft this incentive.

This BIP could be highly desirable for merchants who may have little
control over the type of wallets their customers use.  A merchant will
want to ensure that all POS transactions to their hot wallet be given
a high probability of inclusion in the next block.  This BIP would
allow the merchant to sweep all their POS transactions currently in
the mempool into one high fee sweep, thus greatly increasing the
chance that they are in the next block.

Although many wallets have the ability to tailor the transaction fees
of payments that are sent, this BIP is unique in the sense that it
allows people to offer a bounty for transactions that are incoming.

==Specification==

This BIP would have two implementations; an automatic sweep of
incoming unconfirmed transaction setting, and a manual sweep of
unconfirmed transaction setting.  Both would have the ability to set
the fee amount the user would like to pay for the sweep.

====Automatic sweep of incoming unconfirmed transactions====

An automatic sweep configuration may be ideal for merchants who want
to ensure that their incoming transactions are not skipped over by
miners.  An automatic sweep setting would consist of four fields,
<tt>'''sweep_fee'''</tt>, <tt>'''skipped_count'''</tt>, and
<tt>'''btc_threshold'''</tt>

Currently, the standard transaction fee is 0.0001 BTC, a generous
sweep bounty would be 0.001 BTC.  Skipped-count will control the age
of unconfirmed transactions to include in the sweep.  If skipped-count
is set to three, then any incoming transaction that remains
unconfirmed for 3 blocks would trigger a sweep.  A skipped-count of 0
would trigger a sweep whenever any transaction is skipped, or if it
reaches an age of 10 minutes, regardless of how long the current block
is taking.

As a safeguard to paying a bounty for small "dust" transactions, a
minimum btc-threshold would be required for any automatic
configuration.  A good starting threshold would be 0.10 BTC.  These
automatic settings would allow a wallet implementing this BIP to
automatically perform a sweep of unconfirmed transactions whenever
more than 0.10 BTC of incoming transactions were detected in the
mempool.  Furthermore, no more than one automatic sweep would be
performed in any 10 minute window.

Whenever a sweep is triggered, all incoming unconfirmed transactions
should be swept, not simply the ones that triggered the sweep.  These
would include new transactions as well as dust transactions.  Each
sweep transaction would go to a new wallet address since recycling
wallet addresses is poor practice.

====Manual sweep of incoming unconfirmed transactions====

A manual sweep of incoming unconfirmed transactions would be a special
type of "Send" in the current reference implementation.  A manual
sweep would auto-fill a send transaction with all currently
unconfirmed incoming transactions in the mempool.  The fee field would
be completely settable by the user and would auto-fill with the
suggestions of 0.001 BTC

A manual sweep would also be available as a context option when
selecting any unconfirmed transaction.

==Compatibility==

Wallet software that does not support this BIP will continue to
operate without modification.

==Examples==

<pre>
 //unconf_tx = ef7c0cbf6ba5af68d2ea239bba709b26ff7b0b669839a63bb01c2cb8e8de481e
 //hifee_tx  = f5a5ce5988cc72b9b90e8d1d6c910cda53c88d2175177357cc2f2cf0899fbaad
 //rcpt_addr = moQR7i8XM4rSGoNwEsw3h4YEuduuP6mxw7 # recipient controlled addr.
 //chng_addr = mvbnrCX3bg1cDRUu8pkecrvP6vQkSLDSou # recipient controlled addr.

 // UNCONF_TX - Assume a zero fee TX that miners are refusing in mempool
 {
     "txid" : "$unconf_tx",
     //...
     "vin" : [
     //...
     ],
     "vout" : [
         {
             "value" : 1.50000000,
             "n" : 0,
             "scriptPubKey" : {
                 //...
                 "addresses" : [
                     "$rcpt_addr"
                 ]
             }
         }
     ]
 }

 // HIFEE_TX - Requires UNCONF_TX to be included in order to claim the
 //  high (0.001 BTC) fee.  Note this transaction is going from one
 //  address to another in the same wallet.  Both are controlled by the
 //  recipient.
 {
     "txid" : "$hifee_tx",
     //...
     "vin" : [
         {
             "txid" : "$unconf_tx",
             "vout" : 0
             //...
         }
     ],
     "vout" : [
         {
             "value" : 1.49900000,
             "n" : 0,
             "scriptPubKey" : {
                 //...
                 "addresses" : [
                     "$chng_addr"
                 ]
             }
         }
     ]
 }
</pre>

From mark at friedenbach.org  Thu Jul  2 04:52:57 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Wed, 1 Jul 2015 21:52:57 -0700
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
Message-ID: <CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>

This is called child pays for parent and there is a three year old pull
request implementing it:

https://github.com/bitcoin/bitcoin/pull/1647

The points regarding sweep transaction UI is out of scope for a BIP I'm
afraid. I suggest talking with wallet authors, and if agreement can be
found writing a pull request.
On Jul 1, 2015 9:44 PM, "Dan Bryant" <dkbryant at gmail.com> wrote:

> This is a process BIP request to add functionality to the Bitcoin-Core
> reference implementation.  If accepted, this could also add
> flexibility into any future fee schedules.
>
> https://github.com/d4n13/bips/blob/master/bip-00nn.mediawiki
>
> Note, left the formatting in, since mediawiki is a fairly light markup.
> ==================================
> <pre>
>   BIP: nn
>   Title: Sweep unconfirmed transactions by including their outputs in
> high fee transactions
>   Author: Dan Bryant <dkbryant at gmail.com>
>   Status: Draft
>   Type: Process
>   Created: 2015-07-01
> </pre>
>
> ==Abstract==
>
> This BIP describes an enhancement to the reference client that
> addresses the need incentive inclusion of unconfirmed transactions.
> This method will create new high fee (or bounty) transactions that
> spend the desired unconfirmed transactions.  To claim the high fee
> (bounty) transactions, miners will need to include the desired
> unconfirmed transactions.
>
> ==Motivation==
>
> There are times when an individual receives a payment from someone
> that is in a poorly crafted transaction.  This transaction may include
> no fees, or insufficient fees to be included by many miners.  The
> recipient would be willing to pay a nominal transaction fee to have
> the payment transaction swept into the next block, but has no simple
> way to craft this incentive.
>
> This BIP could be highly desirable for merchants who may have little
> control over the type of wallets their customers use.  A merchant will
> want to ensure that all POS transactions to their hot wallet be given
> a high probability of inclusion in the next block.  This BIP would
> allow the merchant to sweep all their POS transactions currently in
> the mempool into one high fee sweep, thus greatly increasing the
> chance that they are in the next block.
>
> Although many wallets have the ability to tailor the transaction fees
> of payments that are sent, this BIP is unique in the sense that it
> allows people to offer a bounty for transactions that are incoming.
>
> ==Specification==
>
> This BIP would have two implementations; an automatic sweep of
> incoming unconfirmed transaction setting, and a manual sweep of
> unconfirmed transaction setting.  Both would have the ability to set
> the fee amount the user would like to pay for the sweep.
>
> ====Automatic sweep of incoming unconfirmed transactions====
>
> An automatic sweep configuration may be ideal for merchants who want
> to ensure that their incoming transactions are not skipped over by
> miners.  An automatic sweep setting would consist of four fields,
> <tt>'''sweep_fee'''</tt>, <tt>'''skipped_count'''</tt>, and
> <tt>'''btc_threshold'''</tt>
>
> Currently, the standard transaction fee is 0.0001 BTC, a generous
> sweep bounty would be 0.001 BTC.  Skipped-count will control the age
> of unconfirmed transactions to include in the sweep.  If skipped-count
> is set to three, then any incoming transaction that remains
> unconfirmed for 3 blocks would trigger a sweep.  A skipped-count of 0
> would trigger a sweep whenever any transaction is skipped, or if it
> reaches an age of 10 minutes, regardless of how long the current block
> is taking.
>
> As a safeguard to paying a bounty for small "dust" transactions, a
> minimum btc-threshold would be required for any automatic
> configuration.  A good starting threshold would be 0.10 BTC.  These
> automatic settings would allow a wallet implementing this BIP to
> automatically perform a sweep of unconfirmed transactions whenever
> more than 0.10 BTC of incoming transactions were detected in the
> mempool.  Furthermore, no more than one automatic sweep would be
> performed in any 10 minute window.
>
> Whenever a sweep is triggered, all incoming unconfirmed transactions
> should be swept, not simply the ones that triggered the sweep.  These
> would include new transactions as well as dust transactions.  Each
> sweep transaction would go to a new wallet address since recycling
> wallet addresses is poor practice.
>
> ====Manual sweep of incoming unconfirmed transactions====
>
> A manual sweep of incoming unconfirmed transactions would be a special
> type of "Send" in the current reference implementation.  A manual
> sweep would auto-fill a send transaction with all currently
> unconfirmed incoming transactions in the mempool.  The fee field would
> be completely settable by the user and would auto-fill with the
> suggestions of 0.001 BTC
>
> A manual sweep would also be available as a context option when
> selecting any unconfirmed transaction.
>
> ==Compatibility==
>
> Wallet software that does not support this BIP will continue to
> operate without modification.
>
> ==Examples==
>
> <pre>
>  //unconf_tx =
> ef7c0cbf6ba5af68d2ea239bba709b26ff7b0b669839a63bb01c2cb8e8de481e
>  //hifee_tx  =
> f5a5ce5988cc72b9b90e8d1d6c910cda53c88d2175177357cc2f2cf0899fbaad
>  //rcpt_addr = moQR7i8XM4rSGoNwEsw3h4YEuduuP6mxw7 # recipient controlled
> addr.
>  //chng_addr = mvbnrCX3bg1cDRUu8pkecrvP6vQkSLDSou # recipient controlled
> addr.
>
>  // UNCONF_TX - Assume a zero fee TX that miners are refusing in mempool
>  {
>      "txid" : "$unconf_tx",
>      //...
>      "vin" : [
>      //...
>      ],
>      "vout" : [
>          {
>              "value" : 1.50000000,
>              "n" : 0,
>              "scriptPubKey" : {
>                  //...
>                  "addresses" : [
>                      "$rcpt_addr"
>                  ]
>              }
>          }
>      ]
>  }
>
>  // HIFEE_TX - Requires UNCONF_TX to be included in order to claim the
>  //  high (0.001 BTC) fee.  Note this transaction is going from one
>  //  address to another in the same wallet.  Both are controlled by the
>  //  recipient.
>  {
>      "txid" : "$hifee_tx",
>      //...
>      "vin" : [
>          {
>              "txid" : "$unconf_tx",
>              "vout" : 0
>              //...
>          }
>      ],
>      "vout" : [
>          {
>              "value" : 1.49900000,
>              "n" : 0,
>              "scriptPubKey" : {
>                  //...
>                  "addresses" : [
>                      "$chng_addr"
>                  ]
>              }
>          }
>      ]
>  }
> </pre>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/fd6ae770/attachment.html>

From bip at mattwhitlock.name  Thu Jul  2 04:57:21 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 02 Jul 2015 00:57:21 -0400
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
	transactions with a bounty.
In-Reply-To: <CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
Message-ID: <1854821.ToCRAf8eXU@crushinator>

PR#1647 only addresses miner policy, though, right? I believe the BIP is addressing the user-facing side of this functionality. CPFP mining policy does very little good if wallets don't offer any way for users to goose up incoming transactions.


On Wednesday, 1 July 2015, at 9:52 pm, Mark Friedenbach wrote:
> This is called child pays for parent and there is a three year old pull
> request implementing it:
> 
> https://github.com/bitcoin/bitcoin/pull/1647
> 
> The points regarding sweep transaction UI is out of scope for a BIP I'm
> afraid. I suggest talking with wallet authors, and if agreement can be
> found writing a pull request.
> On Jul 1, 2015 9:44 PM, "Dan Bryant" <dkbryant at gmail.com> wrote:
> 
> > This is a process BIP request to add functionality to the Bitcoin-Core
> > reference implementation.  If accepted, this could also add
> > flexibility into any future fee schedules.
> >
> > https://github.com/d4n13/bips/blob/master/bip-00nn.mediawiki

From henning.kopp at uni-ulm.de  Thu Jul  2 07:18:14 2015
From: henning.kopp at uni-ulm.de (Henning Kopp)
Date: Thu, 2 Jul 2015 09:18:14 +0200
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
Message-ID: <20150702071814.GA1904@banane.informatik.uni-ulm.de>

Hi Jean-Paul,

that's a very interesting point of view and I have never thought about
it this way, since I have a totally different background.

How would you go on about defining a min spec? Is this done by testing
the software on different hardware configurations or are you looking
at the requirements a priori?

Best regards
Henning


On Wed, Jul 01, 2015 at 09:04:19PM -0700, Jean-Paul Kogelman wrote:
> Hi folks,
> 
> I?m a game developer. I write time critical code for a living and have to deal with memory, CPU, GPU and I/O budgets on a daily basis. These budgets are based on what we call a minimum specification (of hardware); min spec for short. In most cases the min spec is based on entry model machines that are available during launch, and will give the user an enjoyable experience when playing our games. Obviously, we can turn on a number of bells and whistles for people with faster machines, but that?s not the point of this mail.
> 
> The point is, can we define a min spec for Bitcoin Core? The number one reason for this is: if you know how your changes affect your available budgets, then the risk of breaking something due to capacity problems is reduced to practically zero.
> 
> One way of doing so is to work backwards from what we have right now: Block size (network / disk I/O), SigOps/block (CPU), UTXO size (memory), etc. Then there?s Pieter?s analysis of network bottlenecks and how it affects orphan rates that could be used to set some form of cap on what transfer time + verification time should be to keep the orphan rate at an acceptable level.
> 
> So taking all of the above (and more) into account, what configuration would be the bare minimum to comfortably run Bitcoin Core at maximum load and can it be reasonably expected to still be out there in the field running Bitcoin Core? Also, can the parameters that were used to determine this min spec be codified in some way so that they can later be used if Bitcoin Core is optimized (or extended with new functionality) and see how it affects the min spec? Basically, with any reasonably big change, one of the first questions could be: ?How does this change affect min spec?"
> 
> For example, currently OpenSSL is used to verify the signatures in the transactions. The new secp256k1 implementation is several times faster than (depending on CPU architecture, I?m sure) OpenSSL?s implementation. So it would result in faster verification time. This can then result in the following things; either network I/O and CPU requirements are adjusted downward in the min spec (you can run the new Bitcoin Core on a cheaper configuration), or other parameters can be adjusted upwards (number of SigOps / transaction, block size?), through proper rollout obviously. Since we know how min spec is affected by these changes, they should be non-controversial by default. Nobody running min spec is going to be affected by it, etc.
> 
> Every change that has a positive effect on min spec (do more on the same hardware) basically pushes the need to start following any of the curve laws (Nielsen, Moore) forward. No need for miners / node operators to upgrade.
> 
> Once we hit what we call SOL (Speed Of Light, the fastest something can go on a specific platform) it?s time to start looking at periodically adjusting min spec upwards, or by that time maybe it?s possible to use conservative plots of the curve laws as a basis.
> 
> Lastly, a benchmark test could be developed that can tell everyone running Bitcoin Core how their setup compares to the min spec and how long they can expect to run on this setup.
> 
> What do you guys think?
> 
> 
> jp



> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-- 
Henning Kopp
Institute of Distributed Systems
Ulm University, Germany

Office: O27 - 3402
Phone: +49 731 50-24138
Web: http://www.uni-ulm.de/in/vs/~kopp

From jeanpaulkogelman at me.com  Thu Jul  2 08:33:08 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Thu, 02 Jul 2015 01:33:08 -0700
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <20150702071814.GA1904@banane.informatik.uni-ulm.de>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<20150702071814.GA1904@banane.informatik.uni-ulm.de>
Message-ID: <7A4D6052-CAA8-4E22-92E4-83828E589570@me.com>

In the case of Bitcoin Core, for a starting point, you basically have to work backwards from what we have right now. We know some of the bounds already. Block size already tells you a lot about your bandwidth requirements, and Pieter?s simulations gives you even more information when you take orphan rates into account. There?s also a hard cap on the number of SigOps if I recall correctly, so that?s probably a good starting point for a MIPS metric, etc.

Memory is probably the hardest to pin down since some memory structures like (from what I understand, correct me if I?m wrong) the UTXO database live fully in memory and are basically unbounded. Perhaps this can somehow be capped at a certain size and move all the really old UTXO?s that are unlikely to move to disk and just take the CPU / disk hit in the unlikely event that they are referenced by a new block. Has the address database been capped yet? Mempool? I realize that it?s probably debatable whether or not this behaviour should be independent of available memory since any bugs here could affect consensus (especially the UTXO db).

Ultimately, what comes out of it is a list of numbers. A Mbit network I/O, B MIPS, C MB memory, D Disk space, etc. At that point you can debate whether or not such a machine can be considered an entrypoint bitcoin full node. You round up the numbers that are not really available anymore in off the shelf hardware (like disk space) and you round down the numbers that seem too high. For all we know we?re already over budget on some of the metrics that we decide to track as min spec. Network I/O for example. At that point you can start focussed research into bringing Bitcoin Core back into budget on those metrics. Then the discussion moves from ?it?s probably too high? to ?we?re X% over budget?.

The most valuable thing that could come out of this is to get some kind of formulation how all the different levers in Bitcoin Core affect the min spec and ideally have a benchmark tool. For example, we could settle on a min spec that would exclude the Raspberry Pi 1 on MIPS, but when secp256k1 is enabled for validation, the MIPS requirement could drop significantly, allowing us to adjust the min spec downward to include the Raspberry Pi 1 again (again, just an example).

Ideally some people would have the actual min spec machine built and running. The cost of that shouldn?t be too high (it?s the min spec after all) and I?m sure people would be happy to chip in a couple bits for this.

Remember, the min spec should be able to handle Bitcoin Core running under full load; that?s maxed out blocks with maxed out SigOps, etc.


jp


> On Jul 2, 2015, at 12:18 AM, Henning Kopp <henning.kopp at uni-ulm.de> wrote:
> 
> Hi Jean-Paul,
> 
> that's a very interesting point of view and I have never thought about
> it this way, since I have a totally different background.
> 
> How would you go on about defining a min spec? Is this done by testing
> the software on different hardware configurations or are you looking
> at the requirements a priori?
> 
> Best regards
> Henning
> 
> 
> On Wed, Jul 01, 2015 at 09:04:19PM -0700, Jean-Paul Kogelman wrote:
>> Hi folks,
>> 
>> I?m a game developer. I write time critical code for a living and have to deal with memory, CPU, GPU and I/O budgets on a daily basis. These budgets are based on what we call a minimum specification (of hardware); min spec for short. In most cases the min spec is based on entry model machines that are available during launch, and will give the user an enjoyable experience when playing our games. Obviously, we can turn on a number of bells and whistles for people with faster machines, but that?s not the point of this mail.
>> 
>> The point is, can we define a min spec for Bitcoin Core? The number one reason for this is: if you know how your changes affect your available budgets, then the risk of breaking something due to capacity problems is reduced to practically zero.
>> 
>> One way of doing so is to work backwards from what we have right now: Block size (network / disk I/O), SigOps/block (CPU), UTXO size (memory), etc. Then there?s Pieter?s analysis of network bottlenecks and how it affects orphan rates that could be used to set some form of cap on what transfer time + verification time should be to keep the orphan rate at an acceptable level.
>> 
>> So taking all of the above (and more) into account, what configuration would be the bare minimum to comfortably run Bitcoin Core at maximum load and can it be reasonably expected to still be out there in the field running Bitcoin Core? Also, can the parameters that were used to determine this min spec be codified in some way so that they can later be used if Bitcoin Core is optimized (or extended with new functionality) and see how it affects the min spec? Basically, with any reasonably big change, one of the first questions could be: ?How does this change affect min spec?"
>> 
>> For example, currently OpenSSL is used to verify the signatures in the transactions. The new secp256k1 implementation is several times faster than (depending on CPU architecture, I?m sure) OpenSSL?s implementation. So it would result in faster verification time. This can then result in the following things; either network I/O and CPU requirements are adjusted downward in the min spec (you can run the new Bitcoin Core on a cheaper configuration), or other parameters can be adjusted upwards (number of SigOps / transaction, block size?), through proper rollout obviously. Since we know how min spec is affected by these changes, they should be non-controversial by default. Nobody running min spec is going to be affected by it, etc.
>> 
>> Every change that has a positive effect on min spec (do more on the same hardware) basically pushes the need to start following any of the curve laws (Nielsen, Moore) forward. No need for miners / node operators to upgrade.
>> 
>> Once we hit what we call SOL (Speed Of Light, the fastest something can go on a specific platform) it?s time to start looking at periodically adjusting min spec upwards, or by that time maybe it?s possible to use conservative plots of the curve laws as a basis.
>> 
>> Lastly, a benchmark test could be developed that can tell everyone running Bitcoin Core how their setup compares to the min spec and how long they can expect to run on this setup.
>> 
>> What do you guys think?
>> 
>> 
>> jp
> 
> 
> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> --
> Henning Kopp
> Institute of Distributed Systems
> Ulm University, Germany
> 
> Office: O27 - 3402
> Phone: +49 731 50-24138
> Web: http://www.uni-ulm.de/in/vs/~kopp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/25b86f6a/attachment.sig>

From misterbg6 at gmail.com  Thu Jul  2 12:33:39 2015
From: misterbg6 at gmail.com (Mistr Bigs)
Date: Thu, 2 Jul 2015 14:33:39 +0200
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
Message-ID: <CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>

I'm an end user running a full node on an aging laptop.
I think this is a great suggestion! I'd love to know what system
requirements are needed for running Bitcoin Core.

On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman <jeanpaulkogelman at me.com>
wrote:

> I?m a game developer. I write time critical code for a living and have to
> deal with memory, CPU, GPU and I/O budgets on a daily basis. These budgets
> are based on what we call a minimum specification (of hardware); min spec
> for short. In most cases the min spec is based on entry model machines that
> are available during launch, and will give the user an enjoyable experience
> when playing our games. Obviously, we can turn on a number of bells and
> whistles for people with faster machines, but that?s not the point of this
> mail.
>
> The point is, can we define a min spec for Bitcoin Core? The number one
> reason for this is: if you know how your changes affect your available
> budgets, then the risk of breaking something due to capacity problems is
> reduced to practically zero.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/605b7e8b/attachment.html>

From tier.nolan at gmail.com  Thu Jul  2 13:13:35 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 2 Jul 2015 14:13:35 +0100
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <1854821.ToCRAf8eXU@crushinator>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
	<1854821.ToCRAf8eXU@crushinator>
Message-ID: <CAE-z3OUqxjnRjWPtSzbSFoxPNGoPQyQ8G=e-yegm9JAZ+SzyBw@mail.gmail.com>

I wonder if that would be a viable way for payment services to pay to
protect against double spending.

If the payment processor was handling 1000 BTC every block and was willing
to pay 0.1% fees, then it could create a transaction with 1BTC in fees.

If an attacker tried to double spend a transaction of 0.1BTC, then even if
he was to spend the entire transaction to fees, the payment processor would
be able to out bid him.

It kind of works like insurance.  The payment processor combines lots of
small double spend threats and protects them with a single transaction.

The processor could keep sending out a larger and large transaction (with
fee) until eventually a block is found.

It requires RBF.  First seen safe would be incompatible, if the double
spender gets their transaction into the system first.

A 1BTC fee transaction in nearly every block would also be a boost for
network security.

It avoids Peter Todd's complaint that mining pools might make secret deals
with payment services.  The transaction would be public and all miners
could include it in their block.

On Thu, Jul 2, 2015 at 5:57 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:

> PR#1647 only addresses miner policy, though, right? I believe the BIP is
> addressing the user-facing side of this functionality. CPFP mining policy
> does very little good if wallets don't offer any way for users to goose up
> incoming transactions.
>
>
> On Wednesday, 1 July 2015, at 9:52 pm, Mark Friedenbach wrote:
> > This is called child pays for parent and there is a three year old pull
> > request implementing it:
> >
> > https://github.com/bitcoin/bitcoin/pull/1647
> >
> > The points regarding sweep transaction UI is out of scope for a BIP I'm
> > afraid. I suggest talking with wallet authors, and if agreement can be
> > found writing a pull request.
> > On Jul 1, 2015 9:44 PM, "Dan Bryant" <dkbryant at gmail.com> wrote:
> >
> > > This is a process BIP request to add functionality to the Bitcoin-Core
> > > reference implementation.  If accepted, this could also add
> > > flexibility into any future fee schedules.
> > >
> > > https://github.com/d4n13/bips/blob/master/bip-00nn.mediawiki
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/9496215d/attachment.html>

From ogunden at phauna.org  Thu Jul  2 14:52:45 2015
From: ogunden at phauna.org (Owen Gunden)
Date: Thu, 02 Jul 2015 10:52:45 -0400
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
Message-ID: <5595503D.2010608@phauna.org>

I'm also a user who runs a full node, and I also like this idea. I think 
Gavin has done some back-of-the-envelope calculations around this stuff, 
but nothing so clearly defined as what you propose.

On 07/02/2015 08:33 AM, Mistr Bigs wrote:
> I'm an end user running a full node on an aging laptop.
> I think this is a great suggestion! I'd love to know what system
> requirements are needed for running Bitcoin Core.
>
> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>> wrote:
>
>     I?m a game developer. I write time critical code for a living and
>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>     These budgets are based on what we call a minimum specification (of
>     hardware); min spec for short. In most cases the min spec is based
>     on entry model machines that are available during launch, and will
>     give the user an enjoyable experience when playing our games.
>     Obviously, we can turn on a number of bells and whistles for people
>     with faster machines, but that?s not the point of this mail.
>
>     The point is, can we define a min spec for Bitcoin Core? The number
>     one reason for this is: if you know how your changes affect your
>     available budgets, then the risk of breaking something due to
>     capacity problems is reduced to practically zero.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From justus.ranvier at monetas.net  Thu Jul  2 15:45:05 2015
From: justus.ranvier at monetas.net (Justus Ranvier)
Date: Thu, 2 Jul 2015 10:45:05 -0500
Subject: [bitcoin-dev] RFC: HD Bitmessage address derivation based on
	BIP-43
In-Reply-To: <CAGH37SJZm0qJL==aBfBGG7QsVfde-V80pnhpyPG_M0uumA+vbw@mail.gmail.com>
References: <CAHabJ+N3Tr5FtStH6Msmj3d8EsvjeTEV6FhSEiizLVs=5ZvCfw@mail.gmail.com>
	<CAGH37SJZm0qJL==aBfBGG7QsVfde-V80pnhpyPG_M0uumA+vbw@mail.gmail.com>
Message-ID: <CAHabJ+NLVSsgu5k6aGRwTSFybp-K0h+=5v0=8+=eicrt1NLj7Q@mail.gmail.com>

The primary purpose is to allow Bitmessage users to benefit from
eternal key backups by generating their addresses from a seed.


In addition, they can use the same seed for a Bitcoin wallet and a
Bitmessage client.


This method also enables future use cases where senders calculate
Bitmessage addresses based on a recipient's extended public key and
some other index value.

On Wed, Jul 1, 2015 at 12:07 PM, Kristov Atlas
<kristovatlas.lists at gmail.com> wrote:
> Hi Justus,
>
> What are the potential applications for this BIP?
>
> -Kr
>
> On Jun 30, 2015 1:53 PM, "Justus Ranvier" <justus.ranvier at monetas.net>
> wrote:
>>
>> Monetas has developed a Bitmessage address derivation method from an
>> HD seed based on BIP-43.
>>
>>
>> https://github.com/monetas/bips/blob/bitmessage/bip-bm01.mediawiki
>>
>>
>> We're proposing this as a BIP per the BIP-43 recommendation in order
>> to reserve a purpose code.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From rusty at rustcorp.com.au  Fri Jul  3 01:19:16 2015
From: rusty at rustcorp.com.au (Rusty Russell)
Date: Fri, 03 Jul 2015 10:49:16 +0930
Subject: [bitcoin-dev] BIP 68 Questions
In-Reply-To: <873817s2pp.fsf@rustcorp.com.au>
References: <873817s2pp.fsf@rustcorp.com.au>
Message-ID: <878uay11ij.fsf@rustcorp.com.au>

Rusty Russell <rusty at rustcorp.com.au> writes:
> Hi Mark,
>
>         It looks like the code in BIP 68 compares the input's nSequence
> against the transaction's nLockTime:

No, forget this.  I misread the code.  Mark ELI5'd to me offlist, thanks!

FWIW, the code works :)

Cheers,
Rusty.

From jeremy.l.rubin.travel at gmail.com  Fri Jul  3 03:13:14 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Fri, 3 Jul 2015 11:13:14 +0800
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <5595503D.2010608@phauna.org>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
Message-ID: <CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>

Might I suggest that the min-spec, if developed, target the RISC-V Rocket
architecture (running on FPGA, I suppose) as a reference point for
performance? This may be much lower performance than desirable, however, it
means that we don't lock people into using large-vendor chipsets which have
unknown, or known to be bad, security properties such as Intel AMT.

In general, targeting open hardware seems to me to be more critical than
performance metrics for the long term health of Bitcoin, however,
performance is still important.

Does anyone know how the RISC-V FPGA performance stacks up to, say, a
Raspberry Pi?

On Thu, Jul 2, 2015 at 10:52 PM, Owen Gunden <ogunden at phauna.org> wrote:

> I'm also a user who runs a full node, and I also like this idea. I think
> Gavin has done some back-of-the-envelope calculations around this stuff,
> but nothing so clearly defined as what you propose.
>
> On 07/02/2015 08:33 AM, Mistr Bigs wrote:
>
>> I'm an end user running a full node on an aging laptop.
>> I think this is a great suggestion! I'd love to know what system
>> requirements are needed for running Bitcoin Core.
>>
>> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
>> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>> wrote:
>>
>>     I?m a game developer. I write time critical code for a living and
>>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>>     These budgets are based on what we call a minimum specification (of
>>     hardware); min spec for short. In most cases the min spec is based
>>     on entry model machines that are available during launch, and will
>>     give the user an enjoyable experience when playing our games.
>>     Obviously, we can turn on a number of bells and whistles for people
>>     with faster machines, but that?s not the point of this mail.
>>
>>     The point is, can we define a min spec for Bitcoin Core? The number
>>     one reason for this is: if you know how your changes affect your
>>     available budgets, then the risk of breaking something due to
>>     capacity problems is reduced to practically zero.
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>  _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/881fb610/attachment-0001.html>

From jgarzik at gmail.com  Fri Jul  3 03:25:03 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Thu, 2 Jul 2015 23:25:03 -0400
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
	<CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
Message-ID: <CADm_WcbufxsR+MrJ3hkMY60QC9a0v7xKf5VJkK59zxi5pwQxJQ@mail.gmail.com>

If the freedom to pick architecture exists, Moxie is a nice, compact, easy
to audit alternative:
     http://moxielogic.org/blog/pages/architecture.html
     https://github.com/jgarzik/moxiebox

Scaling can occur at the core level, rather than hyper-pipelining, keeping
the architecture itself nice and clean and simple.



On Thu, Jul 2, 2015 at 11:13 PM, Jeremy Rubin <
jeremy.l.rubin.travel at gmail.com> wrote:

> Might I suggest that the min-spec, if developed, target the RISC-V Rocket
> architecture (running on FPGA, I suppose) as a reference point for
> performance? This may be much lower performance than desirable, however, it
> means that we don't lock people into using large-vendor chipsets which have
> unknown, or known to be bad, security properties such as Intel AMT.
>
> In general, targeting open hardware seems to me to be more critical than
> performance metrics for the long term health of Bitcoin, however,
> performance is still important.
>
> Does anyone know how the RISC-V FPGA performance stacks up to, say, a
> Raspberry Pi?
>
> On Thu, Jul 2, 2015 at 10:52 PM, Owen Gunden <ogunden at phauna.org> wrote:
>
>> I'm also a user who runs a full node, and I also like this idea. I think
>> Gavin has done some back-of-the-envelope calculations around this stuff,
>> but nothing so clearly defined as what you propose.
>>
>> On 07/02/2015 08:33 AM, Mistr Bigs wrote:
>>
>>> I'm an end user running a full node on an aging laptop.
>>> I think this is a great suggestion! I'd love to know what system
>>> requirements are needed for running Bitcoin Core.
>>>
>>> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
>>> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>> wrote:
>>>
>>>     I?m a game developer. I write time critical code for a living and
>>>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>>>     These budgets are based on what we call a minimum specification (of
>>>     hardware); min spec for short. In most cases the min spec is based
>>>     on entry model machines that are available during launch, and will
>>>     give the user an enjoyable experience when playing our games.
>>>     Obviously, we can turn on a number of bells and whistles for people
>>>     with faster machines, but that?s not the point of this mail.
>>>
>>>     The point is, can we define a min spec for Bitcoin Core? The number
>>>     one reason for this is: if you know how your changes affect your
>>>     available budgets, then the risk of breaking something due to
>>>     capacity problems is reduced to practically zero.
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>  _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/b79de4df/attachment.html>

From jeanpaulkogelman at me.com  Fri Jul  3 04:19:45 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Thu, 02 Jul 2015 21:19:45 -0700
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
	<CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
Message-ID: <8019E8A9-AADF-44FE-99BF-8E1CB740E4B7@me.com>

Ideally, the metrics that we settle on would be architecture agnostic and have some sort of conversion metric to map it onto any specific architecture. An Intel based architecture is going to perform vastly different from an ARM based one for example.

Simple example: The PS3 PPE and Xbox 360 CPU are RISC processors that run at 3.2GHz, but their non-vector performance is rather poor. You?d be lucky to get about 33% effective utilization out of them (up to 50%, tops, but that?s really pushing it), so if you were to map this onto another architecture, you?d have at least a 3x conversion from this end alone (the other end could also have a scaling factor).

Ultimately, how these values are expressed isn?t the important part. It?s the ability to measure the impact of a change that?s important. If some metric changes by, say, 5%, then it doesn?t really matter if it?s expressed in MIPS, INTOPS, MB or GB. The fact that it changed is what matters and what the effect is on the baseline (that ultimately could be expressed as a certain specific hardware configuration). It would probably be practical to have a number of comparable concrete min spec configurations and even more ideal would be if people in the community would have these systems up and running to do actual on-target performance benchmarks.


jp


> On Jul 2, 2015, at 8:13 PM, Jeremy Rubin <jeremy.l.rubin.travel at gmail.com> wrote:
> 
> Might I suggest that the min-spec, if developed, target the RISC-V Rocket architecture (running on FPGA, I suppose) as a reference point for performance? This may be much lower performance than desirable, however, it means that we don't lock people into using large-vendor chipsets which have unknown, or known to be bad, security properties such as Intel AMT.
> 
> In general, targeting open hardware seems to me to be more critical than performance metrics for the long term health of Bitcoin, however, performance is still important.
> 
> Does anyone know how the RISC-V FPGA performance stacks up to, say, a Raspberry Pi?
> 
> On Thu, Jul 2, 2015 at 10:52 PM, Owen Gunden <ogunden at phauna.org <mailto:ogunden at phauna.org>> wrote:
> I'm also a user who runs a full node, and I also like this idea. I think Gavin has done some back-of-the-envelope calculations around this stuff, but nothing so clearly defined as what you propose.
> 
> On 07/02/2015 08:33 AM, Mistr Bigs wrote:
> I'm an end user running a full node on an aging laptop.
> I think this is a great suggestion! I'd love to know what system
> requirements are needed for running Bitcoin Core.
> 
> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com> <mailto:jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>>> wrote:
> 
>     I?m a game developer. I write time critical code for a living and
>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>     These budgets are based on what we call a minimum specification (of
>     hardware); min spec for short. In most cases the min spec is based
>     on entry model machines that are available during launch, and will
>     give the user an enjoyable experience when playing our games.
>     Obviously, we can turn on a number of bells and whistles for people
>     with faster machines, but that?s not the point of this mail.
> 
>     The point is, can we define a min spec for Bitcoin Core? The number
>     one reason for this is: if you know how your changes affect your
>     available budgets, then the risk of breaking something due to
>     capacity problems is reduced to practically zero.
> 
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/348ca562/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/348ca562/attachment.sig>

From jeremy.l.rubin.travel at gmail.com  Fri Jul  3 05:33:03 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Fri, 3 Jul 2015 13:33:03 +0800
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <8019E8A9-AADF-44FE-99BF-8E1CB740E4B7@me.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
	<CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
	<8019E8A9-AADF-44FE-99BF-8E1CB740E4B7@me.com>
Message-ID: <CAJ+8mEOrO3ZvKCiTsX7VzF5Lwug+QE7x+k2EP1nQeqzSuK7AtA@mail.gmail.com>

Jean-Paul,

I think you're missing what I'm saying -- the point of my suggestion to
make Rocket a min-spec is more along the lines of saying that the Rocket
serves as a fixed point, Bitcoin Core performance must be acceptable on
that platform, however it can be lower. Yes there are conversion factors
and different architectures will perform differently. However, there still
must be some baseline, a point at which we can say processors below it no
longer are supported. I am saying that line should never be set so high as
to exclude presently available open hardware.

Ultimately, this ends up making an odd, but nice, goal for Bitcoin
development. If Bitcoin Core needs more MIPS, the community must ensure the
availability of open hardware that it can run on.

Jeff,

Moxie looks fantastic! The reason I thought RISC-V was a good selection is
the very active development community which is pushing the performance of
the ISA implementations forward. Can you speak to the health of Moxie
development? Ultimately, ensuring support for many open architectures would
be preferable. Are there other reasonable open-source processors that you
are aware of?

I would be willing to work on a design a Bitcoin specific open-hardware
processor, up to the FPGA bound, if this would be useful for this goal.

On Fri, Jul 3, 2015 at 12:19 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com
> wrote:

> Ideally, the metrics that we settle on would be architecture agnostic and
> have some sort of conversion metric to map it onto any specific
> architecture. An Intel based architecture is going to perform vastly
> different from an ARM based one for example.
>
> Simple example: The PS3 PPE and Xbox 360 CPU are RISC processors that run
> at 3.2GHz, but their non-vector performance is rather poor. You?d be lucky
> to get about 33% effective utilization out of them (up to 50%, tops, but
> that?s really pushing it), so if you were to map this onto another
> architecture, you?d have at least a 3x conversion from this end alone (the
> other end could also have a scaling factor).
>
> Ultimately, how these values are expressed isn?t the important part. It?s
> the ability to measure the impact of a change that?s important. If some
> metric changes by, say, 5%, then it doesn?t really matter if it?s expressed
> in MIPS, INTOPS, MB or GB. The fact that it changed is what matters and
> what the effect is on the baseline (that ultimately could be expressed as a
> certain specific hardware configuration). It would probably be practical to
> have a number of comparable concrete min spec configurations and even more
> ideal would be if people in the community would have these systems up and
> running to do actual on-target performance benchmarks.
>
>
> jp
>
>
> On Jul 2, 2015, at 8:13 PM, Jeremy Rubin <jeremy.l.rubin.travel at gmail.com>
> wrote:
>
> Might I suggest that the min-spec, if developed, target the RISC-V Rocket
> architecture (running on FPGA, I suppose) as a reference point for
> performance? This may be much lower performance than desirable, however, it
> means that we don't lock people into using large-vendor chipsets which have
> unknown, or known to be bad, security properties such as Intel AMT.
>
> In general, targeting open hardware seems to me to be more critical than
> performance metrics for the long term health of Bitcoin, however,
> performance is still important.
>
> Does anyone know how the RISC-V FPGA performance stacks up to, say, a
> Raspberry Pi?
>
> On Thu, Jul 2, 2015 at 10:52 PM, Owen Gunden <ogunden at phauna.org> wrote:
>
>> I'm also a user who runs a full node, and I also like this idea. I think
>> Gavin has done some back-of-the-envelope calculations around this stuff,
>> but nothing so clearly defined as what you propose.
>>
>> On 07/02/2015 08:33 AM, Mistr Bigs wrote:
>>
>>> I'm an end user running a full node on an aging laptop.
>>> I think this is a great suggestion! I'd love to know what system
>>> requirements are needed for running Bitcoin Core.
>>>
>>> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
>>> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>> wrote:
>>>
>>>     I?m a game developer. I write time critical code for a living and
>>>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>>>     These budgets are based on what we call a minimum specification (of
>>>     hardware); min spec for short. In most cases the min spec is based
>>>     on entry model machines that are available during launch, and will
>>>     give the user an enjoyable experience when playing our games.
>>>     Obviously, we can turn on a number of bells and whistles for people
>>>     with faster machines, but that?s not the point of this mail.
>>>
>>>     The point is, can we define a min spec for Bitcoin Core? The number
>>>     one reason for this is: if you know how your changes affect your
>>>     available budgets, then the risk of breaking something due to
>>>     capacity problems is reduced to practically zero.
>>>
>>>
>>>
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>>
>>>  _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/80b655af/attachment-0001.html>

From jeanpaulkogelman at me.com  Fri Jul  3 06:18:25 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Thu, 02 Jul 2015 23:18:25 -0700
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <CAJ+8mEOrO3ZvKCiTsX7VzF5Lwug+QE7x+k2EP1nQeqzSuK7AtA@mail.gmail.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
	<CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
	<8019E8A9-AADF-44FE-99BF-8E1CB740E4B7@me.com>
	<CAJ+8mEOrO3ZvKCiTsX7VzF5Lwug+QE7x+k2EP1nQeqzSuK7AtA@mail.gmail.com>
Message-ID: <7D0D54F6-4CA4-427F-9296-E7C4C5AD7380@me.com>

I get it. :) Being able to run Bitcoin Core on open hardware is a noble (and important) goal! I hope that once we?ve figured out what the current requirements are that we can adjust these requirements (if needed) to include certain open hardware platforms. But that?s the next step. Bitcoin Core is a project in flight. Let?s first see where we?re at.

What are the critical wall-time requirements? As discussed earlier, the block propagation times are very important to keep orphan rates low. This sounds like one of the inputs that can be used to model bandwidth and CPU requirements. Other inputs for this could be as simple as the minimum number of connected nodes (multiplier on outbound bandwidth, but not CPU), etc. It wouldn?t surprise me if many of the real world requirements will center around Bitcoin Core?s ability to talk to the outside world.

jp


> On Jul 2, 2015, at 10:33 PM, Jeremy Rubin <jeremy.l.rubin.travel at gmail.com> wrote:
> 
> Jean-Paul,
> 
> I think you're missing what I'm saying -- the point of my suggestion to make Rocket a min-spec is more along the lines of saying that the Rocket serves as a fixed point, Bitcoin Core performance must be acceptable on that platform, however it can be lower. Yes there are conversion factors and different architectures will perform differently. However, there still must be some baseline, a point at which we can say processors below it no longer are supported. I am saying that line should never be set so high as to exclude presently available open hardware.
> 
> Ultimately, this ends up making an odd, but nice, goal for Bitcoin development. If Bitcoin Core needs more MIPS, the community must ensure the availability of open hardware that it can run on.
> 
> Jeff,
> 
> Moxie looks fantastic! The reason I thought RISC-V was a good selection is the very active development community which is pushing the performance of the ISA implementations forward. Can you speak to the health of Moxie development? Ultimately, ensuring support for many open architectures would be preferable. Are there other reasonable open-source processors that you are aware of?
> 
> I would be willing to work on a design a Bitcoin specific open-hardware processor, up to the FPGA bound, if this would be useful for this goal.
> 
> On Fri, Jul 3, 2015 at 12:19 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>> wrote:
> Ideally, the metrics that we settle on would be architecture agnostic and have some sort of conversion metric to map it onto any specific architecture. An Intel based architecture is going to perform vastly different from an ARM based one for example.
> 
> Simple example: The PS3 PPE and Xbox 360 CPU are RISC processors that run at 3.2GHz, but their non-vector performance is rather poor. You?d be lucky to get about 33% effective utilization out of them (up to 50%, tops, but that?s really pushing it), so if you were to map this onto another architecture, you?d have at least a 3x conversion from this end alone (the other end could also have a scaling factor).
> 
> Ultimately, how these values are expressed isn?t the important part. It?s the ability to measure the impact of a change that?s important. If some metric changes by, say, 5%, then it doesn?t really matter if it?s expressed in MIPS, INTOPS, MB or GB. The fact that it changed is what matters and what the effect is on the baseline (that ultimately could be expressed as a certain specific hardware configuration). It would probably be practical to have a number of comparable concrete min spec configurations and even more ideal would be if people in the community would have these systems up and running to do actual on-target performance benchmarks.
> 
> 
> jp
> 
> 
>> On Jul 2, 2015, at 8:13 PM, Jeremy Rubin <jeremy.l.rubin.travel at gmail.com <mailto:jeremy.l.rubin.travel at gmail.com>> wrote:
>> 
>> Might I suggest that the min-spec, if developed, target the RISC-V Rocket architecture (running on FPGA, I suppose) as a reference point for performance? This may be much lower performance than desirable, however, it means that we don't lock people into using large-vendor chipsets which have unknown, or known to be bad, security properties such as Intel AMT.
>> 
>> In general, targeting open hardware seems to me to be more critical than performance metrics for the long term health of Bitcoin, however, performance is still important.
>> 
>> Does anyone know how the RISC-V FPGA performance stacks up to, say, a Raspberry Pi?
>> 
>> On Thu, Jul 2, 2015 at 10:52 PM, Owen Gunden <ogunden at phauna.org <mailto:ogunden at phauna.org>> wrote:
>> I'm also a user who runs a full node, and I also like this idea. I think Gavin has done some back-of-the-envelope calculations around this stuff, but nothing so clearly defined as what you propose.
>> 
>> On 07/02/2015 08:33 AM, Mistr Bigs wrote:
>> I'm an end user running a full node on an aging laptop.
>> I think this is a great suggestion! I'd love to know what system
>> requirements are needed for running Bitcoin Core.
>> 
>> On Thu, Jul 2, 2015 at 6:04 AM, Jean-Paul Kogelman
>> <jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com> <mailto:jeanpaulkogelman at me.com <mailto:jeanpaulkogelman at me.com>>> wrote:
>> 
>>     I?m a game developer. I write time critical code for a living and
>>     have to deal with memory, CPU, GPU and I/O budgets on a daily basis.
>>     These budgets are based on what we call a minimum specification (of
>>     hardware); min spec for short. In most cases the min spec is based
>>     on entry model machines that are available during launch, and will
>>     give the user an enjoyable experience when playing our games.
>>     Obviously, we can turn on a number of bells and whistles for people
>>     with faster machines, but that?s not the point of this mail.
>> 
>>     The point is, can we define a min spec for Bitcoin Core? The number
>>     one reason for this is: if you know how your changes affect your
>>     available budgets, then the risk of breaking something due to
>>     capacity problems is reduced to practically zero.
>> 
>> 
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/e7e20133/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150702/e7e20133/attachment.sig>

From jgarzik at gmail.com  Fri Jul  3 10:55:30 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 3 Jul 2015 06:55:30 -0400
Subject: [bitcoin-dev] Defining a min spec
In-Reply-To: <CAJ+8mEOrO3ZvKCiTsX7VzF5Lwug+QE7x+k2EP1nQeqzSuK7AtA@mail.gmail.com>
References: <F6C7E867-1CCA-4DFB-8A88-361316A76FC3@me.com>
	<CABssiCq5JZdkQNmZ1x8OhNYqVxQOPXWe0Ui7wL7dCK9yQe9AoQ@mail.gmail.com>
	<5595503D.2010608@phauna.org>
	<CAJ+8mEM-MfRTTTK6-QnrvVtC63N5DZL6PiWSxsqTNm0KSYo=KQ@mail.gmail.com>
	<8019E8A9-AADF-44FE-99BF-8E1CB740E4B7@me.com>
	<CAJ+8mEOrO3ZvKCiTsX7VzF5Lwug+QE7x+k2EP1nQeqzSuK7AtA@mail.gmail.com>
Message-ID: <CADm_WcYJ0=cSMo3xB+zT6pmxX0y6_uKpRgn1Jkq997Siev0grw@mail.gmail.com>

On Fri, Jul 3, 2015 at 1:33 AM, Jeremy Rubin <
jeremy.l.rubin.travel at gmail.com> wrote:

> Moxie looks fantastic! The reason I thought RISC-V was a good selection is
> the very active development community which is pushing the performance of
> the ISA implementations forward. Can you speak to the health of Moxie
> development? Ultimately, ensuring support for many open architectures would
> be preferable. Are there other reasonable open-source processors that you
> are aware of?
>
> I would be willing to work on a design a Bitcoin specific open-hardware
> processor, up to the FPGA bound, if this would be useful for this goal.
>

Moxie was designed to be small and efficient from the compiler standpoint.
As a side effect, it is easy to audit from a security perspective.  It
started life as a simulator + gcc compiler backend, and then later became
an FPGA implementation.

Moxie would benefit from focused effort in building out the hardware side
to be efficient on FPGA, developing and testing multi-core support and
related efforts.  This area is less mature and could use attention.  Start
at https://github.com/atgreen/moxiedev/tree/master/moxie/cores/moxie

In terms of other projects, there are many open source processor cores at
http://opencores.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/c7a71728/attachment-0001.html>

From pete at petertodd.org  Fri Jul  3 21:56:58 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 3 Jul 2015 17:56:58 -0400
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
Message-ID: <20150703215658.GC5916@muck>

On Wed, Jul 01, 2015 at 09:52:57PM -0700, Mark Friedenbach wrote:
> This is called child pays for parent and there is a three year old pull
> request implementing it:
> 
> https://github.com/bitcoin/bitcoin/pull/1647

CPFP probably needs changes to the P2P layer to be able to support RBF
scorched earth well unfortunately, as currently transactions are
processed individually and out of context. In the RBF case you'd need to
keep previously removed transactions in a buffer and evaluate new
transactions against that buffer - relatively complex.

The other big issue is that existing wallets don't appear to be very
good at preventing double-spends. There's lots of edge cases where
transations aren't recorded correctly, like crashes, shutting down
unexpected etc. and in those cases there's a high chance of the wallet
sending a double-spend by accident. There's also coinjoin to consider -
plainly incompatible. With scorched-earth this will lead to losses.

Fortunately you can implement scorched-earth using SIGHASH_ANYONECANPAY
instead on an opt-in basis, which wallets could add only if they've
taken the special engineering considerations into account first:

    "Replace-by-fee scorched-earth without child-pays-for-parent",
    Peter Todd, Bitcoin-development mailing list, Apr 28th 2014
    http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005620.html

For the OP: I'd be interested in pursuing this further.

-- 
'peter'[:-1]@petertodd.org
000000000000000015665ce75a321e5827cdf9af667eaa75aaeefbc315514da5
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/04164a73/attachment.sig>

From pete at petertodd.org  Fri Jul  3 22:07:51 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 3 Jul 2015 18:07:51 -0400
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
	<CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
Message-ID: <20150703220750.GD5916@muck>

On Sat, Jun 27, 2015 at 04:54:00PM -0700, Jeff Garzik wrote:
> Generally agreed w/ all this.
> 
> To preserve digital signatures now and in the future, and make mbox
> archives actually useful, a minimum modification policy is needed.

ACK

I'd support making the raw archives public for archiving as well.

-- 
'peter'[:-1]@petertodd.org
000000000000000015665ce75a321e5827cdf9af667eaa75aaeefbc315514da5
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/6b4be9dd/attachment.sig>

From raystonn at hotmail.com  Sat Jul  4 03:11:47 2015
From: raystonn at hotmail.com (Raystonn)
Date: Fri, 3 Jul 2015 20:11:47 -0700
Subject: [bitcoin-dev]  Fork of invalid blocks due to BIP66 violations
Message-ID: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>

We need some analysis on why this has happened.? It appears the larger hashrate is violating BIP66.? Thus it appears the network is rejecting this BIP, though potentially accidentally.? If this is an accident, how is such a large portion of hashrate forking, and what can we do to avoid this in the future?

Raystonn

From gmaxwell at gmail.com  Sat Jul  4 03:17:17 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 4 Jul 2015 03:17:17 +0000
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>
References: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>
Message-ID: <CAAS2fgQR15_1JVbtSD2yS9o5cpY-rNLsxpzuaeW2sexbQMuwQg@mail.gmail.com>

On Sat, Jul 4, 2015 at 3:11 AM, Raystonn <raystonn at hotmail.com> wrote:
> We need some analysis on why this has happened.  It appears the larger hashrate is violating BIP66.  Thus it appears the network is rejecting this BIP, though potentially accidentally.  If this is an accident, how is such a large portion of hashrate forking, and what can we do to avoid this in the future?

A near majority of the hashrate on the network appears to be SPV mining.

Btcnuggets was a non-upgraded miner that produced an invalid block
after the lock in and f2pool and antpool have been extending it.
Fortunately their extension contains no transactions (an artifact of
SPV mining).  Obviously a complete understanding is going to take some
time;  though I would note that this general failure mode was one we
were aware of and is part of the reason the treshold is so high.

From pete at petertodd.org  Sat Jul  4 03:30:16 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 3 Jul 2015 23:30:16 -0400
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <CAAS2fgQR15_1JVbtSD2yS9o5cpY-rNLsxpzuaeW2sexbQMuwQg@mail.gmail.com>
References: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>
	<CAAS2fgQR15_1JVbtSD2yS9o5cpY-rNLsxpzuaeW2sexbQMuwQg@mail.gmail.com>
Message-ID: <20150704033016.GA14836@savin.petertodd.org>

On Sat, Jul 04, 2015 at 03:17:17AM +0000, Gregory Maxwell wrote:
> On Sat, Jul 4, 2015 at 3:11 AM, Raystonn <raystonn at hotmail.com> wrote:
> > We need some analysis on why this has happened.  It appears the larger hashrate is violating BIP66.  Thus it appears the network is rejecting this BIP, though potentially accidentally.  If this is an accident, how is such a large portion of hashrate forking, and what can we do to avoid this in the future?
> 
> A near majority of the hashrate on the network appears to be SPV mining.

As for what "SPV mining" is:

While blocks are propagating throughout the network, frequently it's
possible for miners to get the header of the block before they get and
fully validate the block itself. This is just a few seconds to tens of
seconds, but that's a big deal for profitability. So miners have been
running custom patches that mine on top of the longest chain they know
about, even if they haven't actually verified the blocks in it due to
propagation delays.

Unfortunately the Bitcoin protocol lets you do that, and the extra % of
revenue makes a big difference when you take into account the low profit
margins of mining these days. BIP66 happened to trigger this issue this
time, but actually *any* miner creating an invalid block for *any*
reason would have done so with the software miners are running right
now.

-- 
'peter'[:-1]@petertodd.org
00000000000000001242e0216eb113f1c50e4c18ecfbc8b9c0224ec82ec391d6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/c7e9a56c/attachment.sig>

From odinn.cyberguerrilla at riseup.net  Sat Jul  4 03:32:47 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Fri, 03 Jul 2015 20:32:47 -0700
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <20150704033016.GA14836@savin.petertodd.org>
References: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>	<CAAS2fgQR15_1JVbtSD2yS9o5cpY-rNLsxpzuaeW2sexbQMuwQg@mail.gmail.com>
	<20150704033016.GA14836@savin.petertodd.org>
Message-ID: <559753DF.6000606@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

"The Wall Street of Bitcoin"

On 07/03/2015 08:30 PM, Peter Todd wrote:
> On Sat, Jul 04, 2015 at 03:17:17AM +0000, Gregory Maxwell wrote:
>> On Sat, Jul 4, 2015 at 3:11 AM, Raystonn <raystonn at hotmail.com>
>> wrote:
>>> We need some analysis on why this has happened.  It appears the
>>> larger hashrate is violating BIP66.  Thus it appears the
>>> network is rejecting this BIP, though potentially accidentally.
>>> If this is an accident, how is such a large portion of hashrate
>>> forking, and what can we do to avoid this in the future?
>> 
>> A near majority of the hashrate on the network appears to be SPV
>> mining.
> 
> As for what "SPV mining" is:
> 
> While blocks are propagating throughout the network, frequently
> it's possible for miners to get the header of the block before they
> get and fully validate the block itself. This is just a few seconds
> to tens of seconds, but that's a big deal for profitability. So
> miners have been running custom patches that mine on top of the
> longest chain they know about, even if they haven't actually
> verified the blocks in it due to propagation delays.
> 
> Unfortunately the Bitcoin protocol lets you do that, and the extra
> % of revenue makes a big difference when you take into account the
> low profit margins of mining these days. BIP66 happened to trigger
> this issue this time, but actually *any* miner creating an invalid
> block for *any* reason would have done so with the software miners
> are running right now.
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVl1PeAAoJEGxwq/inSG8C2LAIAK9FbCODbTu2t2yktusv37Sd
zf5/ApqciZ01X4oiQHHKXIgzhYgNenv2dnRsBsrGtn53L1AopXOiSIcz8ECCYsjp
lwiKitebU7VukDlCu07ZQpff62Hm34lsqo2oXZHSC/lKYXD5llixgCmNrs2CTYrF
bWxCr2pngr+azDFX9hUSr6c48MO8Id8hdiWIcYwofNOcUACloqgJ/SaZZqT5OSXj
gk3Iq0ltTQdc71z7g8G1cqHfL/Nu47X0XnwVt8UAOn0b8bo3Hbz3QegPXoj1tik2
j8lJUqm3lwKdIky2i50OWxL/agaXou3jJy19jhziW5sRh3tkZfC4BbI+wazfRyk=
=dW9O
-----END PGP SIGNATURE-----

From raystonn at hotmail.com  Sat Jul  4 05:17:38 2015
From: raystonn at hotmail.com (Raystonn)
Date: Fri, 3 Jul 2015 22:17:38 -0700
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
Message-ID: <COL402-EAS66A7496C6F4E67B0C99998CD950@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/cbb990ba/attachment-0001.html>

From pete at petertodd.org  Sat Jul  4 05:22:09 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 4 Jul 2015 01:22:09 -0400
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <COL402-EAS66A7496C6F4E67B0C99998CD950@phx.gbl>
References: <COL402-EAS66A7496C6F4E67B0C99998CD950@phx.gbl>
Message-ID: <20150704052209.GB12225@savin.petertodd.org>

On Fri, Jul 03, 2015 at 10:17:38PM -0700, Raystonn wrote:

Yeah, I was really surprised when I found out today that bitcoinj
doesn't implement any of the soft-fork code. There's no excuse for not
doing that frankly. :(

> <p dir="ltr">SPV clients are at risk in scenarios like this.  We should encourage them to check node versions against the minimum required for safety.  This check should be upgraded when new BIPs go into effect.  It won't help against malicious nodes.  But it will help in cases such as today's.<br>
> </p>
> <div class="gmail_quote">On 3 Jul 2015 8:17 pm, Gregory Maxwell &lt;gmaxwell at gmail.com&gt; wrote:<br type='attribution'><blockquote class="quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
> 
> 
> 
> <div>
> <div>On Sat, Jul 4, 2015 at 3:11 AM, Raystonn &lt;raystonn&#64;hotmail.com&gt; wrote:<br />
> &gt; We need some analysis on why this has happened.? It appears the larger hashrate is violating BIP66.? Thus it appears the network is rejecting this BIP, though potentially accidentally.? If this is an accident, how is such a large portion of hashrate forking, and what can we do to avoid this in the future?<br />
> <br />
> A near majority of the hashrate on the network appears to be SPV mining.<br />
> <br />
> Btcnuggets was a non-upgraded miner that produced an invalid block<br />
> after the lock in and f2pool and antpool have been extending it.<br />
> Fortunately their extension contains no transactions (an artifact of<br />
> SPV mining).? Obviously a complete understanding is going to take some<br />
> time;? though I would note that this general failure mode was one we<br />
> were aware of and is part of the reason the treshold is so high.<br />
> </div>
> </div>
> 
> </blockquote></div>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


-- 
'peter'[:-1]@petertodd.org
000000000000000014870ea5d966efbae21588be363949de7cb3838f42b00e2f
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 646 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/f9c7ec74/attachment.sig>

From odinn.cyberguerrilla at riseup.net  Sat Jul  4 05:40:18 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Fri, 03 Jul 2015 22:40:18 -0700
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <COL402-EAS66A7496C6F4E67B0C99998CD950@phx.gbl>
References: <COL402-EAS66A7496C6F4E67B0C99998CD950@phx.gbl>
Message-ID: <559771C2.7010606@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Raystonn,

How would an average SPV wallet user know anything about this at all?
They might not know it is even happening, or if they have some idea
that something is wrong, then they wouldn't know what to do.

Say you use Electrum, some older version like 1.9.  Electrum's current
version is 2.3.3.  Or say you use a slightly older version like 2.2.
In any event, how is an end user possibly going to know which of
Electrum's (or any other SPV wallet's) versions are "the minimum
required for safety?" (so as to know they would need to upgrade
because problems)?  Is this just something where it's really down to
community announcements on websites and reddits and the like?



On 07/03/2015 10:17 PM, Raystonn wrote:
> SPV clients are at risk in scenarios like this. We should encourage
> them to check node versions against the minimum required for
> safety. This check should be upgraded when new BIPs go into effect.
> It won't help against malicious nodes. But it will help in cases
> such as today's.
> 
> On 3 Jul 2015 8:17 pm, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> 
> On Sat, Jul 4, 2015 at 3:11 AM, Raystonn <raystonn at hotmail.com>
> wrote:
>> We need some analysis on why this has happened.  It appears the
> larger hashrate is violating BIP66.  Thus it appears the network
> is rejecting this BIP, though potentially accidentally.  If this is
> an accident, how is such a large portion of hashrate forking, and
> what can we do to avoid this in the future?
> 
> A near majority of the hashrate on the network appears to be SPV
> mining.
> 
> Btcnuggets was a non-upgraded miner that produced an invalid block 
> after the lock in and f2pool and antpool have been extending it. 
> Fortunately their extension contains no transactions (an artifact
> of SPV mining).  Obviously a complete understanding is going to
> take some time;  though I would note that this general failure mode
> was one we were aware of and is part of the reason the treshold is
> so high.
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVl3HCAAoJEGxwq/inSG8CXXIH/0s8o09UwRld+upM2pdAovMu
1SBCg/JeK3jXvqJDjyAbYe22WbnW8ykrZdujo1MFGuoZWbgrrSXo581lpyCy3O6c
SZYfAJee4eILzBl4MOwiAImcJBE3zOBCKT/DDaD1Qc8XvX6ReWJFYZgHsp/5F/BL
VlwVV9505V3X2G+y+3XOPwLggCu6m0MkRgeUjNTwdn+j6Yg6/NjJbS+YDDgjZ9dM
y3+uGA9Ek0bCLwjceUh8xAEwb+QUJrJgrNIo1vjuy+NRl18s1rUSx1YGTRkAD8eV
spdGTmXClx/phNnsR072hsqYRSj0CzhV8cQnEAh3ZmB4/RMhcxeNDmGw4rFNwD4=
=71aR
-----END PGP SIGNATURE-----

From raystonn at hotmail.com  Sat Jul  4 05:43:14 2015
From: raystonn at hotmail.com (Raystonn)
Date: Fri, 3 Jul 2015 22:43:14 -0700
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
Message-ID: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/00001bc8/attachment.html>

From pete at petertodd.org  Sat Jul  4 05:44:53 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 4 Jul 2015 01:44:53 -0400
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
Message-ID: <20150704054453.GA348@savin.petertodd.org>

On Fri, Jul 03, 2015 at 10:43:14PM -0700, Raystonn wrote:
> <p dir="ltr">The SPV clients should be checking node versions.  This is for wallet authors to implement.  End-users should just stay current with their chosen wallet software.<br>

Nodes can and do lie about what version they are all the time.

Fact is, SPV means you're trusting other people to check the rules for
you. In this particular case bitcoinj could have - and should have -
checked the BIP66 soft-fork rules, but in general there's no easy
solution to this problem.

-- 
'peter'[:-1]@petertodd.org
00000000000000000a43884e675843f56df90feffeabf56c4e7350f96b623f00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/74dae0dc/attachment.sig>

From raystonn at hotmail.com  Sat Jul  4 05:46:29 2015
From: raystonn at hotmail.com (Raystonn)
Date: Fri, 3 Jul 2015 22:46:29 -0700
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
Message-ID: <COL402-EAS35887B78A246B5C335FC251CD950@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150703/3589410a/attachment.html>

From gmaxwell at gmail.com  Sat Jul  4 06:15:06 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 4 Jul 2015 06:15:06 +0000
Subject: [bitcoin-dev] July 4th 2015 invalid block fork postmortem BIP
	number request
Message-ID: <CAAS2fgQx2FyEyjc0wkS4DLSPux-qCgx40XNprfzsJqVTRt4oQg@mail.gmail.com>

Unless there are objections I intend to assign myself a BIP number for
a postmortem for this event.

I've already been reaching out to parties involved in or impacted by
the fork to gather information, but I do not intend to begin drafting
for a few days (past expirence has shown that it takes time to gain
more complete understanding after an event).

If anyone is aware of services or infrastructure which were impacted
by this which I should contact to gain insight for the analysis,
please contact me off-list.

If anyone is interested in contributing to an analysis, let me know
and I'll link you to my repository when I begin drafting.  If you have
begun your own write up, please do not send it to me yet-- I'd rather
collect more data before drawing any analysis from it myself.

Thanks.

From tier.nolan at gmail.com  Sat Jul  4 10:04:40 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 4 Jul 2015 11:04:40 +0100
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <20150704033016.GA14836@savin.petertodd.org>
References: <COL402-EAS128602FDFB9DA83AC6C1BD2CD950@phx.gbl>
	<CAAS2fgQR15_1JVbtSD2yS9o5cpY-rNLsxpzuaeW2sexbQMuwQg@mail.gmail.com>
	<20150704033016.GA14836@savin.petertodd.org>
Message-ID: <CAE-z3OVJE4Gtgu3jzqCOCWF04V7jKqXrhGbQ5z7dGM+oxo4MmA@mail.gmail.com>

On Sat, Jul 4, 2015 at 4:30 AM, Peter Todd <pete at petertodd.org> wrote:

> As for what "SPV mining" is:
>
> While blocks are propagating throughout the network, frequently it's
> possible for miners to get the header of the block before they get and
> fully validate the block itself. This is just a few seconds to tens of
> seconds, but that's a big deal for profitability. So miners have been
> running custom patches that mine on top of the longest chain they know
> about, even if they haven't actually verified the blocks in it due to
> propagation delays.
>

Is the invalid fork pretty much all empty blocks then?

SPV mining isn't inherently dangerous, if it is only for a short period of
time.  It can boost the total work for the block chain.

Inherently, invalid blocks are rare, so assuming a header is valid is the
correct assumption.

For safety (for the miner), SPV miners should switch back to full mining
after 20-30 seconds without fully validating the chain that they are on.

- header received
- header verified (they skipped this step)
- build on header with empty block
- receive full block
-- mark header as invalid if this step times out
- verify full block
-- mark header as invalid if verification fails
- build on full block with non-empty block

An easier rule is that you only build on a header if the header's parent
(or even grandparent) has been fully verified.  That rule would prevent the
illegal fork from growing past 1-2 blocks.  It would mean that SPV miners
would start wasting hashing power once the invalid fork hit 2 blocks.  They
wouldn't even build on their own block.

I guess miners never added code of that kind?  That is pretty shocking that
a majority would SPV mine without that safeguard against the main
vulnerability of SPV mining.

Even waiting a few minutes before switch back would protect against this.

Worse, in this case, is that it wasn't just an invalid block, it was an
invalid header chain.  They could have done the check with headers only.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/378fcbfd/attachment.html>

From operator at bitminter.com  Sat Jul  4 11:54:49 2015
From: operator at bitminter.com (Geir Harald Hansen)
Date: Sat, 04 Jul 2015 13:54:49 +0200
Subject: [bitcoin-dev] List of approved pools
Message-ID: <5597C989.7010405@bitminter.com>

How do I get Bitminter on the list of approved pools at
https://bitcoin.org/en/alert/2015-07-04-spv-mining ?

Regards,
Geir H. Hansen, Bitminter

From jameson.lopp at gmail.com  Sat Jul  4 12:19:09 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Sat, 4 Jul 2015 08:19:09 -0400
Subject: [bitcoin-dev] List of approved pools
In-Reply-To: <5597C989.7010405@bitminter.com>
References: <5597C989.7010405@bitminter.com>
Message-ID: <CADL_X_cgr_Ub50XDgSO+s9gi4ZRYEP8qzRz9Hin3d1wtg6VyAA@mail.gmail.com>

You can open an issue or submit a pull request on GitHub:
https://github.com/bitcoin-dot-org/bitcoin.org/blob/master/_alerts/2015-07-04-spv-mining.html

- Jameson

On Sat, Jul 4, 2015 at 7:54 AM, Geir Harald Hansen <operator at bitminter.com>
wrote:

> How do I get Bitminter on the list of approved pools at
> https://bitcoin.org/en/alert/2015-07-04-spv-mining ?
>
> Regards,
> Geir H. Hansen, Bitminter
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/026a8689/attachment.html>

From justus at openbitcoinprivacyproject.org  Sat Jul  4 15:18:19 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Sat, 04 Jul 2015 10:18:19 -0500
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <20150704054453.GA348@savin.petertodd.org>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
	<20150704054453.GA348@savin.petertodd.org>
Message-ID: <5597F93B.3000205@openbitcoinprivacyproject.org>

On 07/04/2015 12:44 AM, Peter Todd wrote:
> Fact is, SPV means you're trusting other people to check the rules for
> you. In this particular case bitcoinj could have - and should have -
> checked the BIP66 soft-fork rules, but in general there's no easy
> solution to this problem.

In general, the situation can be improved if there existed proofs which
validating full nodes could broadcast which would tell SPV nodes why the
branch it sees with the most proof of work is actually invalid.

As far as I can tell, producing such proofs is reasonably
straightforward for all cases except the case where a block is invalid
because it contains a transaction which references a non-existent output.

The shortest proof that a particular transaction does not exist in the
blockchain is the entire blockchain.

If each transaction input identified the block containing the referenced
outpoint, then the proof of non-existence is either the block in
question, or the list of block headers (to show that the block doesn't
exist). That's a significant improvement in proof size over the entire
blockchain.

Proving the non-existence of a particular transaction in a specific
block could be made easier for future blocks by requiring transactions
to be ordered in the merkle tree by their hashes.  Then it would just
require a few nodes in the tree to show that the transaction isn't in
the place where it should be.

-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/b4ea50d8/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/b4ea50d8/attachment-0001.sig>

From tier.nolan at gmail.com  Sat Jul  4 15:35:49 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 4 Jul 2015 16:35:49 +0100
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <5597F93B.3000205@openbitcoinprivacyproject.org>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
	<20150704054453.GA348@savin.petertodd.org>
	<5597F93B.3000205@openbitcoinprivacyproject.org>
Message-ID: <CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>

On Sat, Jul 4, 2015 at 4:18 PM, Justus Ranvier <
justus at openbitcoinprivacyproject.org> wrote:

> In general, the situation can be improved if there existed proofs which
> validating full nodes could broadcast which would tell SPV nodes why the
> branch it sees with the most proof of work is actually invalid.
>

Yeah, fraud proofs have been suggested lots of times in the past.

In this case, they weren't even needed.  Fully updated SPV clients should
also have rejected the invalid fork.  All the information required to
reject it was in the header chain.

The problem wasn't SPV miners, it was SPV-miners where the SPV part wasn't
upgraded to handle v3 blocks.


> As far as I can tell, producing such proofs is reasonably
> straightforward for all cases except the case where a block is invalid
> because it contains a transaction which references a non-existent output.
>

Even that can be handled with UTXO set commitments.  If the UTXO tree is
sorted you can prove that an entry doesn't exist.

What cannot be handled is proving that a block is invalid if the
transaction data for the block is withheld.


> If each transaction input identified the block containing the referenced
> outpoint, then the proof of non-existence is either the block in
> question, or the list of block headers (to show that the block doesn't
> exist). That's a significant improvement in proof size over the entire
> blockchain.
>

That is reasonable.  Unconfirmed transactions can't include that info
though.

It could be committed in as an extra commitment.

One issue is that you need to prove of of these commitments too.

A transaction which points to the wrong block would also be provable in the
same way.


> Proving the non-existence of a particular transaction in a specific
> block could be made easier for future blocks by requiring transactions
> to be ordered in the merkle tree by their hashes.  Then it would just
> require a few nodes in the tree to show that the transaction isn't in
> the place where it should be.
>

You could just have an extra merkle tree.

You would only need to include the block hashes for all transactions to
show that the two trees don't match.  That is 32 bytes per transaction
rather than the full 200-500 bytes per transaction.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/c8cf948e/attachment.html>

From dave at dtrt.org  Sat Jul  4 15:42:32 2015
From: dave at dtrt.org (David A. Harding)
Date: Sat, 4 Jul 2015 11:42:32 -0400
Subject: [bitcoin-dev] List of approved pools
In-Reply-To: <5597C989.7010405@bitminter.com>
References: <5597C989.7010405@bitminter.com>
Message-ID: <20150704154232.GA29727@localhost.localdomain>

On Sat, Jul 04, 2015 at 01:54:49PM +0200, Geir Harald Hansen wrote:
> How do I get Bitminter on the list of approved pools at
> https://bitcoin.org/en/alert/2015-07-04-spv-mining ?

Please add known good/bad pools here:

    https://en.bitcoin.it/wiki/Comparison_of_mining_pools#SPV_Mining_.2F_Old_Bitcoin_Core

I will update the Bitcoin.org alert to point there.

We're especially in need of information about pools that are still SPV
mining so that we can make accurate guesses about how many additional
confirmations are needed while the situation persists.

Thank you,

-Dave
-- 
David A. Harding
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/4d3f423d/attachment.sig>

From justus at openbitcoinprivacyproject.org  Sat Jul  4 16:01:37 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Sat, 04 Jul 2015 11:01:37 -0500
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>	<20150704054453.GA348@savin.petertodd.org>	<5597F93B.3000205@openbitcoinprivacyproject.org>
	<CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>
Message-ID: <55980361.9040707@openbitcoinprivacyproject.org>

On 07/04/2015 10:35 AM, Tier Nolan wrote:
> Even that can be handled with UTXO set commitments.  If the UTXO tree is
> sorted you can prove that an entry doesn't exist.

How do we know if a committed UTXO set is valid? If a majority of the
hashing power is willing to extend an invalid branch, it's reasonable to
assume they'd be willing to commit an invalid UTXO set as well.

In order for the committed UTXO set to be reliable at a minimum it will
need to contain at a source block reference for each item in the set.
That would enable fraud proof to show that the committed UTXO set
contains invalid entries.

>> If each transaction input identified the block containing the referenced
>> outpoint, then the proof of non-existence is either the block in
>> question, or the list of block headers (to show that the block doesn't
>> exist). That's a significant improvement in proof size over the entire
>> blockchain.
>>
> 
> That is reasonable.  Unconfirmed transactions can't include that info
> though.
> 
> It could be committed in as an extra commitment.

I agree the information should be an extra commitment produced by the
miner, rather than changing the format of the transaction, since the
author of a transaction can't always know the required information ahead
of time.

> One issue is that you need to prove of of these commitments too.

If items in the the proof tree are required to be sorted, then it's easy
to proof that an item is missing.



-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/fdca1cb1/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/fdca1cb1/attachment-0001.sig>

From tier.nolan at gmail.com  Sat Jul  4 17:58:46 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 4 Jul 2015 18:58:46 +0100
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <55980361.9040707@openbitcoinprivacyproject.org>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
	<20150704054453.GA348@savin.petertodd.org>
	<5597F93B.3000205@openbitcoinprivacyproject.org>
	<CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>
	<55980361.9040707@openbitcoinprivacyproject.org>
Message-ID: <CAE-z3OXZDh=ww33Qr6yGxzm3rzquiP0LNo6yQzL1si+-dr3a_g@mail.gmail.com>

On Sat, Jul 4, 2015 at 5:01 PM, Justus Ranvier <
justus at openbitcoinprivacyproject.org> wrote:

> How do we know if a committed UTXO set is valid? If a majority of the
> hashing power is willing to extend an invalid branch, it's reasonable to
> assume they'd be willing to commit an invalid UTXO set as well.
>

You can prove that it wasn't updated correctly.

For each transaction, the UTXO tree root before and after is committed.

You show the root before, and the root after and show that the after root
is wrong.  You also need to include some merkle paths to prove the
transform.


> If items in the the proof tree are required to be sorted, then it's easy
> to proof that an item is missing.
>

Yes, you can mostly get short proofs for each step, but you have to make
sure your proofs are also provable.

It means going through everything that needs to be proved for a block to be
valid.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/51ecf7e0/attachment.html>

From justus at openbitcoinprivacyproject.org  Sat Jul  4 23:33:24 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Sat, 04 Jul 2015 18:33:24 -0500
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <CAE-z3OXZDh=ww33Qr6yGxzm3rzquiP0LNo6yQzL1si+-dr3a_g@mail.gmail.com>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>	<20150704054453.GA348@savin.petertodd.org>	<5597F93B.3000205@openbitcoinprivacyproject.org>	<CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>	<55980361.9040707@openbitcoinprivacyproject.org>
	<CAE-z3OXZDh=ww33Qr6yGxzm3rzquiP0LNo6yQzL1si+-dr3a_g@mail.gmail.com>
Message-ID: <55986D44.20601@openbitcoinprivacyproject.org>

On 07/04/2015 12:58 PM, Tier Nolan wrote:
> Yes, you can mostly get short proofs for each step, but you have to make
> sure your proofs are also provable.
> 
> It means going through everything that needs to be proved for a block to be
> valid.

I think the problem is tractable if some reasonable assumptions are made
about the ability of SPV clients to perform validity checks that don't
involve any state outside a single transaction (or block):

https://gist.github.com/justusranvier/451616fa4697b5f25f60


-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/52430715/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/52430715/attachment.sig>

From tier.nolan at gmail.com  Sun Jul  5 01:32:16 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sun, 5 Jul 2015 02:32:16 +0100
Subject: [bitcoin-dev] Fork of invalid blocks due to BIP66 violations
In-Reply-To: <55986D44.20601@openbitcoinprivacyproject.org>
References: <COL402-EAS195B72E1CF2B75999C1AB11CD950@phx.gbl>
	<20150704054453.GA348@savin.petertodd.org>
	<5597F93B.3000205@openbitcoinprivacyproject.org>
	<CAE-z3OWTzgYP7CKbFLf-YFKU+G6CNKND2DmAbnr_3_NjB-Y4fw@mail.gmail.com>
	<55980361.9040707@openbitcoinprivacyproject.org>
	<CAE-z3OXZDh=ww33Qr6yGxzm3rzquiP0LNo6yQzL1si+-dr3a_g@mail.gmail.com>
	<55986D44.20601@openbitcoinprivacyproject.org>
Message-ID: <CAE-z3OXX9wVCRiNHxpP3deTv63zOkJv4JDAYG8LXXOrFCoKVxg@mail.gmail.com>

On Sun, Jul 5, 2015 at 12:33 AM, Justus Ranvier <
justus at openbitcoinprivacyproject.org> wrote:

> I think the problem is tractable if some reasonable assumptions are made
> about the ability of SPV clients to perform validity checks that don't
> involve any state outside a single transaction (or block):
>
> https://gist.github.com/justusranvier/451616fa4697b5f25f60
>
>
I agree, it is definitely tractable.

If Bitcoin was being designed from scratch, it could be made even easier.

As things stand, the extra commitment information needs to be added to
extra trees, which themselves need to be checked.

The "prover", in your example, should ideally store additional meta-data
along with each block.

If P2SH was made mandatory, then much of the transaction validation could
be performed on the transaction alone.

Both the signature and the public key would be included in the spending
transaction.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/c335ce43/attachment-0001.html>

From mruddybtc at gmail.com  Sun Jul  5 02:30:41 2015
From: mruddybtc at gmail.com (Michael Ruddy)
Date: Sat, 4 Jul 2015 22:30:41 -0400
Subject: [bitcoin-dev] [BIP draft] Flexible Offer and Acceptance Smart
	Contract
Message-ID: <CABFP+yP8dNtW_msv+k2ZogHgBwm2WH1MYW5-JTDoMPMGLFyxaQ@mail.gmail.com>

I first submitted this idea as an example usage for BIP65.
The feedback was that this might be large enough to be a BIP on its own.
So, I'm submitting here for review and feedback.

In short, this informational BIP describes two Bitcoin script constructs
that utilize the CHECKLOCKTIMEVERIFY opcode to create a smart contract that
allows a specific offer, with flexible expiration time, to be presented and
either accepted (optionally into escrow), or withdrawn/rejected.

The BIP draft can be found at:


https://github.com/mruddy/bips/blob/bip-xx-offer-accept-escrow/bip-offer-accept-escrow.mediawiki

An small example usage implementation can be found at:

  https://github.com/mruddy/flexpiration


- Michael Ruddy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150704/afa1e4fa/attachment.html>

From tomh at thinlink.com  Sun Jul  5 15:00:38 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 05 Jul 2015 08:00:38 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
Message-ID: <55994696.1090705@thinlink.com>

BIP 68 uses nSequence to specify relative locktime, but nSequence also
continues to condition the transaction-level locktime.

This dual effect will prevent a transaction from having an effective
nLocktime without also requiring at least one of its inputs to be mined
at least one block (or one second) ahead of its parent.

The fix is to shift the semantics so that nSequence = MAX_INT - 1
specifies 0 relative locktime, rather than 1.  This change will also
preserve the semantics of transactions that have already been created
with the specific nSequence value MAX_INT - 1 (for example all
transactions created by the bitcoin core wallet starting in 0.11).



From mark at friedenbach.org  Sun Jul  5 16:17:19 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 5 Jul 2015 09:17:19 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <55994696.1090705@thinlink.com>
References: <55994696.1090705@thinlink.com>
Message-ID: <CAOG=w-sgM+H0bGBfZxLhbUHF3y=v4vdBAOTDsZ1LEc3dLzsf6g@mail.gmail.com>

Can you construct an example? Are there use cases where there is a need for
an enforced lock time in a transaction with inputs that are not confirmed
at the time the lock time expires?
On Jul 5, 2015 8:00 AM, "Tom Harding" <tomh at thinlink.com> wrote:

> BIP 68 uses nSequence to specify relative locktime, but nSequence also
> continues to condition the transaction-level locktime.
>
> This dual effect will prevent a transaction from having an effective
> nLocktime without also requiring at least one of its inputs to be mined
> at least one block (or one second) ahead of its parent.
>
> The fix is to shift the semantics so that nSequence = MAX_INT - 1
> specifies 0 relative locktime, rather than 1.  This change will also
> preserve the semantics of transactions that have already been created
> with the specific nSequence value MAX_INT - 1 (for example all
> transactions created by the bitcoin core wallet starting in 0.11).
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/1a2b9b0d/attachment.html>

From pieter.wuille at gmail.com  Sun Jul  5 16:21:44 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Sun, 5 Jul 2015 18:21:44 +0200
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <CAOG=w-sgM+H0bGBfZxLhbUHF3y=v4vdBAOTDsZ1LEc3dLzsf6g@mail.gmail.com>
References: <55994696.1090705@thinlink.com>
	<CAOG=w-sgM+H0bGBfZxLhbUHF3y=v4vdBAOTDsZ1LEc3dLzsf6g@mail.gmail.com>
Message-ID: <CAPg+sBi_Q9heOQVtZHBOgweT5HrNRy7kPKQkok2VCE+0VaCd1Q@mail.gmail.com>

I would say yes. Just putting a locktime in transaction may help against
fee sniping, even in transactions that are allowed to be mined at the same
time as some of their dependencies?
On Jul 5, 2015 6:17 PM, "Mark Friedenbach" <mark at friedenbach.org> wrote:

> Can you construct an example? Are there use cases where there is a need
> for an enforced lock time in a transaction with inputs that are not
> confirmed at the time the lock time expires?
> On Jul 5, 2015 8:00 AM, "Tom Harding" <tomh at thinlink.com> wrote:
>
>> BIP 68 uses nSequence to specify relative locktime, but nSequence also
>> continues to condition the transaction-level locktime.
>>
>> This dual effect will prevent a transaction from having an effective
>> nLocktime without also requiring at least one of its inputs to be mined
>> at least one block (or one second) ahead of its parent.
>>
>> The fix is to shift the semantics so that nSequence = MAX_INT - 1
>> specifies 0 relative locktime, rather than 1.  This change will also
>> preserve the semantics of transactions that have already been created
>> with the specific nSequence value MAX_INT - 1 (for example all
>> transactions created by the bitcoin core wallet starting in 0.11).
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/f360820c/attachment.html>

From tomh at thinlink.com  Sun Jul  5 16:25:17 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 05 Jul 2015 09:25:17 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <CAOG=w-sgM+H0bGBfZxLhbUHF3y=v4vdBAOTDsZ1LEc3dLzsf6g@mail.gmail.com>
References: <55994696.1090705@thinlink.com>
	<CAOG=w-sgM+H0bGBfZxLhbUHF3y=v4vdBAOTDsZ1LEc3dLzsf6g@mail.gmail.com>
Message-ID: <55995A6D.8090703@thinlink.com>

Since you're removing a working capability, you should be the one to
prove it is unneeded.

But the simple example is the case where the input is also locked.


On 7/5/2015 9:17 AM, Mark Friedenbach wrote:
>
> Can you construct an example? Are there use cases where there is a
> need for an enforced lock time in a transaction with inputs that are
> not confirmed at the time the lock time expires?
>
> On Jul 5, 2015 8:00 AM, "Tom Harding" <tomh at thinlink.com
> <mailto:tomh at thinlink.com>> wrote:
>
>     BIP 68 uses nSequence to specify relative locktime, but nSequence also
>     continues to condition the transaction-level locktime.
>
>     This dual effect will prevent a transaction from having an effective
>     nLocktime without also requiring at least one of its inputs to be
>     mined
>     at least one block (or one second) ahead of its parent.
>
>     The fix is to shift the semantics so that nSequence = MAX_INT - 1
>     specifies 0 relative locktime, rather than 1.  This change will also
>     preserve the semantics of transactions that have already been created
>     with the specific nSequence value MAX_INT - 1 (for example all
>     transactions created by the bitcoin core wallet starting in 0.11).
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/7e1dd1b2/attachment.html>

From mark at friedenbach.org  Sun Jul  5 17:07:12 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Sun, 5 Jul 2015 10:07:12 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <55994696.1090705@thinlink.com>
References: <55994696.1090705@thinlink.com>
Message-ID: <CAOG=w-t+VCk66mM1N1Pc4PN2T9=X94hhyg_Pc+2_ULT51JfxCA@mail.gmail.com>

Note that you can put 0 in the sequence number field and it would work just
as expected under the old rules. I will perhaps suggest instead that
Bitcoin Core post-0.11 switch to doing this instead for that case.

On Sun, Jul 5, 2015 at 8:00 AM, Tom Harding <tomh at thinlink.com> wrote:

> BIP 68 uses nSequence to specify relative locktime, but nSequence also
> continues to condition the transaction-level locktime.
>
> This dual effect will prevent a transaction from having an effective
> nLocktime without also requiring at least one of its inputs to be mined
> at least one block (or one second) ahead of its parent.
>
> The fix is to shift the semantics so that nSequence = MAX_INT - 1
> specifies 0 relative locktime, rather than 1.  This change will also
> preserve the semantics of transactions that have already been created
> with the specific nSequence value MAX_INT - 1 (for example all
> transactions created by the bitcoin core wallet starting in 0.11).
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/eb52ca21/attachment-0001.html>

From elombrozo at gmail.com  Sun Jul  5 18:50:23 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 5 Jul 2015 11:50:23 -0700
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
	and other Bitcoin inconveniences.
In-Reply-To: <CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>
	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>
	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
Message-ID: <CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>

Blockchain validation has become too expensive to properly secure the
network as per our original security model. The level of validation
required to comply with our security model has become completely
impractical for most use cases. Block space is still cheap only because of
block reward subsidy (which decreases exponentially with time). The
economics are already completely jacked - larger blocks will only worsen
this disparity.

The only practical way for the network to function at present (and what has
essentially ended up happening, if often tacitly) is by introducing trust,
in validators, miners, relayers, explorer websites, online wallets,
etc...which in and of itself wouldn't be the end of the world were it not
for the fact that the raison d'etre of bitcoin is trustlessness - and the
security model is very much based on this idea. Because of this, there's
been a tendency to deny that bitcoin cannot presently scale without trust.
This is horrible because our entire security model has gone out the
window...and has been replaced with something that isn't specified at all!

We don't really know the boundaries of our model, as the fork a couple of
days ago demonstrated. Right now we're basically trusting a few devs and
some mining pool operators that until now have been willing to cooperate
for the benefit of the network. It is dangerous to assume this will
continue perpetually. Even assuming the best intentions, an incident might
occur that this cooperation cannot easily repair.

We need to either solve the validation cost/bottleneck issue...or we need
to construct a new security model that takes these trust assumptions into
account.

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/d52e2a17/attachment.html>

From tomh at thinlink.com  Sun Jul  5 19:50:59 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 05 Jul 2015 12:50:59 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <CAOG=w-t+VCk66mM1N1Pc4PN2T9=X94hhyg_Pc+2_ULT51JfxCA@mail.gmail.com>
References: <55994696.1090705@thinlink.com>
	<CAOG=w-t+VCk66mM1N1Pc4PN2T9=X94hhyg_Pc+2_ULT51JfxCA@mail.gmail.com>
Message-ID: <55998AA3.4060801@thinlink.com>

Or you could flip the definition of your activation bit.  That would
avoid the inversion and put relative locktimes outside the realm of both
the MAX_INT and MAX_INT - 1 values.

It would also allow an explicit relative locktime of 0, which would help
applications avoid accidentally finalizing the whole transaction when
they only meant to not impose a relative locktime on one input.


On 7/5/2015 10:07 AM, Mark Friedenbach wrote:
> Note that you can put 0 in the sequence number field and it would work
> just as expected under the old rules. I will perhaps suggest instead
> that Bitcoin Core post-0.11 switch to doing this instead for that case.
>
> On Sun, Jul 5, 2015 at 8:00 AM, Tom Harding <tomh at thinlink.com
> <mailto:tomh at thinlink.com>> wrote:
>
>     BIP 68 uses nSequence to specify relative locktime, but nSequence also
>     continues to condition the transaction-level locktime.
>
>     This dual effect will prevent a transaction from having an effective
>     nLocktime without also requiring at least one of its inputs to be
>     mined
>     at least one block (or one second) ahead of its parent.
>
>     The fix is to shift the semantics so that nSequence = MAX_INT - 1
>     specifies 0 relative locktime, rather than 1.  This change will also
>     preserve the semantics of transactions that have already been created
>     with the specific nSequence value MAX_INT - 1 (for example all
>     transactions created by the bitcoin core wallet starting in 0.11).
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/c0628db2/attachment.html>

From elombrozo at gmail.com  Sun Jul  5 19:55:47 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 5 Jul 2015 12:55:47 -0700
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
	and other Bitcoin inconveniences.
In-Reply-To: <CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>
	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>
	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
	<CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
Message-ID: <CABr1YTdBEUCT2AONBMD-aEh=Opu80H4U0H-4ZFFMg6+jECpCPw@mail.gmail.com>

I should clarify that by "most use cases" I'm not envisioning a bunch of
cryptogeeks [us, or at least myself and a few of us] happily buying up hard
disks, waiting hours, days, weeks to spawn up new full nodes. I'm
envisioning a world where every person has access to this technology and
finds it practical, convenient, and safe ti use.

- Eric Lombrozo
On Jul 5, 2015 11:50 AM, "Eric Lombrozo" <elombrozo at gmail.com> wrote:

> Blockchain validation has become too expensive to properly secure the
> network as per our original security model. The level of validation
> required to comply with our security model has become completely
> impractical for most use cases. Block space is still cheap only because of
> block reward subsidy (which decreases exponentially with time). The
> economics are already completely jacked - larger blocks will only worsen
> this disparity.
>
> The only practical way for the network to function at present (and what
> has essentially ended up happening, if often tacitly) is by introducing
> trust, in validators, miners, relayers, explorer websites, online wallets,
> etc...which in and of itself wouldn't be the end of the world were it not
> for the fact that the raison d'etre of bitcoin is trustlessness - and the
> security model is very much based on this idea. Because of this, there's
> been a tendency to deny that bitcoin cannot presently scale without trust.
> This is horrible because our entire security model has gone out the
> window...and has been replaced with something that isn't specified at all!
>
> We don't really know the boundaries of our model, as the fork a couple of
> days ago demonstrated. Right now we're basically trusting a few devs and
> some mining pool operators that until now have been willing to cooperate
> for the benefit of the network. It is dangerous to assume this will
> continue perpetually. Even assuming the best intentions, an incident might
> occur that this cooperation cannot easily repair.
>
> We need to either solve the validation cost/bottleneck issue...or we need
> to construct a new security model that takes these trust assumptions into
> account.
>
> - Eric Lombrozo
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/b7b3df23/attachment.html>

From tomh at thinlink.com  Sun Jul  5 19:57:00 2015
From: tomh at thinlink.com (Tom Harding)
Date: Sun, 05 Jul 2015 12:57:00 -0700
Subject: [bitcoin-dev] BIP 68 (Relative Locktime) bug
In-Reply-To: <55998AA3.4060801@thinlink.com>
References: <55994696.1090705@thinlink.com>
	<CAOG=w-t+VCk66mM1N1Pc4PN2T9=X94hhyg_Pc+2_ULT51JfxCA@mail.gmail.com>
	<55998AA3.4060801@thinlink.com>
Message-ID: <55998C0C.5050207@thinlink.com>


Never mind that last bit.  I overlooked that the other inputs can
independently make the tx non-final.

On 7/5/2015 12:50 PM, Tom Harding wrote:
>
> It would also allow an explicit relative locktime of 0, which would
> help applications avoid accidentally finalizing the whole transaction
> when they only meant to not impose a relative locktime on one input.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/d3c22ca9/attachment.html>

From justus at openbitcoinprivacyproject.org  Sun Jul  5 20:33:40 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Sun, 05 Jul 2015 15:33:40 -0500
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
 and other Bitcoin inconveniences.
In-Reply-To: <CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
	<CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
Message-ID: <559994A4.5010401@openbitcoinprivacyproject.org>

On 07/05/2015 01:50 PM, Eric Lombrozo wrote:
> The only practical way for the network to function at present (and what has
> essentially ended up happening, if often tacitly) is by introducing trust,
> in validators, miners, relayers, explorer websites, online wallets,
> etc...which in and of itself wouldn't be the end of the world were it not
> for the fact that the raison d'etre of bitcoin is trustlessness - and the
> security model is very much based on this idea. Because of this, there's
> been a tendency to deny that bitcoin cannot presently scale without trust.
> This is horrible because our entire security model has gone out the
> window...and has been replaced with something that isn't specified at all!

When I read this, I get the impression that you (and possibly many
others) never actually understood the Bitcoin security model in the
first place.

Bitcoin is a digital cash system that prevents double spending without
using a trusted third party.

More specifically, successful double spending in Bitcoin requires an
attacker to pay a proof of work cost that exceeds the cumulative proof
of work paid by all non-attackers since the original spend.

The security model holds for any user who has access to the complete
blockchain, and currently does not hold for all users who do not. An
attacker can double spend without paying the full PoW cost the security
model requires if users do not have a full copy of the blockchain which
which to verify the attacker's blocks.

That's a problem, but it's not an unfixable problem.

The reason an attacker can fool SPV clients into accepting invalid
blocks is because there exists no mechanism via which honest nodes can
prove the invalidity of blocks.

Implement that mechanism, and the security of SPV clients will far more
closely resemble the security of full nodes.


-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/1fe13a75/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/1fe13a75/attachment-0001.sig>

From elombrozo at gmail.com  Sun Jul  5 20:53:51 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 5 Jul 2015 13:53:51 -0700
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
	and other Bitcoin inconveniences.
In-Reply-To: <559994A4.5010401@openbitcoinprivacyproject.org>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>
	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>
	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
	<CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
	<559994A4.5010401@openbitcoinprivacyproject.org>
Message-ID: <CABr1YTd5Tv5QPq3-W=1a4V2hTaOhg_0PBW5wdWD5G8jfkdKM=A@mail.gmail.com>

Perhaps I didn't write that so well if I gave that impression. Perhaps
taking a look at some of my work in this space would make you think
otherwise. (yes, I've implemented an entire SPV stack from scratch...look
it up.)

But all patronizing aside, your claim that "the reason an attacker can fool
SPV clients into accepting invalid blocks is because there exists no
mechanism via which honest nodes can prove the invalidity of blocks" is
exactly to the point...and building such a mechanism would address the
first of the two options I give: make it cheap to securely validate or take
trust into account.

- Eric Lombrozo

On Jul 5, 2015 1:34 PM, "Justus Ranvier" <
justus at openbitcoinprivacyproject.org> wrote:

> On 07/05/2015 01:50 PM, Eric Lombrozo wrote:
> > The only practical way for the network to function at present (and what
> has
> > essentially ended up happening, if often tacitly) is by introducing
> trust,
> > in validators, miners, relayers, explorer websites, online wallets,
> > etc...which in and of itself wouldn't be the end of the world were it not
> > for the fact that the raison d'etre of bitcoin is trustlessness - and the
> > security model is very much based on this idea. Because of this, there's
> > been a tendency to deny that bitcoin cannot presently scale without
> trust.
> > This is horrible because our entire security model has gone out the
> > window...and has been replaced with something that isn't specified at
> all!
>
> When I read this, I get the impression that you (and possibly many
> others) never actually understood the Bitcoin security model in the
> first place.
>
> Bitcoin is a digital cash system that prevents double spending without
> using a trusted third party.
>
> More specifically, successful double spending in Bitcoin requires an
> attacker to pay a proof of work cost that exceeds the cumulative proof
> of work paid by all non-attackers since the original spend.
>
> The security model holds for any user who has access to the complete
> blockchain, and currently does not hold for all users who do not. An
> attacker can double spend without paying the full PoW cost the security
> model requires if users do not have a full copy of the blockchain which
> which to verify the attacker's blocks.
>
> That's a problem, but it's not an unfixable problem.
>
> The reason an attacker can fool SPV clients into accepting invalid
> blocks is because there exists no mechanism via which honest nodes can
> prove the invalidity of blocks.
>
> Implement that mechanism, and the security of SPV clients will far more
> closely resemble the security of full nodes.
>
>
> --
> Justus Ranvier
> Open Bitcoin Privacy Project
> http://www.openbitcoinprivacyproject.org/
> justus at openbitcoinprivacyproject.org
> E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/c247cb61/attachment.html>

From justus at openbitcoinprivacyproject.org  Sun Jul  5 21:05:43 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Sun, 05 Jul 2015 16:05:43 -0500
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
 and other Bitcoin inconveniences.
In-Reply-To: <CABr1YTd5Tv5QPq3-W=1a4V2hTaOhg_0PBW5wdWD5G8jfkdKM=A@mail.gmail.com>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>	<CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>	<559994A4.5010401@openbitcoinprivacyproject.org>
	<CABr1YTd5Tv5QPq3-W=1a4V2hTaOhg_0PBW5wdWD5G8jfkdKM=A@mail.gmail.com>
Message-ID: <55999C27.4070604@openbitcoinprivacyproject.org>

On 07/05/2015 03:53 PM, Eric Lombrozo wrote:
> Perhaps I didn't write that so well if I gave that impression. Perhaps
> taking a look at some of my work in this space would make you think
> otherwise. (yes, I've implemented an entire SPV stack from scratch...look
> it up.)

I get concerned when I hear statement like "the raison d'etre of bitcoin
is trustlessness" because it implies that Bitcoin promises infinite
security, which has never been the case.

I don't think we can meaningfully discuss Bitcoin security issues if
every proposal is compared to a straw standard of perfection which is
achievable. When everybody expects infinite security then the perfect
turns into the enemy of the good (and the achievable).

-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/d55e44a6/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/d55e44a6/attachment-0001.sig>

From elombrozo at gmail.com  Sun Jul  5 21:08:12 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Sun, 5 Jul 2015 14:08:12 -0700
Subject: [bitcoin-dev] Thoughts on Forks, Scalability,
	and other Bitcoin inconveniences.
In-Reply-To: <55999C27.4070604@openbitcoinprivacyproject.org>
References: <CABr1YTf72fdQmTDEHAWVKqvTCLSpJZyiiw4g3ifrY8x5RZ=shQ@mail.gmail.com>
	<CABr1YTfwcOQuNyqO57=jdghTnqt56u6pBvK6+dWbED-4OMh+Ug@mail.gmail.com>
	<CABr1YTfEEXoQJ4SUtrUki9_WetWbGV7TEB+3usJGQqu-P55kSA@mail.gmail.com>
	<CABr1YTfiCx6igG9s6NbdD7pWLuoYSJ1QFcX_RnhbdtX5r=Z5Xg@mail.gmail.com>
	<559994A4.5010401@openbitcoinprivacyproject.org>
	<CABr1YTd5Tv5QPq3-W=1a4V2hTaOhg_0PBW5wdWD5G8jfkdKM=A@mail.gmail.com>
	<55999C27.4070604@openbitcoinprivacyproject.org>
Message-ID: <CABr1YTcOGkQOr0UMTZMQvMZyuHF63n6eKEmg0uz-j5OwnJ37sA@mail.gmail.com>

I was saying that somewhat tongue-in-cheek...sorry that didn't come through
in the text.
On Jul 5, 2015 2:05 PM, "Justus Ranvier" <
justus at openbitcoinprivacyproject.org> wrote:

> On 07/05/2015 03:53 PM, Eric Lombrozo wrote:
> > Perhaps I didn't write that so well if I gave that impression. Perhaps
> > taking a look at some of my work in this space would make you think
> > otherwise. (yes, I've implemented an entire SPV stack from scratch...look
> > it up.)
>
> I get concerned when I hear statement like "the raison d'etre of bitcoin
> is trustlessness" because it implies that Bitcoin promises infinite
> security, which has never been the case.
>
> I don't think we can meaningfully discuss Bitcoin security issues if
> every proposal is compared to a straw standard of perfection which is
> achievable. When everybody expects infinite security then the perfect
> turns into the enemy of the good (and the achievable).
>
> --
> Justus Ranvier
> Open Bitcoin Privacy Project
> http://www.openbitcoinprivacyproject.org/
> justus at openbitcoinprivacyproject.org
> E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150705/4861c8cd/attachment.html>

From dkbryant at gmail.com  Mon Jul  6 04:14:14 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Sun, 5 Jul 2015 23:14:14 -0500
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <20150703215658.GC5916@muck>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
	<20150703215658.GC5916@muck>
Message-ID: <CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>

On Wed, Jul 01, 2015 at 09:52:57PM -0700, Mark Friedenbach wrote:
> This is called child pays for parent and there is a three year old pull
> request implementing it:
>
> https://github.com/bitcoin/bitcoin/pull/1647

Understood... When I wrote the BIP proposal I was assuming
(incorrectly) that CPFP TX selection was already being done by miners,
but I see now that certain trees could bloom the TX selection latency
as miners would need to be more dependency aware.  Perhaps the BIP66
orphan block chain shows that some miners may not always be counted on
to ensure that all TX stuffed in a block have dependencies met.
Certainly not until the PR1647 is fully merged and deployed.

On Wed, Jul 1, 2015 at 11:57 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:
> PR#1647 only addresses miner policy, though, right? I believe the BIP is
> addressing the user-facing side of this functionality. CPFP mining policy
> does very little good if wallets don't offer any way for users to goose up
> incoming transactions.

On Wed, Jul 01, 2015 at 09:52:57PM -0700, Mark Friedenbach wrote:
> The points regarding sweep transaction UI is out of scope for a BIP I'm
> afraid. I suggest talking with wallet authors, and if agreement can be
> found writing a pull request.

Yes... although I certainly admit, I didn't know about CPFP or I would
have called it out as a requirement for this UI enhancement request.
I'll see if I can't get some wallet authors interested in this as a
feature enhancement when PR1647 commits.

Perhaps there are risks raised if CPFP is not enabled but these sweep
tx enter the mempool.  If miners take the high fee "children" but
ignore the low fee "parents" then the child might enter the blockchain
without the parent.  If miners were light on block validation,
wouldn't it be possible that the child may go forward with many
confirmations, while the parent patiently waits in the mempool?  This
could be bad since spending the child may look good, as it might have
many confirmations, while its parent has few.

On Fri, Jul 3, 2015 at 4:56 PM, Peter Todd <pete at petertodd.org> wrote:
> "Replace-by-fee scorched-earth without child-pays-for-parent",
> Peter Todd, Bitcoin-development mailing list, Apr 28th 2014
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005620.html

Very good!  So if I follow, RPF can work one of two ways:

In the "countermeasure" form, spender gives receiver a partially
signed "countermeasure" transactions with juiced up fees.

In the "anyonecanpay" form, spender signs the transaction with
ANYONECANPAY bit allowing the reviver to add fees at will.

One question I did have about RBF is this.. Is it correct to presume
that the spender doesn't send the incomplete "countermeasure"
transaction to the network?  If they did, wouldn't they get flagged on
DoS code banning them from peers?

Corollary question.  If the "countermeasure" transaction is not
broadcast, is it sent to the receiver via back channel (email, etc)

I'll try to clean up the draft BIP to include CPFP dependencies and
RBF capabilities.  Whether it belongs in a BIP or a PR, its just a doc
to outline my thoughts at this point.  Not burning a whole in my head,
so may take some time.

Thx.

From michabailey at gmail.com  Mon Jul  6 04:20:30 2015
From: michabailey at gmail.com (Micha Bailey)
Date: Mon, 6 Jul 2015 07:20:30 +0300
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
	<20150703215658.GC5916@muck>
	<CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
Message-ID: <CAAmoQf3g_3p-+JU2bjFzv+4wAD1Y7bvQ7WAX4u8B4MdeXtmpSw@mail.gmail.com>

On Monday, July 6, 2015, Dan Bryant <dkbryant at gmail.com> wrote:

> On Wed, Jul 01, 2015 at 09:52:57PM -0700, Mark Friedenbach wrote:
> > This is called child pays for parent and there is a three year old pull
> > request implementing it:
> >
> > https://github.com/bitcoin/bitcoin/pull/1647
>
> Understood... When I wrote the BIP proposal I was assuming
> (incorrectly) that CPFP TX selection was already being done by miners,
> but I see now that certain trees could bloom the TX selection latency
> as miners would need to be more dependency aware.  Perhaps the BIP66
> orphan block chain shows that some miners may not always be counted on
> to ensure that all TX stuffed in a block have dependencies met.
> Certainly not until the PR1647 is fully merged and deployed.
>
> On Wed, Jul 1, 2015 at 11:57 PM, Matt Whitlock <bip at mattwhitlock.name
> <javascript:;>> wrote:
> > PR#1647 only addresses miner policy, though, right? I believe the BIP is
> > addressing the user-facing side of this functionality. CPFP mining policy
> > does very little good if wallets don't offer any way for users to goose
> up
> > incoming transactions.
>
> On Wed, Jul 01, 2015 at 09:52:57PM -0700, Mark Friedenbach wrote:
> > The points regarding sweep transaction UI is out of scope for a BIP I'm
> > afraid. I suggest talking with wallet authors, and if agreement can be
> > found writing a pull request.
>
> Yes... although I certainly admit, I didn't know about CPFP or I would
> have called it out as a requirement for this UI enhancement request.
> I'll see if I can't get some wallet authors interested in this as a
> feature enhancement when PR1647 commits.
>
> Perhaps there are risks raised if CPFP is not enabled but these sweep
> tx enter the mempool.  If miners take the high fee "children" but
> ignore the low fee "parents" then the child might enter the blockchain
> without the parent.  If miners were light on block validation,
> wouldn't it be possible that the child may go forward with many
> confirmations, while the parent patiently waits in the mempool?  This
> could be bad since spending the child may look good, as it might have
> many confirmations, while its parent has few.


A child is a transaction that spends outputs of another transaction, the
parent. The child cannot be confirmed before the parent, because the
outputs being spent do not yet exist.


>
> On Fri, Jul 3, 2015 at 4:56 PM, Peter Todd <pete at petertodd.org
> <javascript:;>> wrote:
> > "Replace-by-fee scorched-earth without child-pays-for-parent",
> > Peter Todd, Bitcoin-development mailing list, Apr 28th 2014
> >
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005620.html
>
> Very good!  So if I follow, RPF can work one of two ways:
>
> In the "countermeasure" form, spender gives receiver a partially
> signed "countermeasure" transactions with juiced up fees.
>
> In the "anyonecanpay" form, spender signs the transaction with
> ANYONECANPAY bit allowing the reviver to add fees at will.
>
> One question I did have about RBF is this.. Is it correct to presume
> that the spender doesn't send the incomplete "countermeasure"
> transaction to the network?  If they did, wouldn't they get flagged on
> DoS code banning them from peers?


A transaction that is not completely signed won't be relayed, correct, and
it cannot be mined.


> Corollary question.  If the "countermeasure" transaction is not
> broadcast, is it sent to the receiver via back channel (email, etc)
>
> I'll try to clean up the draft BIP to include CPFP dependencies and
> RBF capabilities.  Whether it belongs in a BIP or a PR, its just a doc
> to outline my thoughts at this point.  Not burning a whole in my head,
> so may take some time.
>
> Thx.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <javascript:;>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150706/8c82606a/attachment.html>

From luke at dashjr.org  Mon Jul  6 04:24:55 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Mon, 6 Jul 2015 04:24:55 +0000
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
	transactions with a bounty.
In-Reply-To: <CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<20150703215658.GC5916@muck>
	<CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
Message-ID: <201507060424.57070.luke@dashjr.org>

On Monday, July 06, 2015 4:14:14 AM Dan Bryant wrote:
> When I wrote the BIP proposal I was assuming (incorrectly) that CPFP TX
> selection was already being done by miners,

No, this is correct. It's just not included in the reference policy.
Miners are not expected to use the reference policy as-is, and some of them do 
in fact use CPFP.

Luke

From jtimon at jtimon.cc  Mon Jul  6 16:50:37 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 6 Jul 2015 18:50:37 +0200
Subject: [bitcoin-dev] Introduce N testnet chains to test different block
	sizes
Message-ID: <CABm2gDocHGNiRtxci+bdp_QXo4iD7Z1HbW5s=4rFKj79Q8XGyg@mail.gmail.com>

I have created the following PR that simplifies testing of different
block sizes and (if it were merged) would also slightly simplify a
future block size change hardfork.

https://github.com/bitcoin/bitcoin/pull/6382

I hope someone finds this useful. Please, post to github if you find
any issues. But, please, don't discuss the block size issue itself in
this post or the PR, the size is simply -blocksize.

I repeat the text here:

It would be generally good to have more people collecting data and
conduction simulations related to different consensus maximum block sizes.
This PR attempts to simplify that work.
Even if it may take long until it is merged (because it requires many
little steps to be taken first), this branch (or a fork of it) can be
used right now for
testing purposes.

One can use it, for example, like this: ```./src/qt/bitcoin-qt
-chain=sizetest -debug -printtoconsole -gen=1 -genproclimit=20
-blocksize=2000000```

I will rebase and update the list of dependencies accordingly as
things get merged.

Dependencies:

- Chainparams: Translations: DRY: options and error strings #6235
- CTestNetParams and CRegTestParams extend directly from CChainParams #6381

From grarpamp at gmail.com  Tue Jul  7 19:21:50 2015
From: grarpamp at gmail.com (grarpamp)
Date: Tue, 7 Jul 2015 15:21:50 -0400
Subject: [bitcoin-dev] Bitcoin philosophical musings and pressures 7 years
 in [drifted from: txrate, forking, etc]
Message-ID: <CAD2Ti28Tw7Kz+RoW3DYqEPbB4KfS=TiTSwbtneL7ps1QsKvzvw@mail.gmail.com>

> Then again maybe I am missing the key reasoning for this fork.

People often miss the fundamental reasons Bitcoin exists,
the various conjoined ethos behind its creation. This is to be
expected, it's so far ouside any thinking or life process they've
ever had to do or been exposed to. It's also partly why figuring
out what to do or code or adopt, is hard. And certainly not made
any easier by the long term need and the current value at stake.

Creating a system in which a Botswanan can give a few bits
of their impoverished wages to their friend in Mumbai without
it being gated, permitted, hierarchied, middlemanned, taxed,
tracked, stolen and feed-upon until pointless... this simply
doesn't compute for these people. Their school of thought is
centralization, profit, control and oppression. So of course they
see txrate ramming up against an artificial wall as perfectly fine,
it enables and perpetuates their legacy ways.

Regardless of whichever technical way the various walls are torn down,
what's important is that they are. And that those who are thinking
outside the box do, and continue to, take time to school these
legacy people such that they might someday become enlightened
and join the ethos.

Otherwise might as well work for ICBC, JPMC, HSBC, BNP, MUFG
and your favorite government. Probably not as much fun though.

From gmaxwell at gmail.com  Tue Jul  7 23:14:18 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 7 Jul 2015 23:14:18 +0000
Subject: [bitcoin-dev] Upcoming DOS vulnerability announcements for
	Bitcoin Core
In-Reply-To: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
References: <CAAS2fgR0ak5B1gdSvR7s4YRydbpXb0jC45U3V50D6n=aMLUn7w@mail.gmail.com>
Message-ID: <CAAS2fgSO+Bbyr1pHweiv4QT1MVcMOGBmJTd6b1+VHVAd7K2rSg@mail.gmail.com>

On Sat, Jun 27, 2015 at 6:21 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On July 7th I will be making public details of several serious denial of
> service vulnerabilities which have fixed in recent versions of Bitcoin Core,
> including CVE-2015-3641.
>
> I strongly recommend anyone running production nodes exposed to inbound
> connections from the internet upgrade to 0.10.2 as soon as possible.
>
> Upgrading older systems, especially miners, is also important due to the
> BIP66 soft-fork which is about to reach enforcing status, see also:
> http://sourceforge.net/p/bitcoin/mailman/message/34199290/


Just an update here-- I'm delaying this somewhat due to recent network
turbulance and unusual attempted DOS attack activity on relayed
infrastructure.
I've also had some requests from other cryptocurrency implementors to
use a somewhat longer horizon here.

From mashuribc at gmail.com  Wed Jul  8 19:15:08 2015
From: mashuribc at gmail.com (Mashuri Clark)
Date: Wed, 8 Jul 2015 12:15:08 -0700
Subject: [bitcoin-dev] [Bitcoin-development] Mining centralization pressure
	from non-uniform propagation speed
Message-ID: <007801d0b9b2$6815f0d0$3841d270$@GMail.com>

Would it be easy to code in another variable?  I think it would be useful to
know how a per-node imposed max block size limit (with this limit, a node
would still accept all incoming blocks, but refuse to relay any above a
specified size) would affect orphan rates and reorgs.  Example: What would
the orphan rate be of an 8MB block if 80% of all nodes refuse to relay it?
The resulting data would provide insight into how nodes can enforce a
dynamic maximum block size in absence of a hard limit.

 

I would do this myself but I am not a coder.  I'm hoping someone here who is
capable finds this data worth pursuing.

 

--

MC

 



---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150708/52b2bb7f/attachment.html>

From voisine at gmail.com  Thu Jul  9 06:17:03 2015
From: voisine at gmail.com (Aaron Voisine)
Date: Wed, 8 Jul 2015 23:17:03 -0700
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <201507060424.57070.luke@dashjr.org>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<20150703215658.GC5916@muck>
	<CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
	<201507060424.57070.luke@dashjr.org>
Message-ID: <CACq0ZD4PCSXMjZDXNS134ZWTSOaNGktKQd47q+6ncV-uRhS+YQ@mail.gmail.com>

Do you have any idea how much hashing power is using CPFP? It's a useful
metric for wallet developers to know what sort of confirmation times they
might be able to get when attempting to use it.


Aaron Voisine
co-founder and CEO
breadwallet.com

On Sun, Jul 5, 2015 at 9:24 PM, Luke Dashjr <luke at dashjr.org> wrote:

> On Monday, July 06, 2015 4:14:14 AM Dan Bryant wrote:
> > When I wrote the BIP proposal I was assuming (incorrectly) that CPFP TX
> > selection was already being done by miners,
>
> No, this is correct. It's just not included in the reference policy.
> Miners are not expected to use the reference policy as-is, and some of
> them do
> in fact use CPFP.
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150708/0f48f29b/attachment.html>

From luke at dashjr.org  Thu Jul  9 06:22:42 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Thu, 9 Jul 2015 06:22:42 +0000
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
	transactions with a bounty.
In-Reply-To: <CACq0ZD4PCSXMjZDXNS134ZWTSOaNGktKQd47q+6ncV-uRhS+YQ@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<201507060424.57070.luke@dashjr.org>
	<CACq0ZD4PCSXMjZDXNS134ZWTSOaNGktKQd47q+6ncV-uRhS+YQ@mail.gmail.com>
Message-ID: <201507090622.43214.luke@dashjr.org>

On Thursday, July 09, 2015 6:17:03 AM Aaron Voisine wrote:
> Do you have any idea how much hashing power is using CPFP? It's a useful
> metric for wallet developers to know what sort of confirmation times they
> might be able to get when attempting to use it.

Not sure. At least 4% (Eligius)?

From dkbryant at gmail.com  Thu Jul  9 07:19:06 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Thu, 9 Jul 2015 02:19:06 -0500
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <201507090622.43214.luke@dashjr.org>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<201507060424.57070.luke@dashjr.org>
	<CACq0ZD4PCSXMjZDXNS134ZWTSOaNGktKQd47q+6ncV-uRhS+YQ@mail.gmail.com>
	<201507090622.43214.luke@dashjr.org>
Message-ID: <CAAUFj13RnyCBc4gdro9M3+1DPm7rTyn1kzTbWADQsNZ2g2fhsw@mail.gmail.com>

FYI, looks like someone was trying to boost up a transaction tonight
and managed to get it pushed through.

parent: 4cc3e2b6407ae8cdc1fd62cb3235f9c92654277684da8970db19a0169e44c68c
child: 161b302d1af8b6eacf1140726b26c67fa72ecf4f7f7e6cd8d83ef492b8b490ea
gchld: 4f6821b50c046ae40d488aa18d88d41c9d0686daedf835b68b8c5086b73939fd
ggch: 0c159d19f6452f12512a4ec16868a3af00fe381a0913f4fc69b3fc14c4588aa9
gggch: 4e4f96c5ba416961be347ffc496e8ce12046191ab7fb252e88966ce365d2bc5f

though it's position in the block doesn't seem to be a priority / fee cut line.

From bip at mattwhitlock.name  Thu Jul  9 23:55:00 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 09 Jul 2015 19:55 -0400
Subject: [bitcoin-dev] Can we penalize peers who relay rejected replacement
	txs?
Message-ID: <1828256.77UID9hUjK@crushinator>

I'm presently running my full node with Peter Todd's full replace-by-fee patch set [1]. I am seeing a LOT of messages in the log about replacement transactions being rejected due to their paying less in fees than the transactions they would replace. I understand that this could happen legitimately from time to time, due to my node's receiving a replacing transaction prior to receiving the replaced transaction; however, due to the ongoing spam attack, I am seeing a steady stream of these rejection messages, dozens per second at times. I am wondering if each replacement rejection ought to penalize the peer who relayed the offending transaction, and if the penalty builds up enough, then the peer could be temporarily banned, similar to how other "misbehaving" peers are treated.

[1] https://github.com/petertodd/bitcoin/commits/replace-by-fee-v0.10.2

From raystonn at hotmail.com  Fri Jul 10 00:42:06 2015
From: raystonn at hotmail.com (Raystonn)
Date: Thu, 9 Jul 2015 17:42:06 -0700
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
 replacement	txs?
Message-ID: <COL402-EAS2113110B80C96BF64CF2843CD9F0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150709/64a11931/attachment.html>

From bip at mattwhitlock.name  Fri Jul 10 01:12:14 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 09 Jul 2015 21:12:14 -0400
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
	replacement	txs?
In-Reply-To: <COL402-EAS2113110B80C96BF64CF2843CD9F0@phx.gbl>
References: <COL402-EAS2113110B80C96BF64CF2843CD9F0@phx.gbl>
Message-ID: <37835036.6seh55XcbR@crushinator>

Um, it's called "replace-by-fee" for a reason. The transaction [set] paying the highest fee [rate] is always the one that will be accepted. You can't use the order in which transactions were received to determine which one is the "replacing" transaction and which is/are the "replaced" transaction(s) because order is not defined for transactions in the mempool. (Ordering transactions is precisely why we must have a block chain.)


On Thursday, 9 July 2015, at 5:42 pm, Raystonn wrote:
> It is a mistake for RBF to assume a transaction with lower fee is invalid.  If I paid a higher fee to get a one hour confirmation in the current congestion, I might want to drop back to a lower fee if I see the spam stop.
> 
> On 9 Jul 2015 4:55 pm, Matt Whitlock <bip at mattwhitlock.name> wrote:
> > I'm presently running my full node with Peter Todd's full replace-by-fee patch set [1]. I am seeing a LOT of messages in the log about replacement transactions being rejected due to their paying less in fees than the transactions they would replace. I understand that this could happen legitimately from time to time, due to my node's receiving a replacing transaction prior to receiving the replaced transaction; however, due to the ongoing spam attack, I am seeing a steady stream of these rejection messages, dozens per second at times. I am wondering if each replacement rejection ought to penalize the peer who relayed the offending transaction, and if the penalty builds up enough, then the peer could be temporarily banned, similar to how other "misbehaving" peers are treated.
> > 
> > [1] https://github.com/petertodd/bitcoin/commits/replace-by-fee-v0.10.2

From raystonn at hotmail.com  Fri Jul 10 01:18:28 2015
From: raystonn at hotmail.com (Raystonn)
Date: Thu, 9 Jul 2015 18:18:28 -0700
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
 replacement	txs?
Message-ID: <COL402-EAS356C3E85A74DACF0E33AE92CD9F0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150709/27c792da/attachment.html>

From bip at mattwhitlock.name  Fri Jul 10 01:36:38 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 09 Jul 2015 21:36:38 -0400
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
	replacement txs?
In-Reply-To: <CADPq5bkyhdGocJncJfG5xkes6Qx-oHyeAsw0CUugqdqJZeubSQ@mail.gmail.com>
References: <1828256.77UID9hUjK@crushinator>
	<CADPq5bkyhdGocJncJfG5xkes6Qx-oHyeAsw0CUugqdqJZeubSQ@mail.gmail.com>
Message-ID: <3260721.l4JVm1ozWG@crushinator>

My reasons for wanting this are two-fold:

1.) To reduce the CPU load due to Bitcoind. Presently I am seeing periods of time in which Bitcoind is pegging a CPU core. Given that the flood of spam transactions appears mostly to be invalid under RBF rules, I would like to cut off the flood coming into my node by temp-banning the peers who are relaying invalid replacement transactions.

2.) If enough other nodes also implement this banning rule, then we could potentially cut off the flood of spam right at the source. Then the spammer would be forced to build and publish *non-conflicting* transactions to continue the attack, and this would be much costlier to maintain, as then *all* of the spam transactions could eventually have their fees collected by miners, not just some non-conflicting subset of the spam.


On Thursday, 9 July 2015, at 6:27 pm, Patrick Strateman wrote:
> What do you gain by banning peers doing this?
> 
> I'm thinking practically nothing.
> 
> On Jul 9, 2015 4:55 PM, "Matt Whitlock" <bip at mattwhitlock.name> wrote:
> 
> > I'm presently running my full node with Peter Todd's full replace-by-fee
> > patch set [1]. I am seeing a LOT of messages in the log about replacement
> > transactions being rejected due to their paying less in fees than the
> > transactions they would replace. I understand that this could happen
> > legitimately from time to time, due to my node's receiving a replacing
> > transaction prior to receiving the replaced transaction; however, due to
> > the ongoing spam attack, I am seeing a steady stream of these rejection
> > messages, dozens per second at times. I am wondering if each replacement
> > rejection ought to penalize the peer who relayed the offending transaction,
> > and if the penalty builds up enough, then the peer could be temporarily
> > banned, similar to how other "misbehaving" peers are treated.
> >
> > [1] https://github.com/petertodd/bitcoin/commits/replace-by-fee-v0.10.2


From tomh at thinlink.com  Fri Jul 10 01:57:27 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 09 Jul 2015 18:57:27 -0700
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
 replacement txs?
In-Reply-To: <1828256.77UID9hUjK@crushinator>
References: <1828256.77UID9hUjK@crushinator>
Message-ID: <559F2687.9080003@thinlink.com>

Replace-by-anything can only work if conflicts are relayed, so the
solution is not to act against the peer.

Alex Morcos offered a suggestion on IRC -- track recently-rejected
txid's and don't getdata them.  The idea sounds good to me.


On 7/9/2015 4:55 PM, Matt Whitlock wrote:
> I'm presently running my full node with Peter Todd's full replace-by-fee patch set [1]. I am seeing a LOT of messages in the log about replacement transactions being rejected due to their paying less in fees than the transactions they would replace. I understand that this could happen legitimately from time to time, due to my node's receiving a replacing transaction prior to receiving the replaced transaction; however, due to the ongoing spam attack, I am seeing a steady stream of these rejection messages, dozens per second at times. I am wondering if each replacement rejection ought to penalize the peer who relayed the offending transaction, and if the penalty builds up enough, then the peer could be temporarily banned, similar to how other "misbehaving" peers are treated.
>
> [1] https://github.com/petertodd/bitcoin/commits/replace-by-fee-v0.10.2
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From bip at mattwhitlock.name  Fri Jul 10 02:00:45 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 09 Jul 2015 22:00:45 -0400
Subject: [bitcoin-dev] Can we penalize peers who relay rejected
	replacement txs?
In-Reply-To: <559F2687.9080003@thinlink.com>
References: <1828256.77UID9hUjK@crushinator> <559F2687.9080003@thinlink.com>
Message-ID: <4333528.v2Hyrgt8Il@crushinator>

On Thursday, 9 July 2015, at 6:57 pm, Tom Harding wrote:
> Replace-by-anything can only work if conflicts are relayed, so the
> solution is not to act against the peer.
> 
> Alex Morcos offered a suggestion on IRC -- track recently-rejected
> txid's and don't getdata them.  The idea sounds good to me.

While that's probably a good idea, it wouldn't do much to reduce the load. I am not seeing many repeated transaction hashes among the "rejected replacement" messages in my log.

From tomh at thinlink.com  Fri Jul 10 02:55:15 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 09 Jul 2015 19:55:15 -0700
Subject: [bitcoin-dev] A Proposed Compromise to the Block Size Limit
In-Reply-To: <CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
References: <COL402-EAS1148599DFFBB257C33F293ACDAB0@phx.gbl>	<CALqxMTHbeyyVAO9qXO4wrQo3sCh89gwMRS9BjiN+4iMs-bt5ow@mail.gmail.com>	<CAOoPuRarNoPwLxVqjJ_g4b6HsWJecB-oCdfEjaknKbUnKdnmEg@mail.gmail.com>	<CALqxMTGXcbES5Pwz3cWO+PQK5kmf3rZ_i00=b=PBnO678XuF0A@mail.gmail.com>	<COL131-DS8E3DCDBD1A0F359206781CDAB0@phx.gbl>	<CAOG=w-swydsyzHx7kWKCCWnrDT0kG=c+FTDmwFD3sjbA0i4TpA@mail.gmail.com>	<CABsx9T3PaBcYkXWyn=TmCROn61CGkEYD9qxob6hKGdD3sy-SyQ@mail.gmail.com>	<CALqxMTFv+nLo3phA2HS26F=r5+yGCOh=z8+Kub7GuC_bGVOfXg@mail.gmail.com>
	<CALqxMTG7+MMN50VH9-Y++B1_DeBXTBKpkeA5dYT1EbVGZ1aYag@mail.gmail.com>
Message-ID: <559F3413.6040307@thinlink.com>

>> On 6/28/2015 9:32 AM, Raystonn . wrote:
>>> Write coalescing works fine when you have multiple writes headed to
>>> the same (contiguous) location.  Will lightning be useful when we
>>> have more unique transactions being sent to different addresses, and
>>> not just multiple transactions between the same sender and address? 
>>> I have doubts. 

> On 6/28/2015 10:29 AM, Gavin Andresen wrote:
>> Don't get me wrong, I think the Lightning Network is a fantastic idea
>> and a great experiment and will likely be used for all sorts of great
>> payment innovations (micropayments for bandwidth maybe, or maybe
>> paying workers by the hour instead of at the end of the month). But I
>> don't think it is a scaling solution for the types of payments the
>> Bitcoin network is handling today.

On 6/28/2015 11:58 AM, Adam Back wrote:
> Lightning allows Bitcoin to scale even without a block-size increase,
> and therefore considerably impacts any calculation of how much
> block-size is required.  In this light you appear to have been
> attempting to push through a change without even understanding the
> alternatives or greater ecosystem.


Lightning Network (LN) does not "allow Bitcoin to scale".  LN is a
bitcoin application.  The properties of LN are dependent on bitcoin, but
they are distinct from bitcoin.

In particular, an under-appreciated aspect of LN is that in order for
your interactions to be consolidated and consume less blockchain space,
you must give up significant control of the money you send AND the money
you receive.

If either sender or receiver wants to record a transaction in the
blockchain immediately, there is no space savings versus bitcoin.  More
blockchain space is actually, used, due to LN overhead.

If both sender and receiver are willing to delay recording in the
blockchain, then the situation is analogous to using banks.  Sender's
hub pays from sender channel, to receiver channel at receiver's hub.

Neither side fully relinquishes custody of the money in their multisig
payment hub channels -- this is an improvement on traditional bank
accounts -- BUT...

  - Sender is required to lock funds under his hub's signature - this is
well discussed
  - Less well discussed: *to achieve any consolidation at all, receiver
must ALSO be willing to lock received funds under his hub's signature*

I'll put it another way.  LN only "solves" the scaling problem if
receiver's hub has pre-commited sufficient funds to cover the receipts,
AND if receiver endures for a period of time -- directly related to the
scaling factor -- being unable to spend money received UNLESS his
payment hub signs off on his spend instructions.



From me at ricmoo.com  Fri Jul 10 16:09:43 2015
From: me at ricmoo.com (Richard Moore)
Date: Fri, 10 Jul 2015 12:09:43 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
Message-ID: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>

Hey guys,

With all the recent congestion and discussion regarding FSS-RBF, I was wondering if there good reasons not to have CPFP as a default policy? Or is it?

I was also wondering, with CPFP, should the transaction fee be based on total transactions size, or the sum of each transaction?s required fee? For example, a third transaction C whose unconfirmed utxo from transaction B has an unconfirmed utxo in transaction A (all of A?s inputs are confirmed), with each A, B and C being ~300bytes, should C?s transaction fee be 0.0001 btc for the ~1kb it is about to commit to the blockchain, or 0.0003 btc for the 3 transactions it is going to commit.

I tried to test it out a few days ago, sending 0.0008 btc without any fee, then that utxo into another transaction w/ 0.0001 btc. It still hasn?t confirmed, which could be any of: a) CPFP doesn?t have enough hash power, b) the amounts are too small, c) the coins are too new, d) the fee should have actually been 0.0002 btc, e) the congestion is just too great; or some combination.

Just curious as whatnot?

Thanks,
RicMoo

.???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>

Richard Moore ~ Founder
Genetic Mistakes Software inc.
phone: (778) 882-6125
email: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>
www: http://GeneticMistakes.com <http://geneticmistakes.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/1dd11f95/attachment.html>

From jgarzik at gmail.com  Fri Jul 10 16:13:29 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 10 Jul 2015 12:13:29 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
Message-ID: <CADm_WcZkH9fZD23MH8m4wXEnqqjmMg1mPFjeME+uHbMgPNViEw@mail.gmail.com>

CPFP is interesting, but it does not fully cover the case it is trying to
address:   If TX_a goes out without sufficient fee, sending out a new TX_b
will not help TX_a suddenly reach nodes/miners that ignored TX_a.


On Fri, Jul 10, 2015 at 12:09 PM, Richard Moore <me at ricmoo.com> wrote:

> Hey guys,
>
> With all the recent congestion and discussion regarding FSS-RBF, I was
> wondering if there good reasons not to have CPFP as a default policy? Or is
> it?
>
> I was also wondering, with CPFP, should the transaction fee be based on
> total transactions size, or the sum of each transaction?s required fee? For
> example, a third transaction C whose unconfirmed utxo from transaction B
> has an unconfirmed utxo in transaction A (all of A?s inputs are confirmed),
> with each A, B and C being ~300bytes, should C?s transaction fee be 0.0001
> btc for the ~1kb it is about to commit to the blockchain, or 0.0003 btc for
> the 3 transactions it is going to commit.
>
> I tried to test it out a few days ago, sending 0.0008 btc without any fee,
> then that utxo into another transaction w/ 0.0001 btc. It still hasn?t
> confirmed, which could be any of: a) CPFP doesn?t have enough hash power,
> b) the amounts are too small, c) the coins are too new, d) the fee should
> have actually been 0.0002 btc, e) the congestion is just too great; or some
> combination.
>
> Just curious as whatnot?
>
> Thanks,
> RicMoo
>
> .???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>
>
> Richard Moore ~ Founder
> Genetic Mistakes Software inc.
> phone: (778) 882-6125
> email: ricmoo at geneticmistakes.com
> www: http://GeneticMistakes.com
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/5fb1e521/attachment.html>

From me at ricmoo.com  Fri Jul 10 16:25:20 2015
From: me at ricmoo.com (Richard Moore)
Date: Fri, 10 Jul 2015 12:25:20 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CADm_WcZkH9fZD23MH8m4wXEnqqjmMg1mPFjeME+uHbMgPNViEw@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CADm_WcZkH9fZD23MH8m4wXEnqqjmMg1mPFjeME+uHbMgPNViEw@mail.gmail.com>
Message-ID: <837A1D9C-FD4E-4DF7-BE6B-4C90EB07C0A7@ricmoo.com>

By ignored, do you mean the nodes/miners didn?t even include the low fee transaction in their memory pools, so would no longer have access to it? If a node decides to not include it in its memory pool for this reason, I guess it won?t send out any INV messages either?

Could the broadcaster of TX_b rebroadcast TX_a? Then I guess any node that did add it to its memory pool would realize it?s not new and not rebroadcast it to those who didn?t, so it won?t propagate? Although, after receiving the orphan transaction TX_b, it could re-(pay attention) to an INV with TX_a (for a short-ish time to prevent further DoS vectors)? Assuming the sender of TX_b has a copy of TX_a?


> On Jul 10, 2015, at 12:13 PM, Jeff Garzik <jgarzik at gmail.com> wrote:
> 
> CPFP is interesting, but it does not fully cover the case it is trying to address:   If TX_a goes out without sufficient fee, sending out a new TX_b will not help TX_a suddenly reach nodes/miners that ignored TX_a.
> 
> 
> On Fri, Jul 10, 2015 at 12:09 PM, Richard Moore <me at ricmoo.com <mailto:me at ricmoo.com>> wrote:
> Hey guys,
> 
> With all the recent congestion and discussion regarding FSS-RBF, I was wondering if there good reasons not to have CPFP as a default policy? Or is it?
> 
> I was also wondering, with CPFP, should the transaction fee be based on total transactions size, or the sum of each transaction?s required fee? For example, a third transaction C whose unconfirmed utxo from transaction B has an unconfirmed utxo in transaction A (all of A?s inputs are confirmed), with each A, B and C being ~300bytes, should C?s transaction fee be 0.0001 btc for the ~1kb it is about to commit to the blockchain, or 0.0003 btc for the 3 transactions it is going to commit.
> 
> I tried to test it out a few days ago, sending 0.0008 btc without any fee, then that utxo into another transaction w/ 0.0001 btc. It still hasn?t confirmed, which could be any of: a) CPFP doesn?t have enough hash power, b) the amounts are too small, c) the coins are too new, d) the fee should have actually been 0.0002 btc, e) the congestion is just too great; or some combination.
> 
> Just curious as whatnot?
> 
> Thanks,
> RicMoo
> 
> .???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>
> 
> Richard Moore ~ Founder
> Genetic Mistakes Software inc.
> phone: (778) 882-6125 <tel:%28778%29%20882-6125>
> email: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>
> www: http://GeneticMistakes.com <http://geneticmistakes.com/>
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 
> 

.???`?.??.???`?.??.???`?.??.???`?.??.???`?.?><(((?>

Richard Moore ~ Founder
Genetic Mistakes Software inc.
phone: (778) 882-6125
email: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>
www: http://GeneticMistakes.com <http://geneticmistakes.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/c2959632/attachment-0001.html>

From dkbryant at gmail.com  Fri Jul 10 16:26:22 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Fri, 10 Jul 2015 11:26:22 -0500
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <837A1D9C-FD4E-4DF7-BE6B-4C90EB07C0A7@ricmoo.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CADm_WcZkH9fZD23MH8m4wXEnqqjmMg1mPFjeME+uHbMgPNViEw@mail.gmail.com>
	<837A1D9C-FD4E-4DF7-BE6B-4C90EB07C0A7@ricmoo.com>
Message-ID: <CAAUFj11UvRKDCUr+pJty5dd-8UhnQOh1g62kUoO7KEq5yyM1pA@mail.gmail.com>

Some miners have voluntarily deployed CPFP.

I had a thread about it earlier this month where some other ideas got
tossed around.
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009304.html

The specific pull request to get it into the reference implementation
is still open based on a merge conflict
https://github.com/bitcoin/bitcoin/pull/1647

Peter Todd has another thread on RBF which you mentioned earlier
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005620.html

There is also a beautiful example of CPFP in action from Eligius in
this transaction:
https://blockchain.info/tx/4cc3e2b6407ae8cdc1fd62cb3235f9c92654277684da8970db19a0169e44c68c

Follow the spent outputs and you will see the person is trying to
incentive the transaction by upping the fees of dependent
transactions.  It set in the mempool until Eligius won a block, then
it made it into the chain.  CPFP still works, but only in an Eligius
block (that I can see).  So it's better than nothing.

From tier.nolan at gmail.com  Fri Jul 10 16:28:02 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 10 Jul 2015 17:28:02 +0100
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
Message-ID: <CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>

On Fri, Jul 10, 2015 at 5:09 PM, Richard Moore <me at ricmoo.com> wrote:

> I was also wondering, with CPFP, should the transaction fee be based on
> total transactions size, or the sum of each transaction?s required fee? For
> example, a third transaction C whose unconfirmed utxo from transaction B
> has an unconfirmed utxo in transaction A (all of A?s inputs are confirmed),
> with each A, B and C being ~300bytes, should C?s transaction fee be 0.0001
> btc for the ~1kb it is about to commit to the blockchain, or 0.0003 btc for
> the 3 transactions it is going to commit.
>

It should be whatever gives the highest fee.  In effect, child pays for
parent creates compound transactions.

A: 250 bytes, 0 fee
B: 300 bytes: 0.0005 fee
C: 400 bytes: 0.0001 fee

There are 3 combinations to consider

A: 0 fee for 250 bytes = 0 per byte
A&B: 0.0005 fee for 550 bytes = 0.91 uBTC per byte
A&B&C: 0.0006 fee for 950 bytes = 0.63uBTC per byte

This means that the A&B combination has the best fee per byte value.  A&B
should be added to the memory pool (if 0.91 uBTC per byte is above the
threshold).

Once A&B are added, then C can be reconsidered on its own.

C: 0.0001 for 400 bytes = 0.25 BTC per byte

If that is above the threshold, then C should be added.

In practice, it isn't possible to check every combination.  If there are N
transactions, then checking all triple combinations costs around N cubed.

A 2 pass system could get a reasonably efficient result.

B is 0.0005 fee for 300 bytes = 1.67 uBTC per byte and is assumed to be a
high value transaction.

The algorithm would be

Pass 1:
Process all transactions in order of BTC per byte, until block is full
    If the transaction's parents are either already in the pool or a
previous block, add the transaction.

Pass 1:
Process all non-included transactions in order of BTC per byte, until block
is full
    If the transaction's parents are either already in the pool or a
previous block, add the transaction.

    Otherwise, consider the transaction plus all non-included ancestors as
a single transaction
        If this combined transaction has a higher BTC per byte than the
lowest transaction(s),
            add the combined transaction
            drop the other transaction(s)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/68d6acca/attachment.html>

From jgarzik at gmail.com  Fri Jul 10 16:31:01 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 10 Jul 2015 12:31:01 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
Message-ID: <CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>

This is a good explanation but it does not address reachability.  TX_a, the
first tx sent out on the network, presumably has insufficient fee to get
mined - which also means it did not necessarily even reach all miners.

Simply sending out TX_b with added fee does not guarantee that nodes
suddenly have TX_a, which they may have ignored/dropped before.



On Fri, Jul 10, 2015 at 12:28 PM, Tier Nolan <tier.nolan at gmail.com> wrote:

>
>
> On Fri, Jul 10, 2015 at 5:09 PM, Richard Moore <me at ricmoo.com> wrote:
>
>> I was also wondering, with CPFP, should the transaction fee be based on
>> total transactions size, or the sum of each transaction?s required fee? For
>> example, a third transaction C whose unconfirmed utxo from transaction B
>> has an unconfirmed utxo in transaction A (all of A?s inputs are confirmed),
>> with each A, B and C being ~300bytes, should C?s transaction fee be 0.0001
>> btc for the ~1kb it is about to commit to the blockchain, or 0.0003 btc for
>> the 3 transactions it is going to commit.
>>
>
> It should be whatever gives the highest fee.  In effect, child pays for
> parent creates compound transactions.
>
> A: 250 bytes, 0 fee
> B: 300 bytes: 0.0005 fee
> C: 400 bytes: 0.0001 fee
>
> There are 3 combinations to consider
>
> A: 0 fee for 250 bytes = 0 per byte
> A&B: 0.0005 fee for 550 bytes = 0.91 uBTC per byte
> A&B&C: 0.0006 fee for 950 bytes = 0.63uBTC per byte
>
> This means that the A&B combination has the best fee per byte value.  A&B
> should be added to the memory pool (if 0.91 uBTC per byte is above the
> threshold).
>
> Once A&B are added, then C can be reconsidered on its own.
>
> C: 0.0001 for 400 bytes = 0.25 BTC per byte
>
> If that is above the threshold, then C should be added.
>
> In practice, it isn't possible to check every combination.  If there are N
> transactions, then checking all triple combinations costs around N cubed.
>
> A 2 pass system could get a reasonably efficient result.
>
> B is 0.0005 fee for 300 bytes = 1.67 uBTC per byte and is assumed to be a
> high value transaction.
>
> The algorithm would be
>
> Pass 1:
> Process all transactions in order of BTC per byte, until block is full
>     If the transaction's parents are either already in the pool or a
> previous block, add the transaction.
>
> Pass 1:
> Process all non-included transactions in order of BTC per byte, until
> block is full
>     If the transaction's parents are either already in the pool or a
> previous block, add the transaction.
>
>     Otherwise, consider the transaction plus all non-included ancestors as
> a single transaction
>         If this combined transaction has a higher BTC per byte than the
> lowest transaction(s),
>             add the combined transaction
>             drop the other transaction(s)
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/24c24be6/attachment.html>

From justus at openbitcoinprivacyproject.org  Fri Jul 10 17:02:43 2015
From: justus at openbitcoinprivacyproject.org (Justus Ranvier)
Date: Fri, 10 Jul 2015 12:02:43 -0500
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
	<CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
Message-ID: <559FFAB3.2010309@openbitcoinprivacyproject.org>

On 07/10/2015 11:31 AM, Jeff Garzik wrote:
> This is a good explanation but it does not address reachability.  TX_a, the
> first tx sent out on the network, presumably has insufficient fee to get
> mined - which also means it did not necessarily even reach all miners.
> 
> Simply sending out TX_b with added fee does not guarantee that nodes
> suddenly have TX_a, which they may have ignored/dropped before.

I'm not sure why that's actually a problem.

CPFP is initiated by the recipient of the parent transaction, and so if
the recipient is creating this transaction in the first place they must
have a copy of the parent transaction which can/should broadcast at the
same time.

If the child reaches a CPFP miner, then presumably the parents made it
as well (any path between the sender and the miner that doesn't relay
the parent should reject the child as trying to spend non-existent
coins), so both of the transactions can be mined at the same time.

-- 
Justus Ranvier
Open Bitcoin Privacy Project
http://www.openbitcoinprivacyproject.org/
justus at openbitcoinprivacyproject.org
E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0xEAD9E623.asc
Type: application/pgp-keys
Size: 18381 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/9318baa9/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/9318baa9/attachment-0001.sig>

From dkbryant at gmail.com  Fri Jul 10 17:16:40 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Fri, 10 Jul 2015 12:16:40 -0500
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <559FFAB3.2010309@openbitcoinprivacyproject.org>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
	<CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
	<559FFAB3.2010309@openbitcoinprivacyproject.org>
Message-ID: <CAAUFj11p780PzYu+b_haAU6UDdrsfsDZ6cA_DWrHmQ==RsAE=w@mail.gmail.com>

On Fri, Jul 10, 2015 at 11:31 AM, Jeff Garzik <jgarzik at gmail.com> wrote:
> This is a good explanation but it does not address reachability.  TX_a, the
> first tx sent out on the network, presumably has insufficient fee to get
> mined - which also means it did not necessarily even reach all miners.
>
> Simply sending out TX_b with added fee does not guarantee that nodes
> suddenly have TX_a, which they may have ignored/dropped before.

True... there are two propagation thresholds... "-minrelaytxfee"
(defaults to 1000 sotoshi/kbyte) and "relaypriority" (defaults to
True).  If -relaypriority is True, then items with a priority above
57600000 (currently <ref1>) will still be relayed, even if their TxFee
is below MinRelayTxFee.

Therefore even if miners are using bitcoind rules for mempool tx
creation, they can still configure how and what they propagate.

The flip-side of this is that a transactions priority will go up the
longer it ages (in the mempool).  So it would be possible (if
relaypriority was on) for even a lowfee transaction to become
relayable eventually simply based on relaypriority

ref1: https://en.bitcoin.it/wiki/Transaction_fees

On Fri, Jul 10, 2015 at 12:02 PM, Justus Ranvier
<justus at openbitcoinprivacyproject.org> wrote:
> CPFP is initiated by the recipient of the parent transaction, and so if
> the recipient is creating this transaction in the first place they must
> have a copy of the parent transaction which can/should broadcast at the
> same time.
>
> If the child reaches a CPFP miner, then presumably the parents made it
> as well (any path between the sender and the miner that doesn't relay
> the parent should reject the child as trying to spend non-existent
> coins), so both of the transactions can be mined at the same time.

If the recipient is running a full node with incoming connections.
I'm not sure if SPV clients rebroadcast both spend and receive
transactions.

From tier.nolan at gmail.com  Fri Jul 10 17:28:14 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 10 Jul 2015 18:28:14 +0100
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
	<CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
Message-ID: <CAE-z3OWvrhXzE907Ano+KPV28obDL3PdFCUCs7KzD09qNsFfAw@mail.gmail.com>

On Fri, Jul 10, 2015 at 5:31 PM, Jeff Garzik <jgarzik at gmail.com> wrote:

> This is a good explanation but it does not address reachability.  TX_a,
> the first tx sent out on the network, presumably has insufficient fee to
> get mined - which also means it did not necessarily even reach all miners.
>
> Simply sending out TX_b with added fee does not guarantee that nodes
> suddenly have TX_a, which they may have ignored/dropped before.
>

When the peer adds both parent and child to the memory pool, it should
forward both of them.

CPFP inherently requires that nodes keep transactions that they have
rejected due to low fees.

If peers requested parents, then it would be possible to forward them
onwards.

If a node receives a high-fee transaction and doesn't have the parent, it
could request the parent.

Spam protection could be handled by banning nodes which send lots of
"children" and then never having the parent to the transaction.

The rule would be that forwarding a transaction means that you have all its
parents back to transactions contained in blocks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/cb1110a8/attachment.html>

From morcos at gmail.com  Fri Jul 10 17:51:00 2015
From: morcos at gmail.com (Alex Morcos)
Date: Fri, 10 Jul 2015 13:51:00 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <559FFAB3.2010309@openbitcoinprivacyproject.org>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
	<CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
	<559FFAB3.2010309@openbitcoinprivacyproject.org>
Message-ID: <CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>

I think the biggest problem with merging CPFP right now is that at least in
its current implementation it is not efficient enough in certain
situations,.

On Fri, Jul 10, 2015 at 1:02 PM, Justus Ranvier <
justus at openbitcoinprivacyproject.org> wrote:

> On 07/10/2015 11:31 AM, Jeff Garzik wrote:
> > This is a good explanation but it does not address reachability.  TX_a,
> the
> > first tx sent out on the network, presumably has insufficient fee to get
> > mined - which also means it did not necessarily even reach all miners.
> >
> > Simply sending out TX_b with added fee does not guarantee that nodes
> > suddenly have TX_a, which they may have ignored/dropped before.
>
> I'm not sure why that's actually a problem.
>
> CPFP is initiated by the recipient of the parent transaction, and so if
> the recipient is creating this transaction in the first place they must
> have a copy of the parent transaction which can/should broadcast at the
> same time.
>
> If the child reaches a CPFP miner, then presumably the parents made it
> as well (any path between the sender and the miner that doesn't relay
> the parent should reject the child as trying to spend non-existent
> coins), so both of the transactions can be mined at the same time.
>
> --
> Justus Ranvier
> Open Bitcoin Privacy Project
> http://www.openbitcoinprivacyproject.org/
> justus at openbitcoinprivacyproject.org
> E7AD 8215 8497 3673 6D9E 61C4 2A5F DA70 EAD9 E623
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/4b36fab9/attachment.html>

From tier.nolan at gmail.com  Fri Jul 10 19:39:14 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 10 Jul 2015 20:39:14 +0100
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAE-z3OV+-18VLbOfWzDnE5HWJ4436HGtC_qDFFVkFQTGyjGOVw@mail.gmail.com>
	<CADm_WcYQLzqQLY-Dspd1jUtF9Z=_721TReoc_eKYk5JCQ4fejg@mail.gmail.com>
	<559FFAB3.2010309@openbitcoinprivacyproject.org>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
Message-ID: <CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>

It depends on what kind of inefficiency.  Inefficient could mean that it
uses a lot of CPU power.

If it gets a good solution rather than the best solution, it is still worth
having.

On Fri, Jul 10, 2015 at 6:51 PM, Alex Morcos <morcos at gmail.com> wrote:

> I think the biggest problem with merging CPFP right now is that at least
> in its current implementation it is not efficient enough in certain
> situations,.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150710/5fa8f160/attachment.html>

From luke at dashjr.org  Fri Jul 10 21:10:32 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Fri, 10 Jul 2015 21:10:32 +0000
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
Message-ID: <201507102110.33706.luke@dashjr.org>

AFAIK the only thing holding it up is lack of unit tests. If anyone would like 
to implement those, I expect it'd be merged fairly soon. Then the problem is, 
as Jeff mentioned, getting the parent transactions relayed despite failing 
relay policy on their own.

Luke

From nathan at leastauthority.com  Sat Jul 11 08:05:25 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Sat, 11 Jul 2015 01:05:25 -0700
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
Message-ID: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>

Thesis: The disincentive miners have for verifying transactions is
problematic and weakens the network's robustness against forks.

According to the 2015-07-04 bitcoin.org alert [1]_ so-called "SPV Mining"
has become popular across a large portion of miners, and this enabled the
consensus-violating forks to persist. Peter Todd provides an explanation
of the incentive for SPV Mining over in another thread [2]_.

.. [1] https://bitcoin.org/en/alert/2015-07-04-spv-mining#cause

.. [2]
https://www.mail-archive.com/bitcoin-dev at lists.linuxfoundation.org/msg00404.html

If there is a cost to verifying transactions in a received block, then
there is an incentive to *not verify transactions*.  However, this is
balanced by the a risk of mining atop an invalid block.

If we imagine all miners verify all transactions, except Charlie the
Cheapskate, then it's in Charlie's interest to forego transaction
verification.  If all miners make a similar wager, then in the extreme,
no miners verify any transactions, and the expected cost of skipping
transaction verification becomes very high.

Unfortunately, it's difficult to measure how many miners are not
validating transactions, since there's no evidence of this until they
mine atop on invalid block. Because of this, I worry that over time,
more and more miners cut this particular corner, to save on costs.

If true, then the network continues to grow more brittle towards the kind
of forking-persistence behavior we saw from the July 4th (and 5th) forks.

This gets weird.  For example, a malicious miner which suspects a large
fraction of miners are neglecting transaction verification may choose to
forego a block reward by throwing an erroneous transaction into their
winning block, then, as all the "SPV Miners" run off along a worthless
chain, they can reap a higher reward rate due to controlling a larger
network capacity fraction on the valid chain.

Can we fix this?

--
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan

Standard Disclaimer: I'm behind on dev archives, irc logs, bitcointalk,
the wiki...  if this has been discussed before I appreciate mentions of
that fact.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/1d90f07c/attachment-0001.html>

From jtimon at jtimon.cc  Sat Jul 11 09:24:48 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 11 Jul 2015 11:24:48 +0200
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
Message-ID: <CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>

All miners should validate transactions precisely because of the latest
attack you've described. Full miners can gain a lot from this attack to
leverage their full validation against spv miners who blindly spend energy
hashing on top of something that may be worthless crap. SPV mining makes no
sense, but some miners claim they're doind it for very short periods of
time, which shouldn't be as bad as doing it all the time.

I think it would be more rational for them to keep mining on top of the old
block until they've fully validated the new block (which shouldn't take so
long anyway), even if this slightly increases the orphan rate.
On Jul 11, 2015 10:05 AM, "Nathan Wilcox" <nathan at leastauthority.com> wrote:

> Thesis: The disincentive miners have for verifying transactions is
> problematic and weakens the network's robustness against forks.
>
> According to the 2015-07-04 bitcoin.org alert [1]_ so-called "SPV Mining"
> has become popular across a large portion of miners, and this enabled the
> consensus-violating forks to persist. Peter Todd provides an explanation
> of the incentive for SPV Mining over in another thread [2]_.
>
> .. [1] https://bitcoin.org/en/alert/2015-07-04-spv-mining#cause
>
> .. [2]
> https://www.mail-archive.com/bitcoin-dev at lists.linuxfoundation.org/msg00404.html
>
> If there is a cost to verifying transactions in a received block, then
> there is an incentive to *not verify transactions*.  However, this is
> balanced by the a risk of mining atop an invalid block.
>
> If we imagine all miners verify all transactions, except Charlie the
> Cheapskate, then it's in Charlie's interest to forego transaction
> verification.  If all miners make a similar wager, then in the extreme,
> no miners verify any transactions, and the expected cost of skipping
> transaction verification becomes very high.
>
> Unfortunately, it's difficult to measure how many miners are not
> validating transactions, since there's no evidence of this until they
> mine atop on invalid block. Because of this, I worry that over time,
> more and more miners cut this particular corner, to save on costs.
>
> If true, then the network continues to grow more brittle towards the kind
> of forking-persistence behavior we saw from the July 4th (and 5th) forks.
>
> This gets weird.  For example, a malicious miner which suspects a large
> fraction of miners are neglecting transaction verification may choose to
> forego a block reward by throwing an erroneous transaction into their
> winning block, then, as all the "SPV Miners" run off along a worthless
> chain, they can reap a higher reward rate due to controlling a larger
> network capacity fraction on the valid chain.
>
> Can we fix this?
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
>
> Standard Disclaimer: I'm behind on dev archives, irc logs, bitcointalk,
> the wiki...  if this has been discussed before I appreciate mentions of
> that fact.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/2515cb25/attachment.html>

From tier.nolan at gmail.com  Sat Jul 11 10:39:38 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 11 Jul 2015 11:39:38 +0100
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
Message-ID: <CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>

On Sat, Jul 11, 2015 at 10:24 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

> I think it would be more rational for them to keep mining on top of the
> old block until they've fully validated the new block (which shouldn't take
> so long anyway), even if this slightly increases the orphan rate.


Increased orphan rate means that the network is (slightly) less secure.

If miners have a 5% orphan rate, then an attacker can launch a 51% attack
with 49% of the network.

It isn't a massive difference, but it is there.

As long as miners switch back to non-SPV mining after a timeout, SPV-mining
is safe for everyone.

The average cost to the miner from building on an invalid block is small,
as long as invalid blocks only happen rarely.

Miners still have an incentive to do full validation, so that they can
include transactions and get transaction fees.

SPV-mining is to prevent hashing hardware from having to waste power when
it isn't needed.

It may be less of a problem if (when?) electricity costs dominate hardware
capital costs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/eda24489/attachment.html>

From nathan at leastauthority.com  Sat Jul 11 12:09:16 2015
From: nathan at leastauthority.com (Nathan Wilcox)
Date: Sat, 11 Jul 2015 05:09:16 -0700
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
Message-ID: <CAFdHNGj8BXAazAtHZsPe0qwxjRaxn6fQ4G-==bLCqwp+QH09Kg@mail.gmail.com>

On Sat, Jul 11, 2015 at 2:24 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> All miners should validate transactions precisely because of the latest
attack you've described.

The problem is one of individual incentives leading to a systemic problem.
"All X should do..." solutions which are oblivious to individual incentives
don't scale, eg: "If all factories avoid emitting pollution they don't pay
for..." does not work if individual factories save their own costs by
dumping into the environment.  No one wants environmental catastrophe, and
no one wants a blockchain where miners don't validate transactions, but
there may be a systemic problem of incentives.

The bitcoin.org claim that "about half" of miner capacity does SPV Mining,
is consistent with the incentives problem as I described it.  However, I
don't claim the state of mining is certainly due to these incentives and
not other incentives we haven't discussed.  Also, there may be other
incentives that outweigh this issue.


On Sat, Jul 11, 2015 at 3:39 AM, Tier Nolan <tier.nolan at gmail.com> wrote:

>
>
> On Sat, Jul 11, 2015 at 10:24 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>
>> I think it would be more rational for them to keep mining on top of the
>> old block until they've fully validated the new block (which shouldn't take
>> so long anyway), even if this slightly increases the orphan rate.
>
>
> Increased orphan rate means that the network is (slightly) less secure.
>
> If miners have a 5% orphan rate, then an attacker can launch a 51% attack
> with 49% of the network.
>
> It isn't a massive difference, but it is there.
>
> As long as miners switch back to non-SPV mining after a timeout,
> SPV-mining is safe for everyone.
>
>
If there's any cost to non-SPV mining, and the chance that an incoming
block contains only valid transactions is very high, isn't there still an
incentive to make this timeout longer and longer?


The average cost to the miner from building on an invalid block is small,
> as long as invalid blocks only happen rarely.
>
>
Yes. If it's rare enough, then skipping transaction validation saves more
cost than the expected cost of mining atop an invalid block.  ... but if
everyone follows that logic, the chance is no longer rare.



> Miners still have an incentive to do full validation, so that they can
> include transactions and get transaction fees.
>
>
This is a good point.  If the benefit to skipping verification outweighs
expected transaction costs, then a non-validating miner might also choose
to mine empty blocks with only their coinbase.  (I recall hearing this
occurred somewhat regularly around 2013, but I haven't paid attention since
then.  How common are empty blocks these days?)

This is a benefit of the world where transaction fees approach or surpass
block reward.


SPV-mining is to prevent hashing hardware from having to waste power when
> it isn't needed.
>
>
It may be less of a problem if (when?) electricity costs dominate hardware
> capital costs.
>

Oh.  This is a different explanation than Peter Todd's I linked to above,
which claimed it was network latency in receiving transactions.

Could you explain this a bit more?  What is not needed, the hashing
hardware or the power?  How does SPV Mining affect that?

I'll bet there are many individual rationales for SPV-Mining, but
ultimately they come down to dropping a cost based on a bet about other
miners' behavior.





>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>


-- 
Nathan Wilcox
Least Authoritarian

email: nathan at leastauthority.com
twitter: @least_nathan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/d25d7fea/attachment.html>

From tier.nolan at gmail.com  Sat Jul 11 13:17:53 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 11 Jul 2015 14:17:53 +0100
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAFdHNGj8BXAazAtHZsPe0qwxjRaxn6fQ4G-==bLCqwp+QH09Kg@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
	<CAFdHNGj8BXAazAtHZsPe0qwxjRaxn6fQ4G-==bLCqwp+QH09Kg@mail.gmail.com>
Message-ID: <CAE-z3OW8rOmnBOpK=mFdxK_sATNL-2TRhqzv=r0in3EzF4cGoA@mail.gmail.com>

On Sat, Jul 11, 2015 at 1:09 PM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

>
> If there's any cost to non-SPV mining, and the chance that an incoming
> block contains only valid transactions is very high, isn't there still an
> incentive to make this timeout longer and longer?
>

The benefit drops off pretty quickly as the timeout increases (and
eventually goes negative).

You could look at it that headers having 4 states.

1) Valid
2) Probably Valid
3) Probably Invalid
4) Invalid

SPV mining puts newly received headers into the "probably valid" category.

It builds empty (coinbase only) blocks on top of probably valid headers and
build empty blocks on the header.

Once it receives the full block, it can change the state to Valid.  At that
point, it can build full blocks on top of the header.

As time passes without the full block being received/validated, it becomes
less and less likely that the block is actually valid.

The timeout is to recognize that fact.  Making the timeout 24 hours is not
likely to give the miner much benefit over making it 1-2 minutes.

Setting the timeout to low means that the miner sometimes switches away
from a header that turns out to be valid.

Setting it to high means that the miner ends up staying to long on a header
that turns out to be invalid.

At some point, the second effect is stronger than the first effect.  The
timeout needs to be high enough so switching away from valid headers is
rare but low enough so that it doesn't stay on invalid headers for ages.

If 99% of full blocks are received (and validated) within 30 seconds of the
header arriving, then it is reasonable for the miner to assume that if the
full block hasn't arrived within 60 seconds of the header arriving, then
the header is for an invalid block.

Yes. If it's rare enough, then skipping transaction validation saves more
> cost than the expected cost of mining atop an invalid block.  ... but if
> everyone follows that logic, the chance is no longer rare.
>

SPV miners don't actually produce invalid blocks though (other than
building on invalid blocks).  The full blocks they produce are still fully
checked blocks.


> SPV-mining is to prevent hashing hardware from having to waste power when
>> it isn't needed.
>>
>>
> It may be less of a problem if (when?) electricity costs dominate hardware
>> capital costs.
>>
>
> Oh.  This is a different explanation than Peter Todd's I linked to above,
> which claimed it was network latency in receiving transactions.
>

SPV mining is mainly to protect against latency.  The reason that matters
is that latency means that hashers end up building on blocks even though a
new block has been found.

You can look at it as wasting hashing power due to latency.

In the world where minting fees are very low, there is no point in SPV
mining.

I assume at the point, the memory pool/queue is a few blocks deep.  This
means that the pool can create a full block without having to wait for new
transactions to be sent in.

It still needs to wait for the new full block before it knows which
transactions to remove from its memory pool.

Pools have to pay their hashers for hashing power.  When minting fees are
tiny, pools only get income only from tx fees.

There is no point in creating empty blocks, since they don't pay anything.

Between when the block is found and the pool has a new block ready to mine,
there is no incentive for the pool to give out new work.  The stratum
protocol could be modified so pools can say.  (It might already support
this)

<Send work to hashers>

-- block is found by some other pool --

<Cancel work for miners>

-- pool builds new block --

<Send new work to hashers>

The cancel command says that the pool will not accept any of the work that
has been made obsolete.

This gives a window of 20-30 seconds after each block where the pool has
invalidated the old work, but does not send new work.  Hashers' hardware
would be stalled.

On the other hand, the pool that found the block could create a new block
straight away.  There is an incentive for hashers to have a connection to
multiple pools.

Pools might go pure pay per share.  The protocol would say how much they
are willing to pay for a share and the local mining proxy would pick the
most profitable pool.  This eliminates pools having lots of ways of saying
how they charge fees, you just connect to lots of pools and go with the one
that pays the most.

More interestingly, the average fee per byte for transactions in the memory
pool is likely to increase as time passes since the last block.

When two blocks are found very fast one after another, the second block is
likely to have lower average fees.  This is because the first block would
have included most of the high value transactions and there wasn't enough
time for new ones to arrive before the second block was found.

Hashers would end up getting variable payouts based on how long since the
last block was received.  If some miners increase/decrease their output
based on the fees the pools offer, then as time passes since the last
block, the hashing rate would increase.  This reduces the variation in
block to block times.

For example, if there was 1.5MB of transactions in the memory pool and they
all paid the same fee per byte, then the block would be a full block at
that rate.  However, there would only be 0.5MB of transactions left.  This
means that the next block would be half full and only be able to pay out
50% of the fee, but the difficulty would be the same.  The pay per hash
would be 50% lower.  Once 0.5MB of new transactions arrive, the fee would
be back up to the same as the previous block.

If there are major SHA256 altcoins (or side chains), then miners might end
up switching between coins.  The longer a coin went without a new block
being found, the more tx fees available in the memory pool, so the more
hashing power would decide to switch to that coin.

There could be a situation where adding a few more transactions to the
memory pool of a coin would cause a 100X increasing in hashing until the
block was found and then it stalling again as the hashing power switches
away.  This is similar to alt coins getting blasted by coin switching pools
and then dropping to almost no power.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/08dc0f8c/attachment-0001.html>

From dave at hashingit.com  Sat Jul 11 15:04:47 2015
From: dave at hashingit.com (Dave Hudson)
Date: Sat, 11 Jul 2015 16:04:47 +0100
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAE-z3OW8rOmnBOpK=mFdxK_sATNL-2TRhqzv=r0in3EzF4cGoA@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
	<CAFdHNGj8BXAazAtHZsPe0qwxjRaxn6fQ4G-==bLCqwp+QH09Kg@mail.gmail.com>
	<CAE-z3OW8rOmnBOpK=mFdxK_sATNL-2TRhqzv=r0in3EzF4cGoA@mail.gmail.com>
Message-ID: <719E65A8-AC95-408C-8E00-FB06DCC6CDB1@hashingit.com>


> On 11 Jul 2015, at 14:17, Tier Nolan <tier.nolan at gmail.com> wrote:
> 
> On Sat, Jul 11, 2015 at 1:09 PM, Nathan Wilcox <nathan at leastauthority.com <mailto:nathan at leastauthority.com>> wrote:
> 
> If there's any cost to non-SPV mining, and the chance that an incoming block contains only valid transactions is very high, isn't there still an incentive to make this timeout longer and longer?
> 
> The benefit drops off pretty quickly as the timeout increases (and eventually goes negative).
> 
> Hashers would end up getting variable payouts based on how long since the last block was received.  If some miners increase/decrease their output based on the fees the pools offer, then as time passes since the last block, the hashing rate would increase.  This reduces the variation in block to block times.
> 
> For example, if there was 1.5MB of transactions in the memory pool and they all paid the same fee per byte, then the block would be a full block at that rate.  However, there would only be 0.5MB of transactions left.  This means that the next block would be half full and only be able to pay out 50% of the fee, but the difficulty would be the same.  The pay per hash would be 50% lower.  Once 0.5MB of new transactions arrive, the fee would be back up to the same as the previous block.

This would probably be worse. The 1 MB would include the highest fee transactions, leaving the lowest fees in the remaining 0.5 MB.

> If there are major SHA256 altcoins (or side chains), then miners might end up switching between coins.  The longer a coin went without a new block being found, the more tx fees available in the memory pool, so the more hashing power would decide to switch to that coin.
> 
> There could be a situation where adding a few more transactions to the memory pool of a coin would cause a 100X increasing in hashing until the block was found and then it stalling again as the hashing power switches away.  This is similar to alt coins getting blasted by coin switching pools and then dropping to almost no power.


If hashing isn't constantly applied all the time then the inter-block times will expand and the difficulty will reduce. This means that a pool that decides to use all of its available hashing 100% of the time now has a distinct advantage over those who are playing nicely. This is the same problem that the "proof of idle" idea had; it only works if no-one chooses to try to exploit it (which seems very unlikely).

One might ask why a pool might wish to try to exploit this, but let's assume we have a fees-only reward, so here's a quick thought experiment - the numbers are only approximate and would need a thorough simulation but serve for discussion:

Say, for the sake of argument that over a nominal 10 minute period we see 10 BTC worth of transaction fees. If the mempool is empty of interesting fees at the start of a block then we might like to imagine that rational miners will power down their hashing to save energy costs until the fees are worthwhile. Let's assume, for the sake of argument, that this nominally takes 5 minutes.

After 5 minutes we go from 0% to 100% as all hashing engines switch on. The difficulty will have corrected to mean that 100% of the work will nominally happen in the next 5 minutes, but that means that a malicious miner has a 2x amplification of their nominal hashing rate to do mischief in the preceding 5 minutes.

Such a malicious miner would choose to spend their 5 minutes re-mining the previous block, but dropping some amount of the transactions from it. Let's say that they try to re-mine only 9.5 BTC out the previous 10 BTC. If they succeed then they're offering everyone else an extra 0.5 BTC (5%) if they mine on top of their re-mined block and as an incentive to orphan the original block. Rational miners would definitely choose to build on the re-mined block because they get more reward from doing so.

Of course the extra hashing that our malicious miner is doing will actually push the difficulty back up somewhat, but they're still running at an advantage over the long-term. I've also ignored some of the other security implications of the hashing amplification effects (e.g. 25% of the hash rate can end up controlling 50% of the blocks in the scenario above).

An obvious objection to this scenario is that everyone would notice the malicious mining. Statistically, yes, the orphan rate would be much higher, but there's no guarantee that anyone could ever work out who was behind this. It's all too easy to create an "unknown" pool, or a series of "unknown" pools. Of course our malicious miner might choose to only target blocks that had particularly high fees associated with it, in which case the orphan rate might barely change.

The only way I can see that this wouldn't be the case would be if there were always useful fees available to mine immediately after a block is found. If block space is kept moderately scarce then immediately a block is found then everyone will keep mining and the incentives to try to deliberately orphan the last block are dramatically reduced.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/3208fd52/attachment.html>

From jgarzik at gmail.com  Sat Jul 11 15:34:54 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Sat, 11 Jul 2015 11:34:54 -0400
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
Message-ID: <CADm_WcbQcCtenoinvVCeeKz8Pdqju=tTNkm+NB91PLBTeA0nXQ@mail.gmail.com>

The miners with invalid blocks were punished with a loss of bitcoin
income...


On Sat, Jul 11, 2015 at 4:05 AM, Nathan Wilcox <nathan at leastauthority.com>
wrote:

> Thesis: The disincentive miners have for verifying transactions is
> problematic and weakens the network's robustness against forks.
>
> According to the 2015-07-04 bitcoin.org alert [1]_ so-called "SPV Mining"
> has become popular across a large portion of miners, and this enabled the
> consensus-violating forks to persist. Peter Todd provides an explanation
> of the incentive for SPV Mining over in another thread [2]_.
>
> .. [1] https://bitcoin.org/en/alert/2015-07-04-spv-mining#cause
>
> .. [2]
> https://www.mail-archive.com/bitcoin-dev at lists.linuxfoundation.org/msg00404.html
>
> If there is a cost to verifying transactions in a received block, then
> there is an incentive to *not verify transactions*.  However, this is
> balanced by the a risk of mining atop an invalid block.
>
> If we imagine all miners verify all transactions, except Charlie the
> Cheapskate, then it's in Charlie's interest to forego transaction
> verification.  If all miners make a similar wager, then in the extreme,
> no miners verify any transactions, and the expected cost of skipping
> transaction verification becomes very high.
>
> Unfortunately, it's difficult to measure how many miners are not
> validating transactions, since there's no evidence of this until they
> mine atop on invalid block. Because of this, I worry that over time,
> more and more miners cut this particular corner, to save on costs.
>
> If true, then the network continues to grow more brittle towards the kind
> of forking-persistence behavior we saw from the July 4th (and 5th) forks.
>
> This gets weird.  For example, a malicious miner which suspects a large
> fraction of miners are neglecting transaction verification may choose to
> forego a block reward by throwing an erroneous transaction into their
> winning block, then, as all the "SPV Miners" run off along a worthless
> chain, they can reap a higher reward rate due to controlling a larger
> network capacity fraction on the valid chain.
>
> Can we fix this?
>
> --
> Nathan Wilcox
> Least Authoritarian
>
> email: nathan at leastauthority.com
> twitter: @least_nathan
>
> Standard Disclaimer: I'm behind on dev archives, irc logs, bitcointalk,
> the wiki...  if this has been discussed before I appreciate mentions of
> that fact.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/29fc8b6d/attachment.html>

From tier.nolan at gmail.com  Sat Jul 11 16:26:30 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sat, 11 Jul 2015 17:26:30 +0100
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <719E65A8-AC95-408C-8E00-FB06DCC6CDB1@hashingit.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
	<CAFdHNGj8BXAazAtHZsPe0qwxjRaxn6fQ4G-==bLCqwp+QH09Kg@mail.gmail.com>
	<CAE-z3OW8rOmnBOpK=mFdxK_sATNL-2TRhqzv=r0in3EzF4cGoA@mail.gmail.com>
	<719E65A8-AC95-408C-8E00-FB06DCC6CDB1@hashingit.com>
Message-ID: <CAE-z3OVztaWW7RYLyHUF=JxqDoM+fWFQFcB7EhxZ=cDwKNwwJw@mail.gmail.com>

On Sat, Jul 11, 2015 at 4:04 PM, Dave Hudson <dave at hashingit.com> wrote:

> This would probably be worse. The 1 MB would include the highest fee
> transactions, leaving the lowest fees in the remaining 0.5 MB.
>

Right, in the example, I was assuming all transactions had the same fee per
byte.


> If hashing isn't constantly applied all the time then the inter-block
> times will expand and the difficulty will reduce. This means that a pool
> that decides to use all of its available hashing 100% of the time now has a
> distinct advantage over those who are playing nicely. This is the same
> problem that the "proof of idle" idea had; it only works if no-one chooses
> to try to exploit it (which seems very unlikely).
>

Uh, I don't think so.  Pools would offer a price per hash based on how much
tx fees that they can get at that moment.

Offering more than that would mean they make a loss on average.

Say, for the sake of argument that over a nominal 10 minute period we see
> 10 BTC worth of transaction fees. If the mempool is empty of interesting
> fees at the start of a block then we might like to imagine that rational
> miners will power down their hashing to save energy costs until the fees
> are worthwhile. Let's assume, for the sake of argument, that this nominally
> takes 5 minutes.
>

I think the hardware would be able to power down nearly instantly.
Granted, if they have generators or similar, they may not be able to do it
so fast.

Switching to an altcoin is pretty much instant though.


> After 5 minutes we go from 0% to 100% as all hashing engines switch on.
> The difficulty will have corrected to mean that 100% of the work will
> nominally happen in the next 5 minutes, but that means that a malicious
> miner has a 2x amplification of their nominal hashing rate to do mischief
> in the preceding 5 minutes.
>

I think you need to split it into hashers and pools, rather than miners.
Hashers have to pay electricity costs to keep their equipment running.
Powering down for 5 minutes is cheaper than using that hashing for other
things.

The ratio of capital costs and electricity determines which wins out.

In the example given, it would work out as something like this.

0 mins: pool offers 0
2 mins: pool offers 20% of average
4 mins: pool offers 40% of average
6 mins: pool offers 60% of average
8 mins: pool offers 80% of average
10 mins: pool offers 100% of average
12 mins: pool offers 120% of average
14 mins: pool offers 140% of average
...

This means that more and more miners will accept the offer as time passes.
If a miner was using solar power for their miners, then they might as well
run it for the full 10 mins, since it is pointless to leave the equipment
off.  With batteries they could shift some of their output to the more
profitable period.

Such a malicious miner would choose to spend their 5 minutes re-mining the
> previous block, but dropping some amount of the transactions from it. Let's
> say that they try to re-mine only 9.5 BTC out the previous 10 BTC. If they
> succeed then they're offering everyone else an extra 0.5 BTC (5%) if they
> mine on top of their re-mined block and as an incentive to orphan the
> original block. Rational miners would definitely choose to build on the
> re-mined block because they get more reward from doing so.
>

If they find that block, it will be a tie with the other block, but created
much later.  That means that nobody will build on the block they found.


> Of course the extra hashing that our malicious miner is doing will
> actually push the difficulty back up somewhat, but they're still running at
> an advantage over the long-term. I've also ignored some of the other
> security implications of the hashing amplification effects (e.g. 25% of the
> hash rate can end up controlling 50% of the blocks in the scenario above).
>
> I think mining strategy once minting fees are greatly reduced is an
interesting question.  We can't assume that miners are all going to build
on the tip.

In your example, you can bribe the miner of the next block by paying to
OP_TRUE.

A <- B <-C

Assume that C pays 1BTC in fees and the miner creates a new version of C
that pays 1.1BTC in fees.

C' pays 1.1 BTC in fees and also pays 0.05BTC to OP_TRUE.

This means that miners who build on C' instead of C get a 0.05BTC 'bribe'
to ignore the fact that C' was found much later.

It isn't clear if other miners would be better off building D anyway, since
they could take 100% of the fees.

If the average fees per block was 1BTC and someone send a block that pays
10BTC in fees, it could stall the block chain.  You can do the same bribery
trick.

If C has the 10BTC transaction, you can create a C' block and pay 1BTC to
OP_TRUE.  The miner who builds on C' include a transaction which pays that
money to him.

Another miner can produce C'' that pays 2BTC to OP_TRUE.


> The only way I can see that this wouldn't be the case would be if there
> were always useful fees available to mine immediately after a block is
> found. If block space is kept moderately scarce then immediately a block is
> found then everyone will keep mining and the incentives to try to
> deliberately orphan the last block are dramatically reduced.
>

True, if there is multiple blocks worth of transactions in the memory pool,
then losing one block's worth of transactions won't drop the total fees
down to zero.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/088faeb4/attachment-0001.html>

From michabailey at gmail.com  Sat Jul 11 20:28:27 2015
From: michabailey at gmail.com (Micha Bailey)
Date: Sat, 11 Jul 2015 23:28:27 +0300
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <201507102110.33706.luke@dashjr.org>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
	<201507102110.33706.luke@dashjr.org>
Message-ID: <CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>

Right. The issue (AIUI) is that, right now, even though transactions are
evaluated for inclusion as a group with CPFP, they're not yet evaluated for
relaying as a unit, nor can they be, because the current p2p protocol
doesn't have a way to send multiple transactions in a single protocol
message to signify that they should be evaluated together.

On Saturday, July 11, 2015, Luke Dashjr <luke at dashjr.org> wrote:

> AFAIK the only thing holding it up is lack of unit tests. If anyone would
> like
> to implement those, I expect it'd be merged fairly soon. Then the problem
> is,
> as Jeff mentioned, getting the parent transactions relayed despite failing
> relay policy on their own.
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <javascript:;>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/02eb77a2/attachment.html>

From dkbryant at gmail.com  Sat Jul 11 21:30:24 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Sat, 11 Jul 2015 16:30:24 -0500
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
	<201507102110.33706.luke@dashjr.org>
	<CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>
Message-ID: <CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>

I think a compromise will be somewhere in the middle.  I think most people
would be OK with TXs that don't have enough fees for P2P transfer to stay
in deadmans land.  Most people are stuck in a situation where they payed
enough to get it into (and keep it in) the pool, but not enough to get it
out.

If we could get CPFP that only worked on TXs that met the minimum threshold
for peer propagation, then I think we would be in much better position to
battle this spam flood.

On Sat, Jul 11, 2015 at 3:28 PM, Micha Bailey <michabailey at gmail.com> wrote:

> Right. The issue (AIUI) is that, right now, even though transactions are
> evaluated for inclusion as a group with CPFP, they're not yet evaluated for
> relaying as a unit, nor can they be, because the current p2p protocol
> doesn't have a way to send multiple transactions in a single protocol
> message to signify that they should be evaluated together.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/9ba24f71/attachment.html>

From jgarzik at gmail.com  Sat Jul 11 22:29:07 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Sat, 11 Jul 2015 17:29:07 -0500
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
	<201507102110.33706.luke@dashjr.org>
	<CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>
	<CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
Message-ID: <CADm_Wcaed61oWMGu_FVCeRUWOS6jfFvGwNGEwh9GymfrqgtQKQ@mail.gmail.com>

It sounds like you are seeking transaction expiration from the mempool, not
CPFP.



On Sat, Jul 11, 2015 at 4:30 PM, Dan Bryant <dkbryant at gmail.com> wrote:

> I think a compromise will be somewhere in the middle.  I think most people
> would be OK with TXs that don't have enough fees for P2P transfer to stay
> in deadmans land.  Most people are stuck in a situation where they payed
> enough to get it into (and keep it in) the pool, but not enough to get it
> out.
>
> If we could get CPFP that only worked on TXs that met the minimum
> threshold for peer propagation, then I think we would be in much better
> position to battle this spam flood.
>
> On Sat, Jul 11, 2015 at 3:28 PM, Micha Bailey <michabailey at gmail.com>
> wrote:
>
>> Right. The issue (AIUI) is that, right now, even though transactions are
>> evaluated for inclusion as a group with CPFP, they're not yet evaluated for
>> relaying as a unit, nor can they be, because the current p2p protocol
>> doesn't have a way to send multiple transactions in a single protocol
>> message to signify that they should be evaluated together.
>>
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150711/3180630b/attachment.html>

From tier.nolan at gmail.com  Sat Jul 11 23:19:14 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sun, 12 Jul 2015 00:19:14 +0100
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
	<201507102110.33706.luke@dashjr.org>
	<CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>
	<CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
Message-ID: <CAE-z3OVLF5whUL_HoP3i5B5mxB_KztBLJSB1dJ=dQ9+UDg55hg@mail.gmail.com>

On Sat, Jul 11, 2015 at 10:30 PM, Dan Bryant <dkbryant at gmail.com> wrote:

> I think a compromise will be somewhere in the middle.  I think most people
> would be OK with TXs that don't have enough fees for P2P transfer to stay
> in deadmans land.  Most people are stuck in a situation where they payed
> enough to get it into (and keep it in) the pool, but not enough to get it
> out.
>

Agreed.  A lot of the functionality could be achieved by a system that
works in most cases.  Even if 100 transaction chains aren't supported, 3-5
transaction chains would give a significant fraction of the desired
functionality.

At the moment, a transaction is only added into the memory pool if it meets
the relay threshold and spends transactions that are either in the memory
pool or in a block.

There is an orphan pool that can store up to 100 orphans.

The same could be done for child pays for parent.  A node could remember
the last 100 transactions (up to 5000 bytes) that were rejected from the
memory pool due to insufficient relay fees.

This allows nodes to send a chain of transactions in a row.  If the child
is sent last, then the parent(s) will be in the unrelayed transaction pool.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150712/ff0bec33/attachment.html>

From bip at mattwhitlock.name  Sun Jul 12 10:18:47 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Sun, 12 Jul 2015 06:18:47 -0400
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CADm_Wcaed61oWMGu_FVCeRUWOS6jfFvGwNGEwh9GymfrqgtQKQ@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
	<CADm_Wcaed61oWMGu_FVCeRUWOS6jfFvGwNGEwh9GymfrqgtQKQ@mail.gmail.com>
Message-ID: <4773632.c9JArRaIev@crushinator>

I keep seeing (on /r/bitcoin) mentions of a 24-hour or 48-hour (varying accounts) interval at which miners clear their mempools. Is this a matter of local policy or something Bitcoin Core does by design?


On Saturday, 11 July 2015, at 5:29 pm, Jeff Garzik wrote:
> It sounds like you are seeking transaction expiration from the mempool, not
> CPFP.
> 
> On Sat, Jul 11, 2015 at 4:30 PM, Dan Bryant <dkbryant at gmail.com> wrote:
> 
> > I think a compromise will be somewhere in the middle.  I think most people
> > would be OK with TXs that don't have enough fees for P2P transfer to stay
> > in deadmans land.  Most people are stuck in a situation where they payed
> > enough to get it into (and keep it in) the pool, but not enough to get it
> > out.
> >
> > If we could get CPFP that only worked on TXs that met the minimum
> > threshold for peer propagation, then I think we would be in much better
> > position to battle this spam flood.
> >
> > On Sat, Jul 11, 2015 at 3:28 PM, Micha Bailey <michabailey at gmail.com>
> > wrote:
> >
> >> Right. The issue (AIUI) is that, right now, even though transactions are
> >> evaluated for inclusion as a group with CPFP, they're not yet evaluated for
> >> relaying as a unit, nor can they be, because the current p2p protocol
> >> doesn't have a way to send multiple transactions in a single protocol
> >> message to signify that they should be evaluated together.


From laanwj at gmail.com  Sun Jul 12 15:49:12 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sun, 12 Jul 2015 17:49:12 +0200
Subject: [bitcoin-dev] Bitcoin Core 0.11.0 released
Message-ID: <20150712154910.GA21345@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Bitcoin Core version 0.11.0 is now available from:

  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>

This is a new major version release, bringing both new features and
bug fixes.

Please report bugs using the issue tracker at github:

  <https://github.com/bitcoin/bitcoin/issues>

The entire distribution is also available as torrent:

    magnet:?xt=urn:btih:82f0d2fa100d6db8a8c1338768dcb9e4e524da13&dn=bitcoin-core-0.11.0&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&ws=https%3A%2F%2Fbitcoin.org%2Fbin%2F

Upgrading and downgrading
=========================

How to Upgrade
- --------------

If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).

Downgrade warning
- ------------------

Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:

* Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.

* The block index database will now hold headers for which no block is
stored on disk, which earlier versions won't support.

If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.

This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.

Important information
======================

Transaction flooding
- ---------------------

At the time of this release, the P2P network is being flooded with low-fee
transactions. This causes a ballooning of the mempool size.

If this growth of the mempool causes problematic memory use on your node, it is
possible to change a few configuration options to work around this. The growth
of the mempool can be monitored with the RPC command `getmempoolinfo`.

One is to increase the minimum transaction relay fee `minrelaytxfee`, which
defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be
rejected, and thus fewer transactions entering the mempool.

The other is to restrict the relaying of free transactions with
`limitfreerelay`. This option sets the number of kB/minute at which
free transactions (with enough priority) will be accepted. It defaults to 15.
Reducing this number reduces the speed at which the mempool can grow due
to free transactions.

For example, add the following to `bitcoin.conf`:

    minrelaytxfee=0.00005 
    limitfreerelay=5

More robust solutions are being worked on for a follow-up release.

Notable changes
===============

Block file pruning
- ----------------------

This release supports running a fully validating node without maintaining a copy 
of the raw block and undo data on disk. To recap, there are four types of data 
related to the blockchain in the bitcoin system: the raw blocks as received over 
the network (blk???.dat), the undo data (rev???.dat), the block index and the 
UTXO set (both LevelDB databases). The databases are built from the raw data.

Block pruning allows Bitcoin Core to delete the raw block and undo data once 
it's been validated and used to build the databases. At that point, the raw data 
is used only to relay blocks to other nodes, to handle reorganizations, to look 
up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or 
for rescanning the wallet. The block index continues to hold the metadata about 
all blocks in the blockchain.

The user specifies how much space to allot for block & undo files. The minimum 
allowed is 550MB. Note that this is in addition to whatever is required for the 
block index and UTXO databases. The minimum was chosen so that Bitcoin Core will 
be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 
minutes per block). In rare instances it is possible that the amount of space 
used will exceed the pruning target in order to keep the required last 288 
blocks on disk.

Block pruning works during initial sync in the same way as during steady state, 
by deleting block files "as you go" whenever disk space is allocated. Thus, if 
the user specifies 550MB, once that level is reached the program will begin 
deleting the oldest block and undo files, while continuing to download the 
blockchain.

For now, block pruning disables block relay.  In the future, nodes with block 
pruning will at a minimum relay "new" blocks, meaning blocks that extend their 
active chain. 

Block pruning is currently incompatible with running a wallet due to the fact 
that block data is used for rescanning the wallet and importing keys or 
addresses (which require a rescan.) However, running the wallet with block 
pruning will be supported in the near future, subject to those limitations.

Block pruning is also incompatible with -txindex and will automatically disable 
it.

Once you have pruned blocks, going back to unpruned state requires 
re-downloading the entire blockchain. To do this, re-start the node with 
- -reindex. Note also that any problem that would cause a user to reindex (e.g., 
disk corruption) will cause a pruned node to redownload the entire blockchain. 
Finally, note that when a pruned node reindexes, it will delete any blk???.dat 
and rev???.dat files in the data directory prior to restarting the download.

To enable block pruning on the command line:

- - `-prune=N`: where N is the number of MB to allot for raw block & undo data.

Modified RPC calls:

- - `getblockchaininfo` now includes whether we are in pruned mode or not.
- - `getblock` will check if the block's data has been pruned and if so, return an 
error.
- - `getrawtransaction` will no longer be able to locate a transaction that has a 
UTXO but where its block file has been pruned. 

Pruning is disabled by default.

Big endian support
- --------------------

Experimental support for big-endian CPU architectures was added in this
release. All little-endian specific code was replaced with endian-neutral
constructs. This has been tested on at least MIPS and PPC hosts. The build
system will automatically detect the endianness of the target.

Memory usage optimization
- --------------------------

There have been many changes in this release to reduce the default memory usage
of a node, among which:

- - Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`
  precise where this grossly underestimated memory usage before
- - Reduce size of per-peer data structure (#6064 and others); this increases the
  number of connections that can be supported with the same amount of memory
- - Reduce the number of threads (#5964, #5679); lowers the amount of (esp.
  virtual) memory needed

Fee estimation changes
- ----------------------

This release improves the algorithm used for fee estimation.  Previously, -1
was returned when there was insufficient data to give an estimate.  Now, -1
will also be returned when there is no fee or priority high enough for the
desired confirmation target. In those cases, it can help to ask for an estimate
for a higher target number of blocks. It is not uncommon for there to be no
fee or priority high enough to be reliably (85%) included in the next block and
for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.

Privacy: Disable wallet transaction broadcast
- ----------------------------------------------

This release adds an option `-walletbroadcast=0` to prevent automatic
transaction broadcast and rebroadcast (#5951). This option allows separating
transaction submission from the node functionality.

Making use of this, third-party scripts can be written to take care of
transaction (re)broadcast:

- - Send the transaction as normal, either through RPC or the GUI
- - Retrieve the transaction data through RPC using `gettransaction` (NOT
  `getrawtransaction`). The `hex` field of the result will contain the raw
  hexadecimal representation of the transaction
- - The transaction can then be broadcasted through arbitrary mechanisms
  supported by the script

One such application is selective Tor usage, where the node runs on the normal
internet but transactions are broadcasted over Tor.

For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).

Privacy: Stream isolation for Tor
- ----------------------------------

This release adds functionality to create a new circuit for every peer
connection, when the software is used with Tor. The new option,
`-proxyrandomize`, is on by default.

When enabled, every outgoing connection will (potentially) go through a
different exit node. That significantly reduces the chance to get unlucky and
pick a single exit node that is either malicious, or widely banned from the P2P
network. This improves connection reliability as well as privacy, especially
for the initial connections.

**Important note:** If a non-Tor SOCKS5 proxy is configured that supports
authentication, but doesn't require it, this change may cause that proxy to reject
connections. A user and password is sent where they weren't before. This setup
is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to
disable the behavior.

0.11.0 Change log
=================

Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.

### RPC and REST
- - #5461 `5f7279a` signrawtransaction: validate private key
- - #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>
- - #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call
- - #5476 `c986972` Add time offset into getpeerinfo output
- - #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo
- - #5599 `40e96a3` Get rid of the internal miner's hashmeter
- - #5711 `87ecfb0` Push down RPC locks
- - #5754 `1c4e3f9` fix getblocktemplate lock issue
- - #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block
- - #5548 `d48ce48` Add /rest/chaininfos
- - #5992 `4c4f1b4` Push down RPC reqWallet flag
- - #6036 `585b5db` Show zero value txouts in listunspent
- - #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks
- - #5418 `16341cc` Report missing inputs in sendrawtransaction
- - #5937 `40f5e8d` show script verification errors in signrawtransaction result
- - #5420 `1fd2d39` getutxos REST command (based on Bip64)
- - #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints
- - #6226 `5901596` json: fail read_string if string contains trailing garbage

### Configuration and command-line options
- - #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)
- - #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures
- - #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)
- - #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)
- - #5863 `c271304` Add autoprune functionality (`-prune=<size>`)
- - #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set
- - #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system

### Block and transaction handling
- - #5367 `dcc1304` Do all block index writes in a batch
- - #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool
- - #5459 `4406c3e` Reject headers that build on an invalid parent
- - #5481 `055f3ae` Apply AreSane() checks to the fees from the network
- - #5580 `40d65eb` Preemptively catch a few potential bugs
- - #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree
- - #5564 `a89b837` clarify obscure uses of EvalScript()
- - #5521 `8e4578a` Reject non-final txs even in testnet/regtest
- - #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys
- - #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes
- - #5710 `175d86e` Add more information to errors in ReadBlockFromDisk
- - #5948 `b36f1ce` Use GetAncestor to compute new target
- - #5959 `a0bfc69` Add additional block index consistency checks
- - #6058 `7e0e7f8` autoprune minor post-merge improvements
- - #5159 `2cc1372` New fee estimation code
- - #6102 `6fb90d8` Implement accurate UTXO cache size accounting
- - #6129 `2a82298` Bug fix for clearing fCheckForPruning
- - #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain
- - #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting
- - #5985 `37b4e42` Fix removing of orphan transactions
- - #6221 `6cb70ca` Prune: Support noncontiguous block files
- - #6256 `fce474c` Use best header chain timestamps to detect partitioning
- - #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive

### P2P protocol and network code
- - #5507 `844ace9` Prevent DOS attacks on in-flight data structures
- - #5770 `32a8b6a` Sanitize command strings before logging them
- - #5859 `dd4ffce` Add correct bool combiner for net signals
- - #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK
- - #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo
- - #5662 `5048465` Change download logic to allow calling getdata on inbound peers
- - #5971 `18d2832` replace absolute sleep with conditional wait
- - #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests
- - #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds
- - #6080 `31c0bf1` Add jonasschnellis dns seeder
- - #5976 `9f7809f` Reduce download timeouts as blocks arrive
- - #6172 `b4bbad1` Ignore getheaders requests when not synced
- - #5875 `304892f` Be stricter in processing unrequested blocks
- - #6333 `41bbc85` Hardcoded seeds update June 2015

### Validation
- - #5143 `48e1765` Implement BIP62 rule 6
- - #5713 `41e6e4c` Implement BIP66

### Build system
- - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms
- - #5334 `cf87536` libbitcoinconsensus: Add pkg-config support
- - #5514 `ed11d53` Fix 'make distcheck'
- - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only
- - #5582 `e8a6639` Osx toolchain update
- - #5684 `ab64022` osx: bump build sdk to 10.9
- - #5695 `23ef5b7` depends: latest config.guess and config.sub
- - #5509 `31dedb4` Fixes when compiling in c++11 mode
- - #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default
- - #5510 `7c3fbc3` Big endian support
- - #5149 `c7abfa5` Add script to verify all merge commits are signed
- - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails
- - #6244 `0401aa2` configure: Detect (and reject) LibreSSL
- - #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures
- - #6285 `ef1d506` Fix scheduler build with some boost versions.
- - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5
- - #6303 `b711599` gitian: add a gitian-win-signer descriptor
- - #6246 `8ea6d37` Fix build on FreeBSD
- - #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action
- - #6354 `bdf0d94` Gitian windows signing normalization

### Wallet
- - #2340 `811c71d` Discourage fee sniping with nLockTime
- - #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option
- - #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey
- - #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)
- - #5319 `93b7544` Clean up wallet encryption code
- - #5831 `df5c246` Subtract fee from amount
- - #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58
- - #5511 `23c998d` Sort pending wallet transactions before reaccepting
- - #6126 `26e08a1` Change default nTxConfirmTarget to 2
- - #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet
- - #6276 `c9fd907` Fix getbalance * 0

### GUI
- - #5219 `f3af0c8` New icons
- - #5228 `bb3c75b` HiDPI (retina) support for splash screen
- - #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent
- - #5488 `851dfc7` Light blue icon color for regtest
- - #5547 `a39aa74` New icon for the debug window
- - #5493 `e515309` Adopt style colour for button icons
- - #5557 `70477a0` On close of splashscreen interrupt verifyDB
- - #5559 `83be8fd` Make the command-line-args dialog better
- - #5144 `c5380a9` Elaborate on signverify message dialog warning
- - #5489 `d1aa3c6` Optimize PNG files
- - #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries
- - #5651 `848f55d` Coin Control: Use U+2248 "ALMOST EQUAL TO" rather than a simple tilde
- - #5626 `ab0d798` Fix icon sizes and column width
- - #5683 `c7b22aa` add new osx dmg background picture
- - #5620 `7823598` Payment request expiration bug fix
- - #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField
- - #5753 `0f44672` Add bitcoin logo to about screen
- - #5629 `a956586` Prevent amount overflow problem with payment requests
- - #5830 `215475a` Don't save geometry for options and about/help window
- - #5793 `d26f0b2` Honor current network when creating autostart link
- - #5847 `f238add` Startup script for centos, with documentation
- - #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb
- - #5898 `bb56781` Fix rpc console font size to flexible metrics
- - #5467 `bc8535b` Payment request / server work - part 2
- - #6161 `180c164` Remove movable option for toolbar
- - #6160 `0d862c2` Overviewpage: make sure warning icons gets colored

### Tests
- - #5453 `2f2d337` Add ability to run single test manually to RPC tests
- - #5421 `886eb57` Test unexecuted OP_CODESEPARATOR
- - #5530 `565b300` Additional rpc tests
- - #5611 `37b185c` Fix spurious windows test failures after 012598880c
- - #5613 `2eda47b` Fix smartfees test for change to relay policy
- - #5612 `e3f5727` Fix zapwallettxes test
- - #5642 `30a5b5f` Prepare paymentservertests for new unit tests
- - #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests
- - #5813 `ee9f2bf` Add unit tests for next difficulty calculations
- - #5855 `d7989c0` Travis: run unit tests in different orders
- - #5852 `cdae53e` Reinitialize state in between individual unit tests.
- - #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests
- - #5940 `446bb70` Regression test for ResendWalletTransactions
- - #6052 `cf7adad` fix and enable bip32 unit test
- - #6039 `734f80a` tests: Error when setgenerate is used on regtest
- - #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json
- - #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup
- - #6075 `df1609f` Add additional script edge condition tests
- - #5981 `da38dc6` Python P2P testing 
- - #5958 `9ef00c3` Add multisig rpc tests
- - #6112 `fec5c0e` Add more script edge condition tests

### Miscellaneous
- - #5457, #5506, #5952, #6047 Update libsecp256k1
- - #5437 `84857e8` Add missing CAutoFile::IsNull() check in main
- - #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible
- - #5654, #5764 Adding jonasschnelli's GPG key
- - #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated
- - #5679 `beff11a` Get rid of DetectShutdownThread
- - #5787 `9bd8c9b` Add fanquake PGP key
- - #5366 `47a79bb` No longer check osx compatibility in RenameThread
- - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse
- - #5708 `8b298ca` Add list of implemented BIPs
- - #5809 `46bfbe7` Add bitcoin-cli man page
- - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported
- - #5749 `d734d87` Help messages correctly formatted (79 chars)
- - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted
- - #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables
- - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings
- - #5965 `7c6bfb1` Add git-subtree-check.sh script
- - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming
- - #6064 `b46e7c2` Several changes to mruset
- - #6104 `3e2559c` Show an init message while activating best chain
- - #6125 `351f73e` Clean up parsing of bool command line args
- - #5964 `b4c219b` Lightweight task scheduler
- - #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app
- - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks
- - #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)
- - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete
- - #6186 `182686c` Fix two problems in CSubnet parsing
- - #6174 `df992b9` doc: add translation strings policy
- - #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build
- - #6264 `94cd705` Remove translation for -help-debug options
- - #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs
- - #6319 `3f8fcc9` doc: update mailing list address

Credits
=======

Thanks to everyone who directly contributed to this release:

- - 21E14
- - Adam Weiss
- - Alex Morcos
- - ayeowch
- - azeteki
- - Ben Holden-Crowther
- - bikinibabe
- - BitcoinPRReadingGroup
- - Blake Jakopovic
- - BtcDrak
- - charlescharles
- - Chris Arnesen
- - Ciemon
- - CohibAA
- - Corinne Dashjr
- - Cory Fields
- - Cozz Lovan
- - Daira Hopwood
- - Daniel Kraft
- - Dave Collins
- - David A. Harding
- - dexX7
- - Earlz
- - Eric Lombrozo
- - Eric R. Schulz
- - Everett Forth
- - Flavien Charlon
- - fsb4000
- - Gavin Andresen
- - Gregory Maxwell
- - Heath
- - Ivan Pustogarov
- - Jacob Welsh
- - Jameson Lopp
- - Jason Lewicki
- - Jeff Garzik
- - Jonas Schnelli
- - Jonathan Brown
- - Jorge Tim?n
- - joshr
- - jtimon
- - Julian Yap
- - Luca Venturini
- - Luke Dashjr
- - Manuel Araoz
- - MarcoFalke
- - Matt Bogosian
- - Matt Corallo
- - Micha
- - Michael Ford
- - Mike Hearn
- - mrbandrews
- - Nicolas Benoit
- - paveljanik
- - Pavel Jan?k
- - Pavel Vasin
- - Peter Todd
- - Philip Kaufmann
- - Pieter Wuille
- - pstratem
- - randy-waterhouse
- - rion
- - Rob Van Mieghem
- - Ross Nicoll
- - Ruben de Vries
- - sandakersmann
- - Shaul Kfir
- - Shawn Wilkinson
- - sinetek
- - Suhas Daftuar
- - svost
- - Thomas Zander
- - Tom Harding
- - UdjinM6
- - Vitalii Demianets
- - Wladimir J. van der Laan

And all those who contributed additional code review and/or security research:

- - Sergio Demian Lerner

As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVooumAAoJEHSBCwEjRsmm+Q8H/3vff2/a7iSYTNtaM6tzVV8u
MrRel/DowjcNQhMEcmKWoUWEzMuoWol/MbsLBaQvVXg9/8w9V5Cbji02cA2EDbpp
6zbSBwWgVgiQcfI1EERd6K6s7d+iJ/BNGOovAmtFJZVSh8RplC0TQ9C5ZSemijSK
pjzMER0iBgtL4o2MGfpYXvL7e0DKqQ6S+IsBCI3aLiAu2wWnkaoMNol/06+GFgZA
UTX3QzeC/qaNYBtPNq4F8z+p024ATxVhWuUKP0tLQKVBUKJ5YWcCxwpGVIKkwSa/
ri7zf0K+t65mpdLteIagHuWXpB6jOXp3n/X3aKKNAnEGdEyYmUIM+1XloOI+au0=
=o4yU
-----END PGP SIGNATURE-----

From laanwj at gmail.com  Sun Jul 12 16:41:00 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sun, 12 Jul 2015 18:41:00 +0200
Subject: [bitcoin-dev] Bitcoin Core 0.11.0 released
In-Reply-To: <20150712154910.GA21345@amethyst.visucore.com>
References: <20150712154910.GA21345@amethyst.visucore.com>
Message-ID: <20150712164059.GB21345@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

/Re-transmission: signature was botched in previous mail/

Bitcoin Core version 0.11.0 is now available from:

  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>

This is a new major version release, bringing both new features and
bug fixes.

Please report bugs using the issue tracker at github:

  <https://github.com/bitcoin/bitcoin/issues>

The entire distribution is also available as torrent:

     magnet:?xt=urn:btih:82f0d2fa100d6db8a8c1338768dcb9e4e524da13&dn=bitcoin-core-0.11.0&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&ws=https%3A%2F%2Fbitcoin.org%2Fbin%2F

Upgrading and downgrading
=========================

How to Upgrade
- --------------

If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).

Downgrade warning
- ------------------

Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:

* Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.

* The block index database will now hold headers for which no block is
stored on disk, which earlier versions won't support.

If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.

This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.

Important information
======================

Transaction flooding
- ---------------------

At the time of this release, the P2P network is being flooded with low-fee
transactions. This causes a ballooning of the mempool size.

If this growth of the mempool causes problematic memory use on your node, it is
possible to change a few configuration options to work around this. The growth
of the mempool can be monitored with the RPC command `getmempoolinfo`.

One is to increase the minimum transaction relay fee `minrelaytxfee`, which
defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be
rejected, and thus fewer transactions entering the mempool.

The other is to restrict the relaying of free transactions with
`limitfreerelay`. This option sets the number of kB/minute at which
free transactions (with enough priority) will be accepted. It defaults to 15.
Reducing this number reduces the speed at which the mempool can grow due
to free transactions.

For example, add the following to `bitcoin.conf`:

    minrelaytxfee=0.00005 
    limitfreerelay=5

More robust solutions are being worked on for a follow-up release.

Notable changes
===============

Block file pruning
- ----------------------

This release supports running a fully validating node without maintaining a copy 
of the raw block and undo data on disk. To recap, there are four types of data 
related to the blockchain in the bitcoin system: the raw blocks as received over 
the network (blk???.dat), the undo data (rev???.dat), the block index and the 
UTXO set (both LevelDB databases). The databases are built from the raw data.

Block pruning allows Bitcoin Core to delete the raw block and undo data once 
it's been validated and used to build the databases. At that point, the raw data 
is used only to relay blocks to other nodes, to handle reorganizations, to look 
up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or 
for rescanning the wallet. The block index continues to hold the metadata about 
all blocks in the blockchain.

The user specifies how much space to allot for block & undo files. The minimum 
allowed is 550MB. Note that this is in addition to whatever is required for the 
block index and UTXO databases. The minimum was chosen so that Bitcoin Core will 
be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 
minutes per block). In rare instances it is possible that the amount of space 
used will exceed the pruning target in order to keep the required last 288 
blocks on disk.

Block pruning works during initial sync in the same way as during steady state, 
by deleting block files "as you go" whenever disk space is allocated. Thus, if 
the user specifies 550MB, once that level is reached the program will begin 
deleting the oldest block and undo files, while continuing to download the 
blockchain.

For now, block pruning disables block relay.  In the future, nodes with block 
pruning will at a minimum relay "new" blocks, meaning blocks that extend their 
active chain. 

Block pruning is currently incompatible with running a wallet due to the fact 
that block data is used for rescanning the wallet and importing keys or 
addresses (which require a rescan.) However, running the wallet with block 
pruning will be supported in the near future, subject to those limitations.

Block pruning is also incompatible with -txindex and will automatically disable 
it.

Once you have pruned blocks, going back to unpruned state requires 
re-downloading the entire blockchain. To do this, re-start the node with 
- -reindex. Note also that any problem that would cause a user to reindex (e.g., 
disk corruption) will cause a pruned node to redownload the entire blockchain. 
Finally, note that when a pruned node reindexes, it will delete any blk???.dat 
and rev???.dat files in the data directory prior to restarting the download.

To enable block pruning on the command line:

- - `-prune=N`: where N is the number of MB to allot for raw block & undo data.

Modified RPC calls:

- - `getblockchaininfo` now includes whether we are in pruned mode or not.
- - `getblock` will check if the block's data has been pruned and if so, return an 
error.
- - `getrawtransaction` will no longer be able to locate a transaction that has a 
UTXO but where its block file has been pruned. 

Pruning is disabled by default.

Big endian support
- --------------------

Experimental support for big-endian CPU architectures was added in this
release. All little-endian specific code was replaced with endian-neutral
constructs. This has been tested on at least MIPS and PPC hosts. The build
system will automatically detect the endianness of the target.

Memory usage optimization
- --------------------------

There have been many changes in this release to reduce the default memory usage
of a node, among which:

- - Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`
  precise where this grossly underestimated memory usage before
- - Reduce size of per-peer data structure (#6064 and others); this increases the
  number of connections that can be supported with the same amount of memory
- - Reduce the number of threads (#5964, #5679); lowers the amount of (esp.
  virtual) memory needed

Fee estimation changes
- ----------------------

This release improves the algorithm used for fee estimation.  Previously, -1
was returned when there was insufficient data to give an estimate.  Now, -1
will also be returned when there is no fee or priority high enough for the
desired confirmation target. In those cases, it can help to ask for an estimate
for a higher target number of blocks. It is not uncommon for there to be no
fee or priority high enough to be reliably (85%) included in the next block and
for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.

Privacy: Disable wallet transaction broadcast
- ----------------------------------------------

This release adds an option `-walletbroadcast=0` to prevent automatic
transaction broadcast and rebroadcast (#5951). This option allows separating
transaction submission from the node functionality.

Making use of this, third-party scripts can be written to take care of
transaction (re)broadcast:

- - Send the transaction as normal, either through RPC or the GUI
- - Retrieve the transaction data through RPC using `gettransaction` (NOT
  `getrawtransaction`). The `hex` field of the result will contain the raw
  hexadecimal representation of the transaction
- - The transaction can then be broadcasted through arbitrary mechanisms
  supported by the script

One such application is selective Tor usage, where the node runs on the normal
internet but transactions are broadcasted over Tor.

For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).

Privacy: Stream isolation for Tor
- ----------------------------------

This release adds functionality to create a new circuit for every peer
connection, when the software is used with Tor. The new option,
`-proxyrandomize`, is on by default.

When enabled, every outgoing connection will (potentially) go through a
different exit node. That significantly reduces the chance to get unlucky and
pick a single exit node that is either malicious, or widely banned from the P2P
network. This improves connection reliability as well as privacy, especially
for the initial connections.

**Important note:** If a non-Tor SOCKS5 proxy is configured that supports
authentication, but doesn't require it, this change may cause that proxy to reject
connections. A user and password is sent where they weren't before. This setup
is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to
disable the behavior.

0.11.0 Change log
=================

Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.

### RPC and REST
- - #5461 `5f7279a` signrawtransaction: validate private key
- - #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>
- - #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call
- - #5476 `c986972` Add time offset into getpeerinfo output
- - #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo
- - #5599 `40e96a3` Get rid of the internal miner's hashmeter
- - #5711 `87ecfb0` Push down RPC locks
- - #5754 `1c4e3f9` fix getblocktemplate lock issue
- - #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block
- - #5548 `d48ce48` Add /rest/chaininfos
- - #5992 `4c4f1b4` Push down RPC reqWallet flag
- - #6036 `585b5db` Show zero value txouts in listunspent
- - #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks
- - #5418 `16341cc` Report missing inputs in sendrawtransaction
- - #5937 `40f5e8d` show script verification errors in signrawtransaction result
- - #5420 `1fd2d39` getutxos REST command (based on Bip64)
- - #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints
- - #6226 `5901596` json: fail read_string if string contains trailing garbage

### Configuration and command-line options
- - #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)
- - #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures
- - #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)
- - #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)
- - #5863 `c271304` Add autoprune functionality (`-prune=<size>`)
- - #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set
- - #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system

### Block and transaction handling
- - #5367 `dcc1304` Do all block index writes in a batch
- - #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool
- - #5459 `4406c3e` Reject headers that build on an invalid parent
- - #5481 `055f3ae` Apply AreSane() checks to the fees from the network
- - #5580 `40d65eb` Preemptively catch a few potential bugs
- - #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree
- - #5564 `a89b837` clarify obscure uses of EvalScript()
- - #5521 `8e4578a` Reject non-final txs even in testnet/regtest
- - #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys
- - #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes
- - #5710 `175d86e` Add more information to errors in ReadBlockFromDisk
- - #5948 `b36f1ce` Use GetAncestor to compute new target
- - #5959 `a0bfc69` Add additional block index consistency checks
- - #6058 `7e0e7f8` autoprune minor post-merge improvements
- - #5159 `2cc1372` New fee estimation code
- - #6102 `6fb90d8` Implement accurate UTXO cache size accounting
- - #6129 `2a82298` Bug fix for clearing fCheckForPruning
- - #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain
- - #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting
- - #5985 `37b4e42` Fix removing of orphan transactions
- - #6221 `6cb70ca` Prune: Support noncontiguous block files
- - #6256 `fce474c` Use best header chain timestamps to detect partitioning
- - #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive

### P2P protocol and network code
- - #5507 `844ace9` Prevent DOS attacks on in-flight data structures
- - #5770 `32a8b6a` Sanitize command strings before logging them
- - #5859 `dd4ffce` Add correct bool combiner for net signals
- - #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK
- - #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo
- - #5662 `5048465` Change download logic to allow calling getdata on inbound peers
- - #5971 `18d2832` replace absolute sleep with conditional wait
- - #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests
- - #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds
- - #6080 `31c0bf1` Add jonasschnellis dns seeder
- - #5976 `9f7809f` Reduce download timeouts as blocks arrive
- - #6172 `b4bbad1` Ignore getheaders requests when not synced
- - #5875 `304892f` Be stricter in processing unrequested blocks
- - #6333 `41bbc85` Hardcoded seeds update June 2015

### Validation
- - #5143 `48e1765` Implement BIP62 rule 6
- - #5713 `41e6e4c` Implement BIP66

### Build system
- - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms
- - #5334 `cf87536` libbitcoinconsensus: Add pkg-config support
- - #5514 `ed11d53` Fix 'make distcheck'
- - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only
- - #5582 `e8a6639` Osx toolchain update
- - #5684 `ab64022` osx: bump build sdk to 10.9
- - #5695 `23ef5b7` depends: latest config.guess and config.sub
- - #5509 `31dedb4` Fixes when compiling in c++11 mode
- - #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default
- - #5510 `7c3fbc3` Big endian support
- - #5149 `c7abfa5` Add script to verify all merge commits are signed
- - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails
- - #6244 `0401aa2` configure: Detect (and reject) LibreSSL
- - #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures
- - #6285 `ef1d506` Fix scheduler build with some boost versions.
- - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5
- - #6303 `b711599` gitian: add a gitian-win-signer descriptor
- - #6246 `8ea6d37` Fix build on FreeBSD
- - #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action
- - #6354 `bdf0d94` Gitian windows signing normalization

### Wallet
- - #2340 `811c71d` Discourage fee sniping with nLockTime
- - #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option
- - #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey
- - #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)
- - #5319 `93b7544` Clean up wallet encryption code
- - #5831 `df5c246` Subtract fee from amount
- - #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58
- - #5511 `23c998d` Sort pending wallet transactions before reaccepting
- - #6126 `26e08a1` Change default nTxConfirmTarget to 2
- - #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet
- - #6276 `c9fd907` Fix getbalance * 0

### GUI
- - #5219 `f3af0c8` New icons
- - #5228 `bb3c75b` HiDPI (retina) support for splash screen
- - #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent
- - #5488 `851dfc7` Light blue icon color for regtest
- - #5547 `a39aa74` New icon for the debug window
- - #5493 `e515309` Adopt style colour for button icons
- - #5557 `70477a0` On close of splashscreen interrupt verifyDB
- - #5559 `83be8fd` Make the command-line-args dialog better
- - #5144 `c5380a9` Elaborate on signverify message dialog warning
- - #5489 `d1aa3c6` Optimize PNG files
- - #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries
- - #5651 `848f55d` Coin Control: Use U+2248 "ALMOST EQUAL TO" rather than a simple tilde
- - #5626 `ab0d798` Fix icon sizes and column width
- - #5683 `c7b22aa` add new osx dmg background picture
- - #5620 `7823598` Payment request expiration bug fix
- - #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField
- - #5753 `0f44672` Add bitcoin logo to about screen
- - #5629 `a956586` Prevent amount overflow problem with payment requests
- - #5830 `215475a` Don't save geometry for options and about/help window
- - #5793 `d26f0b2` Honor current network when creating autostart link
- - #5847 `f238add` Startup script for centos, with documentation
- - #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb
- - #5898 `bb56781` Fix rpc console font size to flexible metrics
- - #5467 `bc8535b` Payment request / server work - part 2
- - #6161 `180c164` Remove movable option for toolbar
- - #6160 `0d862c2` Overviewpage: make sure warning icons gets colored

### Tests
- - #5453 `2f2d337` Add ability to run single test manually to RPC tests
- - #5421 `886eb57` Test unexecuted OP_CODESEPARATOR
- - #5530 `565b300` Additional rpc tests
- - #5611 `37b185c` Fix spurious windows test failures after 012598880c
- - #5613 `2eda47b` Fix smartfees test for change to relay policy
- - #5612 `e3f5727` Fix zapwallettxes test
- - #5642 `30a5b5f` Prepare paymentservertests for new unit tests
- - #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests
- - #5813 `ee9f2bf` Add unit tests for next difficulty calculations
- - #5855 `d7989c0` Travis: run unit tests in different orders
- - #5852 `cdae53e` Reinitialize state in between individual unit tests.
- - #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests
- - #5940 `446bb70` Regression test for ResendWalletTransactions
- - #6052 `cf7adad` fix and enable bip32 unit test
- - #6039 `734f80a` tests: Error when setgenerate is used on regtest
- - #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json
- - #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup
- - #6075 `df1609f` Add additional script edge condition tests
- - #5981 `da38dc6` Python P2P testing 
- - #5958 `9ef00c3` Add multisig rpc tests
- - #6112 `fec5c0e` Add more script edge condition tests

### Miscellaneous
- - #5457, #5506, #5952, #6047 Update libsecp256k1
- - #5437 `84857e8` Add missing CAutoFile::IsNull() check in main
- - #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible
- - #5654, #5764 Adding jonasschnelli's GPG key
- - #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated
- - #5679 `beff11a` Get rid of DetectShutdownThread
- - #5787 `9bd8c9b` Add fanquake PGP key
- - #5366 `47a79bb` No longer check osx compatibility in RenameThread
- - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse
- - #5708 `8b298ca` Add list of implemented BIPs
- - #5809 `46bfbe7` Add bitcoin-cli man page
- - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported
- - #5749 `d734d87` Help messages correctly formatted (79 chars)
- - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted
- - #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables
- - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings
- - #5965 `7c6bfb1` Add git-subtree-check.sh script
- - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming
- - #6064 `b46e7c2` Several changes to mruset
- - #6104 `3e2559c` Show an init message while activating best chain
- - #6125 `351f73e` Clean up parsing of bool command line args
- - #5964 `b4c219b` Lightweight task scheduler
- - #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app
- - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks
- - #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)
- - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete
- - #6186 `182686c` Fix two problems in CSubnet parsing
- - #6174 `df992b9` doc: add translation strings policy
- - #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build
- - #6264 `94cd705` Remove translation for -help-debug options
- - #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs
- - #6319 `3f8fcc9` doc: update mailing list address

Credits
=======

Thanks to everyone who directly contributed to this release:

- - 21E14
- - Adam Weiss
- - Alex Morcos
- - ayeowch
- - azeteki
- - Ben Holden-Crowther
- - bikinibabe
- - BitcoinPRReadingGroup
- - Blake Jakopovic
- - BtcDrak
- - charlescharles
- - Chris Arnesen
- - Ciemon
- - CohibAA
- - Corinne Dashjr
- - Cory Fields
- - Cozz Lovan
- - Daira Hopwood
- - Daniel Kraft
- - Dave Collins
- - David A. Harding
- - dexX7
- - Earlz
- - Eric Lombrozo
- - Eric R. Schulz
- - Everett Forth
- - Flavien Charlon
- - fsb4000
- - Gavin Andresen
- - Gregory Maxwell
- - Heath
- - Ivan Pustogarov
- - Jacob Welsh
- - Jameson Lopp
- - Jason Lewicki
- - Jeff Garzik
- - Jonas Schnelli
- - Jonathan Brown
- - Jorge Tim?n
- - joshr
- - jtimon
- - Julian Yap
- - Luca Venturini
- - Luke Dashjr
- - Manuel Araoz
- - MarcoFalke
- - Matt Bogosian
- - Matt Corallo
- - Micha
- - Michael Ford
- - Mike Hearn
- - mrbandrews
- - Nicolas Benoit
- - paveljanik
- - Pavel Jan?k
- - Pavel Vasin
- - Peter Todd
- - Philip Kaufmann
- - Pieter Wuille
- - pstratem
- - randy-waterhouse
- - rion
- - Rob Van Mieghem
- - Ross Nicoll
- - Ruben de Vries
- - sandakersmann
- - Shaul Kfir
- - Shawn Wilkinson
- - sinetek
- - Suhas Daftuar
- - svost
- - Thomas Zander
- - Tom Harding
- - UdjinM6
- - Vitalii Demianets
- - Wladimir J. van der Laan

And all those who contributed additional code review and/or security research:

- - Sergio Demian Lerner

As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVophhAAoJEHSBCwEjRsmmL9sH/1flr5GRMtYrEMJtXyWc5n6m
gQfapX0IJ3vO9hV2nhTQcXo/BTZqbsVN1ZOh/TqUklE/EiLFqwU3S6KEzlelOzOd
JqNNB5jELmThU6/GtzjFNqwPjyr1KZDthA08MFw3YSNO8vOtfn2VJwG1ydBsQHxy
WrVmoKA4g7ttTmF4i5AmUXARWjnvMSdrTNlYnBkkq/DdovHN3QVSe5w2tN9OGhGz
Zo+QGppuaRrJGl7dJWM3W4CsHcAOMY41aLm+fgtieW5VR77MJVMkiOzR3WrP2IGI
8BjUKlNQxvQ1iXfJl9oVGcVE16dJiaR1FlZVm+p+9oBzCPWjFO1OUr+AVm/o74E=
=uDa+
-----END PGP SIGNATURE-----

From laanwj at gmail.com  Sun Jul 12 17:13:32 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Sun, 12 Jul 2015 19:13:32 +0200
Subject: [bitcoin-dev] Bitcoin Core 0.11.0 released
In-Reply-To: <20150712164059.GB21345@amethyst.visucore.com>
References: <20150712154910.GA21345@amethyst.visucore.com>
	<20150712164059.GB21345@amethyst.visucore.com>
Message-ID: <20150712171331.GA22715@amethyst.visucore.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

/Re-transmission-2: signature was botched in previous mails due to UTF-8 conversion issue, last attempt/

Bitcoin Core version 0.11.0 is now available from:

  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>

This is a new major version release, bringing both new features and
bug fixes.

Please report bugs using the issue tracker at github:

  <https://github.com/bitcoin/bitcoin/issues>

The entire distribution is also available as torrent:

    magnet:?xt=urn:btih:82f0d2fa100d6db8a8c1338768dcb9e4e524da13&dn=bitcoin-core-0.11.0&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&ws=https%3A%2F%2Fbitcoin.org%2Fbin%2F

Upgrading and downgrading
=========================

How to Upgrade
- --------------

If you are running an older version, shut it down. Wait until it has completely
shut down (which might take a few minutes for older versions), then run the
installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or
bitcoind/bitcoin-qt (on Linux).

Downgrade warning
- ------------------

Because release 0.10.0 and later makes use of headers-first synchronization and
parallel block download (see further), the block files and databases are not
backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:

* Blocks will be stored on disk out of order (in the order they are
received, really), which makes it incompatible with some tools or
other programs. Reindexing using earlier versions will also not work
anymore as a result of this.

* The block index database will now hold headers for which no block is
stored on disk, which earlier versions won't support.

If you want to be able to downgrade smoothly, make a backup of your entire data
directory. Without this your node will need start syncing (or importing from
bootstrap.dat) anew afterwards. It is possible that the data from a completely
synchronised 0.10 node may be usable in older versions as-is, but this is not
supported and may break as soon as the older version attempts to reindex.

This does not affect wallet forward or backward compatibility. There are no
known problems when downgrading from 0.11.x to 0.10.x.

Important information
======================

Transaction flooding
- ---------------------

At the time of this release, the P2P network is being flooded with low-fee
transactions. This causes a ballooning of the mempool size.

If this growth of the mempool causes problematic memory use on your node, it is
possible to change a few configuration options to work around this. The growth
of the mempool can be monitored with the RPC command `getmempoolinfo`.

One is to increase the minimum transaction relay fee `minrelaytxfee`, which
defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be
rejected, and thus fewer transactions entering the mempool.

The other is to restrict the relaying of free transactions with
`limitfreerelay`. This option sets the number of kB/minute at which
free transactions (with enough priority) will be accepted. It defaults to 15.
Reducing this number reduces the speed at which the mempool can grow due
to free transactions.

For example, add the following to `bitcoin.conf`:

    minrelaytxfee=0.00005 
    limitfreerelay=5

More robust solutions are being worked on for a follow-up release.

Notable changes
===============

Block file pruning
- ----------------------

This release supports running a fully validating node without maintaining a copy 
of the raw block and undo data on disk. To recap, there are four types of data 
related to the blockchain in the bitcoin system: the raw blocks as received over 
the network (blk???.dat), the undo data (rev???.dat), the block index and the 
UTXO set (both LevelDB databases). The databases are built from the raw data.

Block pruning allows Bitcoin Core to delete the raw block and undo data once 
it's been validated and used to build the databases. At that point, the raw data 
is used only to relay blocks to other nodes, to handle reorganizations, to look 
up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or 
for rescanning the wallet. The block index continues to hold the metadata about 
all blocks in the blockchain.

The user specifies how much space to allot for block & undo files. The minimum 
allowed is 550MB. Note that this is in addition to whatever is required for the 
block index and UTXO databases. The minimum was chosen so that Bitcoin Core will 
be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 
minutes per block). In rare instances it is possible that the amount of space 
used will exceed the pruning target in order to keep the required last 288 
blocks on disk.

Block pruning works during initial sync in the same way as during steady state, 
by deleting block files "as you go" whenever disk space is allocated. Thus, if 
the user specifies 550MB, once that level is reached the program will begin 
deleting the oldest block and undo files, while continuing to download the 
blockchain.

For now, block pruning disables block relay.  In the future, nodes with block 
pruning will at a minimum relay "new" blocks, meaning blocks that extend their 
active chain. 

Block pruning is currently incompatible with running a wallet due to the fact 
that block data is used for rescanning the wallet and importing keys or 
addresses (which require a rescan.) However, running the wallet with block 
pruning will be supported in the near future, subject to those limitations.

Block pruning is also incompatible with -txindex and will automatically disable 
it.

Once you have pruned blocks, going back to unpruned state requires 
re-downloading the entire blockchain. To do this, re-start the node with 
- -reindex. Note also that any problem that would cause a user to reindex (e.g., 
disk corruption) will cause a pruned node to redownload the entire blockchain. 
Finally, note that when a pruned node reindexes, it will delete any blk???.dat 
and rev???.dat files in the data directory prior to restarting the download.

To enable block pruning on the command line:

- - `-prune=N`: where N is the number of MB to allot for raw block & undo data.

Modified RPC calls:

- - `getblockchaininfo` now includes whether we are in pruned mode or not.
- - `getblock` will check if the block's data has been pruned and if so, return an 
error.
- - `getrawtransaction` will no longer be able to locate a transaction that has a 
UTXO but where its block file has been pruned. 

Pruning is disabled by default.

Big endian support
- --------------------

Experimental support for big-endian CPU architectures was added in this
release. All little-endian specific code was replaced with endian-neutral
constructs. This has been tested on at least MIPS and PPC hosts. The build
system will automatically detect the endianness of the target.

Memory usage optimization
- --------------------------

There have been many changes in this release to reduce the default memory usage
of a node, among which:

- - Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`
  precise where this grossly underestimated memory usage before
- - Reduce size of per-peer data structure (#6064 and others); this increases the
  number of connections that can be supported with the same amount of memory
- - Reduce the number of threads (#5964, #5679); lowers the amount of (esp.
  virtual) memory needed

Fee estimation changes
- ----------------------

This release improves the algorithm used for fee estimation.  Previously, -1
was returned when there was insufficient data to give an estimate.  Now, -1
will also be returned when there is no fee or priority high enough for the
desired confirmation target. In those cases, it can help to ask for an estimate
for a higher target number of blocks. It is not uncommon for there to be no
fee or priority high enough to be reliably (85%) included in the next block and
for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.

Privacy: Disable wallet transaction broadcast
- ----------------------------------------------

This release adds an option `-walletbroadcast=0` to prevent automatic
transaction broadcast and rebroadcast (#5951). This option allows separating
transaction submission from the node functionality.

Making use of this, third-party scripts can be written to take care of
transaction (re)broadcast:

- - Send the transaction as normal, either through RPC or the GUI
- - Retrieve the transaction data through RPC using `gettransaction` (NOT
  `getrawtransaction`). The `hex` field of the result will contain the raw
  hexadecimal representation of the transaction
- - The transaction can then be broadcasted through arbitrary mechanisms
  supported by the script

One such application is selective Tor usage, where the node runs on the normal
internet but transactions are broadcasted over Tor.

For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).

Privacy: Stream isolation for Tor
- ----------------------------------

This release adds functionality to create a new circuit for every peer
connection, when the software is used with Tor. The new option,
`-proxyrandomize`, is on by default.

When enabled, every outgoing connection will (potentially) go through a
different exit node. That significantly reduces the chance to get unlucky and
pick a single exit node that is either malicious, or widely banned from the P2P
network. This improves connection reliability as well as privacy, especially
for the initial connections.

**Important note:** If a non-Tor SOCKS5 proxy is configured that supports
authentication, but doesn't require it, this change may cause that proxy to reject
connections. A user and password is sent where they weren't before. This setup
is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to
disable the behavior.

0.11.0 Change log
=================

Detailed release notes follow. This overview includes changes that affect
behavior, not code moves, refactors and string updates. For convenience in locating
the code changes and accompanying discussion, both the pull request and
git merge commit are mentioned.

### RPC and REST
- - #5461 `5f7279a` signrawtransaction: validate private key
- - #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>
- - #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call
- - #5476 `c986972` Add time offset into getpeerinfo output
- - #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo
- - #5599 `40e96a3` Get rid of the internal miner's hashmeter
- - #5711 `87ecfb0` Push down RPC locks
- - #5754 `1c4e3f9` fix getblocktemplate lock issue
- - #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block
- - #5548 `d48ce48` Add /rest/chaininfos
- - #5992 `4c4f1b4` Push down RPC reqWallet flag
- - #6036 `585b5db` Show zero value txouts in listunspent
- - #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks
- - #5418 `16341cc` Report missing inputs in sendrawtransaction
- - #5937 `40f5e8d` show script verification errors in signrawtransaction result
- - #5420 `1fd2d39` getutxos REST command (based on Bip64)
- - #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints
- - #6226 `5901596` json: fail read_string if string contains trailing garbage

### Configuration and command-line options
- - #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)
- - #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures
- - #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)
- - #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)
- - #5863 `c271304` Add autoprune functionality (`-prune=<size>`)
- - #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set
- - #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system

### Block and transaction handling
- - #5367 `dcc1304` Do all block index writes in a batch
- - #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool
- - #5459 `4406c3e` Reject headers that build on an invalid parent
- - #5481 `055f3ae` Apply AreSane() checks to the fees from the network
- - #5580 `40d65eb` Preemptively catch a few potential bugs
- - #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree
- - #5564 `a89b837` clarify obscure uses of EvalScript()
- - #5521 `8e4578a` Reject non-final txs even in testnet/regtest
- - #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys
- - #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes
- - #5710 `175d86e` Add more information to errors in ReadBlockFromDisk
- - #5948 `b36f1ce` Use GetAncestor to compute new target
- - #5959 `a0bfc69` Add additional block index consistency checks
- - #6058 `7e0e7f8` autoprune minor post-merge improvements
- - #5159 `2cc1372` New fee estimation code
- - #6102 `6fb90d8` Implement accurate UTXO cache size accounting
- - #6129 `2a82298` Bug fix for clearing fCheckForPruning
- - #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain
- - #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting
- - #5985 `37b4e42` Fix removing of orphan transactions
- - #6221 `6cb70ca` Prune: Support noncontiguous block files
- - #6256 `fce474c` Use best header chain timestamps to detect partitioning
- - #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive

### P2P protocol and network code
- - #5507 `844ace9` Prevent DOS attacks on in-flight data structures
- - #5770 `32a8b6a` Sanitize command strings before logging them
- - #5859 `dd4ffce` Add correct bool combiner for net signals
- - #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK
- - #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo
- - #5662 `5048465` Change download logic to allow calling getdata on inbound peers
- - #5971 `18d2832` replace absolute sleep with conditional wait
- - #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests
- - #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds
- - #6080 `31c0bf1` Add jonasschnellis dns seeder
- - #5976 `9f7809f` Reduce download timeouts as blocks arrive
- - #6172 `b4bbad1` Ignore getheaders requests when not synced
- - #5875 `304892f` Be stricter in processing unrequested blocks
- - #6333 `41bbc85` Hardcoded seeds update June 2015

### Validation
- - #5143 `48e1765` Implement BIP62 rule 6
- - #5713 `41e6e4c` Implement BIP66

### Build system
- - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms
- - #5334 `cf87536` libbitcoinconsensus: Add pkg-config support
- - #5514 `ed11d53` Fix 'make distcheck'
- - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only
- - #5582 `e8a6639` Osx toolchain update
- - #5684 `ab64022` osx: bump build sdk to 10.9
- - #5695 `23ef5b7` depends: latest config.guess and config.sub
- - #5509 `31dedb4` Fixes when compiling in c++11 mode
- - #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default
- - #5510 `7c3fbc3` Big endian support
- - #5149 `c7abfa5` Add script to verify all merge commits are signed
- - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails
- - #6244 `0401aa2` configure: Detect (and reject) LibreSSL
- - #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures
- - #6285 `ef1d506` Fix scheduler build with some boost versions.
- - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5
- - #6303 `b711599` gitian: add a gitian-win-signer descriptor
- - #6246 `8ea6d37` Fix build on FreeBSD
- - #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action
- - #6354 `bdf0d94` Gitian windows signing normalization

### Wallet
- - #2340 `811c71d` Discourage fee sniping with nLockTime
- - #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option
- - #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey
- - #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)
- - #5319 `93b7544` Clean up wallet encryption code
- - #5831 `df5c246` Subtract fee from amount
- - #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58
- - #5511 `23c998d` Sort pending wallet transactions before reaccepting
- - #6126 `26e08a1` Change default nTxConfirmTarget to 2
- - #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet
- - #6276 `c9fd907` Fix getbalance * 0

### GUI
- - #5219 `f3af0c8` New icons
- - #5228 `bb3c75b` HiDPI (retina) support for splash screen
- - #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent
- - #5488 `851dfc7` Light blue icon color for regtest
- - #5547 `a39aa74` New icon for the debug window
- - #5493 `e515309` Adopt style colour for button icons
- - #5557 `70477a0` On close of splashscreen interrupt verifyDB
- - #5559 `83be8fd` Make the command-line-args dialog better
- - #5144 `c5380a9` Elaborate on signverify message dialog warning
- - #5489 `d1aa3c6` Optimize PNG files
- - #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries
- - #5651 `848f55d` Coin Control: Use U+2248 "ALMOST EQUAL TO" rather than a simple tilde
- - #5626 `ab0d798` Fix icon sizes and column width
- - #5683 `c7b22aa` add new osx dmg background picture
- - #5620 `7823598` Payment request expiration bug fix
- - #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField
- - #5753 `0f44672` Add bitcoin logo to about screen
- - #5629 `a956586` Prevent amount overflow problem with payment requests
- - #5830 `215475a` Don't save geometry for options and about/help window
- - #5793 `d26f0b2` Honor current network when creating autostart link
- - #5847 `f238add` Startup script for centos, with documentation
- - #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb
- - #5898 `bb56781` Fix rpc console font size to flexible metrics
- - #5467 `bc8535b` Payment request / server work - part 2
- - #6161 `180c164` Remove movable option for toolbar
- - #6160 `0d862c2` Overviewpage: make sure warning icons gets colored

### Tests
- - #5453 `2f2d337` Add ability to run single test manually to RPC tests
- - #5421 `886eb57` Test unexecuted OP_CODESEPARATOR
- - #5530 `565b300` Additional rpc tests
- - #5611 `37b185c` Fix spurious windows test failures after 012598880c
- - #5613 `2eda47b` Fix smartfees test for change to relay policy
- - #5612 `e3f5727` Fix zapwallettxes test
- - #5642 `30a5b5f` Prepare paymentservertests for new unit tests
- - #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests
- - #5813 `ee9f2bf` Add unit tests for next difficulty calculations
- - #5855 `d7989c0` Travis: run unit tests in different orders
- - #5852 `cdae53e` Reinitialize state in between individual unit tests.
- - #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests
- - #5940 `446bb70` Regression test for ResendWalletTransactions
- - #6052 `cf7adad` fix and enable bip32 unit test
- - #6039 `734f80a` tests: Error when setgenerate is used on regtest
- - #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json
- - #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup
- - #6075 `df1609f` Add additional script edge condition tests
- - #5981 `da38dc6` Python P2P testing 
- - #5958 `9ef00c3` Add multisig rpc tests
- - #6112 `fec5c0e` Add more script edge condition tests

### Miscellaneous
- - #5457, #5506, #5952, #6047 Update libsecp256k1
- - #5437 `84857e8` Add missing CAutoFile::IsNull() check in main
- - #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible
- - #5654, #5764 Adding jonasschnelli's GPG key
- - #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated
- - #5679 `beff11a` Get rid of DetectShutdownThread
- - #5787 `9bd8c9b` Add fanquake PGP key
- - #5366 `47a79bb` No longer check osx compatibility in RenameThread
- - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse
- - #5708 `8b298ca` Add list of implemented BIPs
- - #5809 `46bfbe7` Add bitcoin-cli man page
- - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported
- - #5749 `d734d87` Help messages correctly formatted (79 chars)
- - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted
- - #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables
- - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings
- - #5965 `7c6bfb1` Add git-subtree-check.sh script
- - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming
- - #6064 `b46e7c2` Several changes to mruset
- - #6104 `3e2559c` Show an init message while activating best chain
- - #6125 `351f73e` Clean up parsing of bool command line args
- - #5964 `b4c219b` Lightweight task scheduler
- - #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app
- - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks
- - #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)
- - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete
- - #6186 `182686c` Fix two problems in CSubnet parsing
- - #6174 `df992b9` doc: add translation strings policy
- - #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build
- - #6264 `94cd705` Remove translation for -help-debug options
- - #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs
- - #6319 `3f8fcc9` doc: update mailing list address

Credits
=======

Thanks to everyone who directly contributed to this release:

- - 21E14
- - Adam Weiss
- - Alex Morcos
- - ayeowch
- - azeteki
- - Ben Holden-Crowther
- - bikinibabe
- - BitcoinPRReadingGroup
- - Blake Jakopovic
- - BtcDrak
- - charlescharles
- - Chris Arnesen
- - Ciemon
- - CohibAA
- - Corinne Dashjr
- - Cory Fields
- - Cozz Lovan
- - Daira Hopwood
- - Daniel Kraft
- - Dave Collins
- - David A. Harding
- - dexX7
- - Earlz
- - Eric Lombrozo
- - Eric R. Schulz
- - Everett Forth
- - Flavien Charlon
- - fsb4000
- - Gavin Andresen
- - Gregory Maxwell
- - Heath
- - Ivan Pustogarov
- - Jacob Welsh
- - Jameson Lopp
- - Jason Lewicki
- - Jeff Garzik
- - Jonas Schnelli
- - Jonathan Brown
- - Jorge Tim?n
- - joshr
- - jtimon
- - Julian Yap
- - Luca Venturini
- - Luke Dashjr
- - Manuel Araoz
- - MarcoFalke
- - Matt Bogosian
- - Matt Corallo
- - Micha
- - Michael Ford
- - Mike Hearn
- - mrbandrews
- - Nicolas Benoit
- - paveljanik
- - Pavel Jan?k
- - Pavel Vasin
- - Peter Todd
- - Philip Kaufmann
- - Pieter Wuille
- - pstratem
- - randy-waterhouse
- - rion
- - Rob Van Mieghem
- - Ross Nicoll
- - Ruben de Vries
- - sandakersmann
- - Shaul Kfir
- - Shawn Wilkinson
- - sinetek
- - Suhas Daftuar
- - svost
- - Thomas Zander
- - Tom Harding
- - UdjinM6
- - Vitalii Demianets
- - Wladimir J. van der Laan

And all those who contributed additional code review and/or security research:

- - Sergio Demian Lerner

As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBCgAGBQJVoqAZAAoJEHSBCwEjRsmmgEUH/iUJPAweG5lEQRg1WnCVFz0w
ZlbrKfVOp9UVMpqH5rEnwizhBVWwT9zGqwflXczWa+MlGPb9YFd7yqxW7Jb8Ip5g
1zLOBy+GFw2uA1dEoFXnjEJhFblaDMUN+Yqvcrw5V/gtLfiaX0Z0aP/cyS+dFKpQ
Kpjv4IhW3nGlvQJS1FvdEoMR6rbERPxCRKAZdIVluyfJibo9NFVfGywjp+OZMmiS
EcoX+ucF3TfsiUo7oxDWlq8SLJm2aqHe/IPtYGOVCn/97JTQ3E0r/lxvI6t89LBU
fokEunKmzrgXOIkSk3cSHJWBLYAXk60/OV0rZtJwakInpsTu9+dUdN7C5aOSycs=
=jEo7
-----END PGP SIGNATURE-----

From jtimon at jtimon.cc  Sun Jul 12 18:37:19 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 12 Jul 2015 20:37:19 +0200
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
Message-ID: <CABm2gDrPesyv95UHfDCRThaEkAQQ+rdQ1FN0ad0mFX9hTRj33A@mail.gmail.com>

On Sat, Jul 11, 2015 at 12:39 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
>
>
> On Sat, Jul 11, 2015 at 10:24 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>>
>> I think it would be more rational for them to keep mining on top of the
>> old block until they've fully validated the new block (which shouldn't take
>> so long anyway), even if this slightly increases the orphan rate.
>
>
> Increased orphan rate means that the network is (slightly) less secure.
>
> If miners have a 5% orphan rate, then an attacker can launch a 51% attack
> with 49% of the network.
>
> It isn't a massive difference, but it is there.

If miners aren't validating the blocks they mine on top of, an
attacker can do more nasty things I think.

> As long as miners switch back to non-SPV mining after a timeout, SPV-mining
> is safe for everyone.
>
> The average cost to the miner from building on an invalid block is small, as
> long as invalid blocks only happen rarely.
>
> Miners still have an incentive to do full validation, so that they can
> include transactions and get transaction fees.
>
> SPV-mining is to prevent hashing hardware from having to waste power when it
> isn't needed.

As long as miners switch back to the new longest chain after they
validate the block, mining on top of the
non-most-work-but-surely-valid may be less risky than mining on top of
a most-work-but-potentially-invalid block.
This has risks too. In both cases, if they don't mine a block during
the block validation, everything is fine.
If they successfully SPV mine, they risk having mined on top of an
invalid block, which not only means lost coins for them but high risk
for regular SPV users.
If they successfully mine on top of the previous block, they start a
mini-race that they can win or not, but the impact to regular SPV
users is much lower.
The later may be slightly less profitable, but I bet the difference is
negligible. It would be interesting to know if miners actually did
this numbers and how (in case their model is incomplete or flawed).

It is important to note that while SPV mining requires you to produce
empty blocks, mining on the previous on top of the previous block
allows you to include transactions and earn fees.
In a future where block rewards aren't so overwhelmingly dominated by
subsidies, the numbers will run against SPV mining.
In a future without (or with negligible) subsidy, SPV mining is always
inferior to just keep mining on top of the same block you were mining
until you fully validate the next one.

> It may be less of a problem if (when?) electricity costs dominate hardware
> capital costs.

This seems correct (for both cases).
It's also less worrying the shorter the full validation time of a block is.

From tier.nolan at gmail.com  Sun Jul 12 18:54:38 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Sun, 12 Jul 2015 19:54:38 +0100
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CABm2gDrPesyv95UHfDCRThaEkAQQ+rdQ1FN0ad0mFX9hTRj33A@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<CAE-z3OWOoHfMaEN04CQ-j8tzmAr1+Evjh+tfHRDbF6F1jxykHA@mail.gmail.com>
	<CABm2gDrPesyv95UHfDCRThaEkAQQ+rdQ1FN0ad0mFX9hTRj33A@mail.gmail.com>
Message-ID: <CAE-z3OVTgmo0H-Z-f6jhc_kv96rJ_rSYuQyBcjrSHD6T++UAZg@mail.gmail.com>

On Sun, Jul 12, 2015 at 7:37 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:

> As long as miners switch back to the new longest chain after they
> validate the block, mining on top of the
> non-most-work-but-surely-valid may be less risky than mining on top of
> a most-work-but-potentially-invalid block.
>

It depends on how long they are waiting.  If they receive a header, it is
very likely to be part of a valid block.

The more time that passes, the more likely that the header's block was
invalid after all.

This tradeoff is what the timeout takes into account.  For a short period
of time after the header is received, it is probably valid but eventually,
as time passes without it being fully validated, it is more likely to be
false after all.

If they successfully SPV mine, they risk having mined on top of an
> invalid block, which not only means lost coins for them but high risk
> for regular SPV users.
>

With a 1 minute timeout, there is only a 10% chance they will find another
block.

It is important that when a header is marked as "probably invalid" that all
the header's children are also updated too.  The whole chain times out.

It is important to note that while SPV mining requires you to produce
> empty blocks, mining on the previous on top of the previous block
> allows you to include transactions and earn fees.
> In a future where block rewards aren't so overwhelmingly dominated by
> subsidies, the numbers will run against SPV mining.
>

Agreed.  Transaction only fees changes the whole incentive structure.

A fee pool has been suggested to keep things as they are now.  All fees
(mint & tx fees) are paid into a fee pool.  1% of the total pool fund is
paid to the coinbase.

This keeps the total payout per block reasonably stable.  On the other
hand, it removes the incentive to actually include transactions at all.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150712/6473eead/attachment.html>

From alex at betarho.net  Mon Jul 13 12:55:14 2015
From: alex at betarho.net (Alex Barcelo)
Date: Mon, 13 Jul 2015 12:55:14 +0000
Subject: [bitcoin-dev] About hardware accelerators advantages for full-node
	(not mining)
Message-ID: <c872dcb5d7538526a251829ec9d90afb@owncloud.betarho.net>

I am searching for guidance and opinion in the subject's matter. I will begin with my use case, too see whether my ideas makes sense or not.

I have a Jetson TK1[1], which is a GPU (CUDA) powered development board. I thought that it may be a power-efficient device (in bitcoin environment), and thought about having it as a full-node. Either as a public full-node, if it makes sense, or a local full-node, to allow my PCs to perform relay onto the bitcoind in the Jetson. My idea is to run a bitcoind daemon on the Jetson as a node with high performance-per-watt (also cheap and repurposable). A pure-CPU implementation of bitcoind will clog the CPU

I assume that there are a bunch of heavy-compute highly-parallel functions which could be "outsourced" to a GPU. I may want to fork and/or contribute on that. However, maybe I am speaking nonsense. I have more background on parallel programming than my knowledge on bitcoin protocol. So, before coding a complete mess, I wanted to hear some opinions on the idea/configuration.

[1] https://developer.nvidia.com/jetson-tk1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150713/5867bac9/attachment.html>

From thomasv at electrum.org  Mon Jul 13 13:06:08 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Mon, 13 Jul 2015 15:06:08 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55A3B52C.9020003@electrum.org>
References: <55A3B52C.9020003@electrum.org>
Message-ID: <55A3B7C0.6030909@electrum.org>

Dear Bitcoin developers,

I would like to propose an extension of the signature scheme used in
the Payment Protocol (BIP70), in order to authorize payment requests
signed by user at domain aliases, where the alias is verified using
DNSSEC (OpenAlias).

Note that the Payment Protocol already includes the possibility to
sign requests with user at domain aliases, using so-called "SSL email
certificates". Email certificates do not require ownership of a domain
name. They are usually delivered by a trusted CA, to the owner of an
email address.

So, why extend BIP70? Well, I believe that SSL email certificates, as
they exist today, are not well suited for payment requests. The core
issue is that email certificates are not delivered by the entity that
owns the same domain. This has the following implications:

1. No cross-verification. Two different CAs may deliver certificates
   for the same email address. Thus, if a user's mailbox is
   compromised, the hacker can obtain a new certificate for the
   compromised email address, from another CA, and sign payment
   requests with it.  OTOH, if the certificate was delivered by the
   same entity, they could require revokation of the existing
   certificate before issuing a new one. Revocation of a certificate
   would require signing a challenge with the corresponding private
   key.

2. Dilution of responsibilities. Three parties are involved in the
   security of an email certificate: the owner of the email address,
   the CA who signs the certificate, and the owner of the domain
   hosting the email service. If something goes wrong and a user
   claims that a payment request was not signed by them, it is not
   possible to determine who is to blame: the user, the domain owner
   or the CA? Any of these parties could have obtained or issued a new
   certificate.  OTOH, if the alias "user at domain" was issued by
   "domain", we would have clear semantics and clear
   responsibilities. Instead of involving three parties, as in "User X
   hosted at domain Y was verified by trusted authority Z who is not
   shown in the alias", the alias only involves two parties: "user X
   was verified by domain Y". If domain Y misbehaves and issues a
   second certificate for user X, while the first certificate is still
   valid, then the first certificate can serve as a public proof that
   they misbehaved.

3. Lowest common denominator: email is only a communication channel,
   used for authentication by some CAs. Other CAs may decide to use
   other, possibly better, identity verification procedures. However,
   because of the absence of cross verification, the security of the
   whole scheme will always be the security of an email address,
   because it remains the method used by less regarding CAs.

In fact, these issues are so bad that I believe BIP70 should be
amended to reject email certificates.

These issues would be solved, if we could enforce that the user at domain
certificate was delivered by the same entity that controls the domain.
How can we do that? Clearly, we need to change the certificate chain
validation procedure. I see two methods to achieve this:

  1. Keep using TLS and change the certificate chain validation.
  2. Use DNSSEC and Openalias.


Method 1: Modified chain validation.
------------------------------------

This introduces a new type of user certificate, where:

 - The commonName is a user at domain alias.
 - The certificate for user at domain must be issued by a domain
   certificate for the same domain (with some rules to allow
   wildcards).
 - Validation of the user at domain certificate does not require the
   issuer certificate to have a CA bit.

This solution would probably be the easiest to deploy, because it uses
TLS certificate chain validation, which is already available in BIP70
compatible wallets. However, it will break compatibility with the
existing certificate validation procedures.


Method 2: DNSSEC and OpenAlias.
-------------------------------

OpenAlias (http://openalias.org) is a standard for storing Bitcoin
addresses and public keys in DNS TXT records. DNSSEC chain validation
imposes that a record is signed by its parent.

In order to use DNSSEC with BIP70, we may add a new pki_type to BIP70
payment requests (let me call it 'dnssec+btc'), that indicates that
the request has been signed with a Bitcoin public key, and that the
chain validation uses DNSSEC. The chain of signatures may be included
in the payment request.

This solution has my preference. It has been implemented in Electrum
and will be available in version 2.4.



Please let me know what you think. Standardizing that proposal will
probably require a new BIP number, because BIP70 is already final. I
am willing to help doing that. OpenAlias developers have also expressed
their support, and are willing to provide assistance.


From tier.nolan at gmail.com  Mon Jul 13 13:47:57 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 13 Jul 2015 14:47:57 +0100
Subject: [bitcoin-dev] About hardware accelerators advantages for
 full-node (not mining)
In-Reply-To: <c872dcb5d7538526a251829ec9d90afb@owncloud.betarho.net>
References: <c872dcb5d7538526a251829ec9d90afb@owncloud.betarho.net>
Message-ID: <CAE-z3OXezLpr+v3zgx3GeNqii3z06uC0u6GkGk9P8Adg_8d1NA@mail.gmail.com>

The main processor load is for signature verification.

This requires a hash function call, some large number maths and an elliptic
curve operation.  The elliptic curve stuff is the longest step.

This takes around 1ms per signature on normal hardware, but optimized code
is faster.

The main task is to prove that

R = u1 * G + u2 * Q

G is a constant, and the rest are different per signature.

Some of the core team have created a fast CPU implementation.

 https://github.com/bitcoin/secp256k1.git

There was talk of batch verification of signatures.  The process might take
16 signatures and compute them together.

I think a lot of the benefit of the GPU would be lost due to communication
bandwidth.  GPU miners benefit from needing very little information to be
sent to the GPU routine.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150713/18205823/attachment.html>

From pete at petertodd.org  Mon Jul 13 16:04:53 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 13 Jul 2015 12:04:53 -0400
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
Message-ID: <20150713160453.GB19337@savin.petertodd.org>

On Sat, Jul 11, 2015 at 11:24:48AM +0200, Jorge Tim?n wrote:
> All miners should validate transactions precisely because of the latest
> attack you've described. Full miners can gain a lot from this attack to
> leverage their full validation against spv miners who blindly spend energy
> hashing on top of something that may be worthless crap. SPV mining makes no
> sense, but some miners claim they're doind it for very short periods of
> time, which shouldn't be as bad as doing it all the time.
>
> I think it would be more rational for them to keep mining on top of the old
> block until they've fully validated the new block (which shouldn't take so
> long anyway), even if this slightly increases the orphan rate.

You're missing something really critical about what F2Pool/AntPool were
(are?) doing: They're finding out about new blocks not by getting block
headers from just anywhere, but by connecting to other pools' via
stratum anonymously and determining what block hash they're telling the
hashers at the pool to work on. (e.g. what prevblockhash is in the block
header of shares being generated)

If other pools try to fake this information they're immediately and
directly losing money, because they're telling their own hashers to make
invalid blocks. This of course has a high chance of being detected, and
can easily be FUDed into "STOP MINING AT FOO POOL!" reardless of what
the ivory tower game theory might say. The only hope the pools have is
to somehow identify which connections correspond to other pools with
high reliability and target just those connections - good luck on that.


Anyway, all this concern about SPV mining is misguided: relying purely
on SPV w/ low #'s of confirmations just isn't very smart. What SPV can
do - at least while the inflation subsidy is still high - is give
reasonable protection against your third-party-run trusted full nodes
from lying to you, simply because doing so has well-defined costs in
terms of energy to create fake blocks. Targetting enough people at once
to make a fake block a worthwhile investment is difficult, particularly
when you take into account how timing works in the defenders favor - the
attacker probably only has a small % of hashing power, so they're going
to wait a long time to find their fake block. Between that and a trusted
third party-run full node you're probably reasonably safe, for now.

-- 
'peter'[:-1]@petertodd.org
0000000000000000086007e31decd6eb80e07f77271ef50c69e1e6342161f4e5
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150713/4cc5aaa3/attachment.sig>

From elombrozo at gmail.com  Mon Jul 13 17:33:31 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Mon, 13 Jul 2015 10:33:31 -0700
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <20150713160453.GB19337@savin.petertodd.org>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<20150713160453.GB19337@savin.petertodd.org>
Message-ID: <CABr1YTedpe+nAJDh6WdwSjxk_0Y-=pAuRLZvvKKS_srtUsAdvg@mail.gmail.com>

>
> On Sat, Jul 11, 2015 at 11:24:48AM +0200, Jorge Tim?n wrote:
> > All miners should validate transactions precisely because of the latest
> > attack you've described. Full miners can gain a lot from this attack to
> > leverage their full validation against spv miners who blindly spend
> energy
> > hashing on top of something that may be worthless crap. SPV mining makes
> no
> > sense, but some miners claim they're doind it for very short periods of
> > time, which shouldn't be as bad as doing it all the time.
> >
> > I think it would be more rational for them to keep mining on top of the
> old
> > block until they've fully validated the new block (which shouldn't take
> so
> > long anyway), even if this slightly increases the orphan rate.
>
> You're missing something really critical about what F2Pool/AntPool were
> (are?) doing: They're finding out about new blocks not by getting block
> headers from just anywhere, but by connecting to other pools' via
> stratum anonymously and determining what block hash they're telling the
> hashers at the pool to work on. (e.g. what prevblockhash is in the block
> header of shares being generated)
>
> If other pools try to fake this information they're immediately and
> directly losing money, because they're telling their own hashers to make
> invalid blocks. This of course has a high chance of being detected, and
> can easily be FUDed into "STOP MINING AT FOO POOL!" reardless of what
> the ivory tower game theory might say. The only hope the pools have is
> to somehow identify which connections correspond to other pools with
> high reliability and target just those connections - good luck on that.
>
>
> Anyway, all this concern about SPV mining is misguided: relying purely
> on SPV w/ low #'s of confirmations just isn't very smart. What SPV can
> do - at least while the inflation subsidy is still high - is give
> reasonable protection against your third-party-run trusted full nodes
> from lying to you, simply because doing so has well-defined costs in
> terms of energy to create fake blocks. Targetting enough people at once
> to make a fake block a worthwhile investment is difficult, particularly
> when you take into account how timing works in the defenders favor - the
> attacker probably only has a small % of hashing power, so they're going
> to wait a long time to find their fake block. Between that and a trusted
> third party-run full node you're probably reasonably safe, for now.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000086007e31decd6eb80e07f77271ef50c69e1e6342161f4e5
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150713/78b77a62/attachment-0001.html>

From elombrozo at gmail.com  Mon Jul 13 17:49:40 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Mon, 13 Jul 2015 10:49:40 -0700
Subject: [bitcoin-dev] SPV Mining reveals a problematic incentive issue.
In-Reply-To: <20150713160453.GB19337@savin.petertodd.org>
References: <CAFdHNGg2dezj4V-i-E6dRLp99nZMQ_ErKdBo0OgQJ=9WPm90jQ@mail.gmail.com>
	<CABm2gDoAa5F5crO4enKO-Qqb+Zd3=9b8ohBDYmrygsPSWdevoQ@mail.gmail.com>
	<20150713160453.GB19337@savin.petertodd.org>
Message-ID: <CABr1YTcBrqsN0=QbqxMDDJyVz25nJaSKBK4zYQRx0pBd4Wdsfw@mail.gmail.com>

My other email client messed up. I apologize for the blank message.

Anyhow...

Even though the cost of mining bad blocks is high enough to deter most
deliberate attacks, if we're not properly validating blocks, this
deterrence does not stop bugs nor version issues and it opens up attack
vectors like someone hacking into a mining pool server.

It is imperative we continue to look for ways to make secure validation
cheaper. I would make this #1 priority. Not only is it crucial to the
integrity of our security model - it is crucial for scalability and
decentralization as well.

- Eric Lombrozo
On Jul 13, 2015 11:05 AM, "Peter Todd" <pete at petertodd.org> wrote:

> On Sat, Jul 11, 2015 at 11:24:48AM +0200, Jorge Tim?n wrote:
> > All miners should validate transactions precisely because of the latest
> > attack you've described. Full miners can gain a lot from this attack to
> > leverage their full validation against spv miners who blindly spend
> energy
> > hashing on top of something that may be worthless crap. SPV mining makes
> no
> > sense, but some miners claim they're doind it for very short periods of
> > time, which shouldn't be as bad as doing it all the time.
> >
> > I think it would be more rational for them to keep mining on top of the
> old
> > block until they've fully validated the new block (which shouldn't take
> so
> > long anyway), even if this slightly increases the orphan rate.
>
> You're missing something really critical about what F2Pool/AntPool were
> (are?) doing: They're finding out about new blocks not by getting block
> headers from just anywhere, but by connecting to other pools' via
> stratum anonymously and determining what block hash they're telling the
> hashers at the pool to work on. (e.g. what prevblockhash is in the block
> header of shares being generated)
>
> If other pools try to fake this information they're immediately and
> directly losing money, because they're telling their own hashers to make
> invalid blocks. This of course has a high chance of being detected, and
> can easily be FUDed into "STOP MINING AT FOO POOL!" reardless of what
> the ivory tower game theory might say. The only hope the pools have is
> to somehow identify which connections correspond to other pools with
> high reliability and target just those connections - good luck on that.
>
>
> Anyway, all this concern about SPV mining is misguided: relying purely
> on SPV w/ low #'s of confirmations just isn't very smart. What SPV can
> do - at least while the inflation subsidy is still high - is give
> reasonable protection against your third-party-run trusted full nodes
> from lying to you, simply because doing so has well-defined costs in
> terms of energy to create fake blocks. Targetting enough people at once
> to make a fake block a worthwhile investment is difficult, particularly
> when you take into account how timing works in the defenders favor - the
> attacker probably only has a small % of hashing power, so they're going
> to wait a long time to find their fake block. Between that and a trusted
> third party-run full node you're probably reasonably safe, for now.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000086007e31decd6eb80e07f77271ef50c69e1e6342161f4e5
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150713/f95a2c26/attachment.html>

From hearn at vinumeris.com  Mon Jul 13 22:31:36 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Tue, 14 Jul 2015 00:31:36 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>

Hi Thomas,

FYI there is a company called Netki is also working on a kind of DNSSEC
integration with BIP70, there's a thread here about their efforts:


https://groups.google.com/forum/#!searchin/bitcoinj/dnssec/bitcoinj/QFAH1F2dEwE/36oWDwREEV4J

If you would like to work on this, perhaps it's worth teaming up with them?
Obviously they plan to have an open spec and open source implementation.

Now w.r.t. the other things - I think we have discussed this before, but to
reiterate:  the biggest flaw with doing things the way you suggest is that
in practice, no email provider is going to implement your scheme any time
soon. Most obviously the big web mail providers won't. Therefore hardly
anyone will use it.

Whilst having an extension cannot really hurt, obviously, BIP70 will not be
amended to reduce the certificate types it allows in favour of a system
that has a very low chance of mainstream adoption. Restricting options like
that would just make no sense at all.

I think your primary concern is that if your email account is hacked,
someone could get a cert issued in your name, and you'd be unable to revoke
it? But that's not quite true. Every CA I know of allows you to revoke a
certificate that was issued for your email address if you have access to
that email address. Now, if you don't know that this issuance took place,
you cannot invoke that procedure of course .... but that's what certificate
transparency is already working on solving in a scalable manner:

  https://crt.sh/

That site doesn't currently index email address certs, but it certainly
could with minimal extra effort by the creators as they're almost identical
to domain name certs.

So the existing infrastructure seems to have everything in place to solve
that issue.

Now, if you still want a mechanism that eliminates the CA entirely, I think
there's a better approach which is backwards compatible with existing email
providers. It works like this:

   1. User sends a public key in the subject line to a one-time collector
   address like <random-number>@publish-email-headers.net    (who runs this
   service is arbitrary as they do not need to be trusted). On receiving the
   email, the headers are made available via
   https://publish-email-headers.net/<random-number> for download by the
   users wallet.

   2. The act of sending the email triggers DKIM signing of the subject
   line and From header, and thus, the public key and email address are bound
   together via the ESP's own signing key.

   3. The textual email headers can be run through the DKIM validation
   algorithm in combination with the domain key retrieved via DNS.

With this scheme, setup is largely automatic and involves the wallet asking
the operating system to open a mailto: URL. The user just has to press
"send" and the wallet can then sit on a long-lived HTTPS connection waiting
for the headers to turn up. Once the headers are downloaded, they can be
saved to disk and this becomes your "DKIM certificate" which can then be
used with a new pki_type in BIP70.

Note the following useful characteristics of this approach:

   1. It does not require the email provider to know/care about Bitcoin.
   DKIM is already widely deployed by major email providers due to its
   benefits for spam and phishing protection: the majority of all email on the
   internet is DKIM signed. So you automatically have a system that works with
   nearly all consumer email accounts.

   2. The enrolment UI is straightforward, assuming the user has a working
   mailto: handler on their system. Even webmail services like Gmail can
   attach themselves to mailto: handling these days.

   3. There are DKIM validation libraries already in existence, so new code
   required is minimal.

And the downsides:

   1. There is no way to revoke such a "certificate" because you have, of
   course, abandoned the PKI which specifies how to handle all these details.
   You could potentially hijack/reuse OCSP to allow such a custom cert to be
   revoked, but then the question is, who actually runs such a revocation
   server. Doing things like this is why we have CAs in the first place.

   2. The UX leaves a bit of binary nonsense in the users sent folder that
   clutters up their account.

   3. Does it even solve the right problem? A lot of users don't actually
   use emails as identifiers anymore. In the modern world people are using
   their social networking profiles (i.e. Facebook) and phone numbers (e.g.
   for WhatsApp) as the personal identifier of choice. Email address support
   might be solving yesterdays problem.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/58de7de1/attachment.html>

From thomasv at electrum.org  Tue Jul 14 06:42:42 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Tue, 14 Jul 2015 08:42:42 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
Message-ID: <55A4AF62.4090607@electrum.org>

Mike Hearn wrote:

> Hi Thomas,
> 
> FYI there is a company called Netki is also working on a kind of DNSSEC
> integration with BIP70, 
> there's a thread here about their efforts:
> https://groups.google.com/forum/#!searchin/bitcoinj/dnssec/bitcoinj/QFAH1F2dEwE/36oWDwREEV4J

Hi Mike,

Thanks! I believe it is better to keep the current discussion on
bitcoin-dev, though.

> If you would like to work on this, perhaps it's worth teaming up with them?
> Obviously they plan to have an open spec and open source implementation.
> 

I would love to work with Netki. However, it's not clear to me what they
are selling. OpenAlias is an open standard, not a company. In contrast,
Netki have very long Terms of Service, that do not help understand what
part of their solution is open-source, and what is the product. They
surely know about OpenAlias, it would be nice to hear what they think
about it.

> Now w.r.t. the other things - I think we have discussed this before, but to
> reiterate:  the biggest flaw with doing things the way you suggest is that
> in practice, no email provider is going to implement your scheme any time
> soon. Most obviously the big web mail providers won't. Therefore hardly
> anyone will use it.
> 

What I propose does not rely on email. Please read again.
I am proposing an alternative way to sign BIP70 requests. This is
independent from the communication channel used to send/receive them.

> Whilst having an extension cannot really hurt, obviously, BIP70 will not be
> amended to reduce the certificate types it allows in favour of a system
> that has a very low chance of mainstream adoption. Restricting options like
> that would just make no sense at all.
> 

Hardly anyone uses email certificates today, so I don't think it would
affect a lot of users. In contrast, it would increase the security of
all users who don't use email certs, because they may receive a payment
request signed by an email cert.

> I think your primary concern is that if your email account is hacked,
> someone could get a cert issued in your name, and you'd be unable to revoke
> it? 

If your email account is hacked and someone else gets a certificate in
your name, you'd be unable to *know* about it, because they would use a
different CA.

> But that's not quite true. Every CA I know of allows you to revoke a
> certificate that was issued for your email address if you have access to
> that email address. Now, if you don't know that this issuance took place,
> you cannot invoke that procedure of course .... but that's what certificate
> transparency is already working on solving in a scalable manner:
> 
>   https://crt.sh/
> 
> That site doesn't currently index email address certs, but it certainly
> could with minimal extra effort by the creators as they're almost identical
> to domain name certs.
> 
> So the existing infrastructure seems to have everything in place to solve
> that issue. 

That does not look so... not until (1) BIP70 wallets integrate with
https://crt.sh, (2) you convince that service to index email certs (3)
you convince all CAs to report all email certs they issue to crt.sh.

Good luck with that!


> Now, if you still want a mechanism that eliminates the CA entirely, I think
> there's a better approach which is backwards compatible with existing email
> providers. It works like this: [...]

Again, that olution is for email only. We both agree that this is
solving yesterdays problems, so there's no need to discuss that.

From ric at spagni.net  Tue Jul 14 08:29:25 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Tue, 14 Jul 2015 10:29:25 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oRP+mMKb9QynLzRivKc6Rfc-gZrtCEPKVnY9Lwpt5XmCQ@mail.gmail.com>

Hi Mike,

FYI there is a company called Netki is also working on a kind of DNSSEC
> integration with BIP70, there's a thread here about their efforts:
>
>
>
> https://groups.google.com/forum/#!searchin/bitcoinj/dnssec/bitcoinj/QFAH1F2dEwE/36oWDwREEV4J
>
> If you would like to work on this, perhaps it's worth teaming up with them?
> Obviously they plan to have an open spec and open source implementation.
>

Netki's solution is incredibly limited, it's a single return value and no
metadata (where OA encapsulates metadata in KV pairs). This does not lend
itself well to handling BIP70-style communication.

As an aside, they also seem to have a complete disregard for lookup
privacy, which we address in OpenAlias by means of DNSCrypt encrypted
lookups. To that end we have even written the first independent DNSCrypt
implementation (ie. over-and-above dnscrypt-proxy) which provides a full
Python implementation that uses libsodium / nacl if available, but falls
back to a 100% Python slownacl implementation:
https://github.com/openalias/dnscrypt-python

Riccardo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/625dd0fb/attachment.html>

From milly at bitcoins.info  Tue Jul 14 11:19:52 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Tue, 14 Jul 2015 07:19:52 -0400
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55A4AF62.4090607@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
Message-ID: <55A4F058.4020800@bitcoins.info>


> If your email account is hacked and someone else gets a certificate in
> your name, you'd be unable to *know* about it, because they would use a
> different CA.

Maybe I am confused but I thought you are using DNSSEC to sign the zones 
so only the domain owner could issue certificates for a zone (or 
corresponding email address).  If you have "example.com" the domain 
owner of the domain would sign zone "joe.example.com" which can 
correspond to the "joe at example.com" email address.  Under this scenario 
you would only have one CA per domain.

Russ



From hearn at vinumeris.com  Tue Jul 14 11:45:06 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Tue, 14 Jul 2015 13:45:06 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55A4AF62.4090607@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
Message-ID: <CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>

Hi Thomas,

Re: NetKi, I think any proposal in this space has to be an open standard,
almost by the definition of what it is. At any rate, it may be worth
talking to them. They have signed up to implement their system at least.

I did understand that your proposal does not rely on email - for instance a
web forum could issue username at reddit.com type aliases, even if those are
not also email accounts. I am just continuing the comparison against email
address certs.

It's also the case that a domain can use the DKIM setup without actually
offering email accounts. They can just have a web form or API that triggers
sending of the signed email (or simply, providing the signed headers
themselves). Thus the same system can be used transparently by both email
providers and other sites that don't give their users email addresses, but
would still like to use the same system.

Hardly anyone uses email certificates today, so I don't think it would
> affect a lot of users.


No, but obviously we'd like to change that! The holdup is not the
certificate side of things, really, but rather the lack of a
store-and-forward network for signed payment requests. I keep asking
someone to build one but I fear the problem is almost too simple ......
everyone who looks at this decides to solve 12 other problems
simultaneously, it gets complicated, then they never launch :(

Once there's a simple and robust way to get PaymentRequest's from one end
user to another, even when that first user is offline, then getting an
email cert issued is no big deal.

That does not look so... not until (1) BIP70 wallets integrate with
> https://crt.sh, (2) you convince that service to index email certs (3)
> you convince all CAs to report all email certs they issue to crt.sh.
>

Any solution that separates identity providers from certificate issuers
would have these requirements, though. And as many identity providers today
do not wish to become CAs too, it seems fundamental.

I don't think it's such a problem, mind you. The crt.sh website is actually
a frontend to the CT protocol, which is a somewhat blockchain like audit
log that's eventually intended to contain all issued certificates. Right
now, of course, they focus on SSL certs because those are the most common
and important. If other kinds of certs became more widely used, support in
the infrastructure would follow.



Don't get me wrong - I would like to see a way for a domain to delegate
BIP70 signing power to a third party. For instance, this would mean payment
processors like BitPay could sign on the behalf of the merchant, and the
merchant identity would then show up in wallets. The "chain a cert off a
domain cert" trick would be a good way to do that, though rather than
hacking the X.509 stack to validate invalid stuff, at this point it may as
well be a custom (better) cert format. There's little reason to use X.509
beyond backwards compatibility.

But the most popular identity providers today either don't care about
Bitcoin at all, or worse, are developing competitors to it. So for real
adoption to occur, we must have solutions that do not require identity
provider cooperation. I realise this is a business reason rather than a
technical reason, but it's a very strong one - so bootstrapping off
existing infrastructure with a split CA/ID provider design still makes much
more sense to me.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/ebdd5af6/attachment.html>

From thomasv at electrum.org  Tue Jul 14 13:13:45 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Tue, 14 Jul 2015 15:13:45 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55A4F058.4020800@bitcoins.info>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>	<55A4AF62.4090607@electrum.org>
	<55A4F058.4020800@bitcoins.info>
Message-ID: <55A50B09.4010005@electrum.org>



Le 14/07/2015 13:19, Milly Bitcoin a ?crit :
> 
>> If your email account is hacked and someone else gets a certificate in
>> your name, you'd be unable to *know* about it, because they would use a
>> different CA.
> 
> Maybe I am confused but I thought you are using DNSSEC to sign the zones
> so only the domain owner could issue certificates for a zone (or
> corresponding email address).  If you have "example.com" the domain
> owner of the domain would sign zone "joe.example.com" which can
> correspond to the "joe at example.com" email address.  Under this scenario
> you would only have one CA per domain.
> 

One CA per domain is indeed what I want to achieve. The paragraph you
quoted was about the current situation with email certs, where that is
not the case.

From justin at netki.com  Tue Jul 14 17:29:02 2015
From: justin at netki.com (Justin Newton)
Date: Tue, 14 Jul 2015 10:29:02 -0700
Subject: [bitcoin-dev]  Proposal: extend bip70 with OpenAlias
Message-ID: <CABqynx+YAgt404zXAqwq9_AjvmX6J0=vBi=xK_56AdsR8nMF+A@mail.gmail.com>

[Sorry to break list threading, I joined the list to respond here, and
don't have the original message to respond to]

[Copying message 9412 from thomasv at electrum.org]

Mike Hearn wrote:

>* Hi Thomas,
*> >* FYI there is a company called Netki is also working on a kind of DNSSEC
*>* integration with BIP70,
*>* there's a thread here about their efforts:
*>* https://groups.google.com/forum/#!searchin/bitcoinj/dnssec/bitcoinj/QFAH1F2dEwE/36oWDwREEV4J
<https://groups.google.com/forum/#!searchin/bitcoinj/dnssec/bitcoinj/QFAH1F2dEwE/36oWDwREEV4J>
*
Hi Mike,

Thanks! I believe it is better to keep the current discussion on
bitcoin-dev, though.

>* If you would like to work on this, perhaps it's worth teaming up with them?
*>* Obviously they plan to have an open spec and open source implementation.
*>
I would love to work with Netki. However, it's not clear to me what they
are selling. OpenAlias is an open standard, not a company. In contrast,
Netki have very long Terms of Service, that do not help understand what
part of their solution is open-source, and what is the product. They
surely know about OpenAlias, it would be nice to hear what they think
about it.

[FROM JUSTIN]


Hi there.  You are correct that we are a company providing a service,
however, that service is also based on an open standard which we are
proposing.  I'll be honest that we haven't done the greatest job in
promoting the standard so far.  More coming soon on that front.  Any
of the Open Source Wallet Name resolvers that we have created do
lookups against the standard record formats, and not directly against
our servers in any way.  Information on the record formats as well as
links to the lookup API server and some early libraries can be found
here:  https://www.netki.com/#/developers and here:
https://github.com/netkicorp


To break it down briefly, we have an open lookup standard based on
both the namecoin blockchain as well as traditional DNSSEC.  (You can
choose your own adventure of using namecoin based names or traditional
ICANN names).  We DO provide a service where we will register or host
names on your behalf. However if you follow the format and host them
yourself, everything will work just fine, and our open source lookup
server and libraries will provide those results exactly the same as if
the names were hosted with us.  To that end, we have had conversations
with several companies in the space who intend to host their own
names, and we intend to work with them on the effort to ensure our
documentation is sufficient to ensure they can successfully do so.

In terms of comparisons to OpenAlias, I think there are a lot of
similarities, but a few differences.  First the similarities:


1> We both use DNSSEC.

2> We both have the option of storing the address directly in the DNS record.


Differences:

1> We do not use DNSCrypt.  I understand why you chose to, but we were
concerned about broad interoperability and easy broad distribution of
hosting, so decided not to use it.  We have other ways of achieving
privacy, using HD Wallets and Payment Requests.


2> We have the option of storing a URL rather than just a wallet
address in the TXT record.  This allows a second level lookup against
the URL to get back a unique HD Wallet address or Payment Request each
time, further protecting user privacy and security.  Using Wallet
Names with Payment Requests allows for the user experience of typing
in an easy to remember name and getting back the "green lock" and who
the validated recipient is.  This also provides an auto audit of the
end to end DNS SEC process, in the case the path were somehow
compromised, the signature on the payment request can provide an
additional check.


3> We use a 2 tier lookup format.  The first lookup returns a list of
currencies or payment types supported by the Wallet Name.  The second
lookup goes to a record specific to that currency type to get the
address to go to.  We believe this to be a more scalable solution in a
world where someone can have both multiple digital currency types, but
then also multiple types of colored coins, and wants a simple way to
share a single name for all of those different addresses.  This allows
the wallet to do the work behind the scene of choosing the currency it
wants to send, and automatically getting back the right address to
send to, without the user having to do anything different.

4> We mandate DNSSEC while you make it optional.  We did this because
we believe giving the user the option of NOT using DNSSEC is like
letting them order a car with no brakes.  We weren't sure how we would
explain to them why their money was gone when they really didn't
understand the risks they were taking up front. We had a lot of
discussion about it before coming to the decision we did, and I can
see why you went the other way, although I do believe we made the
right choice.


Additionally, we just released another open source API server to help
with the "other half" of the lookup problem.  Its in its infancy, and
we are certainly taking feedback on it at this time.  It is called
Addressimo <https://github.com/netkicorp/addressimo> and will serve
unique HD Wallet addresses or Payment Requests for every lookup, thus
allowing a user to have a private, secure way to share a Wallet Name
that can be used to send them any digital currency.

I'd love to talk here or offline about merging standards going
forward.  As an FYI, Verisign has also delivered a standard to the
IETF using DNSSEC to pass payment information here:
https://tools.ietf.org/html/draft-wiley-paymentassoc-00  We have
started discussions with them about merging standards as well.


They actually have a really nice way in their standard to encode email
addresses that more or less ensures that there won't be name space
collision in the case that there is already a record "joe.user.com"
and you want to create one for "joe at user.com" that we are looking at
adding to what we are doing in the next update to our record formats.


In any case, I'd much rather we had one effort going forward than
multiples, so let's talk!

[/FROM JUSTIN]




Justin W. Newton
Founder/CEO
NetKi, Inc.

justin at netki.com
+1.818.261.4248
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/cb6f564d/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 10972 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/cb6f564d/attachment-0001.tiff>

From ric at spagni.net  Tue Jul 14 19:07:28 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Tue, 14 Jul 2015 21:07:28 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>

> To break it down briefly, we have an open lookup standard based on
> both the namecoin blockchain as well as traditional DNSSEC.  (You can
> choose your own adventure of using namecoin based names or traditional
> ICANN names).


Good, that's roughly analogous with what OpenAlias defines.

We DO provide a service where we will register or host
> names on your behalf. However if you follow the format and host them
> yourself, everything will work just fine, and our open source lookup
> server and libraries will provide those results exactly the same as if
> the names were hosted with us.


Also good, much the same as https://cryptoname.co and https://xmr.link


> To that end, we have had conversations
> with several companies in the space who intend to host their own
> names, and we intend to work with them on the effort to ensure our
> documentation is sufficient to ensure they can successfully do so.
>
> In terms of comparisons to OpenAlias, I think there are a lot of
> similarities, but a few differences.  First the similarities:
>
>
> 1> We both use DNSSEC.
>
> 2> We both have the option of storing the address directly in the DNS
> record.
>
>
> Differences:
>
> 1> We do not use DNSCrypt.  I understand why you chose to, but we were
> concerned about broad interoperability and easy broad distribution of
> hosting, so decided not to use it.  We have other ways of achieving
> privacy, using HD Wallets and Payment Requests.
>

And this is the part where you guys look really, really incompetent (and I
don't mean that in a terribly demeaning way, it's just that you're in a
space where you want to be a domain expert, not make a series of
embarrassing and public faux pas).

DNSCrypt requires NO work on the part of the alias creator, DNS server,
SOA, or anything else. It is entirely client side, and allows for *private
lookups*. HD Wallets and Payment Requests are inconsequential, an ISP still
knows every DNS resolution their users are performing.

When using dnscrypt-proxy to perform private lookups they are done against
the 55 free and public DNSCrypt resolvers [1], provided by oVPN, OpenNIC,
OpenDNS, okTurtles, CloudNS, and various individuals. OpenAlias links to
and recommends four of these specifically, as they have the unique
combination of providing Namecoin lookups, supporting DNSSEC validation for
lightweight verification, and claiming not to store logs.

Therefore, DNSCrypt provides encrypted, private, secure, end-user lookups
with no implication on the creation side. That you are unaware of this
(when presumably you at least read the Wikipedia article on the topic) and
are not embracing it is quite surprising, to say the least.


> 2> We have the option of storing a URL rather than just a wallet
> address in the TXT record.  This allows a second level lookup against
> the URL to get back a unique HD Wallet address or Payment Request each
> time, further protecting user privacy and security.  Using Wallet
> Names with Payment Requests allows for the user experience of typing
> in an easy to remember name and getting back the "green lock" and who
> the validated recipient is.  This also provides an auto audit of the
> end to end DNS SEC process, in the case the path were somehow
> compromised, the signature on the payment request can provide an
> additional check.
>

OpenAlias supports this as well, except it does it better by allowing the
KV pairs to also contain a TLSA record before the request, which
effectively makes it a DANE-secured interaction. Your interaction requires
the trusting of multiple CAs, which is an inherent weakness.

3> We use a 2 tier lookup format.  The first lookup returns a list of
> currencies or payment types supported by the Wallet Name.  The second
> lookup goes to a record specific to that currency type to get the
> address to go to.  We believe this to be a more scalable solution in a
> world where someone can have both multiple digital currency types, but
> then also multiple types of colored coins, and wants a simple way to
> share a single name for all of those different addresses.  This allows
> the wallet to do the work behind the scene of choosing the currency it
> wants to send, and automatically getting back the right address to
> send to, without the user having to do anything different.
>

We do the same thing, except in a single call. Here's an example of a
record that has both XMR and BTC addresses:
https://api.openalias.org/donate.getmonero.org?view=full (here are the DNS
records for that:
http://mxtoolbox.com/SuperTool.aspx?action=txt%3adonate.getmonero.org&run=toolpage
)


> 4> We mandate DNSSEC while you make it optional.  We did this because
> we believe giving the user the option of NOT using DNSSEC is like
> letting them order a car with no brakes.  We weren't sure how we would
> explain to them why their money was gone when they really didn't
> understand the risks they were taking up front. We had a lot of
> discussion about it before coming to the decision we did, and I can
> see why you went the other way, although I do believe we made the
> right choice.
>

With OpenAlias a DNSSEC fail is a soft fail, and the user has to confirm
the address. The reasons are threefold:

1. At the moment only 83.5% of the TLDs are signed [2]. The unsigned ones
include some biggies like .sg, .za, and .to

2. Even if the zone *is* signed, DNSSEC deployment is hard. Unmanaged
DNSSEC deployment is out of scope for probably 99.9% of users, even the
usually-technically-ok Bitcoin crowd. Managed DNSSEC is available, but is
quite pricey. UltraDNS, Dyn, and GoDaddy (ikr?) are the three big
providers, and of those three only GoDaddy has a consumer-affordable
product.

3. ThomasV and I have done a stack of testing behind residential and
commercial routers where DNSSEC simply fails (eg. the router runs a really
outdated DNS server that doesn't provide RRSIGs in its response, or the ISP
doesn't care about DNSSEC). Unsurprisingly, this can be fixed by...you
guessed it...doing the lookup via DNSCrypt.

Until we are closer to the bulk of all TLDs being signed, and DNSSEC
becomes at least a little more ubiquitous, we can't lock out huge portions
of the Internet, because then we're not really providing a useful and
usable solution. All we can is make it more difficult to pay an unverified
domain.

Of course, if your aim is to force people to use you as a domain registrar,
then it makes total sense why you'd lock people out;)

Additionally, we just released another open source API server to help
> with the "other half" of the lookup problem.  Its in its infancy, and
> we are certainly taking feedback on it at this time.  It is called
> Addressimo <https://github.com/netkicorp/addressimo> and will serve
> unique HD Wallet addresses or Payment Requests for every lookup, thus
> allowing a user to have a private, secure way to share a Wallet Name
> that can be used to send them any digital currency.
>

Oh snap...https://github.com/openalias/openalias-api


> I'd love to talk here or offline about merging standards going
> forward.  As an FYI, Verisign has also delivered a standard to the
> IETF using DNSSEC to pass payment information here:
> https://tools.ietf.org/html/draft-wiley-paymentassoc-00  We have
> started discussions with them about merging standards as well.
>
>
> They actually have a really nice way in their standard to encode email
> addresses that more or less ensures that there won't be name space
> collision in the case that there is already a record "joe.user.com"
> and you want to create one for "joe at user.com" that we are looking at
> adding to what we are doing in the next update to our record formats.
>

OpenAlias (and your system) doesn't really have to worry about that, as TXT
records can live side-by-side with A / CNAME / MX etc. records. More
importantly, OpenAlias especially doesn't have to worry about it, because
OpenAlias TXT records have a prefix: "oa1:" for OpenAlias v1 records. The
risk of there being a legitimate TXT record that starts with oa1: and
*isn't* an OpenAlias record is, well, pretty negligible.

In any case, I'd much rather we had one effort going forward than
> multiples, so let's talk!
>

I agree, and you guys are in an ideal position to change to supporting the
OpenAlias standard (and enhancing it) without skipping a beat. We would
definitely appreciate and take your input and efforts, and that would make
OpenAlias v2 (oa2:) a standard built out in conjunction with Netki.

Not only do you get Electrum support without lifting a finger, but it will
go a long way to repairing your relationship with the open-source community
at large, several proponents of which have taken great umbrage at what you
were previously pushing as a closed-source, centralised system.

Riccardo

Footnotes:

[1] -
https://github.com/jedisct1/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv
[2] - http://stats.research.icann.org/dns/tld_report/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150714/8b285f92/attachment.html>

From tomh at thinlink.com  Wed Jul 15 00:24:23 2015
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 14 Jul 2015 17:24:23 -0700
Subject: [bitcoin-dev] Mempool "Expected Byte Stay" policy
Message-ID: <55A5A837.1090203@thinlink.com>

Spammers out there are being very disrepectful of my fullnode resources 
these days!  I'm making some changes. In case others are interested, 
here's a description:

There is now a maximum size for the memory pool.  Space is allocated 
with a pretty simple rule.  For each tx, I calculate MY COST of 
continuing to hold it in the mempool.  I measure the cost to me by 
"expected byte stay":

expectedByteStay = sizeBytes * expectedBlocksToConfirm(feeRate)


Rule 1: When there's not enough space for a new tx, I try to make space 
by evicting txes with expectedByteStay higher than tx.

I'm NOT worrying about
  - Fees
    EXCEPT via their effect on confirmation time

  - Coin age
    You already made money on your old coins.  Pay up.

  - CPFP
    Child's expectedBlocksToConfirm is max'ed with its
    parent, then parent expectedByteStay is ADDED to child's

  - Replacement
    You'll get another chance in 2 hours (see below).


Rule 2: A transaction and its dependents are evicted on its 2-hour 
anniversary, whether space is required or not


The latest expectedBlocksToConfirm(feeRate) table is applied to the 
entire mempool periodically.

What do you think?  I'll let you know how it works out.  I'm putting a 
lot of faith in the new fee estimation (particularly its size 
independence).  Another possibility is clog-ups by transactions that 
look like they'll confirm next block, but don't because of factors other 
than fees (other people's blacklists?)


From simongreen at airmail.cc  Wed Jul 15 03:29:25 2015
From: simongreen at airmail.cc (simongreen at airmail.cc)
Date: Wed, 15 Jul 2015 03:29:25 +0000
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
Message-ID: <24662b038abc45da7f3990e12a649b8a@airmail.cc>

With my black hat on I recently performed numerous profitable 
double-spend attacks against zeroconf accepting fools. With my white hat 
on, I'm warning everyone. The strategy is simple:

tx1: To merchant, but dust/low-fee/reused-address/large-size/etc. 
anything that miners don't always accept.

tx2: After merchant gives up valuable thing in return, normal tx without 
triggering spam protections. (loltasticly a Mike Hearn Bitcoin XT node 
was used to relay the double-spends)

Example success story: tx1 paying Shapeshift.io with 6uBTC output is not 
dust under post-Hearn-relay-drop rules, but is dust under 
pre-Hearn-relay-drop rules, followed by tx2 w/o the output and not 
paying Shapeshift.io. F2Pool/Eligius/BTCChina/AntPool etc. are all 
miners who have reverted Hearn's 10x relay fee drop as recommended by 
v0.11.0 release notes and accept these double-spends. Shapeshift.io lost 
~3 BTC this week in multiple txs. (they're no longer accepting zeroconf)

Example success story #2: tx1 with post-Hearn-relay drop fee, followed 
by tx2 with higher fee. Such stupidly low fee txs just don't get mined, 
so wait for a miner to mine tx2. Bought a silly amount of reddit gold 
off Coinbase this way among other things. I'm surprised that reddit 
didn't cancel the "fools-gold" after tx reversal. (did Coinbase 
guarantee those txs?) Also found multiple Bitcoin ATMs vulnerable to 
this attack. (but simulated attack with tx2s still paying ATM because 
didn't want to go to trouble of good phys opsec)

Shoutouts to BitPay who did things right and notified merchant properly 
when tx was reversed.

In summary, every target depending on zeroconf vulnerable and lost 
significant sums of money to totally trivial attacks with high 
probability. No need for RBF to do this, just normal variations in miner 
policy. Shapeshift claims to use Super Sophisticated Network Sybil 
Attacking Monitoring from Blockcypher, but relay nodes != miner policy.

Consider yourself warned! My hat is whiter than most, and my skills not 
particularly good.

What to do? Users: Listen to the experts and stop relying on zeroconf. 
Black hats: Profit!


From dkbryant at gmail.com  Wed Jul 15 08:26:24 2015
From: dkbryant at gmail.com (Dan Bryant)
Date: Wed, 15 Jul 2015 03:26:24 -0500
Subject: [bitcoin-dev] REQ BIP # / Discuss - Sweep incoming unconfirmed
 transactions with a bounty.
In-Reply-To: <CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
References: <CAAUFj10D37A1kfqFNPWz6bOMYSFXQbecJ+RxxOnw6HtwUg70mg@mail.gmail.com>
	<CAOG=w-swH-_cD00Xy5yCN7LebeQSh-oG0gXFM6LxNSDwQZ64Tw@mail.gmail.com>
	<20150703215658.GC5916@muck>
	<CAAUFj11AM3eCX=GDn6384qCi8yKX1jMDF-Jaw2SGemm_HSis9A@mail.gmail.com>
Message-ID: <CAAUFj13BywG8jB=bXDSx15Zdj4QS8ebfd7bTvUxtxC1yL_rFSQ@mail.gmail.com>

Offering a bounty for this feature

Specifically...

Anyone who can put a CPFP transaction creation feature into any wallet
featured on the bitcoin homepage (ref1) can claim this bounty.  The
funds are being raised by donation.  The funds will be dispersed from
the following address when the bounty is claimed:
3FEUByMeaxrNmBCVYjvsnhyAjiUdat5i7M

Currently there isn't much in there, but I welcome angels to fill the bucket.

Here's proof that the multisig address is not 1 of 1:
https://bitcointalk.org/index.php?topic=1122956.0

Bounty announce: https://bitcointalk.org/index.php?topic=1123464.0

ref1: https://bitcoin.org/en/choose-your-wallet

From odinn.cyberguerrilla at riseup.net  Wed Jul 15 11:20:19 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Wed, 15 Jul 2015 04:20:19 -0700
Subject: [bitcoin-dev] Bitcoin Core 0.11.0 released
In-Reply-To: <20150712154910.GA21345@amethyst.visucore.com>
References: <20150712154910.GA21345@amethyst.visucore.com>
Message-ID: <55A641F3.8040504@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

The numbering of the version, though. <shivers>

On 07/12/2015 08:49 AM, Wladimir J. van der Laan wrote:
> Bitcoin Core version 0.11.0 is now available from:
> 
> <https://bitcoin.org/bin/bitcoin-core-0.11.0/>
> 
> This is a new major version release, bringing both new features
> and bug fixes.
> 
> Please report bugs using the issue tracker at github:
> 
> <https://github.com/bitcoin/bitcoin/issues>
> 
> The entire distribution is also available as torrent:
> 
> magnet:?xt=urn:btih:82f0d2fa100d6db8a8c1338768dcb9e4e524da13&dn=bitcoi
n-core-0.11.0&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&
tr=udp%3A%2F%2Ftracker.publicbt.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftrack
er.ccc.de%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&
tr=udp%3A%2F%2Fopen.demonii.com%3A1337&ws=https%3A%2F%2Fbitcoin.org%2Fbi
n%2F
>
>  Upgrading and downgrading =========================
> 
> How to Upgrade --------------
> 
> If you are running an older version, shut it down. Wait until it
> has completely shut down (which might take a few minutes for older
> versions), then run the installer (on Windows) or just copy over
> /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on
> Linux).
> 
> Downgrade warning ------------------
> 
> Because release 0.10.0 and later makes use of headers-first
> synchronization and parallel block download (see further), the
> block files and databases are not backwards-compatible with
> pre-0.10 versions of Bitcoin Core or other software:
> 
> * Blocks will be stored on disk out of order (in the order they
> are received, really), which makes it incompatible with some tools
> or other programs. Reindexing using earlier versions will also not
> work anymore as a result of this.
> 
> * The block index database will now hold headers for which no block
> is stored on disk, which earlier versions won't support.
> 
> If you want to be able to downgrade smoothly, make a backup of your
> entire data directory. Without this your node will need start
> syncing (or importing from bootstrap.dat) anew afterwards. It is
> possible that the data from a completely synchronised 0.10 node may
> be usable in older versions as-is, but this is not supported and
> may break as soon as the older version attempts to reindex.
> 
> This does not affect wallet forward or backward compatibility.
> There are no known problems when downgrading from 0.11.x to
> 0.10.x.
> 
> Important information ======================
> 
> Transaction flooding ---------------------
> 
> At the time of this release, the P2P network is being flooded with
> low-fee transactions. This causes a ballooning of the mempool
> size.
> 
> If this growth of the mempool causes problematic memory use on your
> node, it is possible to change a few configuration options to work
> around this. The growth of the mempool can be monitored with the
> RPC command `getmempoolinfo`.
> 
> One is to increase the minimum transaction relay fee
> `minrelaytxfee`, which defaults to 0.00001. This will cause
> transactions with fewer BTC/kB fee to be rejected, and thus fewer
> transactions entering the mempool.
> 
> The other is to restrict the relaying of free transactions with 
> `limitfreerelay`. This option sets the number of kB/minute at
> which free transactions (with enough priority) will be accepted. It
> defaults to 15. Reducing this number reduces the speed at which the
> mempool can grow due to free transactions.
> 
> For example, add the following to `bitcoin.conf`:
> 
> minrelaytxfee=0.00005 limitfreerelay=5
> 
> More robust solutions are being worked on for a follow-up release.
> 
> Notable changes ===============
> 
> Block file pruning ----------------------
> 
> This release supports running a fully validating node without
> maintaining a copy of the raw block and undo data on disk. To
> recap, there are four types of data related to the blockchain in
> the bitcoin system: the raw blocks as received over the network
> (blk???.dat), the undo data (rev???.dat), the block index and the 
> UTXO set (both LevelDB databases). The databases are built from the
> raw data.
> 
> Block pruning allows Bitcoin Core to delete the raw block and undo
> data once it's been validated and used to build the databases. At
> that point, the raw data is used only to relay blocks to other
> nodes, to handle reorganizations, to look up old transactions (if
> -txindex is enabled or via the RPC/REST interfaces), or for
> rescanning the wallet. The block index continues to hold the
> metadata about all blocks in the blockchain.
> 
> The user specifies how much space to allot for block & undo files.
> The minimum allowed is 550MB. Note that this is in addition to
> whatever is required for the block index and UTXO databases. The
> minimum was chosen so that Bitcoin Core will be able to maintain at
> least 288 blocks on disk (two days worth of blocks at 10 minutes
> per block). In rare instances it is possible that the amount of
> space used will exceed the pruning target in order to keep the
> required last 288 blocks on disk.
> 
> Block pruning works during initial sync in the same way as during
> steady state, by deleting block files "as you go" whenever disk
> space is allocated. Thus, if the user specifies 550MB, once that
> level is reached the program will begin deleting the oldest block
> and undo files, while continuing to download the blockchain.
> 
> For now, block pruning disables block relay.  In the future, nodes
> with block pruning will at a minimum relay "new" blocks, meaning
> blocks that extend their active chain.
> 
> Block pruning is currently incompatible with running a wallet due
> to the fact that block data is used for rescanning the wallet and
> importing keys or addresses (which require a rescan.) However,
> running the wallet with block pruning will be supported in the near
> future, subject to those limitations.
> 
> Block pruning is also incompatible with -txindex and will
> automatically disable it.
> 
> Once you have pruned blocks, going back to unpruned state requires
>  re-downloading the entire blockchain. To do this, re-start the
> node with -reindex. Note also that any problem that would cause a
> user to reindex (e.g., disk corruption) will cause a pruned node to
> redownload the entire blockchain. Finally, note that when a pruned
> node reindexes, it will delete any blk???.dat and rev???.dat files
> in the data directory prior to restarting the download.
> 
> To enable block pruning on the command line:
> 
> - `-prune=N`: where N is the number of MB to allot for raw block &
> undo data.
> 
> Modified RPC calls:
> 
> - `getblockchaininfo` now includes whether we are in pruned mode or
> not. - `getblock` will check if the block's data has been pruned
> and if so, return an error. - `getrawtransaction` will no longer be
> able to locate a transaction that has a UTXO but where its block
> file has been pruned.
> 
> Pruning is disabled by default.
> 
> Big endian support --------------------
> 
> Experimental support for big-endian CPU architectures was added in
> this release. All little-endian specific code was replaced with
> endian-neutral constructs. This has been tested on at least MIPS
> and PPC hosts. The build system will automatically detect the
> endianness of the target.
> 
> Memory usage optimization --------------------------
> 
> There have been many changes in this release to reduce the default
> memory usage of a node, among which:
> 
> - Accurate UTXO cache size accounting (#6102); this makes the
> option `-dbcache` precise where this grossly underestimated memory
> usage before - Reduce size of per-peer data structure (#6064 and
> others); this increases the number of connections that can be
> supported with the same amount of memory - Reduce the number of
> threads (#5964, #5679); lowers the amount of (esp. virtual) memory
> needed
> 
> Fee estimation changes ----------------------
> 
> This release improves the algorithm used for fee estimation.
> Previously, -1 was returned when there was insufficient data to
> give an estimate.  Now, -1 will also be returned when there is no
> fee or priority high enough for the desired confirmation target. In
> those cases, it can help to ask for an estimate for a higher target
> number of blocks. It is not uncommon for there to be no fee or
> priority high enough to be reliably (85%) included in the next
> block and for this reason, the default for `-txconfirmtarget=n` has
> changed from 1 to 2.
> 
> Privacy: Disable wallet transaction broadcast 
> ----------------------------------------------
> 
> This release adds an option `-walletbroadcast=0` to prevent
> automatic transaction broadcast and rebroadcast (#5951). This
> option allows separating transaction submission from the node
> functionality.
> 
> Making use of this, third-party scripts can be written to take care
> of transaction (re)broadcast:
> 
> - Send the transaction as normal, either through RPC or the GUI -
> Retrieve the transaction data through RPC using `gettransaction`
> (NOT `getrawtransaction`). The `hex` field of the result will
> contain the raw hexadecimal representation of the transaction - The
> transaction can then be broadcasted through arbitrary mechanisms 
> supported by the script
> 
> One such application is selective Tor usage, where the node runs on
> the normal internet but transactions are broadcasted over Tor.
> 
> For an example script see
> [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).
> 
> Privacy: Stream isolation for Tor 
> ----------------------------------
> 
> This release adds functionality to create a new circuit for every
> peer connection, when the software is used with Tor. The new
> option, `-proxyrandomize`, is on by default.
> 
> When enabled, every outgoing connection will (potentially) go
> through a different exit node. That significantly reduces the
> chance to get unlucky and pick a single exit node that is either
> malicious, or widely banned from the P2P network. This improves
> connection reliability as well as privacy, especially for the
> initial connections.
> 
> **Important note:** If a non-Tor SOCKS5 proxy is configured that
> supports authentication, but doesn't require it, this change may
> cause that proxy to reject connections. A user and password is sent
> where they weren't before. This setup is exceedingly rare, but in
> this case `-proxyrandomize=0` can be passed to disable the
> behavior.
> 
> 0.11.0 Change log =================
> 
> Detailed release notes follow. This overview includes changes that
> affect behavior, not code moves, refactors and string updates. For
> convenience in locating the code changes and accompanying
> discussion, both the pull request and git merge commit are
> mentioned.
> 
> ### RPC and REST - #5461 `5f7279a` signrawtransaction: validate
> private key - #5444 `103f66b` Add
> /rest/headers/<count>/<hash>.<ext> - #4964 `95ecc0a` Add
> scriptPubKey field to validateaddress RPC call - #5476 `c986972`
> Add time offset into getpeerinfo output - #5540 `84eba47` Add
> unconfirmed and immature balances to getwalletinfo - #5599
> `40e96a3` Get rid of the internal miner's hashmeter - #5711
> `87ecfb0` Push down RPC locks - #5754 `1c4e3f9` fix
> getblocktemplate lock issue - #5756 `5d901d8` Fix
> getblocktemplate_proposals test by mining one block - #5548
> `d48ce48` Add /rest/chaininfos - #5992 `4c4f1b4` Push down RPC
> reqWallet flag - #6036 `585b5db` Show zero value txouts in
> listunspent - #5199 `6364408` Add RPC call `gettxoutproof` to
> generate and verify merkle blocks - #5418 `16341cc` Report missing
> inputs in sendrawtransaction - #5937 `40f5e8d` show script
> verification errors in signrawtransaction result - #5420 `1fd2d39`
> getutxos REST command (based on Bip64) - #6193 `42746b0` [REST]
> remove json input for getutxos, limit to query max. 15 outpoints -
> #6226 `5901596` json: fail read_string if string contains trailing
> garbage
> 
> ### Configuration and command-line options - #5636 `a353ad4` Add
> option `-allowselfsignedrootcertificate` to allow self signed root
> certs (for testing payment requests) - #5900 `3e8a1f2` Add a
> consistency check `-checkblockindex` for the block chain data
> structures - #5951 `7efc9cf` Make it possible to disable wallet
> transaction broadcast (using `-walletbroadcast=0`) - #5911
> `b6ea3bc` privacy: Stream isolation for Tor (on by default, use
> `-proxyrandomize=0` to disable) - #5863 `c271304` Add autoprune
> functionality (`-prune=<size>`) - #6153 `0bcf04f` Parameter
> interaction: disable upnp if -proxy set - #6274 `4d9c7fe` Add
> option `-alerts` to opt out of alert system
> 
> ### Block and transaction handling - #5367 `dcc1304` Do all block
> index writes in a batch - #5253 `203632d` Check against MANDATORY
> flags prior to accepting to mempool - #5459 `4406c3e` Reject
> headers that build on an invalid parent - #5481 `055f3ae` Apply
> AreSane() checks to the fees from the network - #5580 `40d65eb`
> Preemptively catch a few potential bugs - #5349 `f55c5e9` Implement
> test for merkle tree malleability in CPartialMerkleTree - #5564
> `a89b837` clarify obscure uses of EvalScript() - #5521 `8e4578a`
> Reject non-final txs even in testnet/regtest - #5707 `6af674e`
> Change hardcoded character constants to descriptive named constants
> for db keys - #5286 `fcf646c` Change the default maximum OP_RETURN
> size to 80 bytes - #5710 `175d86e` Add more information to errors
> in ReadBlockFromDisk - #5948 `b36f1ce` Use GetAncestor to compute
> new target - #5959 `a0bfc69` Add additional block index consistency
> checks - #6058 `7e0e7f8` autoprune minor post-merge improvements -
> #5159 `2cc1372` New fee estimation code - #6102 `6fb90d8` Implement
> accurate UTXO cache size accounting - #6129 `2a82298` Bug fix for
> clearing fCheckForPruning - #5947 `e9af4e6` Alert if it is very
> likely we are getting a bad chain - #6203 `c00ae64` Remove P2SH
> coinbase flag, no longer interesting - #5985 `37b4e42` Fix removing
> of orphan transactions - #6221 `6cb70ca` Prune: Support
> noncontiguous block files - #6256 `fce474c` Use best header chain
> timestamps to detect partitioning - #6233 `a587606` Advance
> pindexLastCommonBlock for blocks in chainActive
> 
> ### P2P protocol and network code - #5507 `844ace9` Prevent DOS
> attacks on in-flight data structures - #5770 `32a8b6a` Sanitize
> command strings before logging them - #5859 `dd4ffce` Add correct
> bool combiner for net signals - #5876 `8e4fd0c` Add a NODE_GETUTXO
> service bit and document NODE_NETWORK - #6028 `b9311fb` Move
> nLastTry from CAddress to CAddrInfo - #5662 `5048465` Change
> download logic to allow calling getdata on inbound peers - #5971
> `18d2832` replace absolute sleep with conditional wait - #5918
> `7bf5d5e` Use equivalent PoW for non-main-chain requests - #6059
> `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for
> fixed seeds - #6080 `31c0bf1` Add jonasschnellis dns seeder - #5976
> `9f7809f` Reduce download timeouts as blocks arrive - #6172
> `b4bbad1` Ignore getheaders requests when not synced - #5875
> `304892f` Be stricter in processing unrequested blocks - #6333
> `41bbc85` Hardcoded seeds update June 2015
> 
> ### Validation - #5143 `48e1765` Implement BIP62 rule 6 - #5713
> `41e6e4c` Implement BIP66
> 
> ### Build system - #5501 `c76c9d2` Add mips, mipsel and aarch64 to
> depends platforms - #5334 `cf87536` libbitcoinconsensus: Add
> pkg-config support - #5514 `ed11d53` Fix 'make distcheck' - #5505
> `a99ef7d` Build winshutdownmonitor.cpp on Windows only - #5582
> `e8a6639` Osx toolchain update - #5684 `ab64022` osx: bump build
> sdk to 10.9 - #5695 `23ef5b7` depends: latest config.guess and
> config.sub - #5509 `31dedb4` Fixes when compiling in c++11 mode -
> #5819 `f8e68f7` release: use static libstdc++ and disable reduced
> exports by default - #5510 `7c3fbc3` Big endian support - #5149
> `c7abfa5` Add script to verify all merge commits are signed - #6082
> `7abbb7e` qt: disable qt tests when one of the checks for the gui
> fails - #6244 `0401aa2` configure: Detect (and reject) LibreSSL -
> #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo
> for OSX signatures - #6285 `ef1d506` Fix scheduler build with some
> boost versions. - #6280 `25c2216` depends: fix Boost 1.55 build on
> GCC 5 - #6303 `b711599` gitian: add a gitian-win-signer descriptor 
> - #6246 `8ea6d37` Fix build on FreeBSD - #6282 `daf956b` fix crash
> on shutdown when e.g. changing -txindex and abort action - #6354
> `bdf0d94` Gitian windows signing normalization
> 
> ### Wallet - #2340 `811c71d` Discourage fee sniping with nLockTime 
> - #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and
> add a maxtxfee option - #5508 `9a5cabf` Add RandAddSeedPerfmon to
> MakeNewKey - #4805 `8204e19` Do not flush the wallet in
> AddToWalletIfInvolvingMe(..) - #5319 `93b7544` Clean up wallet
> encryption code - #5831 `df5c246` Subtract fee from amount - #6076
> `6c97fd1` wallet: fix boost::get usage with boost 1.58 - #5511
> `23c998d` Sort pending wallet transactions before reaccepting -
> #6126 `26e08a1` Change default nTxConfirmTarget to 2 - #6183
> `75a4d51` Fix off-by-one error w/ nLockTime in the wallet - #6276
> `c9fd907` Fix getbalance * 0
> 
> ### GUI - #5219 `f3af0c8` New icons - #5228 `bb3c75b` HiDPI
> (retina) support for splash screen - #5258 `73cbf0a` The RPC
> Console should be a QWidget to make window more independent - #5488
> `851dfc7` Light blue icon color for regtest - #5547 `a39aa74` New
> icon for the debug window - #5493 `e515309` Adopt style colour for
> button icons - #5557 `70477a0` On close of splashscreen interrupt
> verifyDB - #5559 `83be8fd` Make the command-line-args dialog
> better - #5144 `c5380a9` Elaborate on signverify message dialog
> warning - #5489 `d1aa3c6` Optimize PNG files - #5649 `e0cd2f5` Use
> text-color icons for system tray Send/Receive menu entries - #5651
> `848f55d` Coin Control: Use U+2248 "ALMOST EQUAL TO" rather than a
> simple tilde - #5626 `ab0d798` Fix icon sizes and column width -
> #5683 `c7b22aa` add new osx dmg background picture - #5620
> `7823598` Payment request expiration bug fix - #5729 `9c4a5a5`
> Allow unit changes for read-only BitcoinAmountField - #5753
> `0f44672` Add bitcoin logo to about screen - #5629 `a956586`
> Prevent amount overflow problem with payment requests - #5830
> `215475a` Don't save geometry for options and about/help window -
> #5793 `d26f0b2` Honor current network when creating autostart link 
> - #5847 `f238add` Startup script for centos, with documentation -
> #5915 `5bd3a92` Fix a static qt5 crash when using certain versions
> of libxcb - #5898 `bb56781` Fix rpc console font size to flexible
> metrics - #5467 `bc8535b` Payment request / server work - part 2 -
> #6161 `180c164` Remove movable option for toolbar - #6160 `0d862c2`
> Overviewpage: make sure warning icons gets colored
> 
> ### Tests - #5453 `2f2d337` Add ability to run single test manually
> to RPC tests - #5421 `886eb57` Test unexecuted OP_CODESEPARATOR -
> #5530 `565b300` Additional rpc tests - #5611 `37b185c` Fix spurious
> windows test failures after 012598880c - #5613 `2eda47b` Fix
> smartfees test for change to relay policy - #5612 `e3f5727` Fix
> zapwallettxes test - #5642 `30a5b5f` Prepare paymentservertests for
> new unit tests - #5784 `e3a3cd7` Fix usage of NegateSignatureS in
> script_tests - #5813 `ee9f2bf` Add unit tests for next difficulty
> calculations - #5855 `d7989c0` Travis: run unit tests in different
> orders - #5852 `cdae53e` Reinitialize state in between individual
> unit tests. - #5883 `164d7b6` tests: add a BasicTestingSetup and
> apply to all tests - #5940 `446bb70` Regression test for
> ResendWalletTransactions - #6052 `cf7adad` fix and enable bip32
> unit test - #6039 `734f80a` tests: Error when setgenerate is used
> on regtest - #6074 `948beaf` Correct the PUSHDATA4 minimal encoding
> test in script_invalid.json - #6032 `e08886d` Stop nodes after RPC
> tests, even with --nocleanup - #6075 `df1609f` Add additional
> script edge condition tests - #5981 `da38dc6` Python P2P testing -
> #5958 `9ef00c3` Add multisig rpc tests - #6112 `fec5c0e` Add more
> script edge condition tests
> 
> ### Miscellaneous - #5457, #5506, #5952, #6047 Update libsecp256k1 
> - #5437 `84857e8` Add missing CAutoFile::IsNull() check in main -
> #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where
> possible - #5654, #5764 Adding jonasschnelli's GPG key - #5477
> `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated -
> #5679 `beff11a` Get rid of DetectShutdownThread - #5787 `9bd8c9b`
> Add fanquake PGP key - #5366 `47a79bb` No longer check osx
> compatibility in RenameThread - #5689 `07f4386` openssl: abstract
> out OPENSSL_cleanse - #5708 `8b298ca` Add list of implemented BIPs 
> - #5809 `46bfbe7` Add bitcoin-cli man page - #5839 `86eb461` keys:
> remove libsecp256k1 verification until it's actually supported -
> #5749 `d734d87` Help messages correctly formatted (79 chars) -
> #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was
> corrupted - #5849 `41259ca` contrib/init/bitcoind.openrc:
> Compatibility with previous OpenRC init script variables - #5950
> `41113e3` Fix locale fallback and guard tests against invalid
> locale settings - #5965 `7c6bfb1` Add git-subtree-check.sh script -
> #6033 `1623f6e` FreeBSD, OpenBSD thread renaming - #6064 `b46e7c2`
> Several changes to mruset - #6104 `3e2559c` Show an init message
> while activating best chain - #6125 `351f73e` Clean up parsing of
> bool command line args - #5964 `b4c219b` Lightweight task
> scheduler - #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to
> Bitcoin-Core.app - #6168 `b3024f0` contrib/linearize: Support
> linearization of testnet blocks - #6098 `7708fcd` Update Windows
> resource files (and add one for bitcoin-tx) - #6159 `e1412d3` Catch
> errors on datadir lock and pidfile delete - #6186 `182686c` Fix two
> problems in CSubnet parsing - #6174 `df992b9` doc: add translation
> strings policy - #6210 `dfdb6dd` build: disable optional use of gmp
> in internal secp256k1 build - #6264 `94cd705` Remove translation
> for -help-debug options - #6286 `3902c15` Remove berkeley-db4
> workaround in MacOSX build docs - #6319 `3f8fcc9` doc: update
> mailing list address
> 
> Credits =======
> 
> Thanks to everyone who directly contributed to this release:
> 
> - 21E14 - Adam Weiss - Alex Morcos - ayeowch - azeteki - Ben
> Holden-Crowther - bikinibabe - BitcoinPRReadingGroup - Blake
> Jakopovic - BtcDrak - charlescharles - Chris Arnesen - Ciemon -
> CohibAA - Corinne Dashjr - Cory Fields - Cozz Lovan - Daira
> Hopwood - Daniel Kraft - Dave Collins - David A. Harding - dexX7 -
> Earlz - Eric Lombrozo - Eric R. Schulz - Everett Forth - Flavien
> Charlon - fsb4000 - Gavin Andresen - Gregory Maxwell - Heath - Ivan
> Pustogarov - Jacob Welsh - Jameson Lopp - Jason Lewicki - Jeff
> Garzik - Jonas Schnelli - Jonathan Brown - Jorge Tim?n - joshr -
> jtimon - Julian Yap - Luca Venturini - Luke Dashjr - Manuel Araoz -
> MarcoFalke - Matt Bogosian - Matt Corallo - Micha - Michael Ford -
> Mike Hearn - mrbandrews - Nicolas Benoit - paveljanik - Pavel
> Jan?k - Pavel Vasin - Peter Todd - Philip Kaufmann - Pieter Wuille 
> - pstratem - randy-waterhouse - rion - Rob Van Mieghem - Ross
> Nicoll - Ruben de Vries - sandakersmann - Shaul Kfir - Shawn
> Wilkinson - sinetek - Suhas Daftuar - svost - Thomas Zander - Tom
> Harding - UdjinM6 - Vitalii Demianets - Wladimir J. van der Laan
> 
> And all those who contributed additional code review and/or
> security research:
> 
> - Sergio Demian Lerner
> 
> As well as everyone that helped translating on
> [Transifex](https://www.transifex.com/projects/p/bitcoin/).
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVpkHzAAoJEGxwq/inSG8CYXQH/j+RkquHT6F+gjbST9eMNshI
9ydEnqL68o5FtZfRCdfrv3+GbXtsf7OFK9O/67denujiMR5OCQHCLZsV9bPpVrib
AsxVHzu+YWavjcyrlnKR4NAI9BUNNJzmsoBK2uD2c2niqT4CsbHMLssUuYXO3xM9
nKIlkn8ZZhbnJEJhM3UESh99KLPXqnKsmu++ZjGZdRnBPD1RGNbRuUCwqzUeij4L
Fyzj5X3UWFloF+oI9IGy7/wRYRrJ0k9q9NSJPU5Xv9RRZ63T4lv1phNMzYFzFve5
48HF+6+BSa+JUh4SihjEAuVNeHtPDMhZMCxkx/YTNDDjUL8UEFDKNc/xmx+ObFM=
=rpNr
-----END PGP SIGNATURE-----

From tomh at thinlink.com  Wed Jul 15 14:35:21 2015
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 15 Jul 2015 07:35:21 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
Message-ID: <55A66FA9.4010506@thinlink.com>


You perform a valuable service with your demonstration, but you
neglected to include the txid's to show that you actually did it.

Your advice is must-follow for anyone relying on an unconfirmed tx: it
must pay a good fee and be highly relayable/minable.


On 7/14/2015 8:29 PM, simongreen--- via bitcoin-dev wrote:
> tx1: To merchant, but dust/low-fee/reused-address/large-size/etc.
> anything that miners don't always accept. 


From pete at petertodd.org  Wed Jul 15 15:18:25 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 15 Jul 2015 11:18:25 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <55A66FA9.4010506@thinlink.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
Message-ID: <20150715151825.GB20029@savin.petertodd.org>

On Wed, Jul 15, 2015 at 07:35:21AM -0700, Tom Harding via bitcoin-dev wrote:
> 
> You perform a valuable service with your demonstration, but you
> neglected to include the txid's to show that you actually did it.
 
> Your advice is must-follow for anyone relying on an unconfirmed tx: it
> must pay a good fee and be highly relayable/minable.

Actually, I was looking at what I believe was (part of?) this attack
yesterday in the logs on my full-RBF nodes and the txs involved *did*
have good fees and were highly relayable/minable - the double-spent txs
had near 100% propagation on blockchain.info (who has unfortunately
purged the relevant data already)

Shapeshift.io depends on Blockcypher's "confidence factor" model(1)
under the hood - yet another one of those sybil attacking network
monitoring things - to estimate tx confirmation probability by looking
at the % of nodes a tx has propagated too. But miners frequently use
customized Bitcoin Core codebases that don't follow normal policies, so
those measurements don't actually tell you what you need to know.

hapeshift confirmed(2) the attack - confirming that they disabled
unconfirmed tx acceptance - said they're going to "improve" their
system... It'll be interesting to see what that actually entails.

1) https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
2) https://www.reddit.com/r/Bitcoin/comments/3ddkhy/bitcoindev_significant_losses_by_doublespending/ct468p7

-- 
'peter'[:-1]@petertodd.org
000000000000000010bf087ed645cba129e2523930d5cde636ddbae9e03aef9c
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/8a1f1ad2/attachment.sig>

From jimmyjack at gmail.com  Wed Jul 15 15:49:13 2015
From: jimmyjack at gmail.com (Me)
Date: Wed, 15 Jul 2015 08:49:13 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <20150715151825.GB20029@savin.petertodd.org>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
Message-ID: <CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>

Thank you Simon for sharing your tests, if possible can you share TX hashes please. I would recommend to send them money post-mortem. What you did is really valuable information, however it can be classified as fraud. I really don?t want open this topic here, just suggesting to keep your record clean :-) 



> the double-spent txs
> had near 100% propagation on blockchain.info (who has unfortunately
> purged the relevant data already)


Can you please share the TX Hash



> Blockcypher's "confidence factor" model(1)
> under the hood - yet another one of those sybil attacking network
> monitoring things


Peter, I noticed on your twitter you have a lot of bad things to say about Blockcypher and their business model (which I might not full agree, but totally respect), can you share any evidence they perform any form of Sybil attack on the network, please. 






> On Jul 15, 2015, at 8:18 AM, Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On Wed, Jul 15, 2015 at 07:35:21AM -0700, Tom Harding via bitcoin-dev wrote:
>> 
>> You perform a valuable service with your demonstration, but you
>> neglected to include the txid's to show that you actually did it.
> 
>> Your advice is must-follow for anyone relying on an unconfirmed tx: it
>> must pay a good fee and be highly relayable/minable.
> 
> Actually, I was looking at what I believe was (part of?) this attack
> yesterday in the logs on my full-RBF nodes and the txs involved *did*
> have good fees and were highly relayable/minable - the double-spent txs
> had near 100% propagation on blockchain.info (who has unfortunately
> purged the relevant data already)
> 
> Shapeshift.io depends on Blockcypher's "confidence factor" model(1)
> under the hood - yet another one of those sybil attacking network
> monitoring things - to estimate tx confirmation probability by looking
> at the % of nodes a tx has propagated too. But miners frequently use
> customized Bitcoin Core codebases that don't follow normal policies, so
> those measurements don't actually tell you what you need to know.
> 
> hapeshift confirmed(2) the attack - confirming that they disabled
> unconfirmed tx acceptance - said they're going to "improve" their
> system... It'll be interesting to see what that actually entails.
> 
> 1) https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734
> 2) https://www.reddit.com/r/Bitcoin/comments/3ddkhy/bitcoindev_significant_losses_by_doublespending/ct468p7
> 
> -- 
> 'peter'[:-1]@petertodd.org
> 000000000000000010bf087ed645cba129e2523930d5cde636ddbae9e03aef9c
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev


From buzz at spacedout.nl  Wed Jul 15 15:53:22 2015
From: buzz at spacedout.nl (Bastiaan van den Berg)
Date: Wed, 15 Jul 2015 17:53:22 +0200
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
Message-ID: <CACLj26Ks3bwPbqQDkh4HMXXbwUq4pFLvzRpqnuL5=6ZyOZb8jw@mail.gmail.com>

On Wed, Jul 15, 2015 at 5:49 PM, Me via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> > Blockcypher's "confidence factor" model(1)
> > under the hood - yet another one of those sybil attacking network
> > monitoring things
>
>
> Peter, I noticed on your twitter you have a lot of bad things to say about
> Blockcypher and their business model (which I might not full agree, but
> totally respect), can you share any evidence they perform any form of Sybil
> attack on the network, please.


? He says it -monitors- for such a attack, usually monitoring does not
include causing it ;)

--
buZz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/2a85d431/attachment.html>

From pete at petertodd.org  Wed Jul 15 15:59:03 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 15 Jul 2015 11:59:03 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
Message-ID: <20150715155903.GC20029@savin.petertodd.org>

On Wed, Jul 15, 2015 at 08:49:13AM -0700, Me wrote:
> > Blockcypher's "confidence factor" model(1)
> > under the hood - yet another one of those sybil attacking network
> > monitoring things
> 
> 
> Peter, I noticed on your twitter you have a lot of bad things to say about Blockcypher and their business model (which I might not full agree, but totally respect), can you share any evidence they perform any form of Sybil attack on the network, please. 

For Blockcypher to succesfully do what they claim to do they need to
connect to a large % of nodes on the network; that right there is a
sybil attack. It's an approach that uses up connection slots for the
entire network and isn't scalable; if more than a few services were
doing that the Bitcoin network would become significantly less reliable,
at some point collapsing entirely.

-- 
'peter'[:-1]@petertodd.org
0000000000000000093f699ccdb323aa638af1131249ec2e1bacbf367163807a
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/286e3fda/attachment.sig>

From jimmyjack at gmail.com  Wed Jul 15 16:06:48 2015
From: jimmyjack at gmail.com (Me)
Date: Wed, 15 Jul 2015 09:06:48 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <20150715155903.GC20029@savin.petertodd.org>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
Message-ID: <E724A120-7F85-488B-81CD-B1CD8EB227E3@gmail.com>

Have you talk to them? If not, how can you be sure they don?t run large number of standard nodes and actually make the network stronger? Personally I never bring claims like this if I just assume. A lot of people in the community really trust you, do you realize you potentially hurt them for no reason?


btw I do not work for them nor have any money invested in them in case anybody asks





> On Jul 15, 2015, at 8:59 AM, Peter Todd <pete at petertodd.org> wrote:
> 
> On Wed, Jul 15, 2015 at 08:49:13AM -0700, Me wrote:
>>> Blockcypher's "confidence factor" model(1)
>>> under the hood - yet another one of those sybil attacking network
>>> monitoring things
>> 
>> 
>> Peter, I noticed on your twitter you have a lot of bad things to say about Blockcypher and their business model (which I might not full agree, but totally respect), can you share any evidence they perform any form of Sybil attack on the network, please. 
> 
> For Blockcypher to succesfully do what they claim to do they need to
> connect to a large % of nodes on the network; that right there is a
> sybil attack. It's an approach that uses up connection slots for the
> entire network and isn't scalable; if more than a few services were
> doing that the Bitcoin network would become significantly less reliable,
> at some point collapsing entirely.
> 
> -- 
> 'peter'[:-1]@petertodd.org
> 0000000000000000093f699ccdb323aa638af1131249ec2e1bacbf367163807a


From pieter.wuille at gmail.com  Wed Jul 15 16:11:43 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 15 Jul 2015 12:11:43 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <E724A120-7F85-488B-81CD-B1CD8EB227E3@gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<E724A120-7F85-488B-81CD-B1CD8EB227E3@gmail.com>
Message-ID: <CAPg+sBgb6fGT524U4xi_GDrOio2uKMe4Z798699CknvtaBdcqw@mail.gmail.com>

On Wed, Jul 15, 2015 at 12:06 PM, Me via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Have you talk to them? If not, how can you be sure they don?t run large
> number of standard nodes and actually make the network stronger? Personally
> I never bring claims like this if I just assume. A lot of people in the
> community really trust you, do you realize you potentially hurt them for no
> reason?
>

Running normal full nodes only provides extra service to nodes
synchronizing and lightweight clients. It does not "make the network
stronger" in the sense that it does not reduce the trust the participants
need to have in each other.

It's such a misconception that running many nodes somehow helps. It's much
better that you run and control one or a few full nodes which you actually
use to validate your transactions, than to run 1000s of nodes in third
party datacenters. The latter only looks more decentralized.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/1b2a1d26/attachment.html>

From milly at bitcoins.info  Wed Jul 15 16:12:24 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 15 Jul 2015 12:12:24 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <20150715155903.GC20029@savin.petertodd.org>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
Message-ID: <55A68668.6@bitcoins.info>

Below are 2 examples why a systematic risk analysis needs to be used. 
The current situation is that you have developers making hyperbolic, 
demonizing statements that users are "spammers" and engaged in Sybil 
"attacks."  Characterizing these activities as spam and Sybil attacks is 
not a systematic analysis, it is closer to the process used at the Salem 
Witch trials.

If this process of demonetization is to take its natural course then 
these statements are "developer attacks" from a developer system that 
lacks proper incentives and is rife with conflicts of interest.

Russ


>... they need to
> connect to a large % of nodes on the network; that right there is a
> sybil attack. It's an approach that uses up connection slots for the
> entire network and isn't scalable; if more than a few services were
> doing that the Bitcoin network would become significantly less reliable,
> at some point collapsing entirely.

...

 > Spammers out there are being very disrepectful of my fullnode resources



From jimmyjack at gmail.com  Wed Jul 15 16:41:24 2015
From: jimmyjack at gmail.com (Me)
Date: Wed, 15 Jul 2015 09:41:24 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <CAPg+sBgb6fGT524U4xi_GDrOio2uKMe4Z798699CknvtaBdcqw@mail.gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<E724A120-7F85-488B-81CD-B1CD8EB227E3@gmail.com>
	<CAPg+sBgb6fGT524U4xi_GDrOio2uKMe4Z798699CknvtaBdcqw@mail.gmail.com>
Message-ID: <A0CA5CBA-ADCC-4D6C-A419-4EA48ECDD143@gmail.com>

> It's such a misconception that running many nodes somehow helps. It's much better that you run and control one or a few full nodes which you actually use to validate your transactions, than to run 1000s of nodes in third party datacenters. The latter only looks more decentralized.


I guess we sort of disagree here, perhaps my word ?strength? was not the right word. Yes, running 6000 vs 7000 nodes makes no difference for the network strength, but (a) running 50 nodes vs 5000 does make a difference. I would love to see how the number of nodes drop if companies like blockcypher turn off their servers. Obviously it would not go 50. (b) running different clients (if blockcypher runs non-reference-bitcoinD client) makes the network less open wide-spread bugs


I feel we are really derailing the original topic btw  :-)





> On Jul 15, 2015, at 9:11 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> 
> On Wed, Jul 15, 2015 at 12:06 PM, Me via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> Have you talk to them? If not, how can you be sure they don?t run large number of standard nodes and actually make the network stronger? Personally I never bring claims like this if I just assume. A lot of people in the community really trust you, do you realize you potentially hurt them for no reason?
> 
> Running normal full nodes only provides extra service to nodes synchronizing and lightweight clients. It does not "make the network stronger" in the sense that it does not reduce the trust the participants need to have in each other.
> 
> It's such a misconception that running many nodes somehow helps. It's much better that you run and control one or a few full nodes which you actually use to validate your transactions, than to run 1000s of nodes in third party datacenters. The latter only looks more decentralized.
> 
> -- 
> Pieter
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/8fca9ae0/attachment.html>

From adrian at coinbase.com  Wed Jul 15 17:01:56 2015
From: adrian at coinbase.com (Adrian Macneil)
Date: Wed, 15 Jul 2015 10:01:56 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
Message-ID: <CAMK47c91-4FSAWhBaGvAtDZhxWt4ZyKAOKnZO2tC4iewmfYyYA@mail.gmail.com>

> With my white hat on

> Shapeshift.io lost ~3 BTC this week in multiple txs

I assume as a self proclaimed "white hat", you contacted the relevant
companies and returned their funds? Theft is still theft, regardless of
whether you are doing it for research or not.

On Tue, Jul 14, 2015 at 8:29 PM, simongreen--- via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> With my black hat on I recently performed numerous profitable double-spend
> attacks against zeroconf accepting fools. With my white hat on, I'm warning
> everyone. The strategy is simple:
>
> tx1: To merchant, but dust/low-fee/reused-address/large-size/etc. anything
> that miners don't always accept.
>
> tx2: After merchant gives up valuable thing in return, normal tx without
> triggering spam protections. (loltasticly a Mike Hearn Bitcoin XT node was
> used to relay the double-spends)
>
> Example success story: tx1 paying Shapeshift.io with 6uBTC output is not
> dust under post-Hearn-relay-drop rules, but is dust under
> pre-Hearn-relay-drop rules, followed by tx2 w/o the output and not paying
> Shapeshift.io. F2Pool/Eligius/BTCChina/AntPool etc. are all miners who have
> reverted Hearn's 10x relay fee drop as recommended by v0.11.0 release notes
> and accept these double-spends. Shapeshift.io lost ~3 BTC this week in
> multiple txs. (they're no longer accepting zeroconf)
>
> Example success story #2: tx1 with post-Hearn-relay drop fee, followed by
> tx2 with higher fee. Such stupidly low fee txs just don't get mined, so
> wait for a miner to mine tx2. Bought a silly amount of reddit gold off
> Coinbase this way among other things. I'm surprised that reddit didn't
> cancel the "fools-gold" after tx reversal. (did Coinbase guarantee those
> txs?) Also found multiple Bitcoin ATMs vulnerable to this attack. (but
> simulated attack with tx2s still paying ATM because didn't want to go to
> trouble of good phys opsec)
>
> Shoutouts to BitPay who did things right and notified merchant properly
> when tx was reversed.
>
> In summary, every target depending on zeroconf vulnerable and lost
> significant sums of money to totally trivial attacks with high probability.
> No need for RBF to do this, just normal variations in miner policy.
> Shapeshift claims to use Super Sophisticated Network Sybil Attacking
> Monitoring from Blockcypher, but relay nodes != miner policy.
>
> Consider yourself warned! My hat is whiter than most, and my skills not
> particularly good.
>
> What to do? Users: Listen to the experts and stop relying on zeroconf.
> Black hats: Profit!
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/3b6fa212/attachment.html>

From matthieu at blockcypher.com  Wed Jul 15 18:25:17 2015
From: matthieu at blockcypher.com (Matthieu Riou)
Date: Wed, 15 Jul 2015 11:25:17 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <55A68668.6@bitcoins.info>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<55A68668.6@bitcoins.info>
Message-ID: <CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>

Hi,

Thanks for the bug report Simon, "responsible" disclosure on public forums
is always appreciated. We're working with ShapeShift to make sure we can
protect them appropriately against this specific attack in the future. As
"Me" and Adrian advised, I would also encourage you return the funds.

Regarding Peter's accusations on Twitter/Reddit/listserve, we have no idea
why we are his target. He has never met with our CEO, has no idea of our
business model, nor our company objectives. All his comments about us are
his speculations. I'm sure Peter knows what a Sybil attack actually is and
making such claims on a public forum is completely unfounded and uncalled
for. Stretching definitions beyond the point where they make sense is a
common rhetoric and political tool, not necessarily appropriate in a
professional or technical context.

We offer useful services for many startups like ourselves. We are good
actors in this space. As a startup we are also constrained by limited
resources (we're funded but far from larger companies resources). Companies
aren't built in a single day and we hope to do more to help
decentralization in the future as well. We're trying to further the
ecosystem with our small team, so the pot shots are puzzling.

Thanks,
Matthieu

On Wed, Jul 15, 2015 at 9:12 AM, Milly Bitcoin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Below are 2 examples why a systematic risk analysis needs to be used. The
> current situation is that you have developers making hyperbolic, demonizing
> statements that users are "spammers" and engaged in Sybil "attacks."
> Characterizing these activities as spam and Sybil attacks is not a
> systematic analysis, it is closer to the process used at the Salem Witch
> trials.
>
> If this process of demonetization is to take its natural course then these
> statements are "developer attacks" from a developer system that lacks
> proper incentives and is rife with conflicts of interest.
>
> Russ
>
>
>  ... they need to
>> connect to a large % of nodes on the network; that right there is a
>> sybil attack. It's an approach that uses up connection slots for the
>> entire network and isn't scalable; if more than a few services were
>> doing that the Bitcoin network would become significantly less reliable,
>> at some point collapsing entirely.
>>
>
> ...
>
> > Spammers out there are being very disrepectful of my fullnode resources
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/a09b81f2/attachment-0001.html>

From pete at petertodd.org  Wed Jul 15 19:32:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 16 Jul 2015 04:32:59 +0900
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<55A68668.6@bitcoins.info>
	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
Message-ID: <20150715193259.GC3064@muck>

On Wed, Jul 15, 2015 at 11:25:17AM -0700, Matthieu Riou via bitcoin-dev wrote:
> Hi,
> 
> Thanks for the bug report Simon, "responsible" disclosure on public forums
> is always appreciated. We're working with ShapeShift to make sure we can
> protect them appropriately against this specific attack in the future. As
> "Me" and Adrian advised, I would also encourage you return the funds.
> 
> Regarding Peter's accusations on Twitter/Reddit/listserve, we have no idea
> why we are his target. He has never met with our CEO, has no idea of our
> business model, nor our company objectives. All his comments about us are
> his speculations. I'm sure Peter knows what a Sybil attack actually is and
> making such claims on a public forum is completely unfounded and uncalled
> for. Stretching definitions beyond the point where they make sense is a
> common rhetoric and political tool, not necessarily appropriate in a
> professional or technical context.

"In a Sybil attack the attacker subverts the reputation system of a
peer-to-peer network by creating a large number of pseudonymous
identities, using them to gain a disproportionately large influence."

Quoting your API docs:

"[Blockcypher is] always connected to a statistically significant number
of nodes on the network - we target anywhere between 10 to 20% of the
active nodes on any given blockchain"
-http://dev.blockcypher.com/#confidence-factor

In the case of Bitcoin, there's something like 6,000 nodes, so if that
20% is achived via outgoing connections you'd have 600 to 1200 active
outgoing connections using up network resources.  Meanwhile, the default
is 8 outgoing connections - you're using about two orders of magnitude
more resources.

If you are achieving that via incoming connections, you're placing a big
part of the relay network under central control. As we've seen in the
case of Chainalysis's sybil attack, even unintentional confirguation
screwups can cause serious and widespread issues due to the large number
of nodes that can fail in one go. (note how Chainalysis's actions were
described(1) as a sybil attack by multiple Bitcoin devs, including
Gregory Maxwell, Wladimir van der Laan, and myself)

Right now the P2P network has relatively weak protections against sybil
attacks, but efforts are being made to find ways to defend against them.
As anti-sybil attack technology improves, you'll be able to
simultaneously connect to a smaller and smaller % of the network, and
your confidence factor technology will degrade further.

Questions: How exactly does your monitoring network work? Do you make
incoming, outgoing, or both types of connections? What subnet(s) do the
connections come from? What software makes those connections?

> We offer useful services for many startups like ourselves. We are good
> actors in this space. As a startup we are also constrained by limited
> resources (we're funded but far from larger companies resources). Companies
> aren't built in a single day and we hope to do more to help
> decentralization in the future as well. We're trying to further the
> ecosystem with our small team, so the pot shots are puzzling.

What you are doing is inherently incompatible with decentralization.
Your service simply doesn't scale; it's a server only a small number of
centralized entities can provide without causing the P2P network to
collapse due to resource exhaustion.

Question: Do you have relationships with mining pools? For instance, are
you looking at contracts to have transactions mined to guarantee
confirmations?

1) http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/

-- 
'peter'[:-1]@petertodd.org
00000000000000000b675c4d825a10c278b8d63ee4df90a19393f3b6498fd073
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/d8b266f6/attachment.sig>

From thomas at thomaszander.se  Wed Jul 15 19:18:49 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Wed, 15 Jul 2015 21:18:49 +0200
Subject: [bitcoin-dev] Mempool "Expected Byte Stay" policy
In-Reply-To: <55A5A837.1090203@thinlink.com>
References: <55A5A837.1090203@thinlink.com>
Message-ID: <2272402.KPsXmgHuuj@coldstorage>

On Tuesday 14. July 2015 17.24.23 Tom Harding via bitcoin-dev wrote:
> Rule 2: A transaction and its dependents are evicted on its 2-hour 
> anniversary, whether space is required or not

Instead of 2 hours, why not a number of blocks?
-- 
Thomas Zander

From milly at bitcoins.info  Wed Jul 15 19:57:27 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 15 Jul 2015 15:57:27 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <20150715193259.GC3064@muck>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org> <55A68668.6@bitcoins.info>
	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
	<20150715193259.GC3064@muck>
Message-ID: <55A6BB27.6000003@bitcoins.info>

> (note how Chainalysis's actions were
> described(1) as a sybil attack by multiple Bitcoin devs, including
> Gregory Maxwell, Wladimir van der Laan, and myself)

As far as I know none of those people are security experts nor do they 
engage in systematic risk and threat analysis.  Simply because they are 
experts in Bitcoin development does not make them expert in other areas. 
  Many of those involved in Bitcoin think that because they know Bitcoin 
that they somehow have become experts in other areas.  That is one 
reason why so many Bitcoin companies have been hacked.

An "attack" according to ISO/IEC 27000 "is any attempt to destroy, 
expose, alter, disable, steal or gain unauthorized access to or make 
unauthorized use of an asset."  The situation you are describing is not 
an "attack," they are providing a service.  Satoshi Dice is also not 
"spam," it is again providing a service within the rules set forth in 
the software.  The people going around claiming these are "spam" and 
"attacks" spend too much time of Reddit or they have an ulterior motive. 
  In any case these baseless accusations and arguments waste inordinate 
amounts of time.

Russ




From tomh at thinlink.com  Wed Jul 15 23:15:24 2015
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 15 Jul 2015 16:15:24 -0700
Subject: [bitcoin-dev] Mempool "Expected Byte Stay" policy
In-Reply-To: <2272402.KPsXmgHuuj@coldstorage>
References: <55A5A837.1090203@thinlink.com> <2272402.KPsXmgHuuj@coldstorage>
Message-ID: <55A6E98C.3090307@thinlink.com>

On 7/15/2015 12:18 PM, Thomas Zander via bitcoin-dev wrote:
> On Tuesday 14. July 2015 17.24.23 Tom Harding via bitcoin-dev wrote:
>> Rule 2: A transaction and its dependents are evicted on its 2-hour
>> anniversary, whether space is required or not
> Instead of 2 hours, why not a number of blocks?

So users/wallets can know when they should rebroadcast and consider 
increasing the fee.


Using 12 blocks, there is a 5% chance he has to wait 3 hours.*

Using 120 minutes, there is only a .23% chance that fewer than 4 blocks 
have occurred.**





*
Table[{x, 1 - CDF[ErlangDistribution[12, 1/10], x]}, {x, 0, 240, 10}] 
//N //TableForm
0.      1.
10.    1.
20.    0.999999
30.    0.999929
40.    0.999085
50.    0.994547
60.    0.979908
70.    0.94665
80.    0.888076
90.    0.803008
100.    0.696776
110.    0.579267
120.    0.461597
130.    0.353165
140.    0.26004
150.    0.184752
160.    0.126993
170.    0.0846691
180.    0.0548874
190.    0.0346726
200.    0.0213868
210.    0.0129048
220.    0.00762994
230.    0.00442702
240.    0.00252413





**
Table[{x, CDF[PoissonDistribution[1/10 * 120], x]}, {x, 0, 20}] //N 
//TableForm
0.    6.14421*10^-6
1.    0.0000798748
2.    0.000522258
3.    0.00229179
4.    0.00760039
5.    0.020341
6.    0.0458223
7.    0.0895045
8.    0.155028
9.    0.242392
10.    0.347229
11.    0.461597
12.    0.575965
13.    0.681536
14.    0.772025
15.    0.844416
16.    0.898709
17.    0.937034
18.    0.962584
19.    0.97872
20.    0.988402



From matthieu at blockcypher.com  Thu Jul 16 00:08:05 2015
From: matthieu at blockcypher.com (Matthieu Riou)
Date: Wed, 15 Jul 2015 17:08:05 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <20150715193259.GC3064@muck>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<55A68668.6@bitcoins.info>
	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
	<20150715193259.GC3064@muck>
Message-ID: <CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>

On Wed, Jul 15, 2015 at 12:32 PM, Peter Todd <pete at petertodd.org> wrote:

>
> "In a Sybil attack the attacker subverts the reputation system of a
> peer-to-peer network by creating a large number of pseudonymous
> identities, using them to gain a disproportionately large influence."
>

Our "identities" aren't pseudonymous.

In the case of Bitcoin, there's something like 6,000 nodes, so if that
> 20% is achived via outgoing connections you'd have 600 to 1200 active
> outgoing connections using up network resources.  Meanwhile, the default
> is 8 outgoing connections - you're using about two orders of magnitude
> more resources.
>

You're not talking about a Sybil attack anymore, just resource use. We do
know how to change default configurations to offer more connections.

If you are achieving that via incoming connections, you're placing a big
> part of the relay network under central control. As we've seen in the
> case of Chainalysis's sybil attack, even unintentional confirguation
> screwups can cause serious and widespread issues due to the large number
> of nodes that can fail in one go. (note how Chainalysis's actions were
> described(1) as a sybil attack by multiple Bitcoin devs, including
> Gregory Maxwell, Wladimir van der Laan, and myself)
>

We're not Chainanalysis and we do not run hundreds of distinct nodes. Just
a few well-tuned ones.


> What you are doing is inherently incompatible with decentralization.
>

That's a matter of opinion. One could argue your actions and control
attempts hurt decentralization. Either way, no one should play the
decentralization police or act as a gatekeeper.

Question: Do you have relationships with mining pools? For instance, are
> you looking at contracts to have transactions mined to guarantee
> confirmations?
>

No, we do not. We do not know anyone else having such contracts. As you
know, Coinbase also denied having such contracts in place [1]. But you seem
to have more relationships with mining pools than we do.

Thanks,
Matthieu
CTO and Founder, BlockCypher

[1]
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008864.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150715/d6778351/attachment.html>

From grarpamp at gmail.com  Thu Jul 16 04:57:19 2015
From: grarpamp at gmail.com (grarpamp)
Date: Thu, 16 Jul 2015 00:57:19 -0400
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CAEz79Pp7XyAjdN_e7BnwJfqp=ZaSk7hQSwMJiev-9R5orKyUew@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
	<CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
	<CAEz79Pp7XyAjdN_e7BnwJfqp=ZaSk7hQSwMJiev-9R5orKyUew@mail.gmail.com>
Message-ID: <CAD2Ti2_xmrrL=pgEz=VDJz1QZ3NU17h+1mbW2FGynGwRpnye1A@mail.gmail.com>

On Sun, Jun 28, 2015 at 10:27 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:
> Mailman's obscure_addresses option is now disabled.  It has been pretty
> useless as a spam mitigation measure anyway.
>
> This is a test message to see if mailman continues to break --clearsign GPG
> signatures for messages that contain an e-mail address like
> test at example.com.

Still broken, in both the web "archives" and the "mbox" archives.
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009252.html
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz

Note also, as outlined with other issues in the OP, the below attachment
will not appear in the "mbox" archives, thus becoming lost to mirrors and
users rightly attempting to use the "mbox" archives as their canonical source
for local seeding or MUA access.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lost.c
Type: text/x-csrc
Size: 223 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/63f50962/attachment-0001.bin>

From grarpamp at gmail.com  Thu Jul 16 05:08:59 2015
From: grarpamp at gmail.com (grarpamp)
Date: Thu, 16 Jul 2015 01:08:59 -0400
Subject: [bitcoin-dev] Mailing List Administrivia - GPG, Archives,
 Breakage, TODO, mirrors, etc
In-Reply-To: <CAD2Ti2_xmrrL=pgEz=VDJz1QZ3NU17h+1mbW2FGynGwRpnye1A@mail.gmail.com>
References: <CAD2Ti2-QChRZYZDSH1avit3snCLMws2UNmHQ_aY5O4txCS3AGg@mail.gmail.com>
	<CADm_WcbjAmrBXJs6s9rvVKccgOA3sDut0o2ALTKqWQrjT=MyxQ@mail.gmail.com>
	<CAEz79Pp7XyAjdN_e7BnwJfqp=ZaSk7hQSwMJiev-9R5orKyUew@mail.gmail.com>
	<CAD2Ti2_xmrrL=pgEz=VDJz1QZ3NU17h+1mbW2FGynGwRpnye1A@mail.gmail.com>
Message-ID: <CAD2Ti2_egM8sWFDjYTjONNN7VbUMxQ=HR_qzwsDO1m6ezbqSCw@mail.gmail.com>

> will not appear in the "mbox" archives, thus becoming lost to mirrors and

And the attachment link for users of the web "archive" has stripped off the
final blank line that was present in the original attachment. Thus it would
fail any detached signatures authors may choose to make.

SHA1 (lost.c) = 4c6284510d73031eac16ddac53363137f39499e0
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009439.html
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/63f50962/attachment-0001.bin

From odinn.cyberguerrilla at riseup.net  Thu Jul 16 05:18:25 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Wed, 15 Jul 2015 22:18:25 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>	<55A66FA9.4010506@thinlink.com>	<20150715151825.GB20029@savin.petertodd.org>	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>	<20150715155903.GC20029@savin.petertodd.org>	<55A68668.6@bitcoins.info>	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>	<20150715193259.GC3064@muck>
	<CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>
Message-ID: <55A73EA1.6080500@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Personally, I hope more people develop on-chain microtransaction
systems (so long as open source, etc) ~ see
http://dev.blockcypher.com/#microtransaction-api ~ and I hope the
bitcoin community figures out ways to re-examine dust, rather than
viewing it as a "problem," but instead, to re-examine this and
interpret it as an "opportunity" for microgiving. (I won't claim there
aren't challenges there, but I'll just throw that out there again..)

- - Please see, my little project, http://abis.io

On 07/15/2015 05:08 PM, Matthieu Riou via bitcoin-dev wrote:
> On Wed, Jul 15, 2015 at 12:32 PM, Peter Todd <pete at petertodd.org 
> <mailto:pete at petertodd.org>> wrote:
> 
> 
> "In a Sybil attack the attacker subverts the reputation system of
> a peer-to-peer network by creating a large number of pseudonymous 
> identities, using them to gain a disproportionately large
> influence."
> 
> 
> Our "identities" aren't pseudonymous.
> 
> In the case of Bitcoin, there's something like 6,000 nodes, so if
> that 20% is achived via outgoing connections you'd have 600 to 1200
> active outgoing connections using up network resources.  Meanwhile,
> the default is 8 outgoing connections - you're using about two
> orders of magnitude more resources.
> 
> 
> You're not talking about a Sybil attack anymore, just resource use.
> We do know how to change default configurations to offer more
> connections.
> 
> If you are achieving that via incoming connections, you're placing
> a big part of the relay network under central control. As we've
> seen in the case of Chainalysis's sybil attack, even unintentional
> confirguation screwups can cause serious and widespread issues due
> to the large number of nodes that can fail in one go. (note how
> Chainalysis's actions were described(1) as a sybil attack by
> multiple Bitcoin devs, including Gregory Maxwell, Wladimir van der
> Laan, and myself)
> 
> 
> We're not Chainanalysis and we do not run hundreds of distinct
> nodes. Just a few well-tuned ones.
> 
> 
> What you are doing is inherently incompatible with
> decentralization.
> 
> 
> That's a matter of opinion. One could argue your actions and
> control attempts hurt decentralization. Either way, no one should
> play the decentralization police or act as a gatekeeper.
> 
> Question: Do you have relationships with mining pools? For
> instance, are you looking at contracts to have transactions mined
> to guarantee confirmations?
> 
> 
> No, we do not. We do not know anyone else having such contracts. As
> you know, Coinbase also denied having such contracts in place [1].
> But you seem to have more relationships with mining pools than we
> do.
> 
> Thanks, Matthieu CTO and Founder, BlockCypher
> 
> [1]
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/00886
4.html
>
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVpz6hAAoJEGxwq/inSG8CdAMIAJfJcJaXyFjUVLi6iA03tpot
8e0SONC+kadLRTUn8GzAlpSgvKLcfqO5WvNKsjJenckrP+B6oSlT2e2u0QGehxl4
gGfTksOPzrBFCfWOZnVAaDr4uR7OAHM/AjXkpn1gQJsh+xBhyeUF1xapPeR/M+9e
yXFtV0itZve93sKrtlo+J/VShEi9mPBYrFrJBK9o17ir5chXW/xzqGm1Ny3fS72U
/g9zkdt+LBidaLXdPvfBjjmux18BM+IAifO41C9Q0eIN6x0zajvPd/Y3Mm5J/QUe
p8qvj2Px75AYSCV0qzgMhETZdwYFor04f2zJ8u3WUB+AbupM9hewqvfPGiUi1qU=
=S/aI
-----END PGP SIGNATURE-----

From thomas at thomaszander.se  Thu Jul 16 09:38:54 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 16 Jul 2015 11:38:54 +0200
Subject: [bitcoin-dev] Mempool "Expected Byte Stay" policy
In-Reply-To: <55A6E98C.3090307@thinlink.com>
References: <55A5A837.1090203@thinlink.com> <2272402.KPsXmgHuuj@coldstorage>
	<55A6E98C.3090307@thinlink.com>
Message-ID: <2509294.8eWsy7oNj2@coldstorage>

On Wednesday 15. July 2015 16.15.24 Tom Harding via bitcoin-dev wrote:
> On 7/15/2015 12:18 PM, Thomas Zander via bitcoin-dev wrote:
> > On Tuesday 14. July 2015 17.24.23 Tom Harding via bitcoin-dev wrote:
> >> Rule 2: A transaction and its dependents are evicted on its 2-hour
> >> anniversary, whether space is required or not
> > 
> > Instead of 2 hours, why not a number of blocks?
> 
> So users/wallets can know when they should rebroadcast and consider 
> increasing the fee.
> 
> 
> Using 12 blocks, there is a 5% chance he has to wait 3 hours.*
> 
> Using 120 minutes, there is only a .23% chance that fewer than 4 blocks 
> have occurred.**

Using the good old saying; results in the past are no indication of the 
future.
I see a logic error in your thinking.

Your assumption that time is a better indicator is false. Naturally time 
itself is universal, but blocks are known by wallets too. Its just as good.

This assumption of yours leans heavily on block mining times, and that is
not guaranteed in the future.  Imagine one day half the miners dropping and 
blocks take much longer for a week or so.  Your assumptions just broke the 
mempool.

-- 
Thomas Zander

From abrutschy at xylon.de  Thu Jul 16 14:30:15 2015
From: abrutschy at xylon.de (Arne Brutschy)
Date: Thu, 16 Jul 2015 16:30:15 +0200
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
Message-ID: <55A7BFF7.2050608@xylon.de>

Hello,

What are these pre- and post-Hearn-relay drop rules you are speaking
about? Can anybody shed some light on this? (I am aware of the
minrelaytxfee setting proposed in the 0.11.0 release notes, I just
don't see what this has to do with Mike Hearn, BitcoinXT, and whether
there's a code change related to this that I missed).

Related: is there somewhere a chart that plots `estimatefee` over
time? Would be interesting to see how the fee market evolved over
these past weeks.

Regards
Arne

On 15/07/15 05:29, simongreen--- via bitcoin-dev wrote:
> With my black hat on I recently performed numerous profitable 
> double-spend attacks against zeroconf accepting fools. With my
> white hat on, I'm warning everyone. The strategy is simple:
> 
> tx1: To merchant, but dust/low-fee/reused-address/large-size/etc. 
> anything that miners don't always accept.
> 
> tx2: After merchant gives up valuable thing in return, normal tx
> without triggering spam protections. (loltasticly a Mike Hearn
> Bitcoin XT node was used to relay the double-spends)
> 
> Example success story: tx1 paying Shapeshift.io with 6uBTC output
> is not dust under post-Hearn-relay-drop rules, but is dust under 
> pre-Hearn-relay-drop rules, followed by tx2 w/o the output and not 
> paying Shapeshift.io. F2Pool/Eligius/BTCChina/AntPool etc. are all 
> miners who have reverted Hearn's 10x relay fee drop as recommended
> by v0.11.0 release notes and accept these double-spends.
> Shapeshift.io lost ~3 BTC this week in multiple txs. (they're no
> longer accepting zeroconf)
> 
> Example success story #2: tx1 with post-Hearn-relay drop fee,
> followed by tx2 with higher fee. Such stupidly low fee txs just
> don't get mined, so wait for a miner to mine tx2. Bought a silly
> amount of reddit gold off Coinbase this way among other things. I'm
> surprised that reddit didn't cancel the "fools-gold" after tx
> reversal. (did Coinbase guarantee those txs?) Also found multiple
> Bitcoin ATMs vulnerable to this attack. (but simulated attack with
> tx2s still paying ATM because didn't want to go to trouble of good
> phys opsec)
> 
> Shoutouts to BitPay who did things right and notified merchant
> properly when tx was reversed.
> 
> In summary, every target depending on zeroconf vulnerable and lost 
> significant sums of money to totally trivial attacks with high 
> probability. No need for RBF to do this, just normal variations in
> miner policy. Shapeshift claims to use Super Sophisticated Network
> Sybil Attacking Monitoring from Blockcypher, but relay nodes !=
> miner policy.
> 
> Consider yourself warned! My hat is whiter than most, and my skills
> not particularly good.
> 
> What to do? Users: Listen to the experts and stop relying on
> zeroconf. Black hats: Profit!
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-- 
Arne Brutschy <abrutschy at xylon.de>

From jimmyjack at gmail.com  Thu Jul 16 14:50:16 2015
From: jimmyjack at gmail.com (Me)
Date: Thu, 16 Jul 2015 07:50:16 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <55A7BFF7.2050608@xylon.de>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A7BFF7.2050608@xylon.de>
Message-ID: <57C28E34-7B1C-4501-BB9C-5727862023F3@gmail.com>

> minrelaytxfee setting proposed in the 0.11.0 release notes

my guess, he is talking about this https://bitcoin.org/en/glossary/minimum-relay-fee <https://bitcoin.org/en/glossary/minimum-relay-fee> - slam dunk technique for doublespend



> Related: is there somewhere a chart that plots `estimatefee` over
> time? Would be interesting to see how the fee market evolved over
> these past weeks.

I find this useful
https://bitcoinfees.github.io/ <https://bitcoinfees.github.io/>





> On Jul 16, 2015, at 7:30 AM, Arne Brutschy via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Hello,
> 
> What are these pre- and post-Hearn-relay drop rules you are speaking
> about? Can anybody shed some light on this? (I am aware of the
> minrelaytxfee setting proposed in the 0.11.0 release notes, I just
> don't see what this has to do with Mike Hearn, BitcoinXT, and whether
> there's a code change related to this that I missed).
> 
> Related: is there somewhere a chart that plots `estimatefee` over
> time? Would be interesting to see how the fee market evolved over
> these past weeks.
> 
> Regards
> Arne
> 
> On 15/07/15 05:29, simongreen--- via bitcoin-dev wrote:
>> With my black hat on I recently performed numerous profitable 
>> double-spend attacks against zeroconf accepting fools. With my
>> white hat on, I'm warning everyone. The strategy is simple:
>> 
>> tx1: To merchant, but dust/low-fee/reused-address/large-size/etc. 
>> anything that miners don't always accept.
>> 
>> tx2: After merchant gives up valuable thing in return, normal tx
>> without triggering spam protections. (loltasticly a Mike Hearn
>> Bitcoin XT node was used to relay the double-spends)
>> 
>> Example success story: tx1 paying Shapeshift.io with 6uBTC output
>> is not dust under post-Hearn-relay-drop rules, but is dust under 
>> pre-Hearn-relay-drop rules, followed by tx2 w/o the output and not 
>> paying Shapeshift.io. F2Pool/Eligius/BTCChina/AntPool etc. are all 
>> miners who have reverted Hearn's 10x relay fee drop as recommended
>> by v0.11.0 release notes and accept these double-spends.
>> Shapeshift.io lost ~3 BTC this week in multiple txs. (they're no
>> longer accepting zeroconf)
>> 
>> Example success story #2: tx1 with post-Hearn-relay drop fee,
>> followed by tx2 with higher fee. Such stupidly low fee txs just
>> don't get mined, so wait for a miner to mine tx2. Bought a silly
>> amount of reddit gold off Coinbase this way among other things. I'm
>> surprised that reddit didn't cancel the "fools-gold" after tx
>> reversal. (did Coinbase guarantee those txs?) Also found multiple
>> Bitcoin ATMs vulnerable to this attack. (but simulated attack with
>> tx2s still paying ATM because didn't want to go to trouble of good
>> phys opsec)
>> 
>> Shoutouts to BitPay who did things right and notified merchant
>> properly when tx was reversed.
>> 
>> In summary, every target depending on zeroconf vulnerable and lost 
>> significant sums of money to totally trivial attacks with high 
>> probability. No need for RBF to do this, just normal variations in
>> miner policy. Shapeshift claims to use Super Sophisticated Network
>> Sybil Attacking Monitoring from Blockcypher, but relay nodes !=
>> miner policy.
>> 
>> Consider yourself warned! My hat is whiter than most, and my skills
>> not particularly good.
>> 
>> What to do? Users: Listen to the experts and stop relying on
>> zeroconf. Black hats: Profit!
>> 
>> _______________________________________________ bitcoin-dev mailing
>> list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> -- 
> Arne Brutschy <abrutschy at xylon.de>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/591bbb75/attachment.html>

From greg at schvey.com  Thu Jul 16 15:33:48 2015
From: greg at schvey.com (Greg Schvey)
Date: Thu, 16 Jul 2015 08:33:48 -0700
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <57C28E34-7B1C-4501-BB9C-5727862023F3@gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A7BFF7.2050608@xylon.de>
	<57C28E34-7B1C-4501-BB9C-5727862023F3@gmail.com>
Message-ID: <CAPYd=bAdX89R8djvVCeFBFNFx2DmTwtcAwSL-BpXA4HdXV6N1Q@mail.gmail.com>

Simon - tx hashes or it didn't happen

Kidding aside, would be great if you could share the confirmed and
double-spent hashes so the rest of us can dive in and learn from this.

On Thu, Jul 16, 2015 at 7:50 AM, Me via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> minrelaytxfee setting proposed in the 0.11.0 release notes
>
> my guess, he is talking about this
> https://bitcoin.org/en/glossary/minimum-relay-fee - slam dunk technique
> for doublespend
>
>
>
> Related: is there somewhere a chart that plots `estimatefee` over
> time? Would be interesting to see how the fee market evolved over
> these past weeks.
>
>
> I find this useful
> https://bitcoinfees.github.io/
>
>
>
>
>
> On Jul 16, 2015, at 7:30 AM, Arne Brutschy via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hello,
>
> What are these pre- and post-Hearn-relay drop rules you are speaking
> about? Can anybody shed some light on this? (I am aware of the
> minrelaytxfee setting proposed in the 0.11.0 release notes, I just
> don't see what this has to do with Mike Hearn, BitcoinXT, and whether
> there's a code change related to this that I missed).
>
> Related: is there somewhere a chart that plots `estimatefee` over
> time? Would be interesting to see how the fee market evolved over
> these past weeks.
>
> Regards
> Arne
>
> On 15/07/15 05:29, simongreen--- via bitcoin-dev wrote:
>
> With my black hat on I recently performed numerous profitable
> double-spend attacks against zeroconf accepting fools. With my
> white hat on, I'm warning everyone. The strategy is simple:
>
> tx1: To merchant, but dust/low-fee/reused-address/large-size/etc.
> anything that miners don't always accept.
>
> tx2: After merchant gives up valuable thing in return, normal tx
> without triggering spam protections. (loltasticly a Mike Hearn
> Bitcoin XT node was used to relay the double-spends)
>
> Example success story: tx1 paying Shapeshift.io <http://shapeshift.io>
> with 6uBTC output
> is not dust under post-Hearn-relay-drop rules, but is dust under
> pre-Hearn-relay-drop rules, followed by tx2 w/o the output and not
> paying Shapeshift.io <http://shapeshift.io>.
> F2Pool/Eligius/BTCChina/AntPool etc. are all
> miners who have reverted Hearn's 10x relay fee drop as recommended
> by v0.11.0 release notes and accept these double-spends.
> Shapeshift.io <http://shapeshift.io> lost ~3 BTC this week in multiple
> txs. (they're no
> longer accepting zeroconf)
>
> Example success story #2: tx1 with post-Hearn-relay drop fee,
> followed by tx2 with higher fee. Such stupidly low fee txs just
> don't get mined, so wait for a miner to mine tx2. Bought a silly
> amount of reddit gold off Coinbase this way among other things. I'm
> surprised that reddit didn't cancel the "fools-gold" after tx
> reversal. (did Coinbase guarantee those txs?) Also found multiple
> Bitcoin ATMs vulnerable to this attack. (but simulated attack with
> tx2s still paying ATM because didn't want to go to trouble of good
> phys opsec)
>
> Shoutouts to BitPay who did things right and notified merchant
> properly when tx was reversed.
>
> In summary, every target depending on zeroconf vulnerable and lost
> significant sums of money to totally trivial attacks with high
> probability. No need for RBF to do this, just normal variations in
> miner policy. Shapeshift claims to use Super Sophisticated Network
> Sybil Attacking Monitoring from Blockcypher, but relay nodes !=
> miner policy.
>
> Consider yourself warned! My hat is whiter than most, and my skills
> not particularly good.
>
> What to do? Users: Listen to the experts and stop relying on
> zeroconf. Black hats: Profit!
>
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> --
> Arne Brutschy <abrutschy at xylon.de>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/127ff899/attachment-0001.html>

From tomh at thinlink.com  Thu Jul 16 16:50:58 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 16 Jul 2015 09:50:58 -0700
Subject: [bitcoin-dev] Mempool "Expected Byte Stay" policy
In-Reply-To: <2509294.8eWsy7oNj2@coldstorage>
References: <55A5A837.1090203@thinlink.com>
	<2272402.KPsXmgHuuj@coldstorage>	<55A6E98C.3090307@thinlink.com>
	<2509294.8eWsy7oNj2@coldstorage>
Message-ID: <55A7E0F2.2030400@thinlink.com>

On 7/16/2015 2:38 AM, Thomas Zander via bitcoin-dev wrote:
> On Wednesday 15. July 2015 16.15.24 Tom Harding via bitcoin-dev wrote:
>> On 7/15/2015 12:18 PM, Thomas Zander via bitcoin-dev wrote:
>>> On Tuesday 14. July 2015 17.24.23 Tom Harding via bitcoin-dev wrote:
>>>> Rule 2: A transaction and its dependents are evicted on its 2-hour
>>>> anniversary, whether space is required or not
>>> Instead of 2 hours, why not a number of blocks?
>> So users/wallets can know when they should rebroadcast and consider
>> increasing the fee.
>>
>>
>> Using 12 blocks, there is a 5% chance he has to wait 3 hours.*
>>
>> Using 120 minutes, there is only a .23% chance that fewer than 4 blocks
>> have occurred.**
> Using the good old saying; results in the past are no indication of the
> future.
> I see a logic error in your thinking.
>
> Your assumption that time is a better indicator is false. Naturally time
> itself is universal, but blocks are known by wallets too. Its just as good.
>
> This assumption of yours leans heavily on block mining times, and that is
> not guaranteed in the future.  Imagine one day half the miners dropping and
> blocks take much longer for a week or so.  Your assumptions just broke the
> mempool.
>

It's not a question of right vs. wrong.  Either method has consequences 
for user expectations and behavior.

With fixed-block mempool expiration, the expiration time is variable.  
User can get an alert, but at an unpredictable time.

With fixed-timeout, the likelihood of expiration is more variable 
(expiration occurrence is unpredictable regardless), but any expiration 
will occur at the timeout.



From justin at netki.com  Fri Jul 17 00:55:10 2015
From: justin at netki.com (Justin Newton)
Date: Thu, 16 Jul 2015 17:55:10 -0700
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
Message-ID: <CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>

I am breaking this into a couple of pieces as my first response has been in
a moderator queue for some time because it is too long.


TL;DR version - Wallet Name Service has always been a decentralized and
distributed service that it no way requires you to ever touch the Netki
infrastructure.  We want to work with the community, as we have been from
the beginning, to come up with the best standard possible.

Longer answers inline below.



On Tue, Jul 14, 2015 at 12:07 PM, Riccardo Spagni <ric at spagni.net> wrote:

>
>
>> In terms of comparisons to OpenAlias, I think there are a lot of
>> similarities, but a few differences.  First the similarities:
>>
>>
>> 1> We both use DNSSEC.
>>
>> 2> We both have the option of storing the address directly in the DNS
>> record.
>>
>>
>> Differences:
>>
>> 1> We do not use DNSCrypt.  I understand why you chose to, but we were
>> concerned about broad interoperability and easy broad distribution of
>> hosting, so decided not to use it.  We have other ways of achieving
>> privacy, using HD Wallets and Payment Requests.
>>
>
> And this is the part where you guys look really, really incompetent (and I
> don't mean that in a terribly demeaning way, it's just that you're in a
> space where you want to be a domain expert, not make a series of
> embarrassing and public faux pas).
>
>
> I appreciate the thought :)  I think where we differ is on where we
believe the trade offs should be on perceived privacy versus censorship
resistance and centralization.


By having a limited number of proxies people need to go through to easily
implement, be it the 4 you recommend, or 53, you actually have a very
limited number of actors for an authority or hacker to go to in order to be
able to install/force logging, or censorship.  This very centralization
forces us back to a model where we need to trust a very small number of
actors in order for the system to operate as designed.  This, to me,
appears to be the opposite of the goals of the bitcoin ecosystem.  To
ensure this point is clear, I strongly believe recommending people focus
all lookups through 4 centralized "proxies" is a bad idea and counter to
bitcoin's ideals.


The fact that hackers or state actors need to corrupt only a small number
of servers/services in order to gain global visibility into all queries, I
believe, breaks any perceived privacy gains from using DNSCrypt.  A very
small number of hacks or subpoenas and everyone's records are fair game in
one place.


For the highly privacy conscious they can, today do their DNS lookups over
a non logging VPN connection without forcing everyone else through a
handful of centralized servers.  Or they can use DNSCrypt optionally
themselves.  All of our tools have always been open source and folks can
modify them for their own desired uses, or submit pull requests with their
own ideas.

We'd love to hear others thoughts on this.  While I believe that for now
the centralization trade offs required to use DNSCrypt today (via a limited
number of proxies) outweigh any perceived privacy benefits it provides, we
are always open to what others in the community believe and have made
modifications to how things work before as a result of feedback from
industry participants.






>
>
>> 2> We have the option of storing a URL rather than just a wallet
>> address in the TXT record.  This allows a second level lookup against
>> the URL to get back a unique HD Wallet address or Payment Request each
>> time, further protecting user privacy and security.  Using Wallet
>> Names with Payment Requests allows for the user experience of typing
>> in an easy to remember name and getting back the "green lock" and who
>> the validated recipient is.  This also provides an auto audit of the
>> end to end DNS SEC process, in the case the path were somehow
>> compromised, the signature on the payment request can provide an
>> additional check.
>>
>
> OpenAlias supports this as well, except it does it better by allowing the
> KV pairs to also contain a TLSA record before the request, which
> effectively makes it a DANE-secured interaction. Your interaction requires
> the trusting of multiple CAs, which is an inherent weakness.
>

I think DANE is a great idea.  We were just discussing that with Andreas
S., and are currently looking at whether we want to add this as optional
versus mandatory, based on how widely available DANE is for folks using
services like Cloudflare, Akamai, etc for their DNS, which many providers
in the space today are.

Of course, the security conscious could setup DANE on the URL we use AS
IS.  There is no need to create a special kv pair for this as is done in
OpenAlias.  As you know, DNSSEC and HTTPS support this today out of the box.

The CA validation, in our case, is an ADDITIONAL signature based validation
to the DNSSEC chain, not a replacement for it.


 [CONTINUED]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/c798d824/attachment.html>

From justin at netki.com  Fri Jul 17 01:01:20 2015
From: justin at netki.com (Justin Newton)
Date: Thu, 16 Jul 2015 18:01:20 -0700
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
Message-ID: <CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>

[continued]



> 3> We use a 2 tier lookup format.  The first lookup returns a list of
>> currencies or payment types supported by the Wallet Name.  The second
>> lookup goes to a record specific to that currency type to get the
>> address to go to.  We believe this to be a more scalable solution in a
>> world where someone can have both multiple digital currency types, but
>> then also multiple types of colored coins, and wants a simple way to
>> share a single name for all of those different addresses.  This allows
>> the wallet to do the work behind the scene of choosing the currency it
>> wants to send, and automatically getting back the right address to
>> send to, without the user having to do anything different.
>>
>
> We do the same thing, except in a single call. Here's an example of a
> record that has both XMR and BTC addresses:
> https://api.openalias.org/donate.getmonero.org?view=full (here are the
> DNS records for that:
> http://mxtoolbox.com/SuperTool.aspx?action=txt%3adonate.getmonero.org&run=toolpage
> )
>


We looked at doing this in a single lookup as you did.  With one or two
currencies this can be potentially more efficient.  As the number of
supported currencies and addresses under a single name grows, however, this
solution becomes potentially more problematic.  Please follow the use cases
below:

Use case 1:  Wallet Name = "bob.foo.bar" or OpenAlias = "bob.foo.bar"

The only currency supported is bitcoin, and there are no colored coin
formats supported.

OpenAlias case:

1 packet lookup to "bob.foo.bar"
1 packet response with bitcoin address

= 2 packets


Wallet Name case:

1 packet lookup to "_wallet.bob.foo.bar"
1 packet response with supported address types
1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 4 packets

Wallet Name Case 1a:

The wallet doing the lookup knows it wants bitcoin, so it skips the
supported addresses lookup

1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 2 packets

In this use case we might create more traffic, but it could also be reduced
by doing smart lookups.


Use case 2:  Wallet Name = "bob.foo.bar" or OpenAlias = "bob.foo.bar"

Many currencies and colored coin addresses are supported under the same
name, lets say 100.  When you count different currencies and colored coin
types, it could easily be hundreds, or over a thousand.


OpenAlias case:

1 packet lookup to "bob.foo.bar"
100 packet responses with various addresses

= 101 packets


Wallet Name case:

1 packet lookup to "_wallet.bob.foo.bar"
1 packet response with supported address types
1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 4 packets

Wallet Name Case 2a:

The wallet doing the lookup knows it wants bitcoin, so it skips the
supported addresses lookup

1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 2 packets


While you may end doing "less lookups" under Open Alias, as it scales, you
end up causing a significant amount of extra, unnecessary traffic.

In addition to the obvious impact of being orders of magnitude more
wasteful than necessary, it also creates privacy "leakage" by returning
someone 100 different addresses when they only asked for one.

Finally, because a single packet UDP transaction for a DNS lookup can
create possibly hundreds of packets in response, the service can
essentially become an amplifier for DDoS attacks.  (If I spoof the source
address of my target with a query to a lookup that issues hundreds of
packets in response to one packet, and I can have a real impact :( )




>
>
>> 4> We mandate DNSSEC while you make it optional.  We did this because
>> we believe giving the user the option of NOT using DNSSEC is like
>> letting them order a car with no brakes.  We weren't sure how we would
>> explain to them why their money was gone when they really didn't
>> understand the risks they were taking up front. We had a lot of
>> discussion about it before coming to the decision we did, and I can
>> see why you went the other way, although I do believe we made the
>> right choice.
>>
>
> With OpenAlias a DNSSEC fail is a soft fail, and the user has to confirm
> the address. The reasons are threefold:
>
> 1. At the moment only 83.5% of the TLDs are signed [2]. The unsigned ones
> include some biggies like .sg, .za, and .to
>

I think this is a good point, and one we weighed.  When we were making our
original decisions.  Given the importance of ensuring that the lookups
return the correct value, and the known vulnerabilities in DNS without
DNSSEC, coupled with the fact that ICANN has mandated all zones and
registries move to DNSSEC, our belief was and is that it was worth the
trade off that there were cases where existing domains would not work.


It is important to note, that ICANN has "required" for some years that
registrars and registries support DNSSEC on the domains they register.  I
personally believe we shouldn't delay use of DNSSEC until their registries
had come up to current required Internet standards.  (Here are ICANN's
registrar requirements showing the DNSSEC requirement, btw:
https://www.icann.org/resources/pages/approved-with-specs-2013-09-17-en#operation
)

That said, what do others in the industry think?  We are basing our current
standard on our believed best practices, and defaulted to "first, lose no
money", given the irreversibility of bitcoin.



> 2. Even if the zone *is* signed, DNSSEC deployment is hard. Unmanaged
> DNSSEC deployment is out of scope for probably 99.9% of users, even the
> usually-technically-ok Bitcoin crowd. Managed DNSSEC is available, but is
> quite pricey. UltraDNS, Dyn, and GoDaddy (ikr?) are the three big
> providers, and of those three only GoDaddy has a consumer-affordable
> product.
>


I think "DNSSEC is hard" is a bit of a boogey man that's not really true.
We are working on developing registrar by registrar instructions of how to
do this, and we have typically found that if you are setting up DNS by
yourself, adding DNSSEC doesn't take a lot of additional time, maybe an
hour or so depending on your registrar.

This known concern, however, is why when we launched our product (based on
our standard record formats) that we wanted to launch it with a variety of
options for people.

In addition to these options there are also other hosting providers, and
certain registrars that will allow you to setup DNSSEC on their DNS
platforms.


1> One could choose the "0 click" installation process of just getting a
free Wallet Name underneath their provider's name space.  This option has
been free to end users in all cases so far, and I expect it always will be
in the future (although that is up to the partner, so some may choose to
charge).

2> If they wanted some provider independence, but someone to manage things
for them, they can register a name through us and manage everything via our
web interface.  This can cost them as little as $1.95/yr through us.

3> Finally, for the "do it yourselfer" who wants full control themselves,
they can simply follow the formats on our developer page and do the whole
thing themselves.  If they do this by registering their own ".bit" this
will cost them less than $0.25.  If they have an existing domain name, even
less.






>
> 3. ThomasV and I have done a stack of testing behind residential and
> commercial routers where DNSSEC simply fails (eg. the router runs a really
> outdated DNS server that doesn't provide RRSIGs in its response, or the ISP
> doesn't care about DNSSEC). Unsurprisingly, this can be fixed by...you
> guessed it...doing the lookup via DNSCrypt.
>

That's some interesting data, and runs counter to the research of the IETF
DNS working group.  If you are willing to share your data, I can put you in
touch with the appropriate folks there to share your research.  I'd also
love to see it!



>
> Until we are closer to the bulk of all TLDs being signed, and DNSSEC
> becomes at least a little more ubiquitous, we can't lock out huge portions
> of the Internet, because then we're not really providing a useful and
> usable solution. All we can is make it more difficult to pay an unverified
> domain.
>
> Of course, if your aim is to force people to use you as a domain
> registrar, then it makes total sense why you'd lock people out;)
>

I'd argue that we aren't locking "huge portions" of the Internet.  You are
correct that about 15% of TLD's are not yet signed, even though they were
required to be by ICANN.

As I said above, I believe the requirement to not lose money and the fact
that other options are available for those running on TLD's that are out of
compliance, is worth the trade off that some existing names won't work
until their TLD's come into compliance with current Internet standards.

And, as we covered above, we don't force anyone to use our registrar, nor
any of our services in order for Wallet Names to work for them.  We never
have.  It's just not who we are.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/7ccc45ce/attachment-0001.html>

From justin at netki.com  Fri Jul 17 01:02:00 2015
From: justin at netki.com (Justin Newton)
Date: Thu, 16 Jul 2015 18:02:00 -0700
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
	<CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
Message-ID: <CABqynxJAMPain_SJJ9OiVfH9MJKurip-2O3EadkJBamak3j7jA@mail.gmail.com>

[CONTINUED]

>
> Additionally, we just released another open source API server to help
>> with the "other half" of the lookup problem.  Its in its infancy, and
>> we are certainly taking feedback on it at this time.  It is called
>> Addressimo <https://github.com/netkicorp/addressimo> and will serve
>> unique HD Wallet addresses or Payment Requests for every lookup, thus
>> allowing a user to have a private, secure way to share a Wallet Name
>> that can be used to send them any digital currency.
>>
>
> Oh snap...https://github.com/openalias/openalias-api
>

These are actually vastly different pieces of software, at least from the
description, and a first read of the code.  My understanding is the
software you linked to here basically takes the DNS work out of lookups for
people, as we released: https://github.com/netkicorp/wns-api-server  Its
our Wallet Name Lookup server.

Addressimo, as I described above, provides a different purpose.  Its a way
for service providers, mobile wallet providers or end users to have an
online server that can serve unique wallet addresses ala HD Wallets (BIP32)
or signed Payment Requests (BIP0070).  This allows for an easy way to
increase security and privacy by serving a unique address for every
request, and/or sign the address (and other optional data) with an X509
private key to prove ownership of the address in a way independent of and
supplemental to the DNSSEC chain (also can be DANE for yet another layer of
security).  It also supports offline signing of the Payment Requests so the
server doesn't have to have access to a private key, or need to be trusted.





>
>
> In any case, I'd much rather we had one effort going forward than
>> multiples, so let's talk!
>>
>
> I agree, and you guys are in an ideal position to change to supporting the
> OpenAlias standard (and enhancing it) without skipping a beat. We would
> definitely appreciate and take your input and efforts, and that would make
> OpenAlias v2 (oa2:) a standard built out in conjunction with Netki.
>
> Not only do you get Electrum support without lifting a finger, but it will
> go a long way to repairing your relationship with the open-source community
> at large, several proponents of which have taken great umbrage at what you
> were previously pushing as a closed-source, centralised system.
>
>
I'm a little confused by these closing statements.  Our system has, from
the beginning been open in terms of the fact that anyone could both serve
names or do lookups without ever touching our servers, talking to us, or us
even knowing that they did it or that they even exist.  Our system has
NEVER been one where folks were required to use us for any portion of the
service, and from our first beta product launch our open source tools did
all lookups against DNS records and the blockchain, never any proprietary
servers or interfaces on our side.

In terms of the format itself being open, we have already made several
extensions and modifications to it as a result of conversations with
industry participants in order to ensure that what we are building meets
the needs of the community at large.  We will gladly continue to do so, it
is how we ensure we are building something everyone needs!

I'd love to know where you got information that we were in some way a
closed and centralized system so that we can have an opportunity to clarify
that misconception.


In terms of finding a common standard, as I said, I am thrilled to have the
conversations, but there are some places, highlighted above, that would
cause me to hesitate to "just implement" the Open Alias standard.  I can
also see places where bringing the formats together to one standard could
have strong benefits, for example:

I think formatting the record as a key value pair with versioning has
merit, and would love to move it in to what we are doing (and likely will).

On the other side, I think the two level lookup provides a lot of value at
scale over trying to send back a bunch of text records when only a small
portion of the data is used.

I'd love to hear thoughts from others in the community on mandating DNSSEC
and thoughts on DNSCrypt.  I have a strong opinion on both of those but
would love to engage in thoughtful dialogue around what path best suits the
need of the community.


Looking forward to the discussion!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/63581188/attachment.html>

From david.barnes at bitcoin.co.th  Fri Jul 17 02:26:01 2015
From: david.barnes at bitcoin.co.th (David Barnes | Bitcoin Co. Ltd.)
Date: Fri, 17 Jul 2015 09:26:01 +0700
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
Message-ID: <55A867B9.202@bitcoin.co.th>

Please take a look at my BIP0074 draft proposal (this is my first one so
may be incorrectly formatted)
https://github.com/bitcoincoltd/bips/blob/master/bip-0074.mediawiki

This proposal will make it possible for a simpler form of Bitcoin
payment at physical shop locations.

Currently when making a Bitcoin payment at a shop the merchant needs to
have an app of some kind so that they can calculate the amount of
bitcoins you need to pay them to cover your purchase (of for example:
$9.99).

The problem is that many employees are not properly trained on the
Bitcoin app, or the owner is the one with the app and he is often not
there.  When visiting "Bitcoin Accepting" estabishments you will often
run into this problem.  The businesses often don't get enough Bitcoin
business to warrant training sessions or dedicate hardware to run the app.

A simpler way to accept payments would be for the merchant to have a
fixed QR code, and no app at all.  However a printed QR code can't
calculate any exchange rates, and so it would be up to the customer to
choose how much to pay.

This can be result in some problems as the customer may be using their
default wallet exchange rates, or their preferred international
exchange. While the merchant may be actually using a local exchange or
service to exchange the coins to local currency, and there may be some
discrepancy between what the customer thinks the rate should be and what
the merchant thinks the rate should be.

Enter BIP0074, so that the merchant can specify which exchange rates
they are using, and the customer and then look up the rates from this
source and pay according to these rates.

David Barnes


From david.barnes at bitcoin.co.th  Fri Jul 17 03:30:56 2015
From: david.barnes at bitcoin.co.th (David Barnes | Bitcoin Co. Ltd.)
Date: Fri, 17 Jul 2015 10:30:56 +0700
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
In-Reply-To: <CADu7o8OAicbtXwkxbsN=joirurBKt2ta-XwMYY622pUjR+drZQ@mail.gmail.com>
References: <55A867B9.202@bitcoin.co.th>
	<CADu7o8OAicbtXwkxbsN=joirurBKt2ta-XwMYY622pUjR+drZQ@mail.gmail.com>
Message-ID: <55A876F0.2080402@bitcoin.co.th>

There are a number of services that offer Bitcoin payment notification
via SMS.

If the cashier only has a dumb-phone (or smart phone without Bitcoin
app) they can receive notification of the payment...all without any need
for an app or internet access.

I envision that their dynamic rate provider will also be offer the SMS
notification service; but independent services are also available.

David Barnes

On 7/17/2015 10:21 AM, Paul Rabahy wrote:
> The biggest hole I see in this scheme is how does the cashier verify
> that the payment has been made successfully? If both the cashier and
> the customer need to scan this new QR code, how is that any better
> than just the cashier scanning the QR code and showing the customer an
> aggregate QR code.
>
> I understand wanting to make IRL bitcoin purchases easier, but I do
> not believe that this proposal will actually help.
>


From ric at spagni.net  Fri Jul 17 08:00:13 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Fri, 17 Jul 2015 10:00:13 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oQ-4oOAYkVpSRV6nCFN12AFkZ=O6Fof8YVNeKtrQ-t28Q@mail.gmail.com>

> I appreciate the thought :)  I think where we differ is on where we believe the
> trade offs should be on perceived privacy versus censorship resistance and
> centralization.
>
> By having a limited number of proxies people need to go through to easily
> implement, be it the 4 you recommend, or 53, you actually have a very limited
> number of actors for an authority or hacker to go to in order to be able to
> install/force logging, or censorship.  This very centralization forces us back
> to a model where we need to trust a very small number of actors in order for
> the system to operate as designed.  This, to me, appears to be the opposite of
> the goals of the bitcoin ecosystem.  To ensure this point is clear, I strongly
> believe recommending people focus all lookups through 4 centralized "proxies"
> is a bad idea and counter to bitcoin's ideals.
>
> The fact that hackers or state actors need to corrupt only a small number of
> servers/services in order to gain global visibility into all queries, I
> believe, breaks any perceived privacy gains from using DNSCrypt.  A very small
> number of hacks or subpoenas and everyone's records are fair game in one place.

You're misstating (or not understanding) the attack surface.

State-level attackers won't compromise 50+ DNSCrypt servers, they can get the
information on lookups a lot more trivially. Censorship resistance and
protection from state-level attackers comes from the decentralised side of
OpenAlias (ie. Namecoin resolution, preferably done using a local copy of the
NMC blockchain). Since Netki supports Namecoin resolution too there is no need
to worry about protecting end users from that.

There is, however, a need to protect users from man-in-the-middle attacks where
the data is not modified en-route, but it is sniffed. Who you pay in a financial
transaction is, and should be, privileged information between yourself and that
person. By encouraging open DNS lookups you're effectively hanging that
information out for all to see.

It is true that there are only 4 DNSCrypt servers we are comfortable
recommending. It is also true that there were, at one stage, only 4 Electrum
servers. There were also only 4 Bitcoin nodes. As something grows and becomes
more useful and usable the number of voluntary participants becomes much
greater, and we will provide the necessary tools to enable these volunteers.

So in a world where tens of thousands of Bitcoiners are using an aliasing
standard (which, in and of itself, is a convenience service anyway), and
hundreds of individuals and companies are hosting DNSCrypt resolvers, is it even
a valid argument to harp on the number of "proxies"? Thus it is not worth
talking about today. It is definitely worth discussing in future if the number
of DNSCrypt resolvers doesn't increase, but that is a different discussion for a
different time.

> For the highly privacy conscious they can, today do their DNS lookups over a
> non logging VPN connection without forcing everyone else through a handful of
> centralized servers.  Or they can use DNSCrypt optionally themselves.  All of
> our tools have always been open source and folks can modify them for their own
> desired uses, or submit pull requests with their own ideas.

Everyone should be highly privacy conscious when it comes to financial
transactions, and it would be unconscionable of both you and I not to defend
end-user privacy.

> We'd love to hear others thoughts on this.  While I believe that for now the
> centralization trade offs required to use DNSCrypt today (via a limited number
> of proxies) outweigh any perceived privacy benefits it provides, we are always
> open to what others in the community believe and have made modifications to how
> things work before as a result of feedback from industry participants.

It's important to remember that the "paranoid" won't use an aliasing service, or
at best will use a local Namecoin blockchain for that purpose. This is a
convenience service to provide general and broad appeal for the non-technical,
and those are the very people that need to be protected from nosey neighbours /
workmates / ISPs. Privacy is not only (or even at all) about protecting people
buying drugs on a darknet market, it is about defending personal liberties.

> I think DANE is a great idea.  We were just discussing that with Andreas S.,
> and are currently looking at whether we want to add this as optional versus
> mandatory, based on how widely available DANE is for folks using services like
> Cloudflare, Akamai, etc for their DNS, which many providers in the space today
> are.
>
> Of course, the security conscious could setup DANE on the URL we use AS IS.
> There is no need to create a special kv pair for this as is done in OpenAlias.
> As you know, DNSSEC and HTTPS support this today out of the box.

Embedding the TLSA record in a KV pair just means that pinning takes one less
step.

> The CA validation, in our case, is an ADDITIONAL signature based validation to
> the DNSSEC chain, not a replacement for it.

Without DANE it's a weakness. It's trusting an additional CA (over and above the
domain owner), when we know that this is - and has been - an issue in the past.
Were it not an issue DANE (or certificate pinning in general) would not have to
exist.

> We looked at doing this in a single lookup as you did.  With one or two
> currencies this can be potentially more efficient.  As the number of supported
> currencies and addresses under a single name grows, however, this solution
> becomes potentially more problematic.  Please follow the use cases below:

(snipped quote for brevity)

> Many currencies and colored coin addresses are supported under the same name,
> lets say 100.  When you count different currencies and colored coin types, it
> could easily be hundreds, or over a thousand.

Coinmarketcap lists 643 currencies and assets, of which only 131 have had more
than $500 in trade volume in the last 24 hours (and only 8 have done over $100
000 in volume). ShapeShift only lists 44 of those. I seriously doubt that a
convenience service such as aliasing will find great use amongst every
fly-by-night scamcoin that crops up, but that is an aside.

> While you may end doing "less lookups" under Open Alias, as it scales, you end
> up causing a significant amount of extra, unnecessary traffic.

"Scale" is a misnomer. Someone trying to collect every single active
cryptocurrency and house them all under a single sub-domain is an outlier, not a
problem to be faced at scale. I do not think we will see a large scale movement
to "collect" all the various cryptocurrency tokens, no matter how worthless they
are, and then subsequently setup aliases for them.

> In addition to the obvious impact of being orders of magnitude more wasteful
> than necessary, it also creates privacy "leakage" by returning someone 100
> different addresses when they only asked for one.

I'm not sure how this is any greater leakage than 100 individual requests for
the openly accessible data, especially since it would be encrypted if made via
DNSCrypt?

> Finally, because a single packet UDP transaction for a DNS lookup can create
> possibly hundreds of packets in response, the service can essentially become an
> amplifier for DDoS attacks.  (If I spoof the source address of my target with a
> query to a lookup that issues hundreds of packets in response to one packet,
> and I can have a real impact :( )

Naughty naughty, you're doing that thing again where you're using a smattering
of expertise to appear knowledgeable about a subject.

So let's hypothetically say that an individual was crazy enough to have all 643
of the Coinmarketcap currencies/assets aliased on a single sub-domain. The
OpenAlias example of a Monero address (with a recipient name) is 157 bytes long,
due to there being two public keys serialised in the address, plus the ~12 bytes
of overhead per RR (the DNS wire format uses label compression, so the FQDN
wouldn't be repeated for each returned record). Let's call it 170 bytes. That
makes the returned data just over 100kb.

Now let's first address a couple of things, assuming that someone would be nuts
enough to do this:

1. This is way larger than the UDP packet maximum, and this would never come
back as a "regular" ol' DNS request (512 bytes max). This may seem bad, until
you consider that DNSSEC responses are almost assured to exceed 512 bytes (eg.
an NXDOMAIN with NSEC3). The size of the response is big, but that's hardly
something to write home about.

2. If the DNS server supports RFC2671 (EDNS) then it would try and send it via
UDP, and as long as the client says it can receive such a huge response over UDP
it'll come over the wire.

3. However, because RFC2671 can result in a DNS amplification attack, it's been
obsoleted by RFC6891 (EDNS0), which is pretty much ubiquitous for all resolvers
that support DNSSEC (because of the very large DNSSEC responses, and the fact
that DNSSEC resolvers want to avoid participation in an amplification attack).
EDNS0 mitigates amplification attacks.

4. In the event that an EDNS0 response fails (eg. the client says it can't
accept anything over, say, 4kb, which is quite common) then there's an automatic
and silent switch to DNS-over-TCP (RFC5966). DNS-over-TCP uses TFO (TCP Fast
Open) to do an extremely fast handshake and passing a cookie to the client in
the SYN-ACK, which can then be used for subsequent requests, but data is still
carried in the SYN. TFO mitigates amplification attacks.

You can't both be overly concerned about amplification attacks *and* use DNSSEC,
which necessitates large records. And, at any rate, the issue with amplification
attacks *isn't* the size of the records (there are tons of records just under
4kb, like an ANY request against isc.org, that are far better suited to
amplification attacks), it is the number of recursive open resolvers. There is
improvement in this space, though, and many open recursive resolvers have been
fixed in recent years.

> It is important to note, that ICANN has "required" for some years that
> registrars and registries support DNSSEC on the domains they register.  I
> personally believe we shouldn't delay use of DNSSEC until their registries had
> come up to current required Internet standards.  (Here are ICANN's registrar
> requirements showing the DNSSEC requirement, btw:
> https://www.icann.org/resources/pages/approved-with-specs-2013-09-17-en#
> operation)

Doesn't really matter what they require as long as there are zones that remain
unsigned. Plus it's not like new .za / .sg / .to registrations magically get
DNSSEC, they're also out of luck.

> That said, what do others in the industry think?  We are basing our current
> standard on our believed best practices, and defaulted to "first, lose no
> money", given the irreversibility of bitcoin.

Oh, ok. "First, lose no money, but it's ok if your ISP / neighbour / colleague
reports you to the cops because you sent a donation somewhere you shouldn't."

> I think "DNSSEC is hard" is a bit of a boogey man that's not really true.  We
> are working on developing registrar by registrar instructions of how to do
> this, and we have typically found that if you are setting up DNS by yourself,
> adding DNSSEC doesn't take a lot of additional time, maybe an hour or so
> depending on your registrar.

Adding the DS record to a domain is trivial, but to use DNSSEC with Gandi or
GoDaddy (if you don't have their PremiumDNS product) you have to host your own
DNS server. Sorry, but that is a non-trivial task. Even worse: you need to
secure your private KSK and not keep it on the server, and if Bitcoiners are
anything to go by this won't happen.

Oh, and incidentally, ENOM/Namecheap doesn't have DNSSEC support yet.

You're literally layering complexity on top of a convenience service, and to
what end?

> This known concern, however, is why when we launched our product (based on our
> standard record formats) that we wanted to launch it with a variety of options
> for people.

That's completely, 100% centralised. You're creating decentralisation theatre by
providing "options" that no ordinary person will use.

> That's some interesting data, and runs counter to the research of the IETF DNS
> working group.  If you are willing to share your data, I can put you in touch
> with the appropriate folks there to share your research.  I'd also love to see
> it!

I doubt that very much. See:
http://stats.labs.apnic.net/dnssec/XA?c=XA&x=1&g=1&r=1&w=30

As can be seen, only ~14% of all DNS queries request DNSSEC validation. That's
very far from ubiquitous, and completely matches what Thomas and I found in
Berlin. Unsurprisingly, this stat is particularly bad given that it also shows
that ~15% of all queries are being handled by Google's Public DNS, without which
the stat would be much lower.

> I'd argue that we aren't locking "huge portions" of the Internet.  You are
> correct that about 15% of TLD's are not yet signed, even though they were
> required to be by ICANN.

Fine, so we're just cutting Africa out, then?
http://www.internetsociety.org/deploy360/wp-content/uploads/2015/06/cctlddnssec-
2015-06-19.pdf

Even beyond that, ICANN's page listing DNSSEC-capable registrars (last updated
December 2014) only lists only a handful:
https://www.icann.org/resources/pages/deployment-2012-02-25-en

> As I said above, I believe the requirement to not lose money and the fact that
> other options are available for those running on TLD's that are out of
> compliance, is worth the trade off that some existing names won't work until
> their TLD's come into compliance with current Internet standards.

A soft fail doesn't magically let the money go. It warns users of the risk and
asks them to verify the address by site. This could even be built out so that
higher value transactions (say, anything over $1000) hard fails in the absence
of DNSSEC, and anything particularly high value (say, anything over $50 000)
refuses to use an alias at all and requires an actual cryptocurrency address.

> I'm a little confused by these closing statements.  Our system has, from the
> beginning been open in terms of the fact that anyone could both serve names or
> do lookups without ever touching our servers, talking to us, or us even knowing
> that they did it or that they even exist.  Our system has NEVER been one where
> folks were required to use us for any portion of the service, and from our
> first beta product launch our open source tools did all lookups against DNS
> records and the blockchain, never any proprietary servers or interfaces on our
> side.

Now you're just trolling.

https://github.com/bitpay/copay/pull/2431/files

Which has this lovely line in it:
https://github.com/wdawg33/copay/blob/be6c3e80ab7601d245b186f7802d7050992eb1f0/
config.js#L98

So you provide an open standard that uses DNS...but then you wanted to force
CoPay users to use your centralised API?

> I'd love to know where you got information that we were in some way a closed
> and centralized system so that we can have an opportunity to clarify that
> misconception.

In December 2014 your website had no "developer" section (curl -s
https://web.archive.org/web/20141221141023/https://netki.com/ | grep
"Developers")

The first time that section got scraped was the end of April:
https://web.archive.org/web/20150428231016/https://www.netki.com/partials/
developers.html

Even in its current form your website makes no mention of alternatives or
options for those wishing to secure an alias. End users are undoubtedly left
with the distinct impression that they can only get one by paying you.

Riccardo

From david.barnes at bitcoin.co.th  Fri Jul 17 08:50:55 2015
From: david.barnes at bitcoin.co.th (David Barnes | Bitcoin Co. Ltd.)
Date: Fri, 17 Jul 2015 15:50:55 +0700
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
In-Reply-To: <CAAmoQf113y=Xd9R+b5yS=d9yo5SAX8+Nrv3gQt-R7Jih0UBOBg@mail.gmail.com>
References: <55A867B9.202@bitcoin.co.th>
	<CAAmoQf113y=Xd9R+b5yS=d9yo5SAX8+Nrv3gQt-R7Jih0UBOBg@mail.gmail.com>
Message-ID: <55A8C1EF.8050603@bitcoin.co.th>

I picked up the next available number myself, but can be changed to 
anything, the 74 is unimportant to the proposal.

David Barnes

On 7/17/2015 2:54 PM, Micha Bailey wrote:
> Did Greg assign this number? He didn't do it here on the ML. You're 
> not supposed to use arbitrary numbers, certainly not numbers that are 
> close/similar to ones already assigned.
>


From pete at petertodd.org  Fri Jul 17 11:59:20 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 17 Jul 2015 07:59:20 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org>
	<55A68668.6@bitcoins.info>
	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
	<20150715193259.GC3064@muck>
	<CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>
Message-ID: <20150717115920.GA19616@savin.petertodd.org>

On Wed, Jul 15, 2015 at 05:08:05PM -0700, Matthieu Riou via bitcoin-dev wrote:
> On Wed, Jul 15, 2015 at 12:32 PM, Peter Todd <pete at petertodd.org> wrote:
> 
> >
> > "In a Sybil attack the attacker subverts the reputation system of a
> > peer-to-peer network by creating a large number of pseudonymous
> > identities, using them to gain a disproportionately large influence."
> >
> 
> Our "identities" aren't pseudonymous.

Then are you willing to tell us what IP addresses your nodes connect
from? This is important network stability information due to how nodes
prevent a lack of diversity in their outgoing connections.

> In the case of Bitcoin, there's something like 6,000 nodes, so if that
> > 20% is achived via outgoing connections you'd have 600 to 1200 active
> > outgoing connections using up network resources.  Meanwhile, the default
> > is 8 outgoing connections - you're using about two orders of magnitude
> > more resources.
> >
> 
> You're not talking about a Sybil attack anymore, just resource use. We do
> know how to change default configurations to offer more connections.

The Bitcoin P2P network's primary concern is reliability through
diversity; you are harming that resource.

So to be clear, you have both a high level of outgoing and incoming
connections? Given that Bitcoin nodes only connect to eight outgoing
peers, how do you manage to connect to your claimed 10%-20% of all
reachable nodes? Obviously you can't be doing that with just incoming
connections, unless you're running hundreds of nodes, or doing an addr
spamming attack.

> If you are achieving that via incoming connections, you're placing a big
> > part of the relay network under central control. As we've seen in the
> > case of Chainalysis's sybil attack, even unintentional confirguation
> > screwups can cause serious and widespread issues due to the large number
> > of nodes that can fail in one go. (note how Chainalysis's actions were
> > described(1) as a sybil attack by multiple Bitcoin devs, including
> > Gregory Maxwell, Wladimir van der Laan, and myself)
> >
> 
> We're not Chainanalysis and we do not run hundreds of distinct nodes. Just
> a few well-tuned ones.

It's actually marginally better for the network if you're using hundreds
of distinct nodes rather than just a few to do this sybil attack - the
chance of your small number of nodes suddenly going off-line and causing
propagation issues is more than hundreds of nodes all going off-line
suddenly. Additionally it's easier for bad actors to survail your few
internet connections to easily get tx propagation information from the
network than it is to survail Chainalysis's setup. (ironic I know)

> > What you are doing is inherently incompatible with decentralization.
> >
> 
> That's a matter of opinion. One could argue your actions and control
> attempts hurt decentralization. Either way, no one should play the
> decentralization police or act as a gatekeeper.

"Control attempts"? Care to explain?

Re: "gatekeeping" - fact is your business model and technology can only
be succesfully run by a small number of entities at once, resulting in a
situation where those few companies act as gatekeepers for access to
zeroconf confirmation probability information.

> Question: Do you have relationships with mining pools? For instance, are
> > you looking at contracts to have transactions mined to guarantee
> > confirmations?
> >
> 
> No, we do not. We do not know anyone else having such contracts. As you
> know, Coinbase also denied having such contracts in place [1]. But you seem
> to have more relationships with mining pools than we do.

Nice cheap shot there. My "relationships" are nothing more than people
being willing to talk to me, ask me for advice, and warn me about
possible threats. They're not legal contracts.

-- 
'peter'[:-1]@petertodd.org
0000000000000000138147be90db48b8338de6d58cc6b60e6ad360f6ef486d8c
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/f048beea/attachment.sig>

From bip at mattwhitlock.name  Fri Jul 17 12:24:24 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Fri, 17 Jul 2015 08:24:24 -0400
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
In-Reply-To: <55A8C1EF.8050603@bitcoin.co.th>
References: <55A867B9.202@bitcoin.co.th>
	<CAAmoQf113y=Xd9R+b5yS=d9yo5SAX8+Nrv3gQt-R7Jih0UBOBg@mail.gmail.com>
	<55A8C1EF.8050603@bitcoin.co.th>
Message-ID: <15824042.UJUZ1yd9UW@crushinator>

You should rename your file to something like "bip-draft-dynamic-rate-lookup". Using an arbitrary BIP number will cause confusion when that BIP number is actually assigned later.


On Friday, 17 July 2015, at 3:50 pm, David Barnes | Bitcoin Co. Ltd. via bitcoin-dev wrote:
> I picked up the next available number myself, but can be changed to 
> anything, the 74 is unimportant to the proposal.
> 
> David Barnes
> 
> On 7/17/2015 2:54 PM, Micha Bailey wrote:
> > Did Greg assign this number? He didn't do it here on the ML. You're 
> > not supposed to use arbitrary numbers, certainly not numbers that are 
> > close/similar to ones already assigned.
> >
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From david.barnes at bitcoin.co.th  Fri Jul 17 12:40:58 2015
From: david.barnes at bitcoin.co.th (David Barnes | Bitcoin Co. Ltd.)
Date: Fri, 17 Jul 2015 19:40:58 +0700
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
In-Reply-To: <15824042.UJUZ1yd9UW@crushinator>
References: <55A867B9.202@bitcoin.co.th>
	<CAAmoQf113y=Xd9R+b5yS=d9yo5SAX8+Nrv3gQt-R7Jih0UBOBg@mail.gmail.com>
	<55A8C1EF.8050603@bitcoin.co.th> <15824042.UJUZ1yd9UW@crushinator>
Message-ID: <55A8F7DA.8080809@bitcoin.co.th>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/bfe1409e/attachment.html>

From milly at bitcoins.info  Fri Jul 17 12:56:49 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 17 Jul 2015 08:56:49 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <20150717115920.GA19616@savin.petertodd.org>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A66FA9.4010506@thinlink.com>
	<20150715151825.GB20029@savin.petertodd.org>
	<CDB5FC27-F3F0-44F7-BBC6-670ACAE740D2@gmail.com>
	<20150715155903.GC20029@savin.petertodd.org> <55A68668.6@bitcoins.info>
	<CAHUNwMp3-jNc9g0shCUCR76WEA5Qp+JpxZGPmAuK5wuy4p1yEw@mail.gmail.com>
	<20150715193259.GC3064@muck>
	<CAHUNwMowbrua=iY518SL4MBY1sszfQwoM3epCaZ-jVrb2qxghg@mail.gmail.com>
	<20150717115920.GA19616@savin.petertodd.org>
Message-ID: <55A8FB91.40506@bitcoins.info>

> My "relationships" are nothing more than people
> being willing to talk to me, ask me for advice, and warn me about
> possible threats. They're not legal contracts.

Your actions make it appear as if you attack companies with the hope of 
landing consulting fees.  I assume if companies hire you as a consultant 
or put you on some advisory board then you stop badmouthing them.  These 
type of developer attacks are a high risk issue due to the small number 
of developers who have been given authority by the github gatekeeper and 
the lack of an incentive system for Bitcoin devlelopers.

I have been suggesting a systematic risk analysis to reduce the 
probability of such an attack.  If you have a systematic risk analysis 
then when there are issue you judge it against a standard.  That 
replaces the current situation where developers haphazardly make claims 
in twitter, Reddit, and blog posts and create drama and confusion.

Russ





From david.barnes at bitcoin.co.th  Fri Jul 17 15:47:24 2015
From: david.barnes at bitcoin.co.th (David Barnes | Bitcoin Co. Ltd.)
Date: Fri, 17 Jul 2015 22:47:24 +0700
Subject: [bitcoin-dev] BIP0074 Draft (Dynamic Rate Lookup)
In-Reply-To: <CAHv+tb5B=i9FeCX-NXkTpRE_j8hwam_aWupEA_3xtBH8366sww@mail.gmail.com>
References: <55A867B9.202@bitcoin.co.th>	<CAAmoQf113y=Xd9R+b5yS=d9yo5SAX8+Nrv3gQt-R7Jih0UBOBg@mail.gmail.com>	<55A8C1EF.8050603@bitcoin.co.th>
	<CAHv+tb5B=i9FeCX-NXkTpRE_j8hwam_aWupEA_3xtBH8366sww@mail.gmail.com>
Message-ID: <55A9238C.4050506@bitcoin.co.th>

Thomas,

Let me answer your questions below; but let me give you a little preface
about how I envision the full cycle working.

My company has setup a service here:  https://coinpay.in.th/services/print/
The service will work as follows:

- Merchants print out a QR code with address (and hopefully a DRL URL too)
- When customers wish to pay Bitcoin they scan the QR code pay the
amount the merchant tells them (such as "This kebab is 235 Thai Baht")
- Merchant / Staff instantly receive an SMS that payment is received

But currently the customers wallet does not have DRL, so will not give
the exact same exchange rate that we are giving the merchant, so that
the amount the merchant receives will not be the exact 235 Thai Baht
that they requested, but maybe 225, or 242.24 etc...as the customers is
currently picking any exchange basically out of thin air.

With this BIP it would allow the customer's wallet to know the exact
rate that merchant is receiving, therefore when the merchant requests
"235 Thai Baht" they actually receive exactly 235 Thai Baht.

But why do this?  Apps work fine; smart phones are fine, merchants are
currently fine.
In my experience (running a merchant service, and exchange in Thailand
for 2 years and hosting 80+ Bitcoin meetup events) currently merchants
are not fine.  Almost everyone I meet at the meetups has been traveling
around looking for places to pay Bitcoin, only to find that when the ask
for the bill "the own (aka the only guy in the place interested in
Bitcoin) is not here".

Pushing the angle of trying to get the merchants to properly train their
staff, or have a dedicated Bitcoin accepting phone/tablet is making
almost no progress, so we can trying to tackle the problem from a
different angle and come up with something that requires no training,
and no owner (Bitcoin interested guy) to be there.

But for it to work really seamlessly the merchant and customer need to
be on the same page with regards to the exchange rating being used.

And now to answer your questions:

> (0) Stores don't usually have any control of their exchange rate.
> Normally they rely on a service provider to do that, who decides the
> Bitcoin amount. This by design side-steps customers being able to
> enter a dollar amount (they get a BTC amount), or staff wondering how
> much bitcoin to charge (because they enter a dollar amount).
This BIP assumes that the staff do not have any app.  They are just
ringing up the customer in their standard POS and telling the customer
the fiat amount they must pay.
Also assumes that the merchant is going to be moving the coins to a
service or exchange to convert so need to use the rates from that
service/exchange.

> (1) "A simpler way to accept payments would be for the merchant to
> have a fixed QR code, and no app at all."
>
> But then, how do they know that a payment took place at all? Trust
> that the buyers app isn't showing a screenshot with the stores
> [static] address, that the buyer may know from a previous encounter?
>
In the service we are running there will be an SMS notification sent to
the staff.  There are also a number of services that provide SMS
notification upon Bitcoin transactions to a specific address.
But also in some cases they may just be willing to trust the customer;
especially for small food items, or repeat customers etc...

> (2) I suppose a DRP is required also provide historic access to
> pricing data? I don't see any mention of this in the BIP, but it
> appears necessary to allow the merchant to reconcile payments whenever
> they get online.
>
> (This could be a service each DRP provides - "we'll log all
> transactions to your stores offline address, and show you the supposed
> value according to us at this time". Without something like this, the
> merchant will end up using Blockchain.info who have their OWN exchange
> rates, compounding the issue)
>
Yes the DRP may provide historical rates.  Or in the case of our service
an order is created in our system and rate is saved at the moment the
unconfirmed Bitcoin transaction is received.
But this is outside the scope of this BIP, which is simply to lookup the
current spot rate the DRP is offering.

> (3) You're certainly right that requesting dollar amounts from
> customers leads to problems, but, assuming an offline store (no app,
> or no Internet perhaps), how can they be certain that the payment went
> through, or that it was paid at the correct amount?
With our service the merchant will receive an SMS that payment is been
completed, and the amount of the payment (in the fiat currency)
But this is outside the scope of the actual BIP as the merchant is free
to use whatever method they want to get notified of a payment.

> I'm curious what use case you have that warrants such a setup? It
> seems to lead to difficulties for the merchant:
>
>  (i) identifying the origin of a payment.
This is somewhat outside of the scope of the BIP, but within our service
it would be quite easy for them to match up orders in our system with
receipts from their POS seeing as an order is received in our system at
the first moment the unconfirmed transaction appears.  And with DRL it
should match the exact fiat amount they requested.

>  (ii) identifying what payment went missing, from months ago. 
I'm unclear why a payment would go missing, unless you are referring to
double spends, or Bitcoin transactions sent with insufficient fees?  In
this case our service would provide a warning that the transaction was
unlikely to confirm.

>  (iii) what if the transaction took a day to confirm. (The exchange
> rate can change in the time between the customer /sending/ the funds,
> and the funds actually /confirming /and being recorded at the DRP's
> rate for that time. Ie, DRP notices a payment on the merchants
> address. The market rate now sees this as $47.39, even though it was
> originally sent for 50$ by the payer)
In the case of our service the rate is locked at the moment of the
unconfirmed transaction, so not an issue.

> My main issue is that each of these problems would go away if
> merchants just had an internet connection, which seems a must to use
> bitcoin.
>
It's not so much an issue with not having internet, it's more the issue
of not being properly trained on how to use the apps/internet.  And even
with training the staff are easily going to forget if they don't see a
Bitcoin customer for several weeks at a time.

This is based on a lot of first hand experience and feedback from
Bitcoin customers and merchants...based on other stories I hear from
people trying to pay with Bitcoin at physical locations I don't think
this issue is isolated to Thailand only.


From jgarzik at gmail.com  Fri Jul 17 15:55:19 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Fri, 17 Jul 2015 11:55:19 -0400
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
Message-ID: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>

Opening a mailing list thread on this BIP:

BIP PR: https://github.com/bitcoin/bips/pull/173
Code PR: https://github.com/bitcoin/bitcoin/pull/6451

The general intent of this BIP is as a minimum viable alternative plan to
my preferred proposal (BIP 100).

If agreement is not reached on a more comprehensive solution, then this
solution is at least available and a known quantity.  A good backup plan.

Benefits:  conservative increase.  proves network can upgrade.  permits
some added growth, while the community & market gathers data on how an
increased block size impacts privacy, security, centralization, transaction
throughput and other metrics.  2MB seems to be a Least Common Denominator
on an increase.

Costs:  requires a hard fork.  requires another hard fork down the road.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/f81af759/attachment.html>

From onelineproof at gmail.com  Fri Jul 17 16:11:17 2015
From: onelineproof at gmail.com (Andrew)
Date: Fri, 17 Jul 2015 16:11:17 +0000
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
Message-ID: <CAL8tG=nr8DGG+xad9t8dwPLJQ=jdYtZ=CSziN8kM_BTqEtrADg@mail.gmail.com>

What are you trying to do? Break the ice with a hard fork so that later it
becomes easier to do so, with people more complacent towards it? There are
many solutions to the scaling problem that do not require a hard fork and
are quite simple to implement actually, and don't come with the
complications involved with a hard fork. I'm not a reputable developer on
this list, so my opinion probably doesn't matter much, but I watched and
analyzed this situation closely and I don't like this idea.

On Fri, Jul 17, 2015 at 3:55 PM, Jeff Garzik via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Opening a mailing list thread on this BIP:
>
> BIP PR: https://github.com/bitcoin/bips/pull/173
> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>
> The general intent of this BIP is as a minimum viable alternative plan to
> my preferred proposal (BIP 100).
>
> If agreement is not reached on a more comprehensive solution, then this
> solution is at least available and a known quantity.  A good backup plan.
>
> Benefits:  conservative increase.  proves network can upgrade.  permits
> some added growth, while the community & market gathers data on how an
> increased block size impacts privacy, security, centralization, transaction
> throughput and other metrics.  2MB seems to be a Least Common Denominator
> on an increase.
>
> Costs:  requires a hard fork.  requires another hard fork down the road.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>


-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/540d1554/attachment-0001.html>

From tier.nolan at gmail.com  Fri Jul 17 16:12:05 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 17 Jul 2015 17:12:05 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
Message-ID: <CAE-z3OUao6wDBVwtrOrxK3jtc=GBMRXbVy+h4a=AtTkL=bOUDw@mail.gmail.com>

Transaction sizes are still limited to 1MB with this patch.  While this
isn't technically a change, it does mean that both are no longer linked
together.

Since this has no voting step, I assume the intention is that as a
compromise suggestion, it would have full support.

It establishes a precedent for hard forks not to require a vote though.

On Fri, Jul 17, 2015 at 4:55 PM, Jeff Garzik via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Opening a mailing list thread on this BIP:
>
> BIP PR: https://github.com/bitcoin/bips/pull/173
> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>
> The general intent of this BIP is as a minimum viable alternative plan to
> my preferred proposal (BIP 100).
>
> If agreement is not reached on a more comprehensive solution, then this
> solution is at least available and a known quantity.  A good backup plan.
>
> Benefits:  conservative increase.  proves network can upgrade.  permits
> some added growth, while the community & market gathers data on how an
> increased block size impacts privacy, security, centralization, transaction
> throughput and other metrics.  2MB seems to be a Least Common Denominator
> on an increase.
>
> Costs:  requires a hard fork.  requires another hard fork down the road.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/1858d303/attachment.html>

From tier.nolan at gmail.com  Fri Jul 17 16:14:13 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 17 Jul 2015 17:14:13 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CAE-z3OUao6wDBVwtrOrxK3jtc=GBMRXbVy+h4a=AtTkL=bOUDw@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<CAE-z3OUao6wDBVwtrOrxK3jtc=GBMRXbVy+h4a=AtTkL=bOUDw@mail.gmail.com>
Message-ID: <CAE-z3OVQ6BSaFVwqZO+9=HZKtFO-J-pURh0S3BK-q4jV7aiiMg@mail.gmail.com>

On Fri, Jul 17, 2015 at 5:12 PM, Tier Nolan <tier.nolan at gmail.com> wrote:

> While this isn't technically a change, it does mean that both are no
> longer linked together.
>

I meant both block and transaction sizes are no longer linked together.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/2fcef783/attachment.html>

From jrn at jrn.me.uk  Fri Jul 17 17:57:47 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Fri, 17 Jul 2015 18:57:47 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
Message-ID: <55A9421B.6040605@jrn.me.uk>

I'd back this if we can't find a permanent solution - 2MB gives us a lot 
more wiggle room in the interim at least; one of my concerns with block 
size is 3 transactions per second is absolutely tiny, and we need space 
for the network to search for an equilibrium between volume and pricing 
without risk of an adoption spike rendering it essentially unusable.

I'd favour switching over by block height rather than time, and I'd 
suggest that given virtually every wallet/node out there will require 
testing (even if many do not currently enforce a limit and therefore do 
not need changing), 6 months should be considered a minimum target. I'd 
open with a suggestion of block 390k as a target.

Ross

On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
> Opening a mailing list thread on this BIP:
>
> BIP PR: https://github.com/bitcoin/bips/pull/173
> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>
> The general intent of this BIP is as a minimum viable alternative plan 
> to my preferred proposal (BIP 100).
>
> If agreement is not reached on a more comprehensive solution, then 
> this solution is at least available and a known quantity.  A good 
> backup plan.
>
> Benefits:  conservative increase.  proves network can upgrade. 
>  permits some added growth, while the community & market gathers data 
> on how an increased block size impacts privacy, security, 
> centralization, transaction throughput and other metrics.  2MB seems 
> to be a Least Common Denominator on an increase.
>
> Costs:  requires a hard fork.  requires another hard fork down the road.
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/2d34be24/attachment.html>

From wardell.c at gmail.com  Fri Jul 17 19:06:33 2015
From: wardell.c at gmail.com (Chris Wardell)
Date: Fri, 17 Jul 2015 15:06:33 -0400
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <55A9421B.6040605@jrn.me.uk>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk>
Message-ID: <CAEieSeQs4OmyKr4AMcXhZfRccwPApzNJyd06yhRTOjYywsVLsQ@mail.gmail.com>

I would prefer a dynamic solution that did not necessitate a second hard
fork down the road.

I propose doubling the block size every 100k blocks (~2 years)

block 400,000 = 2MB (2016)
block 500,000 = 4MB (2017)
block 600,000 = 8MB (2018)

Chris


On Fri, Jul 17, 2015 at 1:57 PM, Ross Nicoll via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>  I'd back this if we can't find a permanent solution - 2MB gives us a lot
> more wiggle room in the interim at least; one of my concerns with block
> size is 3 transactions per second is absolutely tiny, and we need space for
> the network to search for an equilibrium between volume and pricing without
> risk of an adoption spike rendering it essentially unusable.
>
> I'd favour switching over by block height rather than time, and I'd
> suggest that given virtually every wallet/node out there will require
> testing (even if many do not currently enforce a limit and therefore do not
> need changing), 6 months should be considered a minimum target. I'd open
> with a suggestion of block 390k as a target.
>
> Ross
>
>
> On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
>
>  Opening a mailing list thread on this BIP:
>
>  BIP PR: https://github.com/bitcoin/bips/pull/173
> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>
>  The general intent of this BIP is as a minimum viable alternative plan
> to my preferred proposal (BIP 100).
>
>  If agreement is not reached on a more comprehensive solution, then this
> solution is at least available and a known quantity.  A good backup plan.
>
>  Benefits:  conservative increase.  proves network can upgrade.  permits
> some added growth, while the community & market gathers data on how an
> increased block size impacts privacy, security, centralization, transaction
> throughput and other metrics.  2MB seems to be a Least Common Denominator
> on an increase.
>
>  Costs:  requires a hard fork.  requires another hard fork down the road.
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/5e09fdb8/attachment.html>

From jrn at jrn.me.uk  Fri Jul 17 19:13:14 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Fri, 17 Jul 2015 20:13:14 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CAEieSeQs4OmyKr4AMcXhZfRccwPApzNJyd06yhRTOjYywsVLsQ@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk>
	<CAEieSeQs4OmyKr4AMcXhZfRccwPApzNJyd06yhRTOjYywsVLsQ@mail.gmail.com>
Message-ID: <55A953CA.7020701@jrn.me.uk>

I'll leave others to comment on whether we can get consensus on that, 
but your years listed are inconsistent with everything else you've 
written. Should be:

block 400,000 = 2MB (2016)
block 500,000 = 4MB (2018)
block 600,000 = 8MB (2020)

On 17/07/2015 20:06, Chris Wardell via bitcoin-dev wrote:
> I would prefer a dynamic solution that did not necessitate a second 
> hard fork down the road.
>
> I propose doubling the block size every 100k blocks (~2 years)
>
> block 400,000 = 2MB (2016)
> block 500,000 = 4MB (2017)
> block 600,000 = 8MB (2018)
>
> Chris
>
>
> On Fri, Jul 17, 2015 at 1:57 PM, Ross Nicoll via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>
>     I'd back this if we can't find a permanent solution - 2MB gives us
>     a lot more wiggle room in the interim at least; one of my concerns
>     with block size is 3 transactions per second is absolutely tiny,
>     and we need space for the network to search for an equilibrium
>     between volume and pricing without risk of an adoption spike
>     rendering it essentially unusable.
>
>     I'd favour switching over by block height rather than time, and
>     I'd suggest that given virtually every wallet/node out there will
>     require testing (even if many do not currently enforce a limit and
>     therefore do not need changing), 6 months should be considered a
>     minimum target. I'd open with a suggestion of block 390k as a target.
>
>     Ross
>
>
>     On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
>>     Opening a mailing list thread on this BIP:
>>
>>     BIP PR: https://github.com/bitcoin/bips/pull/173
>>     Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>>
>>     The general intent of this BIP is as a minimum viable alternative
>>     plan to my preferred proposal (BIP 100).
>>
>>     If agreement is not reached on a more comprehensive solution,
>>     then this solution is at least available and a known quantity.  A
>>     good backup plan.
>>
>>     Benefits:  conservative increase.  proves network can upgrade.
>>      permits some added growth, while the community & market gathers
>>     data on how an increased block size impacts privacy, security,
>>     centralization, transaction throughput and other metrics.  2MB
>>     seems to be a Least Common Denominator on an increase.
>>
>>     Costs:  requires a hard fork.  requires another hard fork down
>>     the road.
>>
>>
>>
>>
>>     _______________________________________________
>>     bitcoin-dev mailing list
>>     bitcoin-dev at lists.linuxfoundation.org
>>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/201c99fb/attachment-0001.html>

From luke at dashjr.org  Fri Jul 17 20:29:16 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Fri, 17 Jul 2015 20:29:16 +0000
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
Message-ID: <201507172029.17056.luke@dashjr.org>

On Friday, July 17, 2015 3:55:19 PM Jeff Garzik via bitcoin-dev wrote:
> BIP PR: https://github.com/bitcoin/bips/pull/173

I'm concerned that miners are prematurely bumping their soft limit to 1 MB 
lately. The only reason block size limit lifting is remotely reasonable is if 
we can trust miners to at the very least keep their soft limits set at a 
manageable size, but this assumption appears to already be failing in 
practice.

We are unlikely to approach 1 MB of actual volume by November, so I would 
prefer to see the activation date on this moved later - maybe November 2016, 
if not 2017. It would also be an improvement to try to follow reasonably-
expected bandwidth increases, so 15% (1.15 MB) rather than doubling. Doubling 
in only a few months seems to be far from a "conservative" increase.

If we can get some kind of commitment from miners not to move their soft 
limits beyond 1 MB until some future-agreed-on point, maybe the BIP is 
acceptable as-is.

On Friday, July 17, 2015 4:12:05 PM Tier Nolan via bitcoin-dev wrote:
> It establishes a precedent for hard forks not to require a vote though.

Hardforks are not something where voting makes sense. They need consensus 
among /nodes/, not majority among /miners/. No hardfork has ever had such a 
vote.

Luke

From gubatron at gmail.com  Fri Jul 17 21:13:25 2015
From: gubatron at gmail.com (Angel Leon)
Date: Fri, 17 Jul 2015 17:13:25 -0400
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <201507172029.17056.luke@dashjr.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>
Message-ID: <CADZB0_aSjdpLc2f1O7yJMv1O8bA0+eHsVPQcgSbRYUSNdoD45Q@mail.gmail.com>

When blocks are found under or over the 10 minute threshold, hashing
difficulty is raised or reduced dinamically to keep a balance. This
intelligent measure has avoided us having discussions and kept a balance.

The same way you can't assume how much hashpower there will be to find the
next blocks, why can't we have a
function that adapts to the transactional volume on the blockchain, one
which allows us to grow/shrink an acceptable maximum block size. We're not
putting caps on processing, why should we put a date based cap on
transactional volume per block? You can't predict the future, but you can
look at what's happened recently to correct these limits.

Such function/filter should be able to recognize real sustained growth in
transactional volume and let us adjust the maximum accepted blocksize to
allow for the organic growth that will come due to real activity from
things like distributed market-places, decentralized bitcoin based services
(and all the things the community dreams about and might be building
already), truly decentralized technological breakthroughs that geniunely
need to use the blockchain. <Going the off-chain way only leads to
centralization and personal/corporate agendas, which to me goes against the
Bitcoin ethos>

It should be able to adapt fast enough so that we don't have episodes where
people need to wait 4 hours to days for transactions to get on the
blockchain and be confirmed. I believe proposals that include "every
100,000 blocks" are out of touch with reality, the blocksize needs to adapt
the same way blockdifficulty already adapts to growth or lack of hashing
power.

I'm not a statistician/mathematician, but I'm sure if we propose the
parameters that need to be considered for a realistic blocksize that
reflects the needs of the Bitcoin network users, there's plenty of
crypto/statistician/mathematician brain power to propose such filtering
function here.

Things that could be considered:
- median number of transactions per block (between 6 to 12 hours, you
should be able to adjust to a real shopping sprint for instance, or huge
pop band/artist decides to sell concert tickets on Bitcoin)
- median fees offered per transaction (can we detect spammers)
- median blocksizes
- median size per transaction
- number of new addresses signing off transactions, number of addresses
we've already seen in the blockchain before (are these spammers creating
lots of new addresses to move around the same outputs, is there an
efficient way to detect the likelyhood of a transaction being spam? Bayes?
No clue, no mathematician)
- median velocity between which an address receives an input and sends it
to another one?
- more things I've no knowledge of since I'm not familiar with the details,
but could immediatly come to mind to the experts.

Mining Centralization is already happening due to its competitive nature,
we don't complain or try to force hashing limits, we shouldn't do the same
for storage. There will be no shortage of blockchain mirrors, and those
interested in running full nodes, will surely find a way to do so.

Angel

http://twitter.com/gubatron

On Fri, Jul 17, 2015 at 4:29 PM, Luke Dashjr via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Friday, July 17, 2015 3:55:19 PM Jeff Garzik via bitcoin-dev wrote:
> > BIP PR: https://github.com/bitcoin/bips/pull/173
>
> I'm concerned that miners are prematurely bumping their soft limit to 1 MB
> lately. The only reason block size limit lifting is remotely reasonable is
> if
> we can trust miners to at the very least keep their soft limits set at a
> manageable size, but this assumption appears to already be failing in
> practice.
>
> We are unlikely to approach 1 MB of actual volume by November, so I would
> prefer to see the activation date on this moved later - maybe November
> 2016,
> if not 2017. It would also be an improvement to try to follow reasonably-
> expected bandwidth increases, so 15% (1.15 MB) rather than doubling.
> Doubling
> in only a few months seems to be far from a "conservative" increase.
>
> If we can get some kind of commitment from miners not to move their soft
> limits beyond 1 MB until some future-agreed-on point, maybe the BIP is
> acceptable as-is.
>
> On Friday, July 17, 2015 4:12:05 PM Tier Nolan via bitcoin-dev wrote:
> > It establishes a precedent for hard forks not to require a vote though.
>
> Hardforks are not something where voting makes sense. They need consensus
> among /nodes/, not majority among /miners/. No hardfork has ever had such a
> vote.
>
> Luke
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/7415d690/attachment.html>

From tier.nolan at gmail.com  Fri Jul 17 22:25:06 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Fri, 17 Jul 2015 23:25:06 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <201507172029.17056.luke@dashjr.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>
Message-ID: <CAE-z3OWZdi2K6k-J063pqUgbBep0ELuZ1rm83wR5ox=kZ8CUQA@mail.gmail.com>

On Fri, Jul 17, 2015 at 9:29 PM, Luke Dashjr <luke at dashjr.org> wrote:

> Hardforks are not something where voting makes sense. They need consensus
> among /nodes/, not majority among /miners/. No hardfork has ever had such a
> vote.
>

Agreed.

I meant that since some of the new hard fork proposals use a voting system
for activation, they may not want to establish that precedent.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/b2bc54e3/attachment.html>

From raystonn at hotmail.com  Fri Jul 17 22:40:58 2015
From: raystonn at hotmail.com (Raystonn)
Date: Fri, 17 Jul 2015 15:40:58 -0700
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
Message-ID: <COL402-EAS204A0B4A3DE98CFFFEFF672CD980@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/719347de/attachment.html>

From venzen at mail.bihthai.net  Sat Jul 18 04:32:48 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Sat, 18 Jul 2015 11:32:48 +0700
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
Message-ID: <55A9D6F0.5090303@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

As an alternative to the preferred BIP100 this proposal is good
because it establishes a plan of action for dealing with the recent
ramp-up (100% increase) in number of transactions and transaction
size. Arguably, a transitory spam attack, yes, but with a speculative
rally brewing (and implied increases in network usage) this BIP may
prove to be just-in-time.

Solutions favoring dynamic vs. scheduled increases in blocksize (and
by how much) are interesting and the proponents should explore and map
out their proposal with data sets, trend projections and future
scenarios. It will require labor and time, but convince the list about
the scientific merit of your proposal.

In the meantime, the current "sufficient" state of network capacity
may soon experience "insufficient" moments. Developer confluence
around a workable plan and testing should, reasonably, begin now.

Jeff's proposal addresses an approaching capacity crunch whilst
honoring decentralization and providing time for testing and
alternative future innovations. It's the best solution the user base
and developers currently have for all the reasons Jeff gives:
conservative blocksize increase, added capacity, low impact and
minimal implication for the network and its users.

Then, many of the more far-reaching proposals being offered can be
tested, formalized, and fleshed out with scenario data.


On 07/17/2015 10:55 PM, Jeff Garzik via bitcoin-dev wrote:
> Opening a mailing list thread on this BIP:
> 
> BIP PR: https://github.com/bitcoin/bips/pull/173 Code PR:
> https://github.com/bitcoin/bitcoin/pull/6451
> 
> The general intent of this BIP is as a minimum viable alternative
> plan to my preferred proposal (BIP 100).
> 
> If agreement is not reached on a more comprehensive solution, then
> this solution is at least available and a known quantity.  A good
> backup plan.
> 
> Benefits:  conservative increase.  proves network can upgrade.
> permits some added growth, while the community & market gathers
> data on how an increased block size impacts privacy, security,
> centralization, transaction throughput and other metrics.  2MB
> seems to be a Least Common Denominator on an increase.
> 
> Costs:  requires a hard fork.  requires another hard fork down the
> road.
> 
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVqdbsAAoJEGwAhlQc8H1m3LIIAJeBKYp0HYWYONlBxFNeQfa8
4EpYmMxwTSsDZ62CxdinxEGY3eQTqQo0GGAjpfSict4hq9ivSy74eHRb7AZihdYm
znEVGMnedyMtSDvfyaUdIj/kkUX4k9mrcLyAAJB//E2e2BYQgs3esTAYx2ScCBiR
t/UQ9gIolezasUIEmEovaQG4vOXtwMEtlzXrYy7EiAGhtoBvb1w3CJ3xa8iuF4e7
aXsleE98e44wjs0T/xLbuV4d8lBpnb0i0laOH4rpl77plpTc1HlDzjjqibourPb7
SPZhfwnk5f++3PlNc/dtwEJLFw8p578S5aDWZhUX7h+DfRXSqF6WCxYvv6XdUGQ=
=eoPX
-----END PGP SIGNATURE-----

From jtimon at jtimon.cc  Sat Jul 18 09:22:14 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 18 Jul 2015 11:22:14 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CAE-z3OWZdi2K6k-J063pqUgbBep0ELuZ1rm83wR5ox=kZ8CUQA@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>
	<CAE-z3OWZdi2K6k-J063pqUgbBep0ELuZ1rm83wR5ox=kZ8CUQA@mail.gmail.com>
Message-ID: <CABm2gDq-FKwAO+7sJdFR9sLND=gy5OrnyU+UQEtDxnoMn+BH-g@mail.gmail.com>

On Sat, Jul 18, 2015 at 12:25 AM, Tier Nolan via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Fri, Jul 17, 2015 at 9:29 PM, Luke Dashjr <luke at dashjr.org> wrote:
>>
>> Hardforks are not something where voting makes sense. They need consensus
>> among /nodes/, not majority among /miners/. No hardfork has ever had such
>> a
>> vote.
>
>
> Agreed.
>
> I meant that since some of the new hard fork proposals use a voting system
> for activation, they may not want to establish that precedent.

I wonder how many people read
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
apart from you...

From jtimon at jtimon.cc  Sat Jul 18 09:24:46 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sat, 18 Jul 2015 11:24:46 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CABm2gDq-FKwAO+7sJdFR9sLND=gy5OrnyU+UQEtDxnoMn+BH-g@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>
	<CAE-z3OWZdi2K6k-J063pqUgbBep0ELuZ1rm83wR5ox=kZ8CUQA@mail.gmail.com>
	<CABm2gDq-FKwAO+7sJdFR9sLND=gy5OrnyU+UQEtDxnoMn+BH-g@mail.gmail.com>
Message-ID: <CABm2gDpTHejpj-X50U1nfHgWTvLzw6Ar59keNoHdGSFMtQG_7g@mail.gmail.com>

Sorry...
More specifically, how many people made it to
https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#uncontroversial-hardforks

On Sat, Jul 18, 2015 at 11:22 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> On Sat, Jul 18, 2015 at 12:25 AM, Tier Nolan via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> On Fri, Jul 17, 2015 at 9:29 PM, Luke Dashjr <luke at dashjr.org> wrote:
>>>
>>> Hardforks are not something where voting makes sense. They need consensus
>>> among /nodes/, not majority among /miners/. No hardfork has ever had such
>>> a
>>> vote.
>>
>>
>> Agreed.
>>
>> I meant that since some of the new hard fork proposals use a voting system
>> for activation, they may not want to establish that precedent.
>
> I wonder how many people read
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
> apart from you...

From hearn at vinumeris.com  Sat Jul 18 11:21:14 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Sat, 18 Jul 2015 13:21:14 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CADhj2oQ-4oOAYkVpSRV6nCFN12AFkZ=O6Fof8YVNeKtrQ-t28Q@mail.gmail.com>
References: <CADhj2oQ-4oOAYkVpSRV6nCFN12AFkZ=O6Fof8YVNeKtrQ-t28Q@mail.gmail.com>
Message-ID: <CA+w+GKTdwTTk32Q6TPSVstL+0V+8BTynkuSkbPQvQ4iu+Ro9Ug@mail.gmail.com>

It is worth noting that DNS lookups can be done via Tor. In effect that
gives you 1000+ proxies instead of 56 or 4. BitcoinJ already has code that
can do this.

I would agree that it makes sense for proxying of DNS requests to be an
optional part of the protocol. Wallet developers can then compete on
privacy vs robustness vs whatever other issues there may be.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150718/fac4423c/attachment.html>

From ric at spagni.net  Sat Jul 18 11:40:58 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Sat, 18 Jul 2015 13:40:58 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oTosATt1hgMqRyBofg0XQ3qPzPzJoUqesKKuR4bETYiNg@mail.gmail.com>

> It is worth noting that DNS lookups can be done via Tor. In effect that
> gives you 1000+ proxies instead of 56 or 4. BitcoinJ already has code that
> can do this.

Agreed, although I guess the bootstrap time for that is a little on
the high side, and maybe a little too chunky on mobile devices, but
it's absolutely worthwhile as an option. DNSSEC is great because it
doesn't allow resolvers to lie, they can't even pretend that a record
doesn't exist.

> I would agree that it makes sense for proxying of DNS requests to be an
> optional part of the protocol. Wallet developers can then compete on privacy
> vs robustness vs whatever other issues there may be.

My current thinking with Electrum (that ThomasV and I have bounced
around) is to make the default policy DNSCrypt -> fallback to
OpenAlias API pool (which can return DNSSEC data for verification) ->
fallback to default resolver. Turning off DNSCrypt will then make it
default resolver -> fallback to OpenAlias API pool. Turning off the
API pool will make it default resolver or fail. Default resolver can
be set to OS resolver (default) or custom resolvers (eg. Google Public
DNS).

Riccardo

From hearn at vinumeris.com  Sat Jul 18 11:43:14 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Sat, 18 Jul 2015 13:43:14 +0200
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
	transactions
In-Reply-To: <55A7BFF7.2050608@xylon.de>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A7BFF7.2050608@xylon.de>
Message-ID: <CA+w+GKTmBpLYDx+yfW=D4pa40n7qKC8knHMS413MoSfq3Wrafg@mail.gmail.com>

>
> What are these pre- and post-Hearn-relay drop rules you are speaking
> about?


He's talking about patches I didn't even write (Gavin and Tom did), but
have included in Bitcoin XT:

   https://github.com/bitcoinxt/bitcoinxt

See the README section starting with "Relaying of double spends"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150718/b7e23feb/attachment.html>

From hearn at vinumeris.com  Sat Jul 18 11:46:26 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Sat, 18 Jul 2015 13:46:26 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CADhj2oTosATt1hgMqRyBofg0XQ3qPzPzJoUqesKKuR4bETYiNg@mail.gmail.com>
References: <CADhj2oTosATt1hgMqRyBofg0XQ3qPzPzJoUqesKKuR4bETYiNg@mail.gmail.com>
Message-ID: <CA+w+GKRSCX8QsfvwkHBASH6aa2Y0JTMYFqMsJbEhOD7Aj3kXpg@mail.gmail.com>

>
> Agreed, although I guess the bootstrap time for that is a little on
> the high side, and maybe a little too chunky on mobile devices


With warm Tor directory caches it's surprisingly fast - fast enough to be
usable and I'm a notorious stickler for low latency UX. If you want to do
LOTS of lookups so you can cross-check and merge their answers, that's
slower of course.

With cold Tor caches it's indeed too slow. However, reaching "tor by
default" is a part time hobby of the bitcoinj project for a while now and
there are plenty of ideas for how to make things fast enough. For instance,
using a cold cache whilst simultaneously refreshing it in the background,
doing nightly refreshes when charging, lengthening the expiry time, and the
Tor guys I believe want to implement directory differentials too which
would also help.



> My current thinking with Electrum (that ThomasV and I have bounced
> around) is to make the default policy DNSCrypt -> fallback to
> OpenAlias API pool (which can return DNSSEC data for verification) ->
> fallback to default resolver.


That seems reasonable for Electrum. I don't strongly care about these
protocols myself (and Justin knows this already), but whatever is decided
should give maximum freedom to wallet developers who disagree with you and
wish to explore other tradeoffs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150718/22387d55/attachment.html>

From thomasv at electrum.org  Sat Jul 18 13:29:39 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Sat, 18 Jul 2015 15:29:39 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynx+YAgt404zXAqwq9_AjvmX6J0=vBi=xK_56AdsR8nMF+A@mail.gmail.com>
References: <CABqynx+YAgt404zXAqwq9_AjvmX6J0=vBi=xK_56AdsR8nMF+A@mail.gmail.com>
Message-ID: <55AA54C3.7010806@electrum.org>

Le 14/07/2015 19:29, Justin Newton a ?crit :

> Hi there.  You are correct that we are a company providing a service,
> however, that service is also based on an open standard which we are
> proposing.  I'll be honest that we haven't done the greatest job in
> promoting the standard so far.  More coming soon on that front.  Any
> of the Open Source Wallet Name resolvers that we have created do
> lookups against the standard record formats, and not directly against
> our servers in any way.  Information on the record formats as well as
> links to the lookup API server and some early libraries can be found
> here:  https://www.netki.com/#/developers and here:
> https://github.com/netkicorp
> 

Sorry to answer late, and thanks for the clarification. After talking
with you, I believe that it will not be difficult to agree on a common
standard, that gives maximum freedom to everyone.

I also believe that it is in Netki's interest to convey the message that
they are actively promoting an open standard, and not pushing a private
solution. For this reason, and assuming that the future standard
satisfies you fully, will you mind if that standard carries a neutral
name (such as "OpenAlias v2", or "BIP xx"), instead of being named after
your company? I reckon that is purely a PR issue.


> To break it down briefly, we have an open lookup standard based on
> both the namecoin blockchain as well as traditional DNSSEC.  (You can
> choose your own adventure of using namecoin based names or traditional
> ICANN names).

I would rather not make Namecoin part of the standard, because .bit
records cannot be verified easily by lightweight/spv wallets; they would
need a copy of the Namecoin blockchain for that.

> Differences:
> 
> 1> We do not use DNSCrypt.  I understand why you chose to, but we were
> concerned about broad interoperability and easy broad distribution of
> hosting, so decided not to use it.  We have other ways of achieving
> privacy, using HD Wallets and Payment Requests.
> 

As far as Electrum is concerned, I do not see DNSCrypt as something
usable in the short term. I do not think it should be mandated, because
there are other ways of achieving privacy, as you say.

> 2> We have the option of storing a URL rather than just a wallet
> address in the TXT record.  This allows a second level lookup against
> the URL to get back a unique HD Wallet address or Payment Request each
> time, further protecting user privacy and security.  Using Wallet
> Names with Payment Requests allows for the user experience of typing
> in an easy to remember name and getting back the "green lock" and who
> the validated recipient is.  This also provides an auto audit of the
> end to end DNS SEC process, in the case the path were somehow
> compromised, the signature on the payment request can provide an
> additional check.
> 

I see value in the ability to store differerent types of strings in TXT
records. In particular, I have the need to store an email address, and
more than one Bitcoin address or xpubkey per alias.

> 3> We use a 2 tier lookup format.  The first lookup returns a list of
> currencies or payment types supported by the Wallet Name.  The second
> lookup goes to a record specific to that currency type to get the
> address to go to.  We believe this to be a more scalable solution in a
> world where someone can have both multiple digital currency types, but
> then also multiple types of colored coins, and wants a simple way to
> share a single name for all of those different addresses.  This allows
> the wallet to do the work behind the scene of choosing the currency it
> wants to send, and automatically getting back the right address to
> send to, without the user having to do anything different.
> 

This seems to be a major difference, and I believe it makes sense to do
it the way you describe. Does that solution fully replace the tags used
in OpenAlias, or does it make sense to combine these two systems?


> 4> We mandate DNSSEC while you make it optional.  We did this because
> we believe giving the user the option of NOT using DNSSEC is like
> letting them order a car with no brakes.  We weren't sure how we would
> explain to them why their money was gone when they really didn't
> understand the risks they were taking up front. We had a lot of
> discussion about it before coming to the decision we did, and I can
> see why you went the other way, although I do believe we made the
> right choice.

I agree on this; there is no point using OpenAlias without DNSSEC.
Wallets can use fallback servers if the default DNS does not have DNSSEC.

> 
> 
> Additionally, we just released another open source API server to help
> with the "other half" of the lookup problem.  Its in its infancy, and
> we are certainly taking feedback on it at this time.  It is called
> Addressimo <https://github.com/netkicorp/addressimo> and will serve
> unique HD Wallet addresses or Payment Requests for every lookup, thus
> allowing a user to have a private, secure way to share a Wallet Name
> that can be used to send them any digital currency.
> 

> I'd love to talk here or offline about merging standards going
> forward.  As an FYI, Verisign has also delivered a standard to the
> IETF using DNSSEC to pass payment information here:
> https://tools.ietf.org/html/draft-wiley-paymentassoc-00  We have
> started discussions with them about merging standards as well.
> 

That is nice, but may be out of scope here. Isn't there a risk that
involving the IETF would make the process a lot slower? Of course it
would be great, but maybe we should try to reach consensus at our level
first (the bitcoin level), before trying to merge with them.


> 
> They actually have a really nice way in their standard to encode email
> addresses that more or less ensures that there won't be name space
> collision in the case that there is already a record "joe.user.com"
> and you want to create one for "joe at user.com" that we are looking at
> adding to what we are doing in the next update to our record formats.
> 
> 
> In any case, I'd much rather we had one effort going forward than
> multiples, so let's talk!
> 

From pete at petertodd.org  Sat Jul 18 15:09:40 2015
From: pete at petertodd.org (Peter Todd)
Date: Sat, 18 Jul 2015 11:09:40 -0400
Subject: [bitcoin-dev] Significant losses by double-spending unconfirmed
 transactions
In-Reply-To: <CA+w+GKTmBpLYDx+yfW=D4pa40n7qKC8knHMS413MoSfq3Wrafg@mail.gmail.com>
References: <24662b038abc45da7f3990e12a649b8a@airmail.cc>
	<55A7BFF7.2050608@xylon.de>
	<CA+w+GKTmBpLYDx+yfW=D4pa40n7qKC8knHMS413MoSfq3Wrafg@mail.gmail.com>
Message-ID: <20150718150939.GA5065@savin.petertodd.org>

On Sat, Jul 18, 2015 at 01:43:14PM +0200, Mike Hearn via bitcoin-dev wrote:
> >
> > What are these pre- and post-Hearn-relay drop rules you are speaking
> > about?
> 
> 
> He's talking about patches I didn't even write (Gavin and Tom did), but
> have included in Bitcoin XT:

No, he's talking about the min-relay-fee drop that you wrote:

https://github.com/bitcoin/bitcoin/pull/3305

Based on what I saw in my logs, the double-spends were mainly being done
by exploiting the fact that much of the hashing power has reverted your
10x relay fee drop as it makes wasting bandwidth and mempool RAM easy.
(so much so that crashing nodes with OOM's is fairly cheap)

-- 
'peter'[:-1]@petertodd.org
00000000000000000a56b9b96af356cc8411cea940bb6c25b9cd934f99f9e174
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150718/8b71fb8e/attachment.sig>

From pete at petertodd.org  Sat Jul 18 18:52:59 2015
From: pete at petertodd.org (Peter Todd)
Date: Sun, 19 Jul 2015 03:52:59 +0900
Subject: [bitcoin-dev] Do we really need a mempool? (for relay nodes)
Message-ID: <20150718185259.GA3477@muck>

As in, do relay nodes need to keep a record of the transactions they've
relayed? Strictly speaking, the answer is no: one a tx is relayed modulo
DoS concerns the entire thing can be discarded by the node. (unconfirmed
txs spending other unconfirmed txs can be handled by creating packages
of transactions, evaluated as a whole)

To mitigate DoS concerns, we of course have to have some per-UTXO limit
on bandwidth relayed, but that task can be accomplished by simply
maintaining some kind of per-UTXO record of bandwidth used. For instance
if the weighted fee and fee/KB were recorded, and forced to - say -
double for each additional tx relayed that spent a given UTXO you would
have a clear and simple upper limit of lifetime bandwidth. Equally it's
easy to limit bandwidth moment to moment by asking peers for highest
fee/KB transactions they advertise first, stopping when our bandwidth
limit is reached.

You probably could even remove IsStandard() pretty much entirely with
the right increasingly expensive "replacement" policy, relying on it
alone to provide anti-DoS. Obviously this would simplify some of the
debates around mining policy! This could even be re-used for scalable a
general-purpose messaging network paid by coin ownership if the UTXO set
is split up, and some kind of expiration over time policy is
implemented.

Miners of course would still want to have a mempool, but that codebase
may prove simpler if it doesn't have to work double-duty for relaying as
well.

-- 
'peter'[:-1]@petertodd.org
00000000000000000b675c4d825a10c278b8d63ee4df90a19393f3b6498fd073
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 646 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150719/62fd1782/attachment.sig>

From patrick.strateman at gmail.com  Sat Jul 18 19:46:01 2015
From: patrick.strateman at gmail.com (Patrick Strateman)
Date: Sat, 18 Jul 2015 12:46:01 -0700
Subject: [bitcoin-dev] Do we really need a mempool? (for relay nodes)
In-Reply-To: <20150718185259.GA3477@muck>
References: <20150718185259.GA3477@muck>
Message-ID: <55AAACF9.90007@gmail.com>

Relay nodes do not need a mempool, but do need some mechanism to avoid
DoS issues.

Wallet nodes can use the mempool for fee estimation (in addition to
looking at past blocks).

On 07/18/2015 11:52 AM, Peter Todd via bitcoin-dev wrote:
> As in, do relay nodes need to keep a record of the transactions they've
> relayed? Strictly speaking, the answer is no: one a tx is relayed modulo
> DoS concerns the entire thing can be discarded by the node. (unconfirmed
> txs spending other unconfirmed txs can be handled by creating packages
> of transactions, evaluated as a whole)
>
> To mitigate DoS concerns, we of course have to have some per-UTXO limit
> on bandwidth relayed, but that task can be accomplished by simply
> maintaining some kind of per-UTXO record of bandwidth used. For instance
> if the weighted fee and fee/KB were recorded, and forced to - say -
> double for each additional tx relayed that spent a given UTXO you would
> have a clear and simple upper limit of lifetime bandwidth. Equally it's
> easy to limit bandwidth moment to moment by asking peers for highest
> fee/KB transactions they advertise first, stopping when our bandwidth
> limit is reached.
>
> You probably could even remove IsStandard() pretty much entirely with
> the right increasingly expensive "replacement" policy, relying on it
> alone to provide anti-DoS. Obviously this would simplify some of the
> debates around mining policy! This could even be re-used for scalable a
> general-purpose messaging network paid by coin ownership if the UTXO set
> is split up, and some kind of expiration over time policy is
> implemented.
>
> Miners of course would still want to have a mempool, but that codebase
> may prove simpler if it doesn't have to work double-duty for relaying as
> well.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150718/55ceedea/attachment.html>

From justin at netki.com  Sat Jul 18 23:01:39 2015
From: justin at netki.com (Justin Newton)
Date: Sat, 18 Jul 2015 16:01:39 -0700
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55AA54C3.7010806@electrum.org>
References: <CABqynx+YAgt404zXAqwq9_AjvmX6J0=vBi=xK_56AdsR8nMF+A@mail.gmail.com>
	<55AA54C3.7010806@electrum.org>
Message-ID: <CABqynx+X9j3UviQGp-Vaf77gKM9TAJZxnWkfA3DgmSELxu1RhQ@mail.gmail.com>

On Sat, Jul 18, 2015 at 6:29 AM, Thomas Voegtlin via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Le 14/07/2015 19:29, Justin Newton a ?crit :
>

>
> Sorry to answer late, and thanks for the clarification. After talking
> with you, I believe that it will not be difficult to agree on a common
> standard, that gives maximum freedom to everyone.

100% agreed.

>
> I also believe that it is in Netki's interest to convey the message that
> they are actively promoting an open standard, and not pushing a private
> solution. For this reason, and assuming that the future standard
> satisfies you fully, will you mind if that standard carries a neutral
> name (such as "OpenAlias v2", or "BIP xx"), instead of being named after
> your company? I reckon that is purely a PR issue.

To be clear, the current name of the service is Wallet Name Service,
Netki has tended to be tagged to it as people are associating the
service with us.  We also intend to offer more services than just
this, so its actually not really good for us to think of Netki as the
service name.  I have no issues with a neutral name for the lookup
standard.


>
>
> > To break it down briefly, we have an open lookup standard based on
> > both the namecoin blockchain as well as traditional DNSSEC.  (You can
> > choose your own adventure of using namecoin based names or traditional
> > ICANN names).
>
> I would rather not make Namecoin part of the standard, because .bit
> records cannot be verified easily by lightweight/spv wallets; they would
> need a copy of the Namecoin blockchain for that.

You are the second person to raise this.  Clearly this is an item that
requires some discussion before anything is decided for sure.  We had
gone this direction (and I assume Riccardo did as well) to provide a
censor resistant option as well as one that would be low cost for
individuals to be able register their own names.  This also allows for
lookups that never leave the local network.  The trade off there for
mobile wallets was one I feel we failed to properly consider.


<SNIPPING AREAS OF APPARENT AGREEMENT>
>
> > 3> We use a 2 tier lookup format.  The first lookup returns a list of
> > currencies or payment types supported by the Wallet Name.  The second
> > lookup goes to a record specific to that currency type to get the
> > address to go to.  We believe this to be a more scalable solution in a
> > world where someone can have both multiple digital currency types, but
> > then also multiple types of colored coins, and wants a simple way to
> > share a single name for all of those different addresses.  This allows
> > the wallet to do the work behind the scene of choosing the currency it
> > wants to send, and automatically getting back the right address to
> > send to, without the user having to do anything different.
> >
>
> This seems to be a major difference, and I believe it makes sense to do
> it the way you describe. Does that solution fully replace the tags used
> in OpenAlias, or does it make sense to combine these two systems?

I think combining formats to use both the two level lookups and tags
could have value.  Tags could include information like versioning, as
well as whether what is being returned is an address, URL for further
lookup, or other piece of information.



<SNIPPING MORE AGREEMENT>

>
> > I'd love to talk here or offline about merging standards going
> > forward.  As an FYI, Verisign has also delivered a standard to the
> > IETF using DNSSEC to pass payment information here:
> > https://tools.ietf.org/html/draft-wiley-paymentassoc-00  We have
> > started discussions with them about merging standards as well.
> >
>
> That is nice, but may be out of scope here. Isn't there a risk that
> involving the IETF would make the process a lot slower? Of course it
> would be great, but maybe we should try to reach consensus at our level
> first (the bitcoin level), before trying to merge with them.

I concur with this approach.  I think it makes sense for us to stay in
contact and communication with the IETF side with the hope of ending
up with something that is, in the end the same, or at least
compatible.  I also agree that we shouldn't wait on the IETF to move
ahead ourselves, more stay in communication with them so that we don't
end up accidentally going in opposite directions, and also so we can
learn best practices from each other along the way.

As you can see, this has been our approach up until now where we have
gone ahead and built and expanded our "standard" based on our
discussions and integrations with other industry participants.

Thanks for the feedback!

Justin




-- 

Justin W. Newton
Founder/CEO
NetKi, Inc.

justin at netki.com
+1.818.261.4248

From odinn.cyberguerrilla at riseup.net  Sun Jul 19 08:59:49 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Sun, 19 Jul 2015 01:59:49 -0700
Subject: [bitcoin-dev] Do we really need a mempool? (for relay nodes)
In-Reply-To: <55AAACF9.90007@gmail.com>
References: <20150718185259.GA3477@muck> <55AAACF9.90007@gmail.com>
Message-ID: <55AB6705.7080701@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Some brief thoughts, adding here a suggestion for a dynamic approach
to the issue. (e.g. each additional tx relayed has some thing
associated with it, that is, a "doubling" for each additional tx
relayed that spends a given UTXO, doesn't sound like it would be the
most dynamic approach to the issue; considering that full nodes use
the (UTXOs) to establish if transactions are valid ? all inputs to a
transaction must be in the UTXO database for it to be valid, but
rather, would end up ratcheting upward the fee/kB for each additional
tx relayed, as proposed).

A more dynamic fee approach would be a better one, imho, but how is
this to occur?

Quoting from Gavin Andresen's http://gavinandresen.ninja/utxo-uhoh,
"The entire UTXO set doesn?t have to be in RAM; it can be stored on an
SSD or spinning hard disk. The access pattern to the UTXO is not
random; outputs that were spent recently are more likely to be
re-spent than outputs that have not been spent in a long time. Bitcoin
Core already has a multi-level UTXO cache, thanks to the hard work of
Pieter Wuille."

The relay nodes would, in this scenario that is proposed here in this
message, be confirming and discarding; the wallet nodes, if I
understand properly, in this scenario, as proposed, should be
retaining (keeping a record of the transactions they've relayed and
using a mempool).

There are some questions here:

- - How is the mempool to be limited?
- - What is the mechanism by which the UTXO set is stored (or proposed
to be stored)?
- - How would dynamic fee determinations be calculated?
- - Please describe more the general purpose messaging network?

Thank you



On 07/18/2015 12:46 PM, Patrick Strateman via bitcoin-dev wrote:
> Relay nodes do not need a mempool, but do need some mechanism to
> avoid DoS issues.
> 
> Wallet nodes can use the mempool for fee estimation (in addition
> to looking at past blocks).
> 
> On 07/18/2015 11:52 AM, Peter Todd via bitcoin-dev wrote:
>> As in, do relay nodes need to keep a record of the transactions
>> they've relayed? Strictly speaking, the answer is no: one a tx is
>> relayed modulo DoS concerns the entire thing can be discarded by
>> the node. (unconfirmed txs spending other unconfirmed txs can be
>> handled by creating packages of transactions, evaluated as a
>> whole)
>> 
>> To mitigate DoS concerns, we of course have to have some per-UTXO
>> limit on bandwidth relayed, but that task can be accomplished by
>> simply maintaining some kind of per-UTXO record of bandwidth
>> used. For instance if the weighted fee and fee/KB were recorded,
>> and forced to - say - double for each additional tx relayed that
>> spent a given UTXO you would have a clear and simple upper limit
>> of lifetime bandwidth. Equally it's easy to limit bandwidth
>> moment to moment by asking peers for highest fee/KB transactions
>> they advertise first, stopping when our bandwidth limit is
>> reached.
>> 
>> You probably could even remove IsStandard() pretty much entirely
>> with the right increasingly expensive "replacement" policy,
>> relying on it alone to provide anti-DoS. Obviously this would
>> simplify some of the debates around mining policy! This could
>> even be re-used for scalable a general-purpose messaging network
>> paid by coin ownership if the UTXO set is split up, and some kind
>> of expiration over time policy is implemented.
>> 
>> Miners of course would still want to have a mempool, but that
>> codebase may prove simpler if it doesn't have to work double-duty
>> for relaying as well.
>> 
>> 
>> 
>> _______________________________________________ bitcoin-dev
>> mailing list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVq2cFAAoJEGxwq/inSG8CIo4IAJAZ97NvW6Qdjd6HLN8q2074
sEUGdDeonARiQZXLfGyTJVg43Yb6LKPqkjWPQEgl9LLNni8t99iUqu3BJxedRDjd
8x+/F8n5VJrUrn1pXUcbC1aWss1y8JPTO2KpF/WL254IFc8iE8MJf4YF8PDSgy5j
9uW8NvWvdT4dz+rXu9vqfcplz8x7NGQ+CWN2N2JlChhKLMFprXPIx8a7NQwaKdrY
lTpgAJWGMyPGNCmYQprBjIjOfp8tdTLQFlsLUAsXDmEisJX9goRVGMsHOWLTREoA
l3kTgM0WMv6MIG7NOQQcWLD7cZdwWYR9e49hc27VcHt2R/FTepvnwPqo2GtE0tM=
=eRbR
-----END PGP SIGNATURE-----

From thomasv at electrum.org  Sun Jul 19 11:18:29 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Sun, 19 Jul 2015 13:18:29 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>	<55A4AF62.4090607@electrum.org>
	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
Message-ID: <55AB8785.4080201@electrum.org>

Hi Mike,

The reason why I would like to extend BIP70 is because it is currently
not being used in transactions between end-users. BIP70 works very well
in B2C situations, where users buy products from a website. However,
end-users still share Bitcoin addresses.

Before BIP70 was written, I had proposed "Signed URIs", where the
signature is a public proof that a payee requested a payment. This is
one of the main benefits of BIP70, and I still want to bring it to
user-to-user transactions.

I believe one of the main barriers to BIP70 adoption is that bitcoin:
URIs have been extended in a way that requires the request to be hosted
on a webserver. You may complain about the lack of store-and-forward
network, despite the apparent simplicity of creating one such network.
However, that does not mean we should absolutely do things that way and
wait until such a network exists.

Bitcoin addresses do not require a webserver. If we want to build
something that competes with that, we should have at least that level of
convenience.

EC signatures are short, and they can be shared by copy-paste, or added
to a bitcoin: URI. This is a features of my "Signed URIs" proposal, that
was lost in BIP70. Indeed, signed URIs were self-contained. A serialized
payment request can also be made very short, if it is signed by a EC
key, and if it does not include the chain of certificates. Such a
"lightweight request" can be base58-encoded, and easily shared by
copy-paste, or passed in a bitcoin: URI.

Size is another reason why I proposed to use DNSSEC in BIP70 (the first
reason is that the subdomain is signed by the domain, not by an external
CA). Indeed, DNSSEC provides a canonical way to download the chain of
signatures needed to verify a record. Thus, the chain of signatures does
not need to be included in the payment request; it can be downloaded and
archived by the verifier.

Now, I understand that SSL vertificates have distinct advantages over
DNSSEC; for example, CA-signed SSL certificates have a legal value,
which is important for dispute resolution.

Would it be possible to create the same kind of "lightweight payment
requests" using SSL certificates? Probably, if the final signing key is
a EC key, and if the payment request does not include the whole chain of
certificates. (However, that would require an additional infrastructure
to publish the chain of certificates, and I do not think that x509
certification path are unique, which makes things more complicated, but
not impossible).

Sorry if I did not answer point-by-point to your post. I felt that I
failed to explain one of the reasons why I want to use DNSSEC in the
validation of payment requests.

Thomas




Le 14/07/2015 13:45, Mike Hearn a ?crit :
> Hi Thomas,
> 
> Re: NetKi, I think any proposal in this space has to be an open standard,
> almost by the definition of what it is. At any rate, it may be worth
> talking to them. They have signed up to implement their system at least.
> 
> I did understand that your proposal does not rely on email - for instance a
> web forum could issue username at reddit.com type aliases, even if those are
> not also email accounts. I am just continuing the comparison against email
> address certs.
> 
> It's also the case that a domain can use the DKIM setup without actually
> offering email accounts. They can just have a web form or API that triggers
> sending of the signed email (or simply, providing the signed headers
> themselves). Thus the same system can be used transparently by both email
> providers and other sites that don't give their users email addresses, but
> would still like to use the same system.
> 
> Hardly anyone uses email certificates today, so I don't think it would
>> affect a lot of users.
> 
> 
> No, but obviously we'd like to change that! The holdup is not the
> certificate side of things, really, but rather the lack of a
> store-and-forward network for signed payment requests. I keep asking
> someone to build one but I fear the problem is almost too simple ......
> everyone who looks at this decides to solve 12 other problems
> simultaneously, it gets complicated, then they never launch :(
> 
> Once there's a simple and robust way to get PaymentRequest's from one end
> user to another, even when that first user is offline, then getting an
> email cert issued is no big deal.
> 
> That does not look so... not until (1) BIP70 wallets integrate with
>> https://crt.sh, (2) you convince that service to index email certs (3)
>> you convince all CAs to report all email certs they issue to crt.sh.
>>
> 
> Any solution that separates identity providers from certificate issuers
> would have these requirements, though. And as many identity providers today
> do not wish to become CAs too, it seems fundamental.
> 
> I don't think it's such a problem, mind you. The crt.sh website is actually
> a frontend to the CT protocol, which is a somewhat blockchain like audit
> log that's eventually intended to contain all issued certificates. Right
> now, of course, they focus on SSL certs because those are the most common
> and important. If other kinds of certs became more widely used, support in
> the infrastructure would follow.
> 
> 
> 
> Don't get me wrong - I would like to see a way for a domain to delegate
> BIP70 signing power to a third party. For instance, this would mean payment
> processors like BitPay could sign on the behalf of the merchant, and the
> merchant identity would then show up in wallets. The "chain a cert off a
> domain cert" trick would be a good way to do that, though rather than
> hacking the X.509 stack to validate invalid stuff, at this point it may as
> well be a custom (better) cert format. There's little reason to use X.509
> beyond backwards compatibility.
> 
> But the most popular identity providers today either don't care about
> Bitcoin at all, or worse, are developing competitors to it. So for real
> adoption to occur, we must have solutions that do not require identity
> provider cooperation. I realise this is a business reason rather than a
> technical reason, but it's a very strong one - so bootstrapping off
> existing infrastructure with a split CA/ID provider design still makes much
> more sense to me.
> 

From jrn at jrn.me.uk  Sun Jul 19 22:51:07 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Sun, 19 Jul 2015 23:51:07 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <55A9421B.6040605@jrn.me.uk>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk>
Message-ID: <55AC29DB.4060800@jrn.me.uk>

Further to that - please disregard what I said about using block height. 
Had failed to realise that in using contextual information (block 
height) it complicates block validation (i.e. it would be impossible to 
tell if a block is too big, without having all previous blocks first). 
Block time is in fact the better option.

Ross

On 17/07/2015 18:57, Ross Nicoll via bitcoin-dev wrote:
> I'd back this if we can't find a permanent solution - 2MB gives us a 
> lot more wiggle room in the interim at least; one of my concerns with 
> block size is 3 transactions per second is absolutely tiny, and we 
> need space for the network to search for an equilibrium between volume 
> and pricing without risk of an adoption spike rendering it essentially 
> unusable.
>
> I'd favour switching over by block height rather than time, and I'd 
> suggest that given virtually every wallet/node out there will require 
> testing (even if many do not currently enforce a limit and therefore 
> do not need changing), 6 months should be considered a minimum target. 
> I'd open with a suggestion of block 390k as a target.
>
> Ross
>
> On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
>> Opening a mailing list thread on this BIP:
>>
>> BIP PR: https://github.com/bitcoin/bips/pull/173
>> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>>
>> The general intent of this BIP is as a minimum viable alternative 
>> plan to my preferred proposal (BIP 100).
>>
>> If agreement is not reached on a more comprehensive solution, then 
>> this solution is at least available and a known quantity.  A good 
>> backup plan.
>>
>> Benefits:  conservative increase.  proves network can upgrade. 
>>  permits some added growth, while the community & market gathers data 
>> on how an increased block size impacts privacy, security, 
>> centralization, transaction throughput and other metrics.  2MB seems 
>> to be a Least Common Denominator on an increase.
>>
>> Costs:  requires a hard fork.  requires another hard fork down the road.
>>
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150719/f1ee52d6/attachment.html>

From thomasv at electrum.org  Mon Jul 20 08:56:27 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Mon, 20 Jul 2015 10:56:27 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynx+X9j3UviQGp-Vaf77gKM9TAJZxnWkfA3DgmSELxu1RhQ@mail.gmail.com>
References: <CABqynx+YAgt404zXAqwq9_AjvmX6J0=vBi=xK_56AdsR8nMF+A@mail.gmail.com>	<55AA54C3.7010806@electrum.org>
	<CABqynx+X9j3UviQGp-Vaf77gKM9TAJZxnWkfA3DgmSELxu1RhQ@mail.gmail.com>
Message-ID: <55ACB7BB.2020200@electrum.org>



Le 19/07/2015 01:01, Justin Newton via bitcoin-dev a ?crit :
>>
>> I would rather not make Namecoin part of the standard, because .bit
>> records cannot be verified easily by lightweight/spv wallets; they would
>> need a copy of the Namecoin blockchain for that.
> 
> You are the second person to raise this.  Clearly this is an item that
> requires some discussion before anything is decided for sure.  We had
> gone this direction (and I assume Riccardo did as well) to provide a
> censor resistant option as well as one that would be low cost for
> individuals to be able register their own names.  This also allows for
> lookups that never leave the local network.  The trade off there for
> mobile wallets was one I feel we failed to properly consider.
> 

I think our common goal should be to standardize DNS records holding
Bitcoin addresses, because they are going to be used by both Netki and
Electrum.

You and Ricardo may find it useful to have other types of lookups, such
as Namecoin, and that's fine with me, but I do not want that to slow
down or stall the current standardisation effort, because Namecoin
lookups are clearly not an option for lightweight wallets. That is what
I meant by 'not part of the standard'; let's work on what we have in
common :)



From hearn at vinumeris.com  Mon Jul 20 13:46:39 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Mon, 20 Jul 2015 15:46:39 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55AB8785.4080201@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
	<55AB8785.4080201@electrum.org>
Message-ID: <CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>

Hey Thomas,

Was great to hang out with you in Berlin last week!


> Bitcoin addresses do not require a webserver. If we want to build
> something that competes with that, we should have at least that level of
> convenience.
>

Absolutely agree! Convenience for the user is an absolute must. I just
don't know how to let users exchange large data packets without some kind
of server acting as a dropbox in the middle. That leaves two solutions:

1) Set up a way for users to exchange large data packets by using other
people's web servers, e.g. with no user visible signup flow (pure p2p/done
automatically in the background by user wallets)

2) Make the data packets small instead.

We can debate better signing methods that work towards (2). The reason I am
unsure about this is that the point of BIP70 is to be extended with useful
features. Even if we find a way to squeeze a human-meaningful
signature/cert into a URI, that's only one of BIP70s features. The next set
we want to add might end up running out of space again.

A lot of the problems come from how limited QR codes are. So perhaps there
is also a third approach: either find a better replacement for QR codes
(maybe something that uses colour like Microsoft Tag
<http://tag.microsoft.com/what-is-tag/home.aspx>), or drop them as a design
constraint.

Calling Jeff Garzik, Jeff, are you there? I recall BitPay did some
experiments to find out how much data you can stuff into a QR code before
it hurts scannability too much, do you have a writeup anywhere?

This is the main reason I feel uneasy about anything that isn't "build a
store+forward network". QR codes are so fundamental to our ecosystem, but
sooooooo limited, that I'm not sure how else to move forward. We were told
when designing BIP70 that even putting a URL in the QR code is pushing it!
There was talk of compressing the URL in some way. So adding even an ECC
signature which is much longer seems risky.

We can imagine a parallel universe where our societies technology was more
NFC oriented: laptops had NFC tags in them, phones had better NFC support
etc. Then we would have more bytes to play with and we wouldn't face this
pointer-indirection problem :( But laptops don't have the hardware and
Apple sits on their NFC API because they can't imagine any use case that
isn't credit cards :( :(

To get more specific, DNSSEC uses RSA 1024 bit. This causes two problems:

   1. A DNSSEC proof is large, bytes wise. Even a single RSA signature
   won't fit nicely in a QR code, I think.

   2. 1024 bit is the absolute minimum strength you can get away with,
   really. DNSSEC assumes frequent key rotations to try and help, which
   complicates things.

So I'm not sure using DNSSEC fixes the usability problem we want to fix.

I will do a separate reply to break out some thoughts on replacing QR codes.

Would it be possible to create the same kind of "lightweight payment
> requests" using SSL certificates? Probably, if the final signing key is
> a EC key, and if the payment request does not include the whole chain of
> certificates.


Given that the pre-existing value of the PKI is much lower for individuals
than for companies/websites, where they all have certs already, building a
Bitcoin-specific or entirely new/independent PKI for people is not so
unthinkable, I agree.

In theory such a cert could be as minimal as:

<ECC signature>thomasv at electrum.org

so literally just a signature + a UTF-8 string, and that's it! You don't
need anything more if you're willing to sacrifice extensibility,
revocability, etc.

The pubkey of the CA would be obtained by running the pubkey recovery
algorithm on the signature, and then checked against a table of trusted
pubkeys.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/5d80acee/attachment.html>

From thomasv at electrum.org  Mon Jul 20 14:32:09 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Mon, 20 Jul 2015 16:32:09 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>	<55A4AF62.4090607@electrum.org>	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>	<55AB8785.4080201@electrum.org>
	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>
Message-ID: <55AD0669.4040002@electrum.org>

hi Mike,

I hope you had a good trip!


> To get more specific, DNSSEC uses RSA 1024 bit. This causes two problems:
> 
>    1. A DNSSEC proof is large, bytes wise. Even a single RSA signature
>    won't fit nicely in a QR code, I think.
> 
>    2. 1024 bit is the absolute minimum strength you can get away with,
>    really. DNSSEC assumes frequent key rotations to try and help, which
>    complicates things.
> 
> So I'm not sure using DNSSEC fixes the usability problem we want to fix.
> 

In my previous post, I was suggesting to *not* include the proof in the
request, because the payer can download it independently. Only the final
signature is needed. What makes DNSSEC interesting is not the size of
the proof, but rather the fact that you can request it easily, and in a
canonical way.

A typical lightweight payment request, serialized with EC signature and
without the proof, would be about 150 bytes long.


> I will do a separate reply to break out some thoughts on replacing QR codes.
> 
> Would it be possible to create the same kind of "lightweight payment
>> requests" using SSL certificates? Probably, if the final signing key is
>> a EC key, and if the payment request does not include the whole chain of
>> certificates.
> 
> 
> Given that the pre-existing value of the PKI is much lower for individuals
> than for companies/websites, where they all have certs already, building a
> Bitcoin-specific or entirely new/independent PKI for people is not so
> unthinkable, I agree.
> 
> In theory such a cert could be as minimal as:
> 
> <ECC signature>thomasv at electrum.org
> 
> so literally just a signature + a UTF-8 string, and that's it! You don't
> need anything more if you're willing to sacrifice extensibility,
> revocability, etc.

Again, we don't have to sacrifice revocability, if the proof is
downloaded separately.

> 
> The pubkey of the CA would be obtained by running the pubkey recovery
> algorithm on the signature, and then checked against a table of trusted
> pubkeys.
> 

From hearn at vinumeris.com  Mon Jul 20 14:40:36 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Mon, 20 Jul 2015 16:40:36 +0200
Subject: [bitcoin-dev] QR code alternatives (was: Proposal: extend bip70
	with OpenAlias)
Message-ID: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>

Hey Thomas,

Here are some thoughts on a third way we can tackle our BIP 70 usability
problem sans servers: by finding an upgrade to QR codes that give us more
space and then optimising the hell out of BIP70 to make it fit.

*Better QR codes*

Let's start with this paper, High Capacity Colored Two Dimensional Codes
<http://proceedings2010.imcsit.org/pliks/79.pdf>. It develops an upgrade to
standard QR codes that extend them with the use of colour. The resulting
codes have ~4x the capacity but similar levels of scanning robustness.

This paper is also interesting: DualCodes
<https://books.google.at/books?id=O5a6BQAAQBAJ&pg=PA25&lpg=PA25&dq=%22DualCodes:+Backward+Compatible+Multi-layer+2D-Barcodes%22&source=bl&ots=ql_G8iyXXi&sig=9-VwhFLbkfgh2Fi0tdM3AWOyajA&hl=en&sa=X&redir_esc=y#v=onepage&q=%22DualCodes%3A%20Backward%20Compatible%20Multi-layer%202D-Barcodes%22&f=false>

It works by overlaying one QR code on top of another using shades of grey.
The resulting code is still scannable by older applications (backwards
compatibility!) but an enhanced reader can also extract the second code.
They explicitly mention digital signatures as a possible use case.

In both cases the code does not appear to be available but the same
approach was used: extend libqrcode for creation and ZXing for decoding
(Android). We could ask the authors and see if they're willing to open
source their work.

BIP 70 has the potential to add many features. But most of them, even the
extensions currently proposed only as ideas, can be expressed with
relatively few bytes.

So with a 4x boost in capacity, or a 2x boost with backwards compat, what
could we do?

*Optimised BIP70*

If we define our own certificate formats and by implication our own CAs,
then we can easily make a certificate be 32 bytes for the ECC
signature+length of the asserted textual identity, e.g. email address.

Can we go smaller? Arguably, yes. 32 bytes for a signature is for Really
Strong Security? (a 256 bit curve), which gives 128 bits of security. If we
are willing to accept that a strong adversary could eventually forge a
certificate, we can drop down to a weaker curve, like a 128 bit cure with
64 bits of security. This is well within reach of, say, an academic team
but would still pose a significant hurdle for run of the mill payment
fraudsters. If these short CA keys expired frequently, like once a month,
the system could still be secure enough.

As we are defining our own PKI we can make CA keys expire however
frequently we like, up to the expiry period of the BIP70 request itself.
Thus certificates that expire monthly is not an issue if the wallet has a
way to automatically refresh the certificate by using a longer term
stronger credential that it keeps around on disk.

If we accept a single payment address i.e. no clever tricks around merge
avoidance, such a QR code could look like this:

bitcoin:1aBcD1234....?x=serialized_payment_request

However this requires text mode and wastes bytes at the front for the URI
type.

If we're willing to accept QR codes that can't be read by a standalone app
and which requires an embedded reader, then we can just scrap the legacy
and serialise a binary BIP70 request directly into the QR code. Andreas'
wallet, for example, can already handle this because it has an embedded QR
reader. I don't know what the situation on iOS is like.

If we were to use the DualCodes system we could define the primary QR code
as being an unsigned payment request, and the second layer as being the
signature/pki data.

*Getting response data back to the recipient*

One reason to have a store/forward network is the "forward" part: we don't
only want to host a static PaymentRequest, but also receive a private
response e.g. for the memo field, or to implement the well known "Stealth
Address" / ECDH in the payment protocol proposals:

https://medium.com/@octskyward/ecdh-in-the-payment-protocol-cb2f81962c1b

Stealth addresses try and (ab)use the block chain as a store/forward layer
and break SPV in the process as well as wasting lots of resources. ECDH in
BIP70 avoids those issues but at the cost of requiring a separate
store-and-forward network with some notion of account privacy.

These ideas come with another steep price: restoring a wallet from seed
words is no longer possible. You must have the extra random data to
calculate the private keys for money sent to you :(  If you lose the extra
data you lose the money. It can be fixed but only by having wallets
regularly sweep the sent money to keys derived from the BIP32 seed, meaning
privacy-hurting merging and extra traffic.

I don't know of any way to solve this except by using some servers,
somewhere, that store the Payment messages for people: potentially for a
long period of time. If we have such servers, then having them host BIP70
requests is not a big extra requirement.

I have imagined this being a p2p-ish network of HTTPS servers that accept
POSTs and GETs. But if we are thinking about alternatives, it could also be
a separate service of the existing Bitcoin P2P network. That's what
OP_RETURN (ab)use effectively does. But as these messages don't really have
to be kept forever, a different system could be used: Payment messages
could be broadcast along with their transactions and stored at every node,
waiting for download. But unlike regular transactions, they are not stored
forever in a block chain. They are just written to disk and eventually
erased, perhaps, ordered in a mempool like way where more fee attached ==
stored for longer, even though the nodes storing the data aren't actually
receiving the fee.

A signature over the Payment metadata using the same output keys as the
transaction would bind them together for the purposes of broadcast, but
doesn't need to be stored after that.

As the data storage is just a helpful service but not fundamentally
required, nodes could shard themselves by announcing in their addr messages
that they only store Payment metadata for e.g. the half which have a hash
starting with a one bit. And when outputs are seen being spent, the
associated Payment metadata can be erased too, as by then it's fair to
assume that the users wallet has downloaded the metadata and no longer
cares about it.

Of course you have then all the regular DoS issues. But any P2P network
that stores data on the behalf of others has these.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/7b5c3cb0/attachment-0001.html>

From hearn at vinumeris.com  Mon Jul 20 14:42:05 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Mon, 20 Jul 2015 16:42:05 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55AD0669.4040002@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
	<55AB8785.4080201@electrum.org>
	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>
	<55AD0669.4040002@electrum.org>
Message-ID: <CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>

>
> In my previous post, I was suggesting to *not* include the proof in the
> request, because the payer can download it independently. Only the final
> signature is needed. What makes DNSSEC interesting is not the size of
> the proof, but rather the fact that you can request it easily, and in a
> canonical way.
>

Yes, but you still need the final signature. Is it possible to use an EC
signature with DNSSEC? I thought it was an all-RSA system. If I'm wrong
about that, and all you need is 32 bytes, then my argument does not hold.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/7c3a721f/attachment.html>

From thomasv at electrum.org  Mon Jul 20 14:52:51 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Mon, 20 Jul 2015 16:52:51 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>	<55A4AF62.4090607@electrum.org>	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>	<55AB8785.4080201@electrum.org>	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>	<55AD0669.4040002@electrum.org>
	<CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>
Message-ID: <55AD0B43.4010207@electrum.org>



Le 20/07/2015 16:42, Mike Hearn a ?crit :
>>
>> In my previous post, I was suggesting to *not* include the proof in the
>> request, because the payer can download it independently. Only the final
>> signature is needed. What makes DNSSEC interesting is not the size of
>> the proof, but rather the fact that you can request it easily, and in a
>> canonical way.
>>
> 
> Yes, but you still need the final signature. Is it possible to use an EC
> signature with DNSSEC? I thought it was an all-RSA system. If I'm wrong
> about that, and all you need is 32 bytes, then my argument does not hold.
> 

The final signature is a signature of the payment request, it is not
part of DNSSEC. So, yes, that signature can be EC.

The DNSSEC proof is used to verify that the public key, which is
recovered from the signature, corresponds to the alias.

The payment requests I am currently playing with have the following values:

pki_type = "dnssec+btc" (btc means that the signature is checked against
a Bitcoin address stored in DNS)
pki_data = the user's alias (DNS key)


From hearn at vinumeris.com  Mon Jul 20 15:14:03 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Mon, 20 Jul 2015 17:14:03 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55AD0B43.4010207@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
	<55AB8785.4080201@electrum.org>
	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>
	<55AD0669.4040002@electrum.org>
	<CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>
	<55AD0B43.4010207@electrum.org>
Message-ID: <CA+w+GKT03z9X=hRZcOkOpBfB7iBtwbx+O0sSD5K-bki_dHWrmQ@mail.gmail.com>

>
> The final signature is a signature of the payment request, it is not
> part of DNSSEC. So, yes, that signature can be EC.
>

Right, got it. I think we've been talking about two related but separate
issues (DNSSEC vs squeezing payment requests into URIs/qrcodes somehow).
So: DNSSEC attests via an RSA chain to some EC key stored in the wallet
which is then used to sign the payment request or URI, which also contains
a domain name.


> The payment requests I am currently playing with have the following values:
>
> pki_type = "dnssec+btc" (btc means that the signature is checked against
> a Bitcoin address stored in DNS)
> pki_data = the user's alias (DNS key)


By "alias" you mean domain name? I'm not sure what DNS key means in this
context.

I'm still not really convinced that a domain name under some new roots is
an identity people will want to use, but yes, I guess your approach would
work for those who do want it.

It still may be worth exploring the compact cert+optimized BIP70 (no
DNSSEC) in a qrcode if making a network that stores small bits of data
really is beyond us :(
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/cbf39169/attachment.html>

From thomasv at electrum.org  Mon Jul 20 15:34:04 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Mon, 20 Jul 2015 17:34:04 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CA+w+GKT03z9X=hRZcOkOpBfB7iBtwbx+O0sSD5K-bki_dHWrmQ@mail.gmail.com>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>	<55A4AF62.4090607@electrum.org>	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>	<55AB8785.4080201@electrum.org>	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>	<55AD0669.4040002@electrum.org>	<CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>	<55AD0B43.4010207@electrum.org>
	<CA+w+GKT03z9X=hRZcOkOpBfB7iBtwbx+O0sSD5K-bki_dHWrmQ@mail.gmail.com>
Message-ID: <55AD14EC.7040603@electrum.org>



Le 20/07/2015 17:14, Mike Hearn a ?crit :
> 
> By "alias" you mean domain name? I'm not sure what DNS key means in this
> context.
> 

yes, sorry, I mean the domain name corresponding to the TXT record.
it's called 'alias' in the context of OpenAlias.


> I'm still not really convinced that a domain name under some new roots is
> an identity people will want to use, but yes, I guess your approach would
> work for those who do want it.

What do you mean by "under some new roots" ?

If I believe Netki, there is enough people who want to have a Bitcoin
address stored in DNS, for at least one company to thrive. :)

All I am proposing is a new usage for these already existing DNS
records; not only to receive BTC, but also to sign requests with them.

> It still may be worth exploring the compact cert+optimized BIP70 (no
> DNSSEC) in a qrcode if making a network that stores small bits of data
> really is beyond us :(
> 
Heh, pastebin + base64 encoding the PR could work. However, it might
violate their ToS. More seriously, there might be some legal issues for
a company willing to provide that kind of service.

Re QR codes: 150 bytes, using base43 encoding, is not too bad.

From hearn at vinumeris.com  Mon Jul 20 16:09:03 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Mon, 20 Jul 2015 18:09:03 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55AD14EC.7040603@electrum.org>
References: <CA+w+GKQbOMz5nb_SnLB6Xb0FYzNZ_rEj5nbNjm2jY0+L8JJGAA@mail.gmail.com>
	<55A4AF62.4090607@electrum.org>
	<CA+w+GKRCPEUezaTb46pzuDNxKNgi_KdTW2dOn9hsHwgD159czw@mail.gmail.com>
	<55AB8785.4080201@electrum.org>
	<CA+w+GKTtkYUst0UJa6364LqBRqWYrA+fOKed973mQCQS4ze=4Q@mail.gmail.com>
	<55AD0669.4040002@electrum.org>
	<CA+w+GKSqqD=Fwyptzd_skq3+-x2dFxjY_gOOtEuAo7ZPQ9AzoA@mail.gmail.com>
	<55AD0B43.4010207@electrum.org>
	<CA+w+GKT03z9X=hRZcOkOpBfB7iBtwbx+O0sSD5K-bki_dHWrmQ@mail.gmail.com>
	<55AD14EC.7040603@electrum.org>
Message-ID: <CA+w+GKSMu+PBoeGKVUy4Z15ep1X08M_g+To1gjr3cC7s+NhYbQ@mail.gmail.com>

>
> What do you mean by "under some new roots" ?
>

I mean, most users will need to sign up for some new identity under a DNS
tree that they don't currently use (whether that's netki.com or whatever).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/b04b987a/attachment.html>

From gavinandresen at gmail.com  Mon Jul 20 19:10:26 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 20 Jul 2015 15:10:26 -0400
Subject: [bitcoin-dev] For discussion: limit transaction size to mitigate
	CVE-2013-2292
Message-ID: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>

Draft BIP to prevent a potential CPU exhaustion attack if a significantly
larger maximum blocksize is adopted:

  Title: Limit maximum transaction size
  Author: Gavin Andresen <gavinandresen at gmail.com>
  Status: Draft
  Type: Standards Track
  Created: 2015-07-17

==Abstract==

Mitigate a potential CPU exhaustion denial-of-service attack by limiting
the maximum size of a transaction included in a block.

==Motivation==

Sergio Demian Lerner reported that a maliciously constructed block could
take several minutes to validate, due to the way signature hashes are
computed for OP_CHECKSIG/OP_CHECKMULTISIG ([[
https://bitcointalk.org/?topic=140078|CVE-2013-2292]]).
Each signature validation can require hashing most of the transaction's
bytes, resulting in O(s*b) scaling (where n is the number of signature
operations and m is the number of bytes in the transaction, excluding
signatures). If there are no limits on n or m the result is O(n^2) scaling.

This potential attack was mitigated by changing the default relay and
mining policies so transactions larger than 100,000 bytes were not
relayed across the network or included in blocks. However, a miner
not following the default policy could choose to include a
transaction that filled the entire one-megaybte block and took
a long time to validate.

==Specification==

After deployment, the maximum serialized size of a transaction allowed
in a block shall be 100,000 bytes.

==Compatibility==

This change should be compatible with existing transaction-creation
software,
because transactions larger than 100,000 bytes have been considered
"non-standard"
(they are not relayed or mined by default) for years.

Software that assembles transactions into blocks and that validates blocks
must be
updated to reject oversize transactions.

==Deployment==

This change will be deployed with BIP 100 or BIP 101.

==Discussion==

Alternatives to this BIP:

1. A new consensus rule that limits the number of signature operations in a
single transaction instead of limiting size. This might be more compatible
with
future opcodes that require larger-than-100,000-byte transactions, although
any such future opcodes would likely require changes to the Script
validation
rules anyway (e.g. the 520-byte limit on data items).

2. Fix the SIG opcodes so they don't re-hash variations of the
transaction's data.
This is the "most correct" solution, but would require updating every
piece of transaction-creating and transaction-validating software to change
how
they compute the signature hash.

==References==

[[https://bitcointalk.org/?topic=140078|CVE-2013-2292]]: Sergio Demian
Lerner's original report
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/04cdfad9/attachment-0001.html>

From tier.nolan at gmail.com  Mon Jul 20 19:43:51 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Mon, 20 Jul 2015 20:43:51 +0100
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
Message-ID: <CAE-z3OVWYaoGc+_=xQN1=CV=LUHdLEtuds6FZCXdktowfCaLYA@mail.gmail.com>

On Mon, Jul 20, 2015 at 8:10 PM, Gavin Andresen via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> After deployment, the maximum serialized size of a transaction allowed
> in a block shall be 100,000 bytes.
>

This could render transactions with a locktime in the future as unspendable.

It is pretty low probability that someone has created a >100kB locked
transaction though.

It violates the principle that no fork should render someone's coins
unspendable.

At the cost of weakening the protection, the rule could be made to only
apply to version 2 transactions.


*Specification*

    The transaction version is increased to version two.

    All coinbase transactions must be version two or higher.

    If any of its parent transactions are version two or higher
    then the transaction must be version two or higher.

    The maximum serialized size of a version two transactions allowed in
    a block is 100,000 bytes.


As time passes more and more of the UTXO set will be from version two
transactions.  To launch the attack, the attacker needs an historical UTXO
entry.

Standard software would create version two transactions even if all inputs
were version one.

The rule could be applied to all transactions most of the time, and have
daily blocks that allow legacy transactions.

    This rule shall apply to version 1 transactions too unless the block
height is
    a multiple of 100.

At the risk of encouraging feature creep, if the transaction size is being
limited, it would be useful to also limit the size of all its inputs.

This helps with fraud proofs and offline signing.


*Specification*
    The transaction version is increased to version two.

    All coinbase transactions must be version two or higher.

    If any of its parent transactions are version two or higher
    then the transaction must be version two or higher.

    The maximum serialized size of a version two transactions allowed in
    a block is 100,000 bytes.

    The maximum of the total serialized size of a version two transaction
and all
    of its parents allowed in a block shall be 200,000 bytes.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/ff1d1869/attachment.html>

From jrn at jrn.me.uk  Mon Jul 20 19:58:27 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Mon, 20 Jul 2015 20:58:27 +0100
Subject: [bitcoin-dev] For discussion: limit transaction size to
 mitigate CVE-2013-2292
In-Reply-To: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
Message-ID: <55AD52E3.3070306@jrn.me.uk>

I take it there's no feasibility in suggesting the script execution code 
has run time maximums? I'm aware these would be much harder to have 
consensus on, but would seem like the better solution if at all possible.

Ross

On 20/07/2015 20:10, Gavin Andresen via bitcoin-dev wrote:
> Draft BIP to prevent a potential CPU exhaustion attack if a 
> significantly larger maximum blocksize is adopted:
>
>   Title: Limit maximum transaction size
>   Author: Gavin Andresen <gavinandresen at gmail.com 
> <mailto:gavinandresen at gmail.com>>
>   Status: Draft
>   Type: Standards Track
>   Created: 2015-07-17
>
> ==Abstract==
>
> Mitigate a potential CPU exhaustion denial-of-service attack by limiting
> the maximum size of a transaction included in a block.
>
> ==Motivation==
>
> Sergio Demian Lerner reported that a maliciously constructed block could
> take several minutes to validate, due to the way signature hashes are
> computed for OP_CHECKSIG/OP_CHECKMULTISIG 
> ([[https://bitcointalk.org/?topic=140078|CVE-2013-2292]] 
> <https://bitcointalk.org/?topic=140078%7CCVE-2013-2292]]>).
> Each signature validation can require hashing most of the transaction's
> bytes, resulting in O(s*b) scaling (where n is the number of signature
> operations and m is the number of bytes in the transaction, excluding
> signatures). If there are no limits on n or m the result is O(n^2) 
> scaling.
>
> This potential attack was mitigated by changing the default relay and
> mining policies so transactions larger than 100,000 bytes were not
> relayed across the network or included in blocks. However, a miner
> not following the default policy could choose to include a
> transaction that filled the entire one-megaybte block and took
> a long time to validate.
>
> ==Specification==
>
> After deployment, the maximum serialized size of a transaction allowed
> in a block shall be 100,000 bytes.
>
> ==Compatibility==
>
> This change should be compatible with existing transaction-creation 
> software,
> because transactions larger than 100,000 bytes have been considered 
> "non-standard"
> (they are not relayed or mined by default) for years.
>
> Software that assembles transactions into blocks and that validates 
> blocks must be
> updated to reject oversize transactions.
>
> ==Deployment==
>
> This change will be deployed with BIP 100 or BIP 101.
>
> ==Discussion==
>
> Alternatives to this BIP:
>
> 1. A new consensus rule that limits the number of signature operations 
> in a
> single transaction instead of limiting size. This might be more 
> compatible with
> future opcodes that require larger-than-100,000-byte transactions, 
> although
> any such future opcodes would likely require changes to the Script 
> validation
> rules anyway (e.g. the 520-byte limit on data items).
>
> 2. Fix the SIG opcodes so they don't re-hash variations of the 
> transaction's data.
> This is the "most correct" solution, but would require updating every
> piece of transaction-creating and transaction-validating software to 
> change how
> they compute the signature hash.
>
> ==References==
>
> [[https://bitcointalk.org/?topic=140078|CVE-2013-2292] 
> <https://bitcointalk.org/?topic=140078%7CCVE-2013-2292]>]: Sergio 
> Demian Lerner's original report
>
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/b969dd16/attachment.html>

From gavinandresen at gmail.com  Mon Jul 20 20:30:08 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 20 Jul 2015 16:30:08 -0400
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CAE-z3OVWYaoGc+_=xQN1=CV=LUHdLEtuds6FZCXdktowfCaLYA@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
	<CAE-z3OVWYaoGc+_=xQN1=CV=LUHdLEtuds6FZCXdktowfCaLYA@mail.gmail.com>
Message-ID: <CABsx9T0Y7K62-c4ivcgscU4cuXgQEAehZkupL64zmJTXjOnt0w@mail.gmail.com>

On Mon, Jul 20, 2015 at 3:43 PM, Tier Nolan via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> This could render transactions with a locktime in the future as
> unspendable.
>
> It is pretty low probability that someone has created a >100kB locked
> transaction though.
>
> It violates the principle that no fork should render someone's coins
> unspendable.
>

Mmmm.... you'd have to:

a) Have lost or thrown away the keys to the unspent transaction outputs
b) Have created a locktime'd transaction with a lock time after the
BIP100/101 switchover times
that is more than 100,000 bytes big
c) Have some special relationship with a miner that you trust to still be
around when the transaction
unlocks that would mine the bigger-than-standard transaction for you.

I don't think adding extra complexity to consensus-critical code to support
such an incredibly unlikely
scenario is the right decision here. I think it is more likely that the
extra complexity would trigger a bug
that causes a loss of bitcoin greater than the amount of bitcoin tied up in
locktime'ed transactions
(because I think there are approximately zero BTC tied up in >100K
locktime'ed transactions).


RE: limit size of transaction+parents:  Feature creep, belongs in another
BIP in my opinion. This one
is focused on fixing CVE-2013-2292


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150720/05a16bf2/attachment.html>

From gmaxwell at gmail.com  Mon Jul 20 20:55:57 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 20 Jul 2015 20:55:57 +0000
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
Message-ID: <CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>

On Mon, Jul 20, 2015 at 7:10 PM, Gavin Andresen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Mitigate a potential CPU exhaustion denial-of-service attack by limiting
> the maximum size of a transaction included in a block.

This seems like a fairly indirect approach. The resource being watched
for is not the size (otherwise two transactions for 200k would be
strictly worse than one 200k transactions) but the potential of N^2
costs related to repeated hashing in checksig; which this ignores.

The cost of the indirection is forclosing future applications which
involve larger signatures but have no quadratic component and are thus
fast to verify-- or requring yet another hard fork to remove the
limit, or a kludgy soft fork that splits the same data across two
"transactions" which get processed as a unit... all would be
unfortunate.

Alternative 1 sounds more attractive to be for this reason as it's more direct.

From jtimon at jtimon.cc  Mon Jul 20 22:14:41 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 21 Jul 2015 00:14:41 +0200
Subject: [bitcoin-dev] Do we really need a mempool? (for relay nodes)
In-Reply-To: <55AAACF9.90007@gmail.com>
References: <20150718185259.GA3477@muck>
	<55AAACF9.90007@gmail.com>
Message-ID: <CABm2gDqayOVT6YHf5w5qTOtsKCBsOxc=fxMpR2YZJs26km=vNQ@mail.gmail.com>

On Sat, Jul 18, 2015 at 9:46 PM, Patrick Strateman via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Relay nodes do not need a mempool, but do need some mechanism to avoid DoS
> issues.
>
> Wallet nodes can use the mempool for fee estimation (in addition to looking
> at past blocks).

Exactly, so an anti-DoS mechanism that would be sufficient for a
non-mempool node would be also useful for small values in -maxmempool.
I think a simple cache for transaction validations should be enough.
Please, review a draft for that in the newest #6448.

https://github.com/bitcoin/bitcoin/pull/6448

I would be happy to rebase it back to 0.11 and even 0.10.

From andreas at schildbach.de  Tue Jul 21 08:20:17 2015
From: andreas at schildbach.de (Andreas Schildbach)
Date: Tue, 21 Jul 2015 10:20:17 +0200
Subject: [bitcoin-dev] QR code alternatives (was: Proposal: extend bip70
	with OpenAlias)
In-Reply-To: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
References: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
Message-ID: <mokvc1$p4m$1@ger.gmane.org>

Hmm, the advanced QR code standards are perhaps even useful if we don't
change anything about BIP7x. Because if we can cram more data without
loosing scanning performance this maybe means also we can stay with the
data we have but improve scanning?



From clem.ds at gmail.com  Tue Jul 21 08:42:02 2015
From: clem.ds at gmail.com (=?UTF-8?Q?Cl=C3=A9ment_Elbaz?=)
Date: Tue, 21 Jul 2015 08:42:02 +0000
Subject: [bitcoin-dev] QR code alternatives (was: Proposal: extend bip70
 with OpenAlias)
In-Reply-To: <mokvc1$p4m$1@ger.gmane.org>
References: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
	<mokvc1$p4m$1@ger.gmane.org>
Message-ID: <CAP63atZdnDjdvtwDVq36uBO3TRch9e1=6ueRgicKxm_dRs2b7w@mail.gmail.com>

As a side note, you may be interested about the 2D-Doc, which is a new
French standard used to protect documents such as address proofs or
invoice. I've been involved with it closely at work.

Every 2d-Doc include an ECDSA signature inside a 2D barcode, the key being
that the barcode is a Datamatrix and not a QR code.

If any of you can read French, the technical specification of the standard
can be found here ::
https://ants.gouv.fr/content/download/516/5665/version/4/file/ANTS_2D-Doc_CABSpec_v2.0.1_erratum.pdf

Basically, a short summary of the protected document is encoded inside the
barcode, followed by an ECDSA signature of the summary (still in the
barcode). The signature is done by an official, government-approved 2D-Doc
emitter. The 2D-Code contains a short reference (a few bytes) to designate
which emitter signed it, and then you can lookup the 2D-Doc TSL supplied by
the French government to get all the X509 Certificates from every emitters
you are interested in, in order to check the signature.

While 2D-Doc solve a very different problem than Bitcoin + BIP70, you may
be interested in knowing about it as hundred of thousands of them have been
emitted successfully while solving one of the problem you face : embedding
an ECDSA signature inside a 2D barcode.

Thank you for your time,

Cl?ment Elbaz

Le mar. 21 juil. 2015 ? 10:20, Andreas Schildbach via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> a ?crit :

> Hmm, the advanced QR code standards are perhaps even useful if we don't
> change anything about BIP7x. Because if we can cram more data without
> loosing scanning performance this maybe means also we can stay with the
> data we have but improve scanning?
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150721/44c85c6b/attachment.html>

From jtimon at jtimon.cc  Tue Jul 21 09:26:35 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 21 Jul 2015 11:26:35 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <55AC29DB.4060800@jrn.me.uk>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
Message-ID: <CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>

I still disagree. Using height instead of time may make the
implementation more complex by requiring some additional preparations
but using height is in fact a simpler design. Why relay on clocks that
we know will differ in different computers and places when we have a
universal tick with every block?

Btw, BIP16 and BIP34 could be changed to height-based activation
already. BIP16 simply should have used height instead of time from the
beginning.

On Mon, Jul 20, 2015 at 12:51 AM, Ross Nicoll via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Further to that - please disregard what I said about using block height. Had
> failed to realise that in using contextual information (block height) it
> complicates block validation (i.e. it would be impossible to tell if a block
> is too big, without having all previous blocks first). Block time is in fact
> the better option.
>
> Ross
>
>
> On 17/07/2015 18:57, Ross Nicoll via bitcoin-dev wrote:
>
> I'd back this if we can't find a permanent solution - 2MB gives us a lot
> more wiggle room in the interim at least; one of my concerns with block size
> is 3 transactions per second is absolutely tiny, and we need space for the
> network to search for an equilibrium between volume and pricing without risk
> of an adoption spike rendering it essentially unusable.
>
> I'd favour switching over by block height rather than time, and I'd suggest
> that given virtually every wallet/node out there will require testing (even
> if many do not currently enforce a limit and therefore do not need
> changing), 6 months should be considered a minimum target. I'd open with a
> suggestion of block 390k as a target.
>
> Ross
>
> On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
>
> Opening a mailing list thread on this BIP:
>
> BIP PR: https://github.com/bitcoin/bips/pull/173
> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>
> The general intent of this BIP is as a minimum viable alternative plan to my
> preferred proposal (BIP 100).
>
> If agreement is not reached on a more comprehensive solution, then this
> solution is at least available and a known quantity.  A good backup plan.
>
> Benefits:  conservative increase.  proves network can upgrade.  permits some
> added growth, while the community & market gathers data on how an increased
> block size impacts privacy, security, centralization, transaction throughput
> and other metrics.  2MB seems to be a Least Common Denominator on an
> increase.
>
> Costs:  requires a hard fork.  requires another hard fork down the road.
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From hearn at vinumeris.com  Tue Jul 21 10:25:33 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Tue, 21 Jul 2015 12:25:33 +0200
Subject: [bitcoin-dev] QR code alternatives (was: Proposal: extend bip70
 with OpenAlias)
In-Reply-To: <CAP63atZdnDjdvtwDVq36uBO3TRch9e1=6ueRgicKxm_dRs2b7w@mail.gmail.com>
References: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
	<mokvc1$p4m$1@ger.gmane.org>
	<CAP63atZdnDjdvtwDVq36uBO3TRch9e1=6ueRgicKxm_dRs2b7w@mail.gmail.com>
Message-ID: <CA+w+GKRsS=rP0V7MfyxBdE2q8yogwt2EshgMS3NVrSw3NFJn6w@mail.gmail.com>

Thanks Clement!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150721/85e320fc/attachment.html>

From pete at petertodd.org  Tue Jul 21 13:04:12 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 21 Jul 2015 09:04:12 -0400
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
Message-ID: <20150721130412.GA4551@savin.petertodd.org>

On Tue, Jul 21, 2015 at 11:26:35AM +0200, Jorge Tim?n via bitcoin-dev wrote:
> I still disagree. Using height instead of time may make the
> implementation more complex by requiring some additional preparations
> but using height is in fact a simpler design. Why relay on clocks that
> we know will differ in different computers and places when we have a
> universal tick with every block?

The Bitcoin protocol fundementally uses time in a consensus-critical
manner anyway; miners vote on what time it is via the median time
mechanism.

Triggering events based on median time is compatable with consensus and
gives more human scale predictability as to when events may happen. In
addition the median time is guaranteed to be monotonic by the consensus
rules.

See the version bits proposal for an example of its use:

https://gist.github.com/sipa/bf69659f43e763540550#Specification


Having said that, in general triggering events without verifying a
supermajority of miner support can be very dangerous. Without miner
support the chain is insecure, and can be attacked. For instance a
blocksize limit increase that a majority of miners choose not to
implement raises huge risks of reorg for any miners who attempt to
create large blocks, and huge risks of payment reversal for any
merchants accepting transactions in such blocks. Note how with BIP102,
extending the original Bitcoin chain is inherently an attack on the
Garzik chain.

For that reason I think BIP102 is extremely poorly designed. I can only
conclude that Jeff Garzik is either deliberately trolling us and/or
manipulating discussion with a badly designed proposal that he doesn't
actually expect to be adopted verbatim, or is incompetent.

-- 
'peter'[:-1]@petertodd.org
0000000000000000031c12b6af038524fd5dd28115b7f5591e046423cebaf6d1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150721/46dd463a/attachment.sig>

From pete at petertodd.org  Tue Jul 21 13:58:46 2015
From: pete at petertodd.org (Peter Todd)
Date: Tue, 21 Jul 2015 09:58:46 -0400
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <20150721130412.GA4551@savin.petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
Message-ID: <20150721135846.GB13429@savin.petertodd.org>

On Tue, Jul 21, 2015 at 09:04:12AM -0400, Peter Todd via bitcoin-dev wrote:
> For that reason I think BIP102 is extremely poorly designed. I can only
> conclude that Jeff Garzik is either deliberately trolling us and/or
> manipulating discussion with a badly designed proposal that he doesn't
> actually expect to be adopted verbatim, or is incompetent.

Expanding on that a bit:

On Tue, Jul 21, 2015 at 09:14:26PM +0800, Jeremy Rubin wrote:
> unsolicited feedback:
>
> I'd send a quick apology for this bit
>
> """
> For that reason I think BIP102 is extremely poorly designed. I can only
> conclude that Jeff Garzik is either deliberately trolling us and/or
> manipulating discussion with a badly designed proposal that he doesn't
> actually expect to be adopted verbatim, or is incompetent.
> """
>
> it's a little over the top.
>
> I think that Garzik is probably releasing it in reaction to the fact
> certain people are only looking at something with code attached.
>
> No need to call someone stupid for sharing a proposal... although it seems
> sketchy that he got a BIP # for this. You want to foster a less hostile
> community...

I don't agree with you at all.

This is a case where if Jeff doesn't understand that issue, he's
proposing changes that he's not competent enough to understand, and it'd
save us a lot of review effort if he left that discussion. Equally, Jeff
is in a position in the dev community where he should be that competent;
if he actually isn't it does a lot of good for the broader community to
change that opinion.

I personally *don't* think he's doing that, rather I believe he knows
full well it's a bad patch and is proposing it because he wants to push
discussion towards a solution. Often trolling the a audience with bad
patches is an effective way to motivate people to respond by writing
better ones; Jeff has told me he often does exactly that.

I think in this case we shouldn't do anything, so short-circuiting that
process by pointing out what he's doing publicly makes sense.

Re: BIP #'s, we explicitly have a policy of allocating them for stupid
ideas, to avoid having to be gatekeepers. Ironically that makes it
harder to get a BIP # if you know what you're doing, because Gregory
Maxwell will argue against you in private and delay actually allocating
one if he knows you should know better. :)

-- 
'peter'[:-1]@petertodd.org
00000000000000000d9cad4228c0396ff49c1de60f8ee155928eee22705f6619
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150721/2ba8accd/attachment.sig>

From thomasv at electrum.org  Tue Jul 21 14:58:39 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Tue, 21 Jul 2015 16:58:39 +0200
Subject: [bitcoin-dev] QR code alternatives (was: Proposal: extend bip70
	with OpenAlias)
In-Reply-To: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
References: <CA+w+GKRRfT=8xALsVMqEUAZWzd87Lf4HqFPuDigatY+nHzafQQ@mail.gmail.com>
Message-ID: <55AE5E1F.4050609@electrum.org>



Le 20/07/2015 16:40, Mike Hearn a ?crit :
> 
> If we accept a single payment address i.e. no clever tricks around merge
> avoidance, such a QR code could look like this:
> 
> bitcoin:1aBcD1234....?x=serialized_payment_request
> 
> However this requires text mode and wastes bytes at the front for the URI
> type.
> 

It is possible to be both backward-compatible and to avoid wasting space
in URIs, if we simply assume that the payment request is a single
standard output + amount (that scenario will probably cover 99% of the
cases, and the few other cases may not need QR codes). We generate a
serialized bip70 PR from the parameters found in the URI, sign that
string, and add the signature to the URI.

Example:

bitcoin:1H14AiSc4PqkK9VTmeutZU3edSy3HS5HL8?amount=1&message=here%20is%20a%20test&time=1437489571&exp=604800&name=ecdsa.net&sig=3Quot6m2RsR43NgV8VQQx3Ngf5u8wZY18mu523x3ViLrA3WLwSoQum2Znw3gRsTgfADpHuEiyyjnpxCLKWrkR4RQM

'time' is the timestamp of the request
'exp' is the duration of validity, 1 week here
(it saves a few bits to express it that way)

'name' is the domain name of the signer
'sig' is the signature

The QR code derived from that URI is perfectly scannable with a phone.



From gavinandresen at gmail.com  Tue Jul 21 18:09:19 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Tue, 21 Jul 2015 14:09:19 -0400
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
	<CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
Message-ID: <CABsx9T2ZX3iuCN4g6Yh0k8R7Ad0yx-yfx1f2XhCEPtz-vt2xsw@mail.gmail.com>

On Mon, Jul 20, 2015 at 4:55 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jul 20, 2015 at 7:10 PM, Gavin Andresen via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Mitigate a potential CPU exhaustion denial-of-service attack by limiting
> > the maximum size of a transaction included in a block.
>
> This seems like a fairly indirect approach. The resource being watched
> for is not the size (otherwise two transactions for 200k would be
> strictly worse than one 200k transactions) but the potential of N^2
> costs related to repeated hashing in checksig; which this ignores.
>

Yes.  The tradeoff is implementation complexity: it is trivial to check
transaction size,
not as trivial to count signature operations, because
number-of-bytes-in-transaction
doesn't require any context.

But I would REALLY hate myself if in ten years a future version of me was
struggling to
get consensus to move away from some stupid 100,000 byte transaction size
limit
I imposed to mitigate a potential DoS attack.

So I agree, a limit on sigops is the right way to go. And if that is being
changed,
might as well accurately count exactly how many sigops a transaction
actually
requires to be validated...

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150721/258a0bc6/attachment.html>

From jeremy.l.rubin.travel at gmail.com  Tue Jul 21 18:18:00 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Wed, 22 Jul 2015 02:18:00 +0800
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CABsx9T2ZX3iuCN4g6Yh0k8R7Ad0yx-yfx1f2XhCEPtz-vt2xsw@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
	<CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
	<CABsx9T2ZX3iuCN4g6Yh0k8R7Ad0yx-yfx1f2XhCEPtz-vt2xsw@mail.gmail.com>
Message-ID: <CAJ+8mEPt1xe6dxx1+jm=sndArHXCbjEfYKNVhJw=OO1aG=CBJQ@mail.gmail.com>

I think it's not a horrible idea to just add a field into the transaction
metadata for N_SIG_OPS in the script_sig

It is much simpler in implementation if the concern is complexity (once a
transaction goes above N_SIG_OPS it could be considered invalid, number
computed must be equal). It wouldn't even need to be stored permanently as
it can be pruned easily and recomputed later (hashes would protect against
buggy complicated sig counting code).

Furthermore, it would differentiate a branch with different counts well.



On Wed, Jul 22, 2015 at 2:09 AM, Gavin Andresen via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Mon, Jul 20, 2015 at 4:55 PM, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
>
>> On Mon, Jul 20, 2015 at 7:10 PM, Gavin Andresen via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> > Mitigate a potential CPU exhaustion denial-of-service attack by limiting
>> > the maximum size of a transaction included in a block.
>>
>> This seems like a fairly indirect approach. The resource being watched
>> for is not the size (otherwise two transactions for 200k would be
>> strictly worse than one 200k transactions) but the potential of N^2
>> costs related to repeated hashing in checksig; which this ignores.
>>
>
> Yes.  The tradeoff is implementation complexity: it is trivial to check
> transaction size,
> not as trivial to count signature operations, because
> number-of-bytes-in-transaction
> doesn't require any context.
>
> But I would REALLY hate myself if in ten years a future version of me was
> struggling to
> get consensus to move away from some stupid 100,000 byte transaction size
> limit
> I imposed to mitigate a potential DoS attack.
>
> So I agree, a limit on sigops is the right way to go. And if that is being
> changed,
> might as well accurately count exactly how many sigops a transaction
> actually
> requires to be validated...
>
> --
> --
> Gavin Andresen
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/6ff84cc8/attachment-0001.html>

From jrn at jrn.me.uk  Tue Jul 21 22:05:14 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Tue, 21 Jul 2015 23:05:14 +0100
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
Message-ID: <55AEC21A.3090302@jrn.me.uk>

Not so much that the implementation is difficult, as it requires context 
to validate a block size, rather than being able to validate it without 
requiring the preceeding blocks. Yes, time on different machines may 
vary, but block time is safe to use for this, because it's a 
straight-forward test of "if block time is acceptable and block time is 
after <date> then maximum block size allowed is n MB otherwise m MB".

Ross

On 21/07/2015 10:26, Jorge Tim?n wrote:
> I still disagree. Using height instead of time may make the
> implementation more complex by requiring some additional preparations
> but using height is in fact a simpler design. Why relay on clocks that
> we know will differ in different computers and places when we have a
> universal tick with every block?
>
> Btw, BIP16 and BIP34 could be changed to height-based activation
> already. BIP16 simply should have used height instead of time from the
> beginning.
>
> On Mon, Jul 20, 2015 at 12:51 AM, Ross Nicoll via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Further to that - please disregard what I said about using block height. Had
>> failed to realise that in using contextual information (block height) it
>> complicates block validation (i.e. it would be impossible to tell if a block
>> is too big, without having all previous blocks first). Block time is in fact
>> the better option.
>>
>> Ross
>>
>>
>> On 17/07/2015 18:57, Ross Nicoll via bitcoin-dev wrote:
>>
>> I'd back this if we can't find a permanent solution - 2MB gives us a lot
>> more wiggle room in the interim at least; one of my concerns with block size
>> is 3 transactions per second is absolutely tiny, and we need space for the
>> network to search for an equilibrium between volume and pricing without risk
>> of an adoption spike rendering it essentially unusable.
>>
>> I'd favour switching over by block height rather than time, and I'd suggest
>> that given virtually every wallet/node out there will require testing (even
>> if many do not currently enforce a limit and therefore do not need
>> changing), 6 months should be considered a minimum target. I'd open with a
>> suggestion of block 390k as a target.
>>
>> Ross
>>
>> On 17/07/2015 16:55, Jeff Garzik via bitcoin-dev wrote:
>>
>> Opening a mailing list thread on this BIP:
>>
>> BIP PR: https://github.com/bitcoin/bips/pull/173
>> Code PR: https://github.com/bitcoin/bitcoin/pull/6451
>>
>> The general intent of this BIP is as a minimum viable alternative plan to my
>> preferred proposal (BIP 100).
>>
>> If agreement is not reached on a more comprehensive solution, then this
>> solution is at least available and a known quantity.  A good backup plan.
>>
>> Benefits:  conservative increase.  proves network can upgrade.  permits some
>> added growth, while the community & market gathers data on how an increased
>> block size impacts privacy, security, centralization, transaction throughput
>> and other metrics.  2MB seems to be a Least Common Denominator on an
>> increase.
>>
>> Costs:  requires a hard fork.  requires another hard fork down the road.
>>
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>>
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>


From thomasv at electrum.org  Wed Jul 22 15:51:02 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Wed, 22 Jul 2015 17:51:02 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
Message-ID: <55AFBBE6.3060702@electrum.org>

Hello,

Although Electrum clients connect to several servers in order to fetch
block headers, they typically request address balances and address
histories from a single server. This means that the chosen server knows
that a given set of addresses belong to the same wallet. That is true
even if Electrum is used over TOR.

There have been various proposals to improve on that, but none of them
really convinced me so far. One recurrent proposal has been to create
subsets of wallet addresses, and to send them to separate servers. In my
opinion, this does not really improve anonymity, because it requires
trusting more servers.

Here is an idea, inspired by TOR, on which I would like to have some
feedback: We create an anonymous routing layer between Electrum servers
and clients.

* Each server S publishes a RSA public key, KS
* Each client receives a list of available servers and their pubkeys
* For each wallet address, addr_i, a client chooses a server S_i, and a
RSA keypair (K_addr_i, k_addr_i)
* The client creates a list of encrypted requests. Each request contains
addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
* The client chooses a main server M, and sends the list of encrypted
requests to M
* M dispatches the client's requests to the corresponding servers S_i
(without the client's IP address.)
* Each server decrypts the requests it receives, performs the request,
and encrypts the result with K_addr_i
* M receives encrypted responses, and forwards them to the client.
* The client decrypts the encrypted response with k_addr_i

What do you think? What are the costs and benefits of such an approach?

(Note: this will not work if all servers, or a large fraction of them,
are controlled by the same entity that controls M)


Thomas

From tomh at thinlink.com  Wed Jul 22 15:51:23 2015
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 22 Jul 2015 08:51:23 -0700
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <20150721135846.GB13429@savin.petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
Message-ID: <55AFBBFB.5040101@thinlink.com>

On 7/21/2015 6:58 AM, Peter Todd via bitcoin-dev wrote:
> Re: BIP #'s, we explicitly have a policy of allocating them for stupid 
> ideas, to avoid having to be gatekeepers. Ironically that makes it 
> harder to get a BIP # if you know what you're doing, because Gregory 
> Maxwell will argue against you in private and delay actually 
> allocating one if he knows you should know better. :)

Kalle asked for a BIP# for his PoP standardization proposal one month 
ago.   Should he have known better?


From natanael.l at gmail.com  Wed Jul 22 16:04:32 2015
From: natanael.l at gmail.com (Natanael)
Date: Wed, 22 Jul 2015 18:04:32 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFBBE6.3060702@electrum.org>
References: <55AFBBE6.3060702@electrum.org>
Message-ID: <CAAt2M1-wf53=qUM+Q=1YrkEz+WT5PnZsobfzdNENtV5dN7847w@mail.gmail.com>

- Sent from my tablet
Den 22 jul 2015 17:51 skrev "Thomas Voegtlin via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org>:
>
> Hello,
>
> Although Electrum clients connect to several servers in order to fetch
> block headers, they typically request address balances and address
> histories from a single server. This means that the chosen server knows
> that a given set of addresses belong to the same wallet. That is true
> even if Electrum is used over TOR.
>
> There have been various proposals to improve on that, but none of them
> really convinced me so far. One recurrent proposal has been to create
> subsets of wallet addresses, and to send them to separate servers. In my
> opinion, this does not really improve anonymity, because it requires
> trusting more servers.
>
> Here is an idea, inspired by TOR, on which I would like to have some
> feedback: We create an anonymous routing layer between Electrum servers
> and clients.

Why not look at something like Dissent? http://dedis.cs.yale.edu/dissent/

This protocol reduces the impact of Sybil attacks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/55192dba/attachment.html>

From eric at voskuil.org  Wed Jul 22 16:30:36 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 22 Jul 2015 09:30:36 -0700
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFBBE6.3060702@electrum.org>
References: <55AFBBE6.3060702@electrum.org>
Message-ID: <55AFC52C.3010700@voskuil.org>

Hi Thomas,

The scheme is essentially onion routing. The set of {M} are entry nodes
and the set of {S} are exit nodes. The weaknesses are as you would see
in an analogous TOR implementation:

(1) The lack of relay nodes {R} make collaboration between any subset of
{M} and {S} trivial.

(2) OR is a mixnet, so the size of the network matters a lot.

(3) The directory is a perpetual weakness.

(4) Content is visible to the exit node (or the final service). This
means each address must be passed via a distinct route to prevent
correlation.

e

On 07/22/2015 08:51 AM, Thomas Voegtlin via bitcoin-dev wrote:
> Hello,
> 
> Although Electrum clients connect to several servers in order to fetch
> block headers, they typically request address balances and address
> histories from a single server. This means that the chosen server knows
> that a given set of addresses belong to the same wallet. That is true
> even if Electrum is used over TOR.
> 
> There have been various proposals to improve on that, but none of them
> really convinced me so far. One recurrent proposal has been to create
> subsets of wallet addresses, and to send them to separate servers. In my
> opinion, this does not really improve anonymity, because it requires
> trusting more servers.
> 
> Here is an idea, inspired by TOR, on which I would like to have some
> feedback: We create an anonymous routing layer between Electrum servers
> and clients.
> 
> * Each server S publishes a RSA public key, KS
> * Each client receives a list of available servers and their pubkeys
> * For each wallet address, addr_i, a client chooses a server S_i, and a
> RSA keypair (K_addr_i, k_addr_i)
> * The client creates a list of encrypted requests. Each request contains
> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> * The client chooses a main server M, and sends the list of encrypted
> requests to M
> * M dispatches the client's requests to the corresponding servers S_i
> (without the client's IP address.)
> * Each server decrypts the requests it receives, performs the request,
> and encrypts the result with K_addr_i
> * M receives encrypted responses, and forwards them to the client.
> * The client decrypts the encrypted response with k_addr_i
> 
> What do you think? What are the costs and benefits of such an approach?
> 
> (Note: this will not work if all servers, or a large fraction of them,
> are controlled by the same entity that controls M)
> 
> 
> Thomas
> _______________________________________________

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/f06a04f6/attachment.sig>

From fireduck at gmail.com  Wed Jul 22 16:41:24 2015
From: fireduck at gmail.com (=?UTF-8?B?Sm9zZXBoIEdsZWFzb24g4pGI?=)
Date: Wed, 22 Jul 2015 16:41:24 +0000
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFBBE6.3060702@electrum.org>
References: <55AFBBE6.3060702@electrum.org>
Message-ID: <CA+ASnrG_sNRio03pr_F6vSepucG66=R+n_x7xREYqKPXOo9hyw@mail.gmail.com>

I've thought about this as well, (in addition to making a java
implementation of the electrum server).

One solution would be for the client to combine all the addresses they are
interested in into a single bloom filter and send that to the server.

It would be pretty expensive for the server to check every address against
the bloom filter, but maybe for recent blocks (client can send how behind
they are) and for new transactions it wouldn't be bad at all.

The client could end up receiving a bunch of transactions they weren't
interested in but it would likely be manageable.

The client would also need to be fairly clever, including a set of static
ruse addresses and dynamic ruse addresses that they include in the filter.
That way a server would have a hard time using the bloom filter as a
fingerprint and figuring out which addresses are the real ones.

An alternative would be the server sending a bloom filter of addresses in
each block and then the client requesting entire blocks.  This would use
more bandwidth, but it seems like it would be pretty simple to implement
and give good anonymity.

Basically the idea is to spend more bandwidth and CPU to keep the server in
the dark on what the client really wants.

On Wed, Jul 22, 2015 at 8:51 AM Thomas Voegtlin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hello,
>
> Although Electrum clients connect to several servers in order to fetch
> block headers, they typically request address balances and address
> histories from a single server. This means that the chosen server knows
> that a given set of addresses belong to the same wallet. That is true
> even if Electrum is used over TOR.
>
> There have been various proposals to improve on that, but none of them
> really convinced me so far. One recurrent proposal has been to create
> subsets of wallet addresses, and to send them to separate servers. In my
> opinion, this does not really improve anonymity, because it requires
> trusting more servers.
>
> Here is an idea, inspired by TOR, on which I would like to have some
> feedback: We create an anonymous routing layer between Electrum servers
> and clients.
>
> * Each server S publishes a RSA public key, KS
> * Each client receives a list of available servers and their pubkeys
> * For each wallet address, addr_i, a client chooses a server S_i, and a
> RSA keypair (K_addr_i, k_addr_i)
> * The client creates a list of encrypted requests. Each request contains
> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> * The client chooses a main server M, and sends the list of encrypted
> requests to M
> * M dispatches the client's requests to the corresponding servers S_i
> (without the client's IP address.)
> * Each server decrypts the requests it receives, performs the request,
> and encrypts the result with K_addr_i
> * M receives encrypted responses, and forwards them to the client.
> * The client decrypts the encrypted response with k_addr_i
>
> What do you think? What are the costs and benefits of such an approach?
>
> (Note: this will not work if all servers, or a large fraction of them,
> are controlled by the same entity that controls M)
>
>
> Thomas
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/0cc44782/attachment-0001.html>

From pieter.wuille at gmail.com  Wed Jul 22 16:52:20 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 22 Jul 2015 12:52:20 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
Message-ID: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>

Hello all,

I'd like to talk a bit about my view on the relation between the Bitcoin
Core project, and the consensus rules of Bitcoin.

I believe it is the responsibility of the maintainers/developers of Bitcoin
Core to create software which helps guarantee the security and operation of
the Bitcoin network.

In addition to normal software maintenance, bug fixes and performance
improvements, this includes DoS protection mechanism deemed necessary to
keep the network operational. Sometimes, such (per-node configurable)
policies have had economic impact, for example the dust rule.

This also includes participating in discussions about consensus changes,
but not the responsibility to decide on them - only to implement them when
agreed upon. It would be irresponsible and dangerous to the network and
thus the users of the software to risk forks, or to take a leading role in
pushing dramatic changes. Bitcoin Core developers obviously have the
ability to make any changes to the codebase or its releases, but it is
still up to the community to choose to run that code.

Some people have called the prospect of limited block space and the
development of a fee market a change in policy compared to the past. I
respectfully disagree with that. Bitcoin Core is not running the Bitcoin
economy, and its developers have no authority to set its rules. Change in
economics is always happening, and should be expected. Worse, intervening
in consensus changes would make the ecosystem more dependent on the group
taking that decision, not less.

So to point out what I consider obvious: if Bitcoin requires central
control over its rules by a group of developers, it is completely
uninteresting to me. Consensus changes should be done using consensus, and
the default in case of controversy is no change.

===

My personal opinion is that we - as a community - should indeed let a fee
market develop, and rather sooner than later, and that "kicking the can
down the road" is an incredibly dangerous precedent: if we are willing to
go through the risk of a hard fork because of a fear of change of
economics, then I believe that community is not ready to deal with change
at all. And some change is inevitable, at any block size. Again, this does
not mean the block size needs to be fixed forever, but its intent should be
growing with the evolution of technology, not a panic reaction because a
fear of change.

But I am not in any position to force this view. I only hope that people
don't think a fear of economic change is reason to give up consensus.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/0a8c7519/attachment.html>

From karra.etc at gmail.com  Wed Jul 22 17:02:49 2015
From: karra.etc at gmail.com (Sriram Karra)
Date: Wed, 22 Jul 2015 22:32:49 +0530
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <20150721135846.GB13429@savin.petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
Message-ID: <CAFkt3UONhyEuKHZOVwk6URQVSeseN6RXsYBNK8gUcXeraE62Jg@mail.gmail.com>

On Tue, Jul 21, 2015 at 7:28 PM, Peter Todd via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:


> I personally *don't* think he's doing that, rather I believe he knows
> full well it's a bad patch and is proposing it because he wants to push
> discussion towards a solution. Often trolling the a audience with bad
> patches is an effective way to motivate people to respond by writing
> better ones; Jeff has told me he often does exactly that.
>
> I think in this case we shouldn't do anything, so short-circuiting that
> process by pointing out what he's doing publicly makes sense.
>

Assuming that's what Jeff is doing, how does preventing better solutions
from emerging 'make sense'?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/5852b2ca/attachment.html>

From jrn at jrn.me.uk  Wed Jul 22 17:18:45 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Wed, 22 Jul 2015 18:18:45 +0100
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <55AFD075.1000806@jrn.me.uk>

So, if consensus shouldn't really be between the developers (which is 
fine), should we empower users to control consensus? I've been working 
on a fork framework anyway, which can support reasonably arbitrary 
consensus changes (currently against block height, but moving towards 
block time). Theoretically it could be modified to load consensus 
parameters (which block size would have to be added to) from disk at 
startup, rather than having them hard-coded.

Is that considered desirable? Will raise as a PR if so. If not, where do 
we draw a line between developer and user consensus?

Ross

On 22/07/2015 17:52, Pieter Wuille via bitcoin-dev wrote:
>
> Hello all,
>
> I'd like to talk a bit about my view on the relation between the 
> Bitcoin Core project, and the consensus rules of Bitcoin.
>
> I believe it is the responsibility of the maintainers/developers of 
> Bitcoin Core to create software which helps guarantee the security and 
> operation of the Bitcoin network.
>
> In addition to normal software maintenance, bug fixes and performance 
> improvements, this includes DoS protection mechanism deemed necessary 
> to keep the network operational. Sometimes, such (per-node 
> configurable) policies have had economic impact, for example the dust 
> rule.
>
> This also includes participating in discussions about consensus 
> changes, but not the responsibility to decide on them - only to 
> implement them when agreed upon. It would be irresponsible and 
> dangerous to the network and thus the users of the software to risk 
> forks, or to take a leading role in pushing dramatic changes. Bitcoin 
> Core developers obviously have the ability to make any changes to the 
> codebase or its releases, but it is still up to the community to 
> choose to run that code.
>
> Some people have called the prospect of limited block space and the 
> development of a fee market a change in policy compared to the past. I 
> respectfully disagree with that. Bitcoin Core is not running the 
> Bitcoin economy, and its developers have no authority to set its 
> rules. Change in economics is always happening, and should be 
> expected. Worse, intervening in consensus changes would make the 
> ecosystem more dependent on the group taking that decision, not less.
>
> So to point out what I consider obvious: if Bitcoin requires central 
> control over its rules by a group of developers, it is completely 
> uninteresting to me. Consensus changes should be done using consensus, 
> and the default in case of controversy is no change.
>
> ===
>
> My personal opinion is that we - as a community - should indeed let a 
> fee market develop, and rather sooner than later, and that "kicking 
> the can down the road" is an incredibly dangerous precedent: if we are 
> willing to go through the risk of a hard fork because of a fear of 
> change of economics, then I believe that community is not ready to 
> deal with change at all. And some change is inevitable, at any block 
> size. Again, this does not mean the block size needs to be fixed 
> forever, but its intent should be growing with the evolution of 
> technology, not a panic reaction because a fear of change.
>
> But I am not in any position to force this view. I only hope that 
> people don't think a fear of economic change is reason to give up 
> consensus.
>
> -- 
> Pieter
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/1b3907fd/attachment.html>

From milly at bitcoins.info  Wed Jul 22 17:32:00 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Wed, 22 Jul 2015 13:32:00 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <55AFD390.9060306@bitcoins.info>

>default in case of controversy is no change.

I think the result of this would probably be that no controversial 
changes ever get implemented via this process so others will hard fork 
the code and eventually make this process irrelevant.  Since you need 
close to 100% agreement the irrelevance would have to come as a step 
function which will manifest itself in a rather disruptive manner.

The question is really is this hark-forking disruption worse than coming 
up with some kind of process to handle controversial changes.

Russ



From jgarzik at gmail.com  Wed Jul 22 17:33:18 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 22 Jul 2015 10:33:18 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>

On Wed, Jul 22, 2015 at 9:52 AM, Pieter Wuille via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Some people have called the prospect of limited block space and the
> development of a fee market a change in policy compared to the past. I
> respectfully disagree with that. Bitcoin Core is not running the Bitcoin
> economy, and its developers have no authority to set its rules. Change in
> economics is always happening, and should be expected. Worse, intervening
> in consensus changes would make the ecosystem more dependent on the group
> taking that decision, not less.
>
>
This completely ignores *reality*, what users have experienced for the past
~6 years.

"Change in economics is always happening" does not begin to approach the
scale of the change.

For the entirety of bitcoin's history, absent long blocks and traffic
bursts, fee pressure has been largely absent.

Moving to a new economic policy where fee pressure is consistently present
is radically different from what users, markets, and software have
experienced and *lived.*

Analysis such as [1][2] and more shows that users will hit a "painful"
"wall" and market disruption will occur - eventually settling to a new
equilibrium after a period of chaos - when blocks are consistently full.

[1] http://hashingit.com/analysis/34-bitcoin-traffic-bulletin
[2] http://gavinandresen.ninja/why-increasing-the-max-block-size-is-urgent

First, users & market are forced through this period of chaos by "let a fee
market develop" as the whole market changes to a radically different
economic policy, once the network has never seen before.

Next, when blocks are consistently full, the past consensus was that block
size limit will be increased eventually.  What happens at that point?

Answer - Users & market are forced through a second period of chaos and
disruption as the fee market is rebooted *again* by changing the block size
limit.

The average user hears a lot of noise on both sides of the block size
debate, and really has no idea that the new "let a fee market develop"
Bitcoin Core policy is going to *raise fees* on them.

It is clear that
- "let the fee market develop, Right Now" has not been thought through
- Users are not prepared for a brand new economic policy
- Users are unaware that a brand new economic policy will be foisted upon
them



> So to point out what I consider obvious: if Bitcoin requires central
> control over its rules by a group of developers, it is completely
> uninteresting to me. Consensus changes should be done using consensus, and
> the default in case of controversy is no change.
>

False.

All that has to do be done to change bitcoin to a new economic policy - not
seen in the entire 6 year history of bitcoin - is to stonewall work on
block size.

Closing size increase PRs and failing to participate in planning for a
block size increase accomplishes your stated goal of changing bitcoin to a
new economic policy.

"no [code] change"... changes bitcoin to a brand new economic policy,
picking economic winners & losers.  Some businesses will be priced out of
bitcoin, etc.

Stonewalling size increase changes is just as much as a Ben Bernanke/FOMC
move as increasing the hard limit by hard fork.



> My personal opinion is that we - as a community - should indeed let a fee
> market develop, and rather sooner than later, and that "kicking the can
> down the road" is an incredibly dangerous precedent: if we are willing to
> go through the risk of a hard fork because of a fear of change of
> economics, then I believe that community is not ready to deal with change
> at all. And some change is inevitable, at any block size. Again, this does
> not mean the block size needs to be fixed forever, but its intent should be
> growing with the evolution of technology, not a panic reaction because a
> fear of change.
>
> But I am not in any position to force this view. I only hope that people
> don't think a fear of economic change is reason to give up consensus.
>

Actually you are.

When size increase progress gets frozen out of Bitcoin Core, that just
*increases* the chances that progress must be made through a contentious
hard fork.

Further, it increases the market disruption users will experience, as
described above.

Think about the users.  Please.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/fb24245a/attachment-0001.html>

From jl2012 at xbt.hk  Wed Jul 22 17:00:41 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Wed, 22 Jul 2015 17:00:41 +0000
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <20150721130412.GA4551@savin.petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
Message-ID: <20150722170041.Horde.N2psXR0k1XYN4_s0phBwGg1@server47.web-hosting.com>


Quoting Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>:

>
> Having said that, in general triggering events without verifying a
> supermajority of miner support can be very dangerous. Without miner
> support the chain is insecure, and can be attacked. For instance a
> blocksize limit increase that a majority of miners choose not to
> implement raises huge risks of reorg for any miners who attempt to
> create large blocks, and huge risks of payment reversal for any
> merchants accepting transactions in such blocks. Note how with BIP102,
> extending the original Bitcoin chain is inherently an attack on the
> Garzik chain.
>
> For that reason I think BIP102 is extremely poorly designed. I can only
> conclude that Jeff Garzik is either deliberately trolling us and/or
> manipulating discussion with a badly designed proposal that he doesn't
> actually expect to be adopted verbatim, or is incompetent.
>
> --
> 'peter'[:-1]@petertodd.org
> 0000000000000000031c12b6af038524fd5dd28115b7f5591e046423cebaf6d1

To avoid any risk of reorg, the hardfork may require that the first  
block with GetMedianTimePast() after a pre-determined time (the "flag  
block") MUST be version 0. The exception is applied ONLY to the flag  
block.

Alternatively, the hardfork may require that the flag block MUST be  
larger than 1MB. Comparing with exploiting the block version, this  
does not require additional exceptions in consensus rules. However,  
miner may need to artificially inflate the size of the flag block and  
that could be trouble in coding. I don't have any preference.

Old nodes will not accept the new chain because it violates BIP66 /  
block size limit. New nodes will not accept the old chain because its  
flag block is not version 0 / not larger than 1MB.

This is actually checkpointing in a decentralized way. In that case,  
we can say goodbye to the old chain forever, as long as all major  
merchants and exchanges agree to upgrade. Miner support is less  
relevant. It is a no-brainer for miners to support the new chain,  
unless they don't want to sell or spend their bitcoin, or just give up  
mining after heavily investing in ASIC.

jl2012


From karra.etc at gmail.com  Wed Jul 22 17:40:58 2015
From: karra.etc at gmail.com (Sriram Karra)
Date: Wed, 22 Jul 2015 23:10:58 +0530
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CAFkt3UONhyEuKHZOVwk6URQVSeseN6RXsYBNK8gUcXeraE62Jg@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
	<CAFkt3UONhyEuKHZOVwk6URQVSeseN6RXsYBNK8gUcXeraE62Jg@mail.gmail.com>
Message-ID: <CAFkt3UNm662DQu--6r6CrS+5p_d2+ug5x0TSPvHpa2YP1Euk_A@mail.gmail.com>

On Wed, Jul 22, 2015 at 10:32 PM, Sriram Karra <karra.etc at gmail.com> wrote:

>
> On Tue, Jul 21, 2015 at 7:28 PM, Peter Todd via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
>> I personally *don't* think he's doing that, rather I believe he knows
>> full well it's a bad patch and is proposing it because he wants to push
>> discussion towards a solution. Often trolling the a audience with bad
>> patches is an effective way to motivate people to respond by writing
>> better ones; Jeff has told me he often does exactly that.
>>
>> I think in this case we shouldn't do anything, so short-circuiting that
>> process by pointing out what he's doing publicly makes sense.
>>
>
> Assuming that's what Jeff is doing, how does preventing better solutions
> from emerging 'make sense'?
>

Peter, sorry,  scratch that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/b36d6328/attachment.html>

From jgarzik at gmail.com  Wed Jul 22 17:43:19 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 22 Jul 2015 10:43:19 -0700
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <20150721135846.GB13429@savin.petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
Message-ID: <CADm_WcZDLfAwCJn8qc1Myp-OQhgPzx+A7b6nw8u9Z7mgQ6hveg@mail.gmail.com>

On Tue, Jul 21, 2015 at 6:58 AM, Peter Todd via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I don't agree with you at all.
>
> This is a case where if Jeff doesn't understand that issue, he's
> proposing changes that he's not competent enough to understand, and it'd
> save us a lot of review effort if he left that discussion. Equally, Jeff
> is in a position in the dev community where he should be that competent;
> if he actually isn't it does a lot of good for the broader community to
> change that opinion.
>
> I personally *don't* think he's doing that, rather I believe he knows
> full well it's a bad patch and is proposing it because he wants to push
> discussion towards a solution. Often trolling the a audience with bad
> patches is an effective way to motivate people to respond by writing
> better ones; Jeff has told me he often does exactly that.
>
>
mmmm kay.  Let's try to keep it technical, please.

2MB is a limit that has been discussed as a viable next-step, meeting with
the most consensus.

2MB gets beyond the 1MB hard fork issue, while still remaining within a
safety cap that should ensure the system does not go "off the rails" as
some has predicted.

Security, privacy and centralization are not going to disappear at 2MB.

Further, a limited step gains valuable field data for judging whether
further steps are warranted - thus informing the "better block size
solution" development process.

Finally, as stated in the initial PR, it is intended as a viable fallback
should we reach a point of criticality where the user community feels a
block size increase is warranted, yet cannot reach consensus on a fancy,
all-consuming solution be it 20MB, flexcap, BIP 100, BIP 102, etc.

I am open to suggestions for improving BIP 102.  The goal is a minimum
complexity fallback that others have previously agreed was a useful
kick-the-can compromise - a static 2MB cap.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/0b2bf624/attachment.html>

From morcos at gmail.com  Wed Jul 22 18:03:55 2015
From: morcos at gmail.com (Alex Morcos)
Date: Wed, 22 Jul 2015 14:03:55 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
Message-ID: <CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>

Jeff I respectively disagree with many of your points, but let me just
point out 2.

Over the last 6 years there may not have been fee pressure, but certainly
there was the expectation that it was going to happen.  Look at all the
work that has been put into fee estimation, why do that work if the
expectation was there would be no fee pressure?

I know you respect Pieter's work, so I don't want to twist your words, but
for the clarity of other people reading these posts, it sounds like you're
accusing Pieter and others of stonewalling size increases and not
participating in planning for them.  Without debate, no one has done more
for this project to make eventual size increases technically feasible than
Pieter.  We only have the privilege of even having this debate as a result
of his work.



On Wed, Jul 22, 2015 at 1:33 PM, Jeff Garzik via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Wed, Jul 22, 2015 at 9:52 AM, Pieter Wuille via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Some people have called the prospect of limited block space and the
>> development of a fee market a change in policy compared to the past. I
>> respectfully disagree with that. Bitcoin Core is not running the Bitcoin
>> economy, and its developers have no authority to set its rules. Change in
>> economics is always happening, and should be expected. Worse, intervening
>> in consensus changes would make the ecosystem more dependent on the group
>> taking that decision, not less.
>>
>>
> This completely ignores *reality*, what users have experienced for the
> past ~6 years.
>
> "Change in economics is always happening" does not begin to approach the
> scale of the change.
>
> For the entirety of bitcoin's history, absent long blocks and traffic
> bursts, fee pressure has been largely absent.
>
> Moving to a new economic policy where fee pressure is consistently present
> is radically different from what users, markets, and software have
> experienced and *lived.*
>
> Analysis such as [1][2] and more shows that users will hit a "painful"
> "wall" and market disruption will occur - eventually settling to a new
> equilibrium after a period of chaos - when blocks are consistently full.
>
> [1] http://hashingit.com/analysis/34-bitcoin-traffic-bulletin
> [2] http://gavinandresen.ninja/why-increasing-the-max-block-size-is-urgent
>
> First, users & market are forced through this period of chaos by "let a
> fee market develop" as the whole market changes to a radically different
> economic policy, once the network has never seen before.
>
> Next, when blocks are consistently full, the past consensus was that block
> size limit will be increased eventually.  What happens at that point?
>
> Answer - Users & market are forced through a second period of chaos and
> disruption as the fee market is rebooted *again* by changing the block
> size limit.
>
> The average user hears a lot of noise on both sides of the block size
> debate, and really has no idea that the new "let a fee market develop"
> Bitcoin Core policy is going to *raise fees* on them.
>
> It is clear that
> - "let the fee market develop, Right Now" has not been thought through
> - Users are not prepared for a brand new economic policy
> - Users are unaware that a brand new economic policy will be foisted upon
> them
>
>
>
>> So to point out what I consider obvious: if Bitcoin requires central
>> control over its rules by a group of developers, it is completely
>> uninteresting to me. Consensus changes should be done using consensus, and
>> the default in case of controversy is no change.
>>
>
> False.
>
> All that has to do be done to change bitcoin to a new economic policy -
> not seen in the entire 6 year history of bitcoin - is to stonewall work on
> block size.
>
> Closing size increase PRs and failing to participate in planning for a
> block size increase accomplishes your stated goal of changing bitcoin to a
> new economic policy.
>
> "no [code] change"... changes bitcoin to a brand new economic policy,
> picking economic winners & losers.  Some businesses will be priced out of
> bitcoin, etc.
>
> Stonewalling size increase changes is just as much as a Ben Bernanke/FOMC
> move as increasing the hard limit by hard fork.
>
>
>
>> My personal opinion is that we - as a community - should indeed let a fee
>> market develop, and rather sooner than later, and that "kicking the can
>> down the road" is an incredibly dangerous precedent: if we are willing to
>> go through the risk of a hard fork because of a fear of change of
>> economics, then I believe that community is not ready to deal with change
>> at all. And some change is inevitable, at any block size. Again, this does
>> not mean the block size needs to be fixed forever, but its intent should be
>> growing with the evolution of technology, not a panic reaction because a
>> fear of change.
>>
>> But I am not in any position to force this view. I only hope that people
>> don't think a fear of economic change is reason to give up consensus.
>>
>
> Actually you are.
>
> When size increase progress gets frozen out of Bitcoin Core, that just
> *increases* the chances that progress must be made through a contentious
> hard fork.
>
> Further, it increases the market disruption users will experience, as
> described above.
>
> Think about the users.  Please.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/2fd9f799/attachment-0001.html>

From jgarzik at gmail.com  Wed Jul 22 18:24:57 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 22 Jul 2015 11:24:57 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
Message-ID: <CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>

On Wed, Jul 22, 2015 at 11:03 AM, Alex Morcos <morcos at gmail.com> wrote:

> Over the last 6 years there may not have been fee pressure, but certainly
> there was the expectation that it was going to happen.  Look at all the
> work that has been put into fee estimation, why do that work if the
> expectation was there would be no fee pressure?
>

There is a vast difference between what software developers have been
chattering about in the background versus what the users actually
experience in the field.

To the user, talk of a fee market is equivalent to talk about block size -
various opinions are tossed about, but it doesn't really impact them.  Fees
have been low for 6 years.

We see this with the actual data - no fee pressure on average for the
entirety of bitcoin's history.  We see this with the recent stress tests,
which exposed dumb wallet behavior WRT fees.   Users -and software- had the
expectation

Remember, this is not a judgement on whether or not fee market/pressure
should exist.  It is simply a factual observation that users/market have
not experienced this new economic policy.

That opens the question - *why now?*   Why make bitcoin growth more
expensive at this time in its young life?  Many smart people would prefer
that bitcoin continue to grow, rather than making the system more expensive
to use right now.

Choosing "let a fee market develop" -- *today* -- is picking economic
sides, picking winners & losers in the market.

This new policy should be debated and consensus achieved, not simply rolled
out by fiat without user notification.

Otherwise it is engaging in precisely the economic wizardry that this
thread opened with decrying.

Just like block size, there are multiple sides to the fee market debate.
However, Bitcoin Core has (unfortunately) outsized decision making power in
that simply avoiding progress on block size limit will achieve the "let a
fee market develop" economic policy change.  Ironic but true - sitting
around and doing nothing dumps users into a new economic policy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/bc0495dc/attachment.html>

From bryan at blockcypher.com  Wed Jul 22 18:45:01 2015
From: bryan at blockcypher.com (Bryan Cheng)
Date: Wed, 22 Jul 2015 11:45:01 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55AFD390.9060306@bitcoins.info>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<55AFD390.9060306@bitcoins.info>
Message-ID: <CANeMN=-K0vR=ZQCoc03cWOrR3NHR37+Ejw0n-xyT3_OjBFHk6Q@mail.gmail.com>

Pieter, I agree with the overall gist of your statement (that Bitcoin is a
consensus-driven protocol that's incompatible with certain forms of central
governance) but I respectfully disagree with some of the conclusions you're
drawing.

> Consensus changes should be done using consensus, _and the default in
case of controversy is no change_.

(emphasis mine)

I think that there's a disconnect between the idea that Bitcoin Core making
a consensus-driven change in turn means that the network is being forced
down a certain path. This takes away a great deal of the individual agency
that makes Bitcoin what it is today. Upgrading to a version of Bitcoin Core
that is incompatible with your ideals is in no way a forced choice, as you
have stated in your email; forks, alternative clients, or staying on an
older version are all valid choices. If the majority of the network chooses
not to endorse a specific change, then the majority of the network will
continue to operate just fine without it, and properly structured consensus
rules will pull the minority along as well. (For example, re: block sizes,
if the majority of hashing power remains on a version or fork that does not
mine >1MB blocks, a chain of <1MB blocks will continue to be the longest,
and up to date clients will still respect that. That is consensus at work,
pure and simple.)

Obviously Core is in a unique position as a reference client and ignoring
that would be irresponsible. If broad consensus among the developers cannot
be reached, then Core should not make a given change. However, freezing
Core's ability to make changes in light of _any_ controversy is allowing a
few voices to dictate direction and is counter to any kind of
consensus-driven decision making.

Placing Core and its developers on some sort of pedestal where we believe
that they dictate policy and therefore shouldn't be allowed to take any
risks will create the very situation that you're advocating against- that a
small group of developers have control over Bitcoin's policies. Instead, we
should strive to treat Core as _just another Bitcoin Client_, we should
educate users to make informed choices about the version of software they
are running and the choices implicit in that, and we should allow consensus
at the protocol level to make the decisions on the overall direction of the
network.

> My personal opinion is that we - as a community - should indeed let a fee
market develop, and rather sooner than later

I will keep this brief because this is straying off topic of the idea of
this thread- but I don't believe that increasing Bitcoin's capacity as a
network is inherently incompatible with the development of a fee market,
and considering a fee market to be formed of only a single set of variables
(transaction rate versus block size) is not sound economic analysis.

On Wed, Jul 22, 2015 at 10:32 AM, Milly Bitcoin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> default in case of controversy is no change.
>>
>
> I think the result of this would probably be that no controversial changes
> ever get implemented via this process so others will hard fork the code and
> eventually make this process irrelevant.  Since you need close to 100%
> agreement the irrelevance would have to come as a step function which will
> manifest itself in a rather disruptive manner.
>
> The question is really is this hark-forking disruption worse than coming
> up with some kind of process to handle controversial changes.
>
> Russ
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/6f2fbfdd/attachment.html>

From jgarzik at gmail.com  Wed Jul 22 18:01:53 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 22 Jul 2015 11:01:53 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
Message-ID: <CADm_WcbnszcVP=50NDGhw4q2ULRHQF7hX4Hb8P8ptzDcS4oG1A@mail.gmail.com>

Addendum:

Please do not interpret - as many have - my points as advocating against
letting a fee market ever develop(!).

Fees are useful against DoS, increasing cost of attack etc.  Further,
continuing the artificially-low fee policy ad infinitum is unsustainable
and constitutes a moral hazard.

Examine from the user's point of view.  If you want to develop a fee
market, think it through in the context of user expectation/experience -
which translates to how software is written and users behave, the context
of market disruption, and the context of further block size increases.

Transition to a new economic policy should be planned.  It should give
users and markets time to adjust.

It is grossly irresponsible to simply drop users into a new economic policy
with no warning and no preparation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/a2a73eea/attachment.html>

From elombrozo at gmail.com  Wed Jul 22 19:17:44 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 12:17:44 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
Message-ID: <D93173FE-B018-4CD8-A31D-714364ADFE80@gmail.com>


> On Jul 22, 2015, at 10:33 AM, Jeff Garzik via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On Wed, Jul 22, 2015 at 9:52 AM, Pieter Wuille via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> Some people have called the prospect of limited block space and the development of a fee market a change in policy compared to the past. I respectfully disagree with that. Bitcoin Core is not running the Bitcoin economy, and its developers have no authority to set its rules. Change in economics is always happening, and should be expected. Worse, intervening in consensus changes would make the ecosystem more dependent on the group taking that decision, not less.
> 
> 
> 
> This completely ignores reality, what users have experienced for the past ~6 years.
> 
> "Change in economics is always happening" does not begin to approach the scale of the change.
> 
> For the entirety of bitcoin's history, absent long blocks and traffic bursts, fee pressure has been largely absent.

This is only because of the fact that only a negligible portion of miner income comes from fees - the vast majority still continues to be subsidized by block rewards. The original design of the protocol was such that this subsidy would be decreased over time to let fees become the predominant source of income for miners. Until we have fee pressures, there?s no incentive for the industry to find solutions to real problems that need solving. I think you underestimate the ingenuity of people when pressed for real solutions. The main barrier to Bitcoin adoption is NOT this issue?and I believe the priorities are misplaced here. We?ve had over six years to start working on solutions but we keep ?kicking the can down the road? - until when?!?! I believe unless there?s a strong need to find a solution no solutions will really be found.

> 
> Moving to a new economic policy where fee pressure is consistently present is radically different from what users, markets, and software have experienced and lived.
> 
> Analysis such as [1][2] and more shows that users will hit a "painful" "wall" and market disruption will occur - eventually settling to a new equilibrium after a period of chaos - when blocks are consistently full.
> 
> [1] http://hashingit.com/analysis/34-bitcoin-traffic-bulletin <http://hashingit.com/analysis/34-bitcoin-traffic-bulletin>
> [2] http://gavinandresen.ninja/why-increasing-the-max-block-size-is-urgent <http://gavinandresen.ninja/why-increasing-the-max-block-size-is-urgent>
> 
> First, users & market are forced through this period of chaos by "let a fee market develop" as the whole market changes to a radically different economic policy, once the network has never seen before.
> 
> Next, when blocks are consistently full, the past consensus was that block size limit will be increased eventually.  What happens at that point?
> 
> Answer - Users & market are forced through a second period of chaos and disruption as the fee market is rebooted again by changing the block size limit.
> 
> The average user hears a lot of noise on both sides of the block size debate, and really has no idea that the new "let a fee market develop" Bitcoin Core policy is going to raise fees on them.
> 
> It is clear that
> - "let the fee market develop, Right Now" has not been thought through
> - Users are not prepared for a brand new economic policy
> - Users are unaware that a brand new economic policy will be foisted upon them
> 

The current userbase and market is still tiny - we have to think bigger than this. We already go through loads of pain to use the current system?and quite frankly, there are a number of other significant issues that I think are far bigger obstacles to widespread adoption than ?I have to pay a fee?. For example, the current cost of verification is too high to continue to ensure the security of the network (as the July 4th fork clearly illustrated)?and places huge centralization pressures on validation?and simply will not support hundreds of millions of users or billions of users. Increasing block size actually worsens the scaling properties, it does not improve them. We need better scaling solutions - almost certainly this will require avoiding the need for global consensus for the vast majority of transactions (nested consensus or off-chain direct party-to-party contract negotiation, the lightning network, etc. The focus on reducing fee pressure by increasing block size is a distraction from far more fundamental issues, IMHO.

> 
> So to point out what I consider obvious: if Bitcoin requires central control over its rules by a group of developers, it is completely uninteresting to me. Consensus changes should be done using consensus, and the default in case of controversy is no change.
> 
> 
> False.
> 
> All that has to do be done to change bitcoin to a new economic policy - not seen in the entire 6 year history of bitcoin - is to stonewall work on block size.
> 
> Closing size increase PRs and failing to participate in planning for a block size increase accomplishes your stated goal of changing bitcoin to a new economic policy.
> 

Wrong - the economic policy of bitcoin has always been, from the beginning, to subsidize blocks initially and transition to fees. Artificially continuing to rely on block reward subsidies is what is a new economic policy. We?re already six years in, pretty soon another halving is coming - how long are we going to wait to start transitioning? The lower block reward subsidies are, the more pain fee pressures will cause.


> "no [code] change"... changes bitcoin to a brand new economic policy, picking economic winners & losers.  Some businesses will be priced out of bitcoin, etc.
> 
> Stonewalling size increase changes is just as much as a Ben Bernanke/FOMC move as increasing the hard limit by hard fork.
> 
> 
> My personal opinion is that we - as a community - should indeed let a fee market develop, and rather sooner than later, and that "kicking the can down the road" is an incredibly dangerous precedent: if we are willing to go through the risk of a hard fork because of a fear of change of economics, then I believe that community is not ready to deal with change at all. And some change is inevitable, at any block size. Again, this does not mean the block size needs to be fixed forever, but its intent should be growing with the evolution of technology, not a panic reaction because a fear of change.
> 
> But I am not in any position to force this view. I only hope that people don't think a fear of economic change is reason to give up consensus.
> 
> 
> Actually you are.
> 
> When size increase progress gets frozen out of Bitcoin Core, that just increases the chances that progress must be made through a contentious hard fork.
> 
> Further, it increases the market disruption users will experience, as described above.
> 
> Think about the users.  Please.
> 

I think about the billions of people out there in the world that could be using this technology that simply have no access to it right now. The majority or them which are unbanked, etc?

More the reason to go through the steps needed while we?re still small to correct the core issues.

> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/e4c83d05/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/e4c83d05/attachment-0001.sig>

From jeremy.l.rubin.travel at gmail.com  Wed Jul 22 20:15:09 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Thu, 23 Jul 2015 04:15:09 +0800
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
Message-ID: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>

While we're all debating the block size, please review this proposal to
modestly increase the number of transactions per block.

https://gist.github.com/JeremyRubin/4d17d28d5c681a93fa63

Best,

Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/79674044/attachment.html>

From tier.nolan at gmail.com  Wed Jul 22 20:34:27 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Wed, 22 Jul 2015 21:34:27 +0100
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
In-Reply-To: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
References: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
Message-ID: <CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>

Rather than re-enable OP_LEFT, a NOP could be re-purposed in a soft fork.

OP_DUP OP_HASH160 [pubKeyHash[:LEN_PARAM]] [LEN_PARAM] OP_LEFTEQUALVERIFY
OP_DROP OP_CHECKSIG

A B L OP_LEFTEQUALVERIFY checks if the leftmost L bytes of A and B match.
If not, then the script immediately fails.  If either array is less than L
bytes or if there are fewer than 3 values on the stack, then it also fails.

The OP_DROP is needed as the new opcode must count as a NOP for legacy
nodes.

A change like this would only cause a once-off improvement in efficiency,
so it is less likely to be worth the effort.

It also requires most clients to be updated to support the new address
system.

A different BIP could be added for that.

An alternative way to add new opcodes is to use a different script engine
like with P2SH.


On Wed, Jul 22, 2015 at 9:15 PM, Jeremy Rubin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> While we're all debating the block size, please review this proposal to
> modestly increase the number of transactions per block.
>
> https://gist.github.com/JeremyRubin/4d17d28d5c681a93fa63
>
> Best,
>
> Jeremy
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/f9295b82/attachment.html>

From gavinandresen at gmail.com  Wed Jul 22 21:06:02 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 22 Jul 2015 17:06:02 -0400
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
In-Reply-To: <CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>
References: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
	<CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>
Message-ID: <CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>

On Wed, Jul 22, 2015 at 4:34 PM, Tier Nolan via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> It also requires most clients to be updated to support the new address
> system.


That's the killer: introducing Yet Another Type of Bitcoin Address takes a
very long time and requires a lot of people to change their code. At least,
that was the lesson learned when we introduced P2SH addresses.

I think it's just not worth it for a very modest space savings (10 bytes,
when scriptSig+scriptPubKey is about 120 bytes), especially with the
extreme decrease in security (going from 2^160 to 2^80 to brute-force).

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/39f4e2ee/attachment.html>

From hearn at vinumeris.com  Wed Jul 22 21:18:51 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 22 Jul 2015 23:18:51 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <CA+ASnrG_sNRio03pr_F6vSepucG66=R+n_x7xREYqKPXOo9hyw@mail.gmail.com>
References: <55AFBBE6.3060702@electrum.org>
	<CA+ASnrG_sNRio03pr_F6vSepucG66=R+n_x7xREYqKPXOo9hyw@mail.gmail.com>
Message-ID: <CA+w+GKSBN6P7k1iGWONc2D9d+CQL4PWcDZ6EkqW9mkZUDNAVcw@mail.gmail.com>

>
> One solution would be for the client to combine all the addresses they are
> interested in into a single bloom filter and send that to the server.
>

<snip extra ideas>

Hey Joseph,

All those ideas are ones we had years ago and they are implemented in the
current Bitcoin protocol.

The trick, as you may know, is this bit:

The client would also need to be fairly clever
>

It turns out making a sufficiently clever client to fool even advanced
observers is a lot of programming work, assuming you wish for the Ultimate
Solution which lets you allocate a desired quantity of bandwidth and then
use it to maximize privacy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/0c849b21/attachment.html>

From hearn at vinumeris.com  Wed Jul 22 21:43:20 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 22 Jul 2015 23:43:20 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>

Hi Pieter,

I think a core area of disagreement is this:

> Bitcoin Core is not running the Bitcoin economy, and its developers have
> no authority to set its rules.
>
In fact Bitcoin Core is running the Bitcoin economy, and its developers do
have the authority to set its rules. This is enforced by the reality of
~100% market share and limited github commit access.

You may not like this situation, but it is what it is. By refusing to make
a release with different rules, people who disagree are faced with only two
options:

1. Swallow it even if they hate it
2. Fork the project and fork the block chain with it (XT)

There are no alternatives. People who object to (2) are inherently
suggesting (1) is the only acceptable path, which not surprisingly, makes a
lot of people very angry.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/36316a52/attachment.html>

From elombrozo at gmail.com  Wed Jul 22 21:56:50 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 14:56:50 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
Message-ID: <CAA33663-B688-4D53-8BED-85B4E67EFA0A@gmail.com>


> On Jul 22, 2015, at 2:43 PM, Mike Hearn via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Hi Pieter,
> 
> I think a core area of disagreement is this:
> Bitcoin Core is not running the Bitcoin economy, and its developers have no authority to set its rules.
> 
> In fact Bitcoin Core is running the Bitcoin economy, and its developers do have the authority to set its rules. This is enforced by the reality of ~100% market share and limited github commit access.
> 
> You may not like this situation, but it is what it is. By refusing to make a release with different rules, people who disagree are faced with only two options:
> 
> 1. Swallow it even if they hate it
> 2. Fork the project and fork the block chain with it (XT)
> 
> There are no alternatives. People who object to (2) are inherently suggesting (1) is the only acceptable path, which not surprisingly, makes a lot of people very angry.

It would be truly awesome to be able to give people more choice on consensus rules. Unfortunately, cryptoledgers do not fork gracefully (yet). Until we?re able to merge blockchain forks like we?re able to merge git repo forks, the safest option is no fork.

> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/4006ffa5/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/4006ffa5/attachment-0001.sig>

From hearn at vinumeris.com  Wed Jul 22 22:01:32 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Thu, 23 Jul 2015 00:01:32 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAA33663-B688-4D53-8BED-85B4E67EFA0A@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
	<CAA33663-B688-4D53-8BED-85B4E67EFA0A@gmail.com>
Message-ID: <CA+w+GKQ_b0gMFov24nt8ZX89=GDWTpX9J15sj=fuicQBqBVcag@mail.gmail.com>

>
> Until we?re able to merge blockchain forks like we?re able to merge git
> repo forks, the safest option is no fork.
>

Block chain forks merge in the same way as git forks all the time, that's
how the reorg algorithm works. Transactions that didn't make it into the
post-reorg chain go back into the mempool and miners attempt to reinclude
them: this is the "merge" process. If they now conflict with other
transactions they are dropped and this is "resolving merge conflicts".

However you have to want to merge with the new chain. If your software is
programmed not to do that out of some bizarre belief that throttling your
own user base is a good idea, then of course, no merge happens. Once you
stop telling your computer to do that, you can then merge (reorg) back onto
the main chain again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/88e446a6/attachment.html>

From elombrozo at gmail.com  Wed Jul 22 22:09:26 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 15:09:26 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CA+w+GKQ_b0gMFov24nt8ZX89=GDWTpX9J15sj=fuicQBqBVcag@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
	<CAA33663-B688-4D53-8BED-85B4E67EFA0A@gmail.com>
	<CA+w+GKQ_b0gMFov24nt8ZX89=GDWTpX9J15sj=fuicQBqBVcag@mail.gmail.com>
Message-ID: <8CD11148-3669-43AD-A3CB-5060ED0DB37E@gmail.com>


> On Jul 22, 2015, at 3:01 PM, Mike Hearn <hearn at vinumeris.com> wrote:
> 
> Until we?re able to merge blockchain forks like we?re able to merge git repo forks, the safest option is no fork.
> 
> Block chain forks merge in the same way as git forks all the time, that's how the reorg algorithm works. Transactions that didn't make it into the post-reorg chain go back into the mempool and miners attempt to reinclude them: this is the "merge" process. If they now conflict with other transactions they are dropped and this is "resolving merge conflicts".
> 

Blockchain reorgs are part of the consensus rules. We?re talking not about forks caused by network partitions?but forks caused by the use of distinct consensus rules.

> However you have to want to merge with the new chain. If your software is programmed not to do that out of some bizarre belief that throttling your own user base is a good idea, then of course, no merge happens. Once you stop telling your computer to do that, you can then merge (reorg) back onto the main chain again.
> 

You cannot merge two chains that have incompatible transactions in them without throwing away one of the two conflicting transactions (along with all dependencies). In the reorg process, this occurs naturally?and we allow for it by using confirmation count as a metric of irreversibility. Until one chain wins (by overwhelming consensus) or all chains include a particular transaction in question, we cannot treat that transaction as irreversible. Propose a model in which we can still reliably measure irreversibility in the presence of multiple chains and you might have a point.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/fbddb23c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/fbddb23c/attachment.sig>

From eric at voskuil.org  Wed Jul 22 22:20:33 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 22 Jul 2015 15:20:33 -0700
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFC52C.3010700@voskuil.org>
References: <55AFBBE6.3060702@electrum.org> <55AFC52C.3010700@voskuil.org>
Message-ID: <55B01731.6070306@voskuil.org>

I should add that the obvious resolution to this set of problems is to
use a distinct Tor route for each Bitcoin address, not to reinvent Tor
and reproduce its community. So ultimately this is easy to implement,
but the downside is performance.

But it's important to keep in mind that poor-performing perfect privacy
for address monitoring is trivial to achieve - just sync the full
blockchain.

Presumably if you don't trust a server to protect your privacy, you also
don't trust it with your money. So any robust privacy optimization would
at least be designed to support partial (SPV) chain clients. It would
also need to support wallet restoration from backup.

The level of privacy will always be a performance trade-off. The ideal
solution would allow a client to balance privacy against performance.

e

On 07/22/2015 09:30 AM, Eric Voskuil wrote:
> Hi Thomas,
> 
> The scheme is essentially onion routing. The set of {M} are entry nodes
> and the set of {S} are exit nodes. The weaknesses are as you would see
> in an analogous TOR implementation:
> 
> (1) The lack of relay nodes {R} make collaboration between any subset of
> {M} and {S} trivial.
> 
> (2) OR is a mixnet, so the size of the network matters a lot.
> 
> (3) The directory is a perpetual weakness.
> 
> (4) Content is visible to the exit node (or the final service). This
> means each address must be passed via a distinct route to prevent
> correlation.
> 
> e
> 
> On 07/22/2015 08:51 AM, Thomas Voegtlin via bitcoin-dev wrote:
>> Hello,
>>
>> Although Electrum clients connect to several servers in order to fetch
>> block headers, they typically request address balances and address
>> histories from a single server. This means that the chosen server knows
>> that a given set of addresses belong to the same wallet. That is true
>> even if Electrum is used over TOR.
>>
>> There have been various proposals to improve on that, but none of them
>> really convinced me so far. One recurrent proposal has been to create
>> subsets of wallet addresses, and to send them to separate servers. In my
>> opinion, this does not really improve anonymity, because it requires
>> trusting more servers.
>>
>> Here is an idea, inspired by TOR, on which I would like to have some
>> feedback: We create an anonymous routing layer between Electrum servers
>> and clients.
>>
>> * Each server S publishes a RSA public key, KS
>> * Each client receives a list of available servers and their pubkeys
>> * For each wallet address, addr_i, a client chooses a server S_i, and a
>> RSA keypair (K_addr_i, k_addr_i)
>> * The client creates a list of encrypted requests. Each request contains
>> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
>> * The client chooses a main server M, and sends the list of encrypted
>> requests to M
>> * M dispatches the client's requests to the corresponding servers S_i
>> (without the client's IP address.)
>> * Each server decrypts the requests it receives, performs the request,
>> and encrypts the result with K_addr_i
>> * M receives encrypted responses, and forwards them to the client.
>> * The client decrypts the encrypted response with k_addr_i
>>
>> What do you think? What are the costs and benefits of such an approach?
>>
>> (Note: this will not work if all servers, or a large fraction of them,
>> are controlled by the same entity that controls M)
>>
>>
>> Thomas
>> _______________________________________________
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/bba8ae1a/attachment.sig>

From pete at petertodd.org  Wed Jul 22 22:30:25 2015
From: pete at petertodd.org (Peter Todd)
Date: Wed, 22 Jul 2015 22:30:25 +0000
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <CADm_WcZDLfAwCJn8qc1Myp-OQhgPzx+A7b6nw8u9Z7mgQ6hveg@mail.gmail.com>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
	<CADm_WcZDLfAwCJn8qc1Myp-OQhgPzx+A7b6nw8u9Z7mgQ6hveg@mail.gmail.com>
Message-ID: <B4B9D029-06BB-4049-966F-A5F9F34C68F4@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Sorry, but I think you need to re-read my first message. What you've written below has nothing to do with what I actually said re: how you're BIP102 and associated pull-req doesn't measure miner consensus.


On 22 July 2015 13:43:19 GMT-04:00, Jeff Garzik <jgarzik at gmail.com> wrote:
>On Tue, Jul 21, 2015 at 6:58 AM, Peter Todd via bitcoin-dev <
>bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> I don't agree with you at all.
>>
>> This is a case where if Jeff doesn't understand that issue, he's
>> proposing changes that he's not competent enough to understand, and
>it'd
>> save us a lot of review effort if he left that discussion. Equally,
>Jeff
>> is in a position in the dev community where he should be that
>competent;
>> if he actually isn't it does a lot of good for the broader community
>to
>> change that opinion.
>>
>> I personally *don't* think he's doing that, rather I believe he knows
>> full well it's a bad patch and is proposing it because he wants to
>push
>> discussion towards a solution. Often trolling the a audience with bad
>> patches is an effective way to motivate people to respond by writing
>> better ones; Jeff has told me he often does exactly that.
>>
>>
>mmmm kay.  Let's try to keep it technical, please.
>
>2MB is a limit that has been discussed as a viable next-step, meeting
>with
>the most consensus.
>
>2MB gets beyond the 1MB hard fork issue, while still remaining within a
>safety cap that should ensure the system does not go "off the rails" as
>some has predicted.
>
>Security, privacy and centralization are not going to disappear at 2MB.
>
>Further, a limited step gains valuable field data for judging whether
>further steps are warranted - thus informing the "better block size
>solution" development process.
>
>Finally, as stated in the initial PR, it is intended as a viable
>fallback
>should we reach a point of criticality where the user community feels a
>block size increase is warranted, yet cannot reach consensus on a
>fancy,
>all-consuming solution be it 20MB, flexcap, BIP 100, BIP 102, etc.
>
>I am open to suggestions for improving BIP 102.  The goal is a minimum
>complexity fallback that others have previously agreed was a useful
>kick-the-can compromise - a static 2MB cap.
-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsBl2
AAoJEMCF8hzn9Lnc47AIAICM9pA+Jc6rkJ14U0vYqzhwTHmxuaNTXodmI1z88OKM
zCCJQHNw/Xhy339/ZGFeUuVS/Csw275dtzZutLoZamnGnQLh9LllxYFzN8eGJkCL
Ecfo0JcyhduwUihgDfzgE++z5/Q0z5sIo+pZBNipqXW1+N0P/GAvYlHqeb9r0uXG
ccJghZUTwqzm6aySfvXVveTmp0AtjVko1jP1sTxF2pI/RIqBdMY4wEsZvmEhX7Tk
g2iRiPWiEIYR1qETm6e5aQ/tj8W73932s15ozIM35nD5QId5qotQHTVttLAruQvl
2Z35F79TIYDvYtnnRNWIsOyiwreH/y5c0kSUIgrjASA=
=+jTv
-----END PGP SIGNATURE-----


From jgarzik at gmail.com  Wed Jul 22 22:30:59 2015
From: jgarzik at gmail.com (Jeff Garzik)
Date: Wed, 22 Jul 2015 15:30:59 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
Message-ID: <CADm_WcZkhWs23t4sJZ0AQm1wU+eOiKbWFo5decU018NJH9TNQw@mail.gmail.com>

I wouldn't go quite that far.  The reality is somewhere in the middle, as
Bryan Cheng noted in this thread:

Quoting BC,
> Upgrading to a version of Bitcoin Core that is incompatible with your
ideals is in no way a forced choice, as you have stated in your email;
forks, alternative clients, or staying on an older version are all valid
choices. If the majority of the network chooses not to endorse a specific
change, then the majority of the network will continue to operate just fine
without it, and properly structured consensus rules will pull the minority
along as well.

The developers *propose* a new version, by publishing a new release.  The
individual network nodes choose to accept or reject that.

So I respectfully disagree with "core devs don't control the network" and
"core devs control the network" both.

There are checks-and-balances that make the system work.  Consensus is most
strongly measured by user actions after software release.  If the
developers fail to reflect user consensus, the network will let us know.











On Wed, Jul 22, 2015 at 2:43 PM, Mike Hearn via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hi Pieter,
>
> I think a core area of disagreement is this:
>
>> Bitcoin Core is not running the Bitcoin economy, and its developers have
>> no authority to set its rules.
>>
> In fact Bitcoin Core is running the Bitcoin economy, and its developers do
> have the authority to set its rules. This is enforced by the reality of
> ~100% market share and limited github commit access.
>
> You may not like this situation, but it is what it is. By refusing to make
> a release with different rules, people who disagree are faced with only two
> options:
>
> 1. Swallow it even if they hate it
> 2. Fork the project and fork the block chain with it (XT)
>
> There are no alternatives. People who object to (2) are inherently
> suggesting (1) is the only acceptable path, which not surprisingly, makes a
> lot of people very angry.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/f4c37787/attachment-0001.html>

From raystonn at hotmail.com  Wed Jul 22 22:40:24 2015
From: raystonn at hotmail.com (Raystonn)
Date: Wed, 22 Jul 2015 15:40:24 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
Message-ID: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/282f6685/attachment.html>

From fireduck at gmail.com  Wed Jul 22 23:07:12 2015
From: fireduck at gmail.com (=?UTF-8?B?Sm9zZXBoIEdsZWFzb24g4pGI?=)
Date: Wed, 22 Jul 2015 23:07:12 +0000
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55B01731.6070306@voskuil.org>
References: <55AFBBE6.3060702@electrum.org> <55AFC52C.3010700@voskuil.org>
	<55B01731.6070306@voskuil.org>
Message-ID: <CA+ASnrFxPtxE2vsDS4dz2FxddAtW5fQK=gkBbrPVp878zeV_Hw@mail.gmail.com>

I would recommend the following solution as a decent compromise between
complexity and privacy:

1) Encourage electrum server operators to have their servers reachable as
tor hidden services (.onion addresses)
2) Make sure server discovery works well with .onion addresses
3) Make the privacy a user configurable setting:
  - None - Allows any server connection type
  - SSL - Requires SSL at least, no plain text
  - Tor - Requires tor, no direct TCP
  - Multi-Tor - Uses a variety of tor paths to reach a variety of servers
(maybe configurable number of servers)

Default should be 'SSL' probably.








On Wed, Jul 22, 2015 at 3:20 PM Eric Voskuil via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I should add that the obvious resolution to this set of problems is to
> use a distinct Tor route for each Bitcoin address, not to reinvent Tor
> and reproduce its community. So ultimately this is easy to implement,
> but the downside is performance.
>
> But it's important to keep in mind that poor-performing perfect privacy
> for address monitoring is trivial to achieve - just sync the full
> blockchain.
>
> Presumably if you don't trust a server to protect your privacy, you also
> don't trust it with your money. So any robust privacy optimization would
> at least be designed to support partial (SPV) chain clients. It would
> also need to support wallet restoration from backup.
>
> The level of privacy will always be a performance trade-off. The ideal
> solution would allow a client to balance privacy against performance.
>
> e
>
> On 07/22/2015 09:30 AM, Eric Voskuil wrote:
> > Hi Thomas,
> >
> > The scheme is essentially onion routing. The set of {M} are entry nodes
> > and the set of {S} are exit nodes. The weaknesses are as you would see
> > in an analogous TOR implementation:
> >
> > (1) The lack of relay nodes {R} make collaboration between any subset of
> > {M} and {S} trivial.
> >
> > (2) OR is a mixnet, so the size of the network matters a lot.
> >
> > (3) The directory is a perpetual weakness.
> >
> > (4) Content is visible to the exit node (or the final service). This
> > means each address must be passed via a distinct route to prevent
> > correlation.
> >
> > e
> >
> > On 07/22/2015 08:51 AM, Thomas Voegtlin via bitcoin-dev wrote:
> >> Hello,
> >>
> >> Although Electrum clients connect to several servers in order to fetch
> >> block headers, they typically request address balances and address
> >> histories from a single server. This means that the chosen server knows
> >> that a given set of addresses belong to the same wallet. That is true
> >> even if Electrum is used over TOR.
> >>
> >> There have been various proposals to improve on that, but none of them
> >> really convinced me so far. One recurrent proposal has been to create
> >> subsets of wallet addresses, and to send them to separate servers. In my
> >> opinion, this does not really improve anonymity, because it requires
> >> trusting more servers.
> >>
> >> Here is an idea, inspired by TOR, on which I would like to have some
> >> feedback: We create an anonymous routing layer between Electrum servers
> >> and clients.
> >>
> >> * Each server S publishes a RSA public key, KS
> >> * Each client receives a list of available servers and their pubkeys
> >> * For each wallet address, addr_i, a client chooses a server S_i, and a
> >> RSA keypair (K_addr_i, k_addr_i)
> >> * The client creates a list of encrypted requests. Each request contains
> >> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> >> * The client chooses a main server M, and sends the list of encrypted
> >> requests to M
> >> * M dispatches the client's requests to the corresponding servers S_i
> >> (without the client's IP address.)
> >> * Each server decrypts the requests it receives, performs the request,
> >> and encrypts the result with K_addr_i
> >> * M receives encrypted responses, and forwards them to the client.
> >> * The client decrypts the encrypted response with k_addr_i
> >>
> >> What do you think? What are the costs and benefits of such an approach?
> >>
> >> (Note: this will not work if all servers, or a large fraction of them,
> >> are controlled by the same entity that controls M)
> >>
> >>
> >> Thomas
> >> _______________________________________________
> >
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/da02ff32/attachment.html>

From kiwigb at yahoo.com  Wed Jul 22 23:11:46 2015
From: kiwigb at yahoo.com (gb)
Date: Thu, 23 Jul 2015 11:11:46 +1200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFBBE6.3060702@electrum.org>
References: <55AFBBE6.3060702@electrum.org>
Message-ID: <1437606706.2688.0.camel@yahoo.com>

Why RSA?

> 
> Here is an idea, inspired by TOR, on which I would like to have some
> feedback: We create an anonymous routing layer between Electrum servers
> and clients.
> 
> * Each server S publishes a RSA public key, KS
> * Each client receives a list of available servers and their pubkeys
> * For each wallet address, addr_i, a client chooses a server S_i, and a
> RSA keypair (K_addr_i, k_addr_i)
> * The client creates a list of encrypted requests. Each request contains
> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> * The client chooses a main server M, and sends the list of encrypted
> requests to M
> * M dispatches the client's requests to the corresponding servers S_i
> (without the client's IP address.)
> * Each server decrypts the requests it receives, performs the request,
> and encrypts the result with K_addr_i
> * M receives encrypted responses, and forwards them to the client.
> * The client decrypts the encrypted response with k_addr_i
> 



From lists at coryfields.com  Wed Jul 22 23:42:10 2015
From: lists at coryfields.com (Cory Fields)
Date: Wed, 22 Jul 2015 19:42:10 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
Message-ID: <CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>

I'm not sure why Bitcoin Core and the rules and policies that it
enforces are being conflated in this thread. There's nothing stopping
us from adding the ability for the user to decide what their consensus
parameters should be at runtime. In fact, that's already in use:
./bitcoind -testnet. As mentioned in another thread, the chain params
could even come from a config file that the user could edit without
touching the code.

I realize that it'd be opening Pandora's Box, and likely met with very
loud and reasonable arguments about the obvious terrible implications,
but it's at least an alternative to the current status quo of Core's
conflation with the consensus rules. The idea really is no different
than suggesting that someone fork the codebase and implement their own
changes, it just cuts out most of the work required.

With that in place, consensus changes would be more about lobbying and
coalitions, and less about pull requests.

Cory

On Wed, Jul 22, 2015 at 6:40 PM, Raystonn via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>> If the developers fail to reflect user consensus, the network will let us
>> know.
>
> This is true with the caveat that there must be more than one option present
> for the network to show it's preference.  If developers discourage anything
> that forks from the rules enforced by Bitcoin Core, they harm the network's
> ability to inform us of a failure to reflect user consensus.
>
> On 22 Jul 2015 3:31 pm, Jeff Garzik via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I wouldn't go quite that far.  The reality is somewhere in the middle, as
> Bryan Cheng noted in this thread:
>
> Quoting BC,
>> Upgrading to a version of Bitcoin Core that is incompatible with your
>> ideals is in no way a forced choice, as you have stated in your email;
>> forks, alternative clients, or staying on an older version are all valid
>> choices. If the majority of the network chooses not to endorse a specific
>> change, then the majority of the network will continue to operate just fine
>> without it, and properly structured consensus rules will pull the minority
>> along as well.
>
> The developers propose a new version, by publishing a new release.  The
> individual network nodes choose to accept or reject that.
>
> So I respectfully disagree with "core devs don't control the network" and
> "core devs control the network" both.
>
> There are checks-and-balances that make the system work.  Consensus is most
> strongly measured by user actions after software release.  If the developers
> fail to reflect user consensus, the network will let us know.
>
>
>
>
>
>
>
>
>
>
>
> On Wed, Jul 22, 2015 at 2:43 PM, Mike Hearn via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hi Pieter,
>
> I think a core area of disagreement is this:
>
> Bitcoin Core is not running the Bitcoin economy, and its developers have no
> authority to set its rules.
>
> In fact Bitcoin Core is running the Bitcoin economy, and its developers do
> have the authority to set its rules. This is enforced by the reality of
> ~100% market share and limited github commit access.
>
> You may not like this situation, but it is what it is. By refusing to make a
> release with different rules, people who disagree are faced with only two
> options:
>
> 1. Swallow it even if they hate it
> 2. Fork the project and fork the block chain with it (XT)
>
> There are no alternatives. People who object to (2) are inherently
> suggesting (1) is the only acceptable path, which not surprisingly, makes a
> lot of people very angry.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From elombrozo at gmail.com  Wed Jul 22 23:53:39 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 16:53:39 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
Message-ID: <068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>

FWIW, I had worked on something similar a while back: https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf <https://github.com/CodeShark/bitcoin/blob/coinparams_new/altconf/bitcoin.conf>

I like the idea in principle?but we should require a new genesis block, different magic bytes, and a different network port at the very least. :)

> On Jul 22, 2015, at 4:42 PM, Cory Fields via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> I'm not sure why Bitcoin Core and the rules and policies that it
> enforces are being conflated in this thread. There's nothing stopping
> us from adding the ability for the user to decide what their consensus
> parameters should be at runtime. In fact, that's already in use:
> ./bitcoind -testnet. As mentioned in another thread, the chain params
> could even come from a config file that the user could edit without
> touching the code.
> 
> I realize that it'd be opening Pandora's Box, and likely met with very
> loud and reasonable arguments about the obvious terrible implications,
> but it's at least an alternative to the current status quo of Core's
> conflation with the consensus rules. The idea really is no different
> than suggesting that someone fork the codebase and implement their own
> changes, it just cuts out most of the work required.
> 
> With that in place, consensus changes would be more about lobbying and
> coalitions, and less about pull requests.
> 
> Cory
> 
> On Wed, Jul 22, 2015 at 6:40 PM, Raystonn via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> If the developers fail to reflect user consensus, the network will let us
>>> know.
>> 
>> This is true with the caveat that there must be more than one option present
>> for the network to show it's preference.  If developers discourage anything
>> that forks from the rules enforced by Bitcoin Core, they harm the network's
>> ability to inform us of a failure to reflect user consensus.
>> 
>> On 22 Jul 2015 3:31 pm, Jeff Garzik via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> I wouldn't go quite that far.  The reality is somewhere in the middle, as
>> Bryan Cheng noted in this thread:
>> 
>> Quoting BC,
>>> Upgrading to a version of Bitcoin Core that is incompatible with your
>>> ideals is in no way a forced choice, as you have stated in your email;
>>> forks, alternative clients, or staying on an older version are all valid
>>> choices. If the majority of the network chooses not to endorse a specific
>>> change, then the majority of the network will continue to operate just fine
>>> without it, and properly structured consensus rules will pull the minority
>>> along as well.
>> 
>> The developers propose a new version, by publishing a new release.  The
>> individual network nodes choose to accept or reject that.
>> 
>> So I respectfully disagree with "core devs don't control the network" and
>> "core devs control the network" both.
>> 
>> There are checks-and-balances that make the system work.  Consensus is most
>> strongly measured by user actions after software release.  If the developers
>> fail to reflect user consensus, the network will let us know.
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> On Wed, Jul 22, 2015 at 2:43 PM, Mike Hearn via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> Hi Pieter,
>> 
>> I think a core area of disagreement is this:
>> 
>> Bitcoin Core is not running the Bitcoin economy, and its developers have no
>> authority to set its rules.
>> 
>> In fact Bitcoin Core is running the Bitcoin economy, and its developers do
>> have the authority to set its rules. This is enforced by the reality of
>> ~100% market share and limited github commit access.
>> 
>> You may not like this situation, but it is what it is. By refusing to make a
>> release with different rules, people who disagree are faced with only two
>> options:
>> 
>> 1. Swallow it even if they hate it
>> 2. Fork the project and fork the block chain with it (XT)
>> 
>> There are no alternatives. People who object to (2) are inherently
>> suggesting (1) is the only acceptable path, which not surprisingly, makes a
>> lot of people very angry.
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> 
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/81ebd82e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/81ebd82e/attachment.sig>

From lists at coryfields.com  Thu Jul 23 00:05:53 2015
From: lists at coryfields.com (Cory Fields)
Date: Wed, 22 Jul 2015 20:05:53 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
Message-ID: <CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>

On Wed, Jul 22, 2015 at 7:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> FWIW, I had worked on something similar a while back:
> https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf
>
> I like the idea in principle?but we should require a new genesis block,
> different magic bytes, and a different network port at the very least. :)
>

Not sure if serious, so I'll assume you are :)

Why? The idea in this case would be to allow the user to decide
between (say) "./bitcoind -1mbchain" and "./bitcoind -2mbchain" at
runtime rather than the likely alternative of "./bitcoind" vs
"./bitcoin-fork".

Chain params may be identical other than the value of some future
event (miner vote for example), in which case the configs would run
identically until that point.

If your concern is about nodes with different configs communicating
with eachother, I'd like to reiterate: the idea really is no different
than suggesting that someone fork the codebase and implement their own
changes, it just cuts out most of the work required.

Cory

> On Jul 22, 2015, at 4:42 PM, Cory Fields via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I'm not sure why Bitcoin Core and the rules and policies that it
> enforces are being conflated in this thread. There's nothing stopping
> us from adding the ability for the user to decide what their consensus
> parameters should be at runtime. In fact, that's already in use:
> ./bitcoind -testnet. As mentioned in another thread, the chain params
> could even come from a config file that the user could edit without
> touching the code.
>
> I realize that it'd be opening Pandora's Box, and likely met with very
> loud and reasonable arguments about the obvious terrible implications,
> but it's at least an alternative to the current status quo of Core's
> conflation with the consensus rules. The idea really is no different
> than suggesting that someone fork the codebase and implement their own
> changes, it just cuts out most of the work required.
>
> With that in place, consensus changes would be more about lobbying and
> coalitions, and less about pull requests.
>
> Cory
>
> On Wed, Jul 22, 2015 at 6:40 PM, Raystonn via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> If the developers fail to reflect user consensus, the network will let us
> know.
>
>
> This is true with the caveat that there must be more than one option present
> for the network to show it's preference.  If developers discourage anything
> that forks from the rules enforced by Bitcoin Core, they harm the network's
> ability to inform us of a failure to reflect user consensus.
>
> On 22 Jul 2015 3:31 pm, Jeff Garzik via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I wouldn't go quite that far.  The reality is somewhere in the middle, as
> Bryan Cheng noted in this thread:
>
> Quoting BC,
>
> Upgrading to a version of Bitcoin Core that is incompatible with your
> ideals is in no way a forced choice, as you have stated in your email;
> forks, alternative clients, or staying on an older version are all valid
> choices. If the majority of the network chooses not to endorse a specific
> change, then the majority of the network will continue to operate just fine
> without it, and properly structured consensus rules will pull the minority
> along as well.
>
>
> The developers propose a new version, by publishing a new release.  The
> individual network nodes choose to accept or reject that.
>
> So I respectfully disagree with "core devs don't control the network" and
> "core devs control the network" both.
>
> There are checks-and-balances that make the system work.  Consensus is most
> strongly measured by user actions after software release.  If the developers
> fail to reflect user consensus, the network will let us know.
>
>
>
>
>
>
>
>
>
>
>
> On Wed, Jul 22, 2015 at 2:43 PM, Mike Hearn via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Hi Pieter,
>
> I think a core area of disagreement is this:
>
> Bitcoin Core is not running the Bitcoin economy, and its developers have no
> authority to set its rules.
>
> In fact Bitcoin Core is running the Bitcoin economy, and its developers do
> have the authority to set its rules. This is enforced by the reality of
> ~100% market share and limited github commit access.
>
> You may not like this situation, but it is what it is. By refusing to make a
> release with different rules, people who disagree are faced with only two
> options:
>
> 1. Swallow it even if they hate it
> 2. Fork the project and fork the block chain with it (XT)
>
> There are no alternatives. People who object to (2) are inherently
> suggesting (1) is the only acceptable path, which not surprisingly, makes a
> lot of people very angry.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>

From eric at voskuil.org  Thu Jul 23 00:07:14 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 22 Jul 2015 17:07:14 -0700
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <1437606706.2688.0.camel@yahoo.com>
References: <55AFBBE6.3060702@electrum.org> <1437606706.2688.0.camel@yahoo.com>
Message-ID: <55B03032.5020306@voskuil.org>

This is a good point. I didn't delve into the specifics of
implementation due to the larger issues that I raised. Libbitcoin Server
uses CurveZMQ, an implementation of CurveCP.

http://curvecp.org
http://curvezmq.org
https://en.bitcoin.it/wiki/Libbitcoin_Server

e

On 07/22/2015 04:11 PM, gb via bitcoin-dev wrote:
> Why RSA?
> 
>>
>> Here is an idea, inspired by TOR, on which I would like to have some
>> feedback: We create an anonymous routing layer between Electrum servers
>> and clients.
>>
>> * Each server S publishes a RSA public key, KS
>> * Each client receives a list of available servers and their pubkeys
>> * For each wallet address, addr_i, a client chooses a server S_i, and a
>> RSA keypair (K_addr_i, k_addr_i)
>> * The client creates a list of encrypted requests. Each request contains
>> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
>> * The client chooses a main server M, and sends the list of encrypted
>> requests to M
>> * M dispatches the client's requests to the corresponding servers S_i
>> (without the client's IP address.)
>> * Each server decrypts the requests it receives, performs the request,
>> and encrypts the result with K_addr_i
>> * M receives encrypted responses, and forwards them to the client.
>> * The client decrypts the encrypted response with k_addr_i

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/d1fdfd0f/attachment-0001.sig>

From elombrozo at gmail.com  Thu Jul 23 00:13:42 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 17:13:42 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
	<CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
Message-ID: <B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>


> On Jul 22, 2015, at 5:05 PM, Cory Fields <lists at coryfields.com> wrote:
> 
> On Wed, Jul 22, 2015 at 7:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> FWIW, I had worked on something similar a while back:
>> https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf
>> 
>> I like the idea in principle?but we should require a new genesis block,
>> different magic bytes, and a different network port at the very least. :)
>> 
> 
> Not sure if serious, so I'll assume you are :)

Only being partly serious - I strongly am in favor of a sufficiently modularized codebase that swapping out consensus rules is fairly straightforward and easy to test. I?m not in favor of encouraging forking an existing blockchain without having mechanisms in place to gracefully merge back without significant network disruptions. We do not have this yet.

> Why? The idea in this case would be to allow the user to decide
> between (say) "./bitcoind -1mbchain" and "./bitcoind -2mbchain" at
> runtime rather than the likely alternative of "./bitcoind" vs
> "./bitcoin-fork?.

That?s exactly what my coinparams_new branch does. Adding a parameter for maximum block size would be straightforward.

> Chain params may be identical other than the value of some future
> event (miner vote for example), in which case the configs would run
> identically until that point.

Yes, indeed - this would be a special case.

> If your concern is about nodes with different configs communicating
> with eachother, I'd like to reiterate: the idea really is no different
> than suggesting that someone fork the codebase and implement their own
> changes, it just cuts out most of the work required.

I do not encourage anyone to try to fork an existing blockchain without first securing overwhelming (near unanimous) consensus?or without having yet built a mechanism that can merge divergent chains gracefully.

> Cory
> 
>> On Jul 22, 2015, at 4:42 PM, Cory Fields via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> I'm not sure why Bitcoin Core and the rules and policies that it
>> enforces are being conflated in this thread. There's nothing stopping
>> us from adding the ability for the user to decide what their consensus
>> parameters should be at runtime. In fact, that's already in use:
>> ./bitcoind -testnet. As mentioned in another thread, the chain params
>> could even come from a config file that the user could edit without
>> touching the code.
>> 
>> I realize that it'd be opening Pandora's Box, and likely met with very
>> loud and reasonable arguments about the obvious terrible implications,
>> but it's at least an alternative to the current status quo of Core's
>> conflation with the consensus rules. The idea really is no different
>> than suggesting that someone fork the codebase and implement their own
>> changes, it just cuts out most of the work required.
>> 
>> With that in place, consensus changes would be more about lobbying and
>> coalitions, and less about pull requests.
>> 
>> Cory
>> 
>> On Wed, Jul 22, 2015 at 6:40 PM, Raystonn via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> If the developers fail to reflect user consensus, the network will let us
>> know.
>> 
>> 
>> This is true with the caveat that there must be more than one option present
>> for the network to show it's preference.  If developers discourage anything
>> that forks from the rules enforced by Bitcoin Core, they harm the network's
>> ability to inform us of a failure to reflect user consensus.
>> 
>> On 22 Jul 2015 3:31 pm, Jeff Garzik via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> I wouldn't go quite that far.  The reality is somewhere in the middle, as
>> Bryan Cheng noted in this thread:
>> 
>> Quoting BC,
>> 
>> Upgrading to a version of Bitcoin Core that is incompatible with your
>> ideals is in no way a forced choice, as you have stated in your email;
>> forks, alternative clients, or staying on an older version are all valid
>> choices. If the majority of the network chooses not to endorse a specific
>> change, then the majority of the network will continue to operate just fine
>> without it, and properly structured consensus rules will pull the minority
>> along as well.
>> 
>> 
>> The developers propose a new version, by publishing a new release.  The
>> individual network nodes choose to accept or reject that.
>> 
>> So I respectfully disagree with "core devs don't control the network" and
>> "core devs control the network" both.
>> 
>> There are checks-and-balances that make the system work.  Consensus is most
>> strongly measured by user actions after software release.  If the developers
>> fail to reflect user consensus, the network will let us know.
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> On Wed, Jul 22, 2015 at 2:43 PM, Mike Hearn via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> Hi Pieter,
>> 
>> I think a core area of disagreement is this:
>> 
>> Bitcoin Core is not running the Bitcoin economy, and its developers have no
>> authority to set its rules.
>> 
>> In fact Bitcoin Core is running the Bitcoin economy, and its developers do
>> have the authority to set its rules. This is enforced by the reality of
>> ~100% market share and limited github commit access.
>> 
>> You may not like this situation, but it is what it is. By refusing to make a
>> release with different rules, people who disagree are faced with only two
>> options:
>> 
>> 1. Swallow it even if they hate it
>> 2. Fork the project and fork the block chain with it (XT)
>> 
>> There are no alternatives. People who object to (2) are inherently
>> suggesting (1) is the only acceptable path, which not surprisingly, makes a
>> lot of people very angry.
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> 
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/aedc9049/attachment.sig>

From tomh at thinlink.com  Thu Jul 23 00:27:09 2015
From: tomh at thinlink.com (Tom Harding)
Date: Wed, 22 Jul 2015 17:27:09 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <55B034DD.2020802@thinlink.com>

On 7/22/2015 9:52 AM, Pieter Wuille via bitcoin-dev wrote:
> It would be irresponsible and dangerous to the network and thus the 
> users of the software to risk forks, or to take a leading role in 
> pushing dramatic changes.

Count me among those who see allowing bitcoin to become 
space-constrained, without technical reason, as a dramatic change. 
Especially when the reasons cited in support are

  - Various species of vaporware
  - Amateurish economic thinking surrounding fees
  - "We don't support it because not everyone supports it because we 
don't support it because ..." infinite descent



From lists at coryfields.com  Thu Jul 23 00:34:23 2015
From: lists at coryfields.com (Cory Fields)
Date: Wed, 22 Jul 2015 20:34:23 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
	<CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
	<B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
Message-ID: <CAApLimhFNeQ-1kpTT0YtOz2X0th563quOq1cFGhmL6VJcxFv8Q@mail.gmail.com>

On Wed, Jul 22, 2015 at 8:13 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>
>> On Jul 22, 2015, at 5:05 PM, Cory Fields <lists at coryfields.com> wrote:
>>
>> On Wed, Jul 22, 2015 at 7:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> FWIW, I had worked on something similar a while back:
>>> https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf
>>>
>>> I like the idea in principle?but we should require a new genesis block,
>>> different magic bytes, and a different network port at the very least. :)
>>>
>>
>> Not sure if serious, so I'll assume you are :)
>
> Only being partly serious - I strongly am in favor of a sufficiently modularized codebase that swapping out consensus rules is fairly straightforward and easy to test. I?m not in favor of encouraging forking an existing blockchain without having mechanisms in place to gracefully merge back without significant network disruptions. We do not have this yet.
>

Again, why? If someone wants to create a scamcoin, they can. If
someone wants to burn money on a scamcoin, equally, they can. I'm not
sure how this is any different. If someone manages to garner realistic
support for a hard-fork, I don't see the benefit in forcing them to
use forked software.. that only leaves Core in the middle because it's
forced to choose a side (not choosing is unfortunately a side as
well). It doesn't remove the reality of the split.

>> Why? The idea in this case would be to allow the user to decide
>> between (say) "./bitcoind -1mbchain" and "./bitcoind -2mbchain" at
>> runtime rather than the likely alternative of "./bitcoind" vs
>> "./bitcoin-fork?.
>
> That?s exactly what my coinparams_new branch does. Adding a parameter for maximum block size would be straightforward.
>
>> Chain params may be identical other than the value of some future
>> event (miner vote for example), in which case the configs would run
>> identically until that point.
>
> Yes, indeed - this would be a special case.
>
>> If your concern is about nodes with different configs communicating
>> with eachother, I'd like to reiterate: the idea really is no different
>> than suggesting that someone fork the codebase and implement their own
>> changes, it just cuts out most of the work required.
>
> I do not encourage anyone to try to fork an existing blockchain without first securing overwhelming (near unanimous) consensus?or without having yet built a mechanism that can merge divergent chains gracefully.

Well of course. It would be a terrible idea. People would try it and
fail, and lose money. But for those crying foul at Core for being the
consensus/policy gatekeeper, it seems to me that user-selectable
params is the only logical solution.

From elombrozo at gmail.com  Thu Jul 23 00:37:11 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 17:37:11 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B034DD.2020802@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<55B034DD.2020802@thinlink.com>
Message-ID: <E29734DE-6480-4BF4-B757-7BB50F87E21D@gmail.com>


> On Jul 22, 2015, at 5:27 PM, Tom Harding via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On 7/22/2015 9:52 AM, Pieter Wuille via bitcoin-dev wrote:
>> It would be irresponsible and dangerous to the network and thus the users of the software to risk forks, or to take a leading role in pushing dramatic changes.
> 
> Count me among those who see allowing bitcoin to become space-constrained, without technical reason, as a dramatic change. Especially when the reasons cited in support are
> 
> - Various species of vaporware
> - Amateurish economic thinking surrounding fees
> - "We don't support it because not everyone supports it because we don't support it because ..." infinite descent
> 

I take it you mean allowing bitcoin to *not* become space-constrained - because all real-world computers are space-constrained?


> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/6e8520af/attachment.sig>

From elombrozo at gmail.com  Thu Jul 23 00:43:02 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 17:43:02 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAApLimhFNeQ-1kpTT0YtOz2X0th563quOq1cFGhmL6VJcxFv8Q@mail.gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
	<CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
	<B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
	<CAApLimhFNeQ-1kpTT0YtOz2X0th563quOq1cFGhmL6VJcxFv8Q@mail.gmail.com>
Message-ID: <D02A0586-83CA-4BD6-B607-73570C695081@gmail.com>


> On Jul 22, 2015, at 5:34 PM, Cory Fields <lists at coryfields.com> wrote:
> 
> On Wed, Jul 22, 2015 at 8:13 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> 
>>> On Jul 22, 2015, at 5:05 PM, Cory Fields <lists at coryfields.com> wrote:
>>> 
>>> On Wed, Jul 22, 2015 at 7:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>>> FWIW, I had worked on something similar a while back:
>>>> https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf
>>>> 
>>>> I like the idea in principle?but we should require a new genesis block,
>>>> different magic bytes, and a different network port at the very least. :)
>>>> 
>>> 
>>> Not sure if serious, so I'll assume you are :)
>> 
>> Only being partly serious - I strongly am in favor of a sufficiently modularized codebase that swapping out consensus rules is fairly straightforward and easy to test. I?m not in favor of encouraging forking an existing blockchain without having mechanisms in place to gracefully merge back without significant network disruptions. We do not have this yet.
>> 
> 
> Again, why? If someone wants to create a scamcoin, they can. If
> someone wants to burn money on a scamcoin, equally, they can. I'm not
> sure how this is any different. If someone manages to garner realistic
> support for a hard-fork, I don't see the benefit in forcing them to
> use forked software.. that only leaves Core in the middle because it's
> forced to choose a side (not choosing is unfortunately a side as
> well). It doesn't remove the reality of the split.

In general, new consensus rules are not trivial to implement. Block size limits are exceptional in being so simple to change in the code. So what you?re proposing sounds more like a plugin model supporting dynamic linking than a configuration file.

>>> Why? The idea in this case would be to allow the user to decide
>>> between (say) "./bitcoind -1mbchain" and "./bitcoind -2mbchain" at
>>> runtime rather than the likely alternative of "./bitcoind" vs
>>> "./bitcoin-fork?.
>> 
>> That?s exactly what my coinparams_new branch does. Adding a parameter for maximum block size would be straightforward.
>> 
>>> Chain params may be identical other than the value of some future
>>> event (miner vote for example), in which case the configs would run
>>> identically until that point.
>> 
>> Yes, indeed - this would be a special case.
>> 
>>> If your concern is about nodes with different configs communicating
>>> with eachother, I'd like to reiterate: the idea really is no different
>>> than suggesting that someone fork the codebase and implement their own
>>> changes, it just cuts out most of the work required.
>> 
>> I do not encourage anyone to try to fork an existing blockchain without first securing overwhelming (near unanimous) consensus?or without having yet built a mechanism that can merge divergent chains gracefully.
> 
> Well of course. It would be a terrible idea. People would try it and
> fail, and lose money. But for those crying foul at Core for being the
> consensus/policy gatekeeper, it seems to me that user-selectable
> params is the only logical solution.

The real problem isn?t so much the difficulty of creating forks of the codebase - but the fact that unless a fork has overwhelming support, blockchains cannot guarantee irreversibility of transactions?which defeats their entire purpose.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/a2ffbaef/attachment-0001.sig>

From eric at voskuil.org  Thu Jul 23 00:49:54 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 22 Jul 2015 17:49:54 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>	<CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
	<B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
Message-ID: <55B03A32.6050108@voskuil.org>

On 07/22/2015 05:13 PM, Eric Lombrozo via bitcoin-dev wrote:
> Only being partly serious - I strongly am in favor of a sufficiently
modularized codebase that swapping out consensus rules is fairly
straightforward and easy to test...

We (libbitcoin) have taken the time to publish and maintain bitcoind's
"libbitcoinconsensus" source files as an independent C++ library (with
Java and Python bindings).

https://en.bitcoin.it/wiki/Libbitcoin_Consensus

It can be easily verified against bitcoind sources and in builds of
libbitcoin-blockchain it can be swapped out for libbitcoin's native
consensus checks.

https://en.bitcoin.it/wiki/Libbitcoin_Blockchain#Consensus_Validation

So there is really no reason to consider the original client synonymous
with consensus. I initially argued for this library to be natively
isolated from bitcoind, but that didn't seem to be in the cards so we
did it independently.

In any case I agree with your stated need for this isolation (if not the
means) for the reasons you state. The community needs to move beyond a
largely singular and monolithic codebase that is holding that position
in part due to fear about consensus bug forks.

To make choice regarding consensus an actual choice (and thereby actual
consensus) the modularity you suggest is essential. One must be able to
take new developments without having to take consensus changes. The
option to fork the codebase is not reasonable for most people. At this
point there is no defensible reason for coupling consensus checks with
other features.

e


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/3bf1af8a/attachment.sig>

From elombrozo at gmail.com  Thu Jul 23 01:53:36 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 22 Jul 2015 18:53:36 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CA+w+GKQ_b0gMFov24nt8ZX89=GDWTpX9J15sj=fuicQBqBVcag@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CA+w+GKTfBNsQm0X27+QeMmLvJXuX0H=8+ij_GU6mkGnWn-poZA@mail.gmail.com>
	<CAA33663-B688-4D53-8BED-85B4E67EFA0A@gmail.com>
	<CA+w+GKQ_b0gMFov24nt8ZX89=GDWTpX9J15sj=fuicQBqBVcag@mail.gmail.com>
Message-ID: <2795DFE0-C544-432D-BE01-6DEF7DC4FAB1@gmail.com>

> On Jul 22, 2015, at 3:01 PM, Mike Hearn <hearn at vinumeris.com> wrote:
> 
> Until we?re able to merge blockchain forks like we?re able to merge git repo forks, the safest option is no fork.
> 
> Block chain forks merge in the same way as git forks all the time, that's how the reorg algorithm works. Transactions that didn't make it into the post-reorg chain go back into the mempool and miners attempt to reinclude them: this is the "merge" process. If they now conflict with other transactions they are dropped and this is "resolving merge conflicts".
> 
> However you have to want to merge with the new chain. If your software is programmed not to do that out of some bizarre belief that throttling your own user base is a good idea, then of course, no merge happens. Once you stop telling your computer to do that, you can then merge (reorg) back onto the main chain again.
> 

Mike, you might be surprized to learn that there are other hard fork proposals out there besides increasing block size.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/f856c464/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150722/f856c464/attachment.sig>

From jeremy.l.rubin.travel at gmail.com  Thu Jul 23 04:05:22 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Thu, 23 Jul 2015 12:05:22 +0800
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
In-Reply-To: <CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>
References: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
	<CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>
	<CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>
Message-ID: <CAJ+8mEP5dCmRbm7-FY5v+mO+jwB-=LnTVDo=5+AML4oAUgTwuw@mail.gmail.com>

I think the catch here is that under STUA (short term use address) there is
a strict incentive, you can reduce the transaction fee for these txns. This
also fits with the general model that you pay the miners for security. My
belief is that when there is a savings benefit to be had large players will
prefer it at a minimum, and users will desire it.


Your analysis of saving is inaccurate, it comes to be at or greater than 20
bytes because there is typically 2 UTXOs or more. I get that this is still
marginal, but when the margins are tight this is a pretty decent gain.


The security decrease is actually less extreme than it seems. This is for
multiple reasons:
1) you can select LEN_PARAM when you make the tx to be secure at that time
Adding a byte or two gets much more security while still keeping it lean.
2) For a small transaction, the hash power is less rewarding than just
working on the blockchain or doing something else
3) These addresses are only for use for short term, not perm storage. As
such, if you model the threat it isn't great (I'm using this address for
one day, someone grinds it in that time).
4) Because it is a UTXO saving, it reduces memory bloat.t

It would be interesting to get a more exact analysis on the time needed to
run a brute force as it involves computing a valid keypair and hashing for
each attempt.



On Thu, Jul 23, 2015 at 5:06 AM, Gavin Andresen via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Wed, Jul 22, 2015 at 4:34 PM, Tier Nolan via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> It also requires most clients to be updated to support the new address
>> system.
>
>
> That's the killer: introducing Yet Another Type of Bitcoin Address takes a
> very long time and requires a lot of people to change their code. At least,
> that was the lesson learned when we introduced P2SH addresses.
>
> I think it's just not worth it for a very modest space savings (10 bytes,
> when scriptSig+scriptPubKey is about 120 bytes), especially with the
> extreme decrease in security (going from 2^160 to 2^80 to brute-force).
>
> --
> --
> Gavin Andresen
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/e0168550/attachment.html>

From ed at realitykeys.com  Thu Jul 23 04:40:29 2015
From: ed at realitykeys.com (Edmund Edgar)
Date: Thu, 23 Jul 2015 13:40:29 +0900
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <CA+su7OWvUQWOMGxfWfyyGnJ1=hZeYC6nSXnE_hof-ooFMB4vVg@mail.gmail.com>

> So to point out what I consider obvious: if Bitcoin requires central
> control over its rules by a group of developers, it is completely
> uninteresting to me. Consensus changes should be done using consensus, and
> the default in case of controversy is no change.

This is a really interesting thread. Since we're no longer talking
about a consensus of the core committers, which would be central
control, but instead something broader, could you say a bit more about
what this consensus might look like, and how we'll know if we've got
one?

In plain language "no controversy" sounds like very high bar for a
diverse community like this; Even bringing in P2SH kicked up a fair
bit of fur and feathers. Do you have a definition in mind where it
isn't an _impossibly_ high one?

-- 
Edmund Edgar
Founder, Social Minds Inc (KK)
Twitter: @edmundedgar
Linked In: edmundedgar
Skype: edmundedgar
http://www.socialminds.jp

Reality Keys
@realitykeys
support at realitykeys.com
https://www.realitykeys.com

From jl2012 at xbt.hk  Thu Jul 23 04:55:46 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Thu, 23 Jul 2015 04:55:46 +0000
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
In-Reply-To: <CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>
References: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
	<CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>
	<CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>
Message-ID: <20150723045546.Horde.KiM4VIQqwnFJ3lwdFrO-2w3@server47.web-hosting.com>


Quoting Gavin Andresen via bitcoin-dev  
<bitcoin-dev at lists.linuxfoundation.org>:

> On Wed, Jul 22, 2015 at 4:34 PM, Tier Nolan via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> It also requires most clients to be updated to support the new address
>> system.
>
>
> That's the killer: introducing Yet Another Type of Bitcoin Address takes a
> very long time and requires a lot of people to change their code. At least,
> that was the lesson learned when we introduced P2SH addresses.
>
> I think it's just not worth it for a very modest space savings (10 bytes,
> when scriptSig+scriptPubKey is about 120 bytes), especially with the
> extreme decrease in security (going from 2^160 to 2^80 to brute-force).
>
> --
> --
> Gavin Andresen

I think it would only save ~5% with all overhead (value, sequence,  
locktime, version, etc.) counted

A better way is to introduce shorter ECDSA keys, which will save a lot  
of space for public key and signature. It is safe as long as the  
output value is much lower than the cost of attack.

If this happens, I think it will be part of the OP_MAST which will  
require a new address type anyway.


From jl2012 at xbt.hk  Thu Jul 23 05:39:20 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Thu, 23 Jul 2015 05:39:20 +0000
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <B4B9D029-06BB-4049-966F-A5F9F34C68F4@petertodd.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<20150721130412.GA4551@savin.petertodd.org>
	<20150721135846.GB13429@savin.petertodd.org>
	<CADm_WcZDLfAwCJn8qc1Myp-OQhgPzx+A7b6nw8u9Z7mgQ6hveg@mail.gmail.com>
	<B4B9D029-06BB-4049-966F-A5F9F34C68F4@petertodd.org>
Message-ID: <20150723053920.Horde.NFnYiomFYphgmxoOpN4phA3@server47.web-hosting.com>


Quoting Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
> Sorry, but I think you need to re-read my first message. What you've  
> written below has nothing to do with what I actually said re: how  
> you're BIP102 and associated pull-req doesn't measure miner consensus.
>
>

I think I have already answered this with my previous mail. If there  
is consensus among major exchanges and merchants, the preference of  
miners are not particularly relevant. A checkpoint could be  
implemented in a decentralized way to make sure miners of the original  
chain won't be able to overtake the new chain.

Bitcoin has no intrinsic value. Bitcoin has value because people are  
willing to exchange it with something really valuable (e.g. a pizza;  
or USD which could buy a pizza). If most bitcoin-accepting business  
agree to follow BIP102 and ONLY BIP102, then BIP102 is THE Bitcoin,  
and the original chain is just a dSHA256 alt-coin which one can't even  
merge mine with BIP102. Switching to BIP102 is the only economically  
viable choice for miners.

Having said that, a miner voting may still be useful. It is just to  
make sure enough miners are ready for the change, instead of measuring  
their consensus. For example, the new rule will be implemented 1) 1  
week after 70% of miners are ready; or 2) on 1 Feb 2016, whichever  
happens first.

For SPV wallets, they have to strengthen their security model after  
the BIP66 fork, anyway. They should be able to identify potential  
consensus fork in the network and stop accepting incoming txs when it  
is in doubt. My "version 0 flag block" proposal could be a good  
generic way to indicate a hardfork to SPV wallets. (see my previous  
email on this topic)


From jeremy.l.rubin.travel at gmail.com  Thu Jul 23 06:05:12 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Thu, 23 Jul 2015 14:05:12 +0800
Subject: [bitcoin-dev] BIP: Short Term Use Addresses for Scalability
In-Reply-To: <20150723045546.Horde.KiM4VIQqwnFJ3lwdFrO-2w3@server47.web-hosting.com>
References: <CAJ+8mEOPRQ-euqL62nB8_7xTaZbjCmFwKHXUrD9y=bNr56m-rg@mail.gmail.com>
	<CAE-z3OWgdDiFNgKd8D_pPyV6ZdPdUjdFwL7eMQzjAL_xfn+ZUg@mail.gmail.com>
	<CABsx9T21i_onZcj=zcY=rvbxQtVUh=cW-TYxYNqwxcFxA5hKvQ@mail.gmail.com>
	<20150723045546.Horde.KiM4VIQqwnFJ3lwdFrO-2w3@server47.web-hosting.com>
Message-ID: <CAJ+8mENg0WshSjuF_vWquScHJ1nqZKOTHyqwMTKiMC1JOEkLFA@mail.gmail.com>

A standard transaction is 225 bytes, leading to a savings of 8.6%.

However, that is essentially the minimum saving. For other sizes (eg, 10
outputs) which seem to be pretty frequent savings can be greater.

Furthermore, it is important to note that this is a memory saving for the
UTXO pool so the reduction there is more (not super familiar with how the
UTXO pool is stored, but it should be a better savings than 8.6%).


Does anyone have the tools currently to be able to easily run through the
chain and analyze the impact of this change on historical data more
directly?

On Thu, Jul 23, 2015 at 12:55 PM, jl2012 via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> Quoting Gavin Andresen via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>:
>
>  On Wed, Jul 22, 2015 at 4:34 PM, Tier Nolan via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>>  It also requires most clients to be updated to support the new address
>>> system.
>>>
>>
>>
>> That's the killer: introducing Yet Another Type of Bitcoin Address takes a
>> very long time and requires a lot of people to change their code. At
>> least,
>> that was the lesson learned when we introduced P2SH addresses.
>>
>> I think it's just not worth it for a very modest space savings (10 bytes,
>> when scriptSig+scriptPubKey is about 120 bytes), especially with the
>> extreme decrease in security (going from 2^160 to 2^80 to brute-force).
>>
>> --
>> --
>> Gavin Andresen
>>
>
> I think it would only save ~5% with all overhead (value, sequence,
> locktime, version, etc.) counted
>
> A better way is to introduce shorter ECDSA keys, which will save a lot of
> space for public key and signature. It is safe as long as the output value
> is much lower than the cost of attack.
>
> If this happens, I think it will be part of the OP_MAST which will require
> a new address type anyway.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/56642c15/attachment.html>

From jrn at jrn.me.uk  Thu Jul 23 07:24:48 2015
From: jrn at jrn.me.uk (Ross Nicoll)
Date: Thu, 23 Jul 2015 08:24:48 +0100
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <D02A0586-83CA-4BD6-B607-73570C695081@gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
	<068B7F93-A1DF-4F8D-84FC-B787C5429D6A@gmail.com>
	<CAApLimjiF6zH8GAbTajMTW6p8GtXCGRa5GcV+N2z1soY5fQy+A@mail.gmail.com>
	<B340ACFF-600F-45A9-BFE9-B831A4C6DD8E@gmail.com>
	<CAApLimhFNeQ-1kpTT0YtOz2X0th563quOq1cFGhmL6VJcxFv8Q@mail.gmail.com>
	<D02A0586-83CA-4BD6-B607-73570C695081@gmail.com>
Message-ID: <55B096C0.8000207@jrn.me.uk>

The code so far is fairly limited in scope, essentially making it 
possible to change the values in consensus/params.h based on block 
height. The actual code to interpret those values does need to be 
provided ahead of time, of course, so there's still developer time to 
implement, it just moves consensus arguments to the users.

Loading the values from disk rather than hard-coding them is a 
reasonably straight forward extension to the code, in theory. The 
existing work has application-specific changes that would need stripping 
out, but you can get an idea of what this would look like from 
https://github.com/rnicoll/dogecoin/commit/949b1ccd88ff13c74a3c1a7b9faa7f36c1085904

Ross

On 23/07/2015 01:43, Eric Lombrozo via bitcoin-dev wrote:
>> On Jul 22, 2015, at 5:34 PM, Cory Fields <lists at coryfields.com> wrote:
>>
>> On Wed, Jul 22, 2015 at 8:13 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>>> On Jul 22, 2015, at 5:05 PM, Cory Fields <lists at coryfields.com> wrote:
>>>>
>>>> On Wed, Jul 22, 2015 at 7:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>>>> FWIW, I had worked on something similar a while back:
>>>>> https://github.com/CodeShark/bitcoin/tree/coinparams_new/altconf
>>>>>
>>>>> I like the idea in principle?but we should require a new genesis block,
>>>>> different magic bytes, and a different network port at the very least. :)
>>>>>
>>>> Not sure if serious, so I'll assume you are :)
>>> Only being partly serious - I strongly am in favor of a sufficiently modularized codebase that swapping out consensus rules is fairly straightforward and easy to test. I?m not in favor of encouraging forking an existing blockchain without having mechanisms in place to gracefully merge back without significant network disruptions. We do not have this yet.
>>>
>> Again, why? If someone wants to create a scamcoin, they can. If
>> someone wants to burn money on a scamcoin, equally, they can. I'm not
>> sure how this is any different. If someone manages to garner realistic
>> support for a hard-fork, I don't see the benefit in forcing them to
>> use forked software.. that only leaves Core in the middle because it's
>> forced to choose a side (not choosing is unfortunately a side as
>> well). It doesn't remove the reality of the split.
> In general, new consensus rules are not trivial to implement. Block size limits are exceptional in being so simple to change in the code. So what you?re proposing sounds more like a plugin model supporting dynamic linking than a configuration file.
>
>>>> Why? The idea in this case would be to allow the user to decide
>>>> between (say) "./bitcoind -1mbchain" and "./bitcoind -2mbchain" at
>>>> runtime rather than the likely alternative of "./bitcoind" vs
>>>> "./bitcoin-fork?.
>>> That?s exactly what my coinparams_new branch does. Adding a parameter for maximum block size would be straightforward.
>>>
>>>> Chain params may be identical other than the value of some future
>>>> event (miner vote for example), in which case the configs would run
>>>> identically until that point.
>>> Yes, indeed - this would be a special case.
>>>
>>>> If your concern is about nodes with different configs communicating
>>>> with eachother, I'd like to reiterate: the idea really is no different
>>>> than suggesting that someone fork the codebase and implement their own
>>>> changes, it just cuts out most of the work required.
>>> I do not encourage anyone to try to fork an existing blockchain without first securing overwhelming (near unanimous) consensus?or without having yet built a mechanism that can merge divergent chains gracefully.
>> Well of course. It would be a terrible idea. People would try it and
>> fail, and lose money. But for those crying foul at Core for being the
>> consensus/policy gatekeeper, it seems to me that user-selectable
>> params is the only logical solution.
> The real problem isn?t so much the difficulty of creating forks of the codebase - but the fact that unless a fork has overwhelming support, blockchains cannot guarantee irreversibility of transactions?which defeats their entire purpose.
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/e1376731/attachment.html>

From gacrux at gmail.com  Thu Jul 23 08:24:27 2015
From: gacrux at gmail.com (Gareth Williams)
Date: Thu, 23 Jul 2015 18:24:27 +1000
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <BA7ACCE1-81B2-4AC1-B6DD-7A856FD27D52@gmail.com>
References: <BA7ACCE1-81B2-4AC1-B6DD-7A856FD27D52@gmail.com>
Message-ID: <23CE614B-0E24-4D0F-B081-ABE21C822C4C@gmail.com>




-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

I've seen a lot of talk on this list debating the role of Bitcoin Core and its maintainers WRT consensus, typically focused around whether they can technically force anyone to run their code (of course, they can't.)

I've yet to see the discussion framed in terms of influence and leadership. Which is why I want to highlight:

>I believe it is the responsibility of the maintainers/developers of
>Bitcoin
>Core to create software which helps guarantee the security and
>operation of
>the Bitcoin network

Perhaps s/helps guarantee/promotes/ , but this stands out as an excellent description of Bitcoin Core's relationship to the Bitcoin network.

Defaults are powerful. Users technically /can/ compile and run any code they like, but very few even bother to change configurable settings. They just want a trusted brand ("Bitcoin Core") that does the right thing out of the box. Bitcoin Core and its maintainers play a valuable /leadership/ role for the network. Whether they can force people to run their code is uninteresting -- people trust them.

That trust is well earned, precisely because they have always promoted the operation and security of the network.

In light of this responsibility it seems unreasonable for anyone to expect Core maintainers to promote patches that endanger network consensus (e.g. user configurable consensus parameters.)

Consensus is order of business #1. If we can't all agree to use the same money then the grand experiment is resolved as a failure. Everyone has consensus parameters they'd (strongly) prefer. Somebody needs to heard us all toward using the same ones, sometimes even in the face of very high costs.

- -Gareth

-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFABAEBCgAqBQJVsKPgIxxHYXJldGggV2lsbGlhbXMgPGdhY3J1eEBnbWFpbC5j
b20+AAoJEEY5w2E3jkVEZuEIAIKC9jTO33y4YC/cl1mO/+ux9YUqBlFUpuElKjNe
NLUIqPANrMV3nTjUm666Hk3tVHk8IpYLUU1pRuYBAT17d1t/2bFC4CpfpWssF9Nw
YhoYOKKVMvLUR4DRlkyhMD4YxorJ/TGiuEaFD4K/1s5uKf1+7Vj/BTi+SP+AIAIW
gTbn2CA3T4n8WjDYADE0dqcYSqzt2M1fjXB+Ld95JGLun8m+6lDPhFy/o5aGhBk6
5j86SITT9UtyyA6oaV5NNNgumcNBievnVwjTxjaWm8CBJlJ5jNpW65PQGkoSnCgz
TpYt/wZHcdSqBeNHyno9XaEBSm99Ylk3i2Z1dGQwrSsZU0Q=
=0pac
-----END PGP SIGNATURE-----


From thomasv at electrum.org  Thu Jul 23 09:48:08 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Thu, 23 Jul 2015 11:48:08 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
	<CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
Message-ID: <55B0B858.8000106@electrum.org>



Le 17/07/2015 03:01, Justin Newton via bitcoin-dev a ?crit :
>> 3> We use a 2 tier lookup format. [...]
>>
>> We do the same thing, except in a single call. [...]
> 
> We looked at doing this in a single lookup as you did.  With one or two
> currencies this can be potentially more efficient.  As the number of
> supported currencies and addresses under a single name grows, however, this
> solution becomes potentially more problematic. [...]

Hi Justin,

Your lookup solution is indeed more efficient than OpenAlias, and more
robust to DoS. However, that is not because you use a two-tier lookup.

Indeed, instead of having the following records:
_wallet.sample = "btc ltc"
_btc._wallet.sample = "mybitcoinadress"

you could simply have:
_wallet.sample = "btc ltc"
_btc.sample = "mybitcoinaddress"

In practice, a wallet supporting only Bitcoin will skip the currencies
lookup in both cases, and go directly for the _btc record.

One benefit of having an intermediate "_wallet" level is to allow zone
delegation. Is that the reason for that choice?

Thomas

From kalle at rosenbaum.se  Thu Jul 23 10:21:55 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Thu, 23 Jul 2015 12:21:55 +0200
Subject: [bitcoin-dev] Process for BIP number allocation
Message-ID: <CAPswA9yU8MkbS_7CkJBmRTTxBdZ+2fx7FetGaqeHMZGG0G=1eA@mail.gmail.com>

Hi all

I suggest that we add to the "BIP Editor Responsibilities & Workflow"
section of BIP0001 that if the BIP editor for some reason won't handle
the BIP within a week, he/she should notify the author within that
same week with an estimate on when it will be handled.

Maybe we could extend it to two weeks instead, the important thing is
that the author knows what to expect.

I'm trying to get BIP numbers allocated for Proof of Payment. I have
requested it from the BIP editor Gregory Maxwell with CC this list. I
also emailed Gregory in private about it. So far I have not seen any
reaction to my requests.

There are a number of BIP proposals floating arount right now, I don't
know the exact status of them all, but this is roughly how it looks
for some of them:

Date of request, bip#, Author, Title
july 4, -, Gregory Maxwell, Invalid Block Fork Postmortem
june 29, -, Peter Todd, Full Replace-by-Fee Deployment Schedule
june 22, 101, Gavin Andresen, Increase Maximum Block Size
june 17, 68, Mark Friedenbach, Consensus-enforced transaction
replacement signalled via sequence numbers
june 6, -,Kalle Rosenbaum, Proof of Payment
june 6, -,Kalle Rosenbaum, Proof of Payment URI scheme
june 6, 69?, Kristov Atlas, Lexicographical Indexing of Transaction
Inputs and Outputs

I think that the de facto process for BIP allocation and inclusion in
the bips repository is unclear. When a number is requested, the author
should at least get a reply from the bip editor that the request is
seen by him/her. Also, if the editor disapproves on the BIP for some
reason, the author must be notified somehow within reasonable and
predictable time.

Regards,
Kalle

From jtimon at jtimon.cc  Thu Jul 23 11:10:45 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 13:10:45 +0200
Subject: [bitcoin-dev] [Bitcoin-development] [BIP draft] Motivation and
 deployment of consensus rules changes ([soft/hard]forks)
In-Reply-To: <CAE-z3OVgQFaFAWUJhDLzyMAE2AXoGHTy0NbUADDAZW9-veX8XA@mail.gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
	<CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>
	<CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>
	<CAE-z3OVgQFaFAWUJhDLzyMAE2AXoGHTy0NbUADDAZW9-veX8XA@mail.gmail.com>
Message-ID: <CABm2gDrrqubbZ7MjDppu-eFxJGcydVoSAK2SC=-s-0txYX6GRQ@mail.gmail.com>

Discussions about whether to get miner's confirmation on
uncontroversial hardforks or not, and about whether to use nHeight,
nMedianTime or just use nTime are spreading all around. Hopefully
getting a BIP number (even though this is still a draft) will help
concentrating discussions about deployment of uncontroversial
hardforks to a single place.
Greg, can I get a BIP number for this?

On Sun, Jun 21, 2015 at 12:54 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
> On Sun, Jun 21, 2015 at 11:31 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>>
>> You mean the timewarp fix can be coded as a softfork instead of a
>> hardfork? How so?
>
>
> The easiest would be a rule requiring that all blocks are within 1 day of
> the median of the previous 11 blocks.  At the moment, you need to be greater
> than that value.  This would add a condition at the other end.
>
> It wouldn't be a total fix, but it would protect against the exploit.
>
> A stricter soft fork would be that the two blocks in question have to have
> the same timestamp.  This would force the off by 1 and the correct value to
> give the same result.
>
>> If that's the case, do you have a better candidate?
>
>
> I think it is fine, since fixing it "right" does require a hard fork,
> especially if it is only to show a non controversial hard fork.
>
> ------------------------------------------------------------------------------
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>

From jtimon at jtimon.cc  Thu Jul 23 11:24:52 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 13:24:52 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <55AEC21A.3090302@jrn.me.uk>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<55A9421B.6040605@jrn.me.uk> <55AC29DB.4060800@jrn.me.uk>
	<CABm2gDr6qXzvcpX_To39kCEsnQNTQS4M5Y40Yk_Lw481rjvSag@mail.gmail.com>
	<55AEC21A.3090302@jrn.me.uk>
Message-ID: <CABm2gDoBEWHBSguAEu6_rCs0UvvcRVWPV1g1qpDXrch=byYhFg@mail.gmail.com>

Peter Todd, as discussed on IRC, I'm not opposed to median time, which
has many of the properties nheight has, I'm just opposed to just using
nTime which is what all "hardfork proposals" I've seen so far
(including this one) do.

On Wed, Jul 22, 2015 at 12:05 AM, Ross Nicoll <jrn at jrn.me.uk> wrote:
> On 21/07/2015 10:26, Jorge Tim?n wrote:
>>
>> I still disagree. Using height instead of time may make the
>> implementation more complex by requiring some additional preparations
>> but using height is in fact a simpler design. Why relay on clocks that
>> we know will differ in different computers and places when we have a
>> universal tick with every block?
>
> Not so much that the implementation is difficult, as it requires context to
> validate a block size, rather than being able to validate it without
> requiring the preceeding blocks. Yes, time on different machines may vary,
> but block time is safe to use for this, because it's a straight-forward test
> of "if block time is acceptable and block time is after <date> then maximum
> block size allowed is n MB otherwise m MB".

No, the height is in the current block after bip34, no context required.
In any case, you already have the nHeight in most functions that would
require it (for example, main::ConnectBlock).
The median time actually needs a context (the last 10 headers), but
it's not hard to calculate and pass around either.
But simply using nTime is not a good idea. Leaving aside time zones,
einstein and all that it introduces edge cases and weird incentives
for no good reason.
If the goal is to make it "human-schedule-friendly", median time
should be good enough.
If we're going to make miners 95% confirm after the date/height, I
still prefer the height, but as said median time seems a reasonable
compromise.

Can we move the "height/medianTime/nTime" and "is it good to confirm
that the change is uncontroversial to miners by requiring 95% to
activate the consensus change, like we do with uncontroversial
softforks?" discussions to the thread with my bip draft (
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
) on precisely this subject?
I have requested a bip number.
Let's please have an uncontroversial hardfork to set a precedent.
Hopefully that way we may decouple some parts of the blocksize
discussion.

From jtimon at jtimon.cc  Thu Jul 23 12:17:14 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 14:17:14 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
Message-ID: <CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>

On Wed, Jul 22, 2015 at 8:24 PM, Jeff Garzik via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> To the user, talk of a fee market is equivalent to talk about block size -
> various opinions are tossed about, but it doesn't really impact them.  Fees
> have been low for 6 years.
>
> We see this with the actual data - no fee pressure on average for the
> entirety of bitcoin's history.  We see this with the recent stress tests,
> which exposed dumb wallet behavior WRT fees.   Users -and software- had the
> expectation

That's because demand for space (transactions) was always lower than
the supply (block space) and no market price (fees) arose.
Now the market (not the supply) has changed: demand has increased.
With a fixed supply, it was perfectly reasonable to expect that fees
would rise (from zero).
If the user expectation is that a price would never arise because
supply is going to be increased ad infinitum and they will always be
able to send fast in-chain bitcoin transactions for free, just like
breath air (an abundant resource) for free, then we should change that
expectation as soon as possible.

> Remember, this is not a judgement on whether or not fee market/pressure
> should exist.  It is simply a factual observation that users/market have not
> experienced this new economic policy.

It is not a new economic policy, it is a new market situation. Please,
stop saying that.

> That opens the question - why now?   Why make bitcoin growth more expensive
> at this time in its young life?  Many smart people would prefer that bitcoin
> continue to grow, rather than making the system more expensive to use right
> now.

If "not now", then when?
I've been asking that question repeatedly and the closest to an answer
that I got from the "not now side" was "the hashrate being paid by
fees instead of subsidy it's too far away in the future to worry about
it now".
That answer is not very satisfying to me.

> Choosing "let a fee market develop" -- today -- is picking economic sides,
> picking winners & losers in the market.

Yes, business plans that rely on free in-chain transactions may fail,
business plans that are planning for a future with fees and without
subsidies may get the advantage they deserve. But "kicking the can" is
just picking winners and losers in opposite way.
You seem to imply that rewarding inertia and laziness is the best
option for short-term bitcoin adoption and you may be right.
I simply think these arguments shouldn't be considered at all: the
criteria for the consensus block size should be purely based on
technological capacity (propagation benchmarking, etc) and
centralization concerns (those in the "not now side" have already seen
this 2-year-old video[1], right?).
But it seems to me that the "not now side" has no centralization
concerns at all and their true position is "not ever hit the blocksize
limit", that's the only explanation I can find to their lack of
answers to the "when do you think we should allow users to notice that
there's a limit in the blocksize to guarantee that the system can be
decentralized?". I've even read that the consensus limit "was just a
temporary measure". Then Gavin lowers his 32 GB limit to an 8 GB
"compromise".
Maybe I'm being paranoid, but I'm really afraid that when the  "not
now side" wins this battle (like they've won for 6 years, as you say)
they will simply advance the front and start another battle, because
their true hidden faction is the "not ever side".
Please, Jeff, Gavin, Mike, show me that I'm wrong on this point.
Please, answer my question this time.
If "not now", then when?

[1] https://www.youtube.com/watch?v=cZp7UGgBR0I

From richter at cs.rwth-aachen.de  Thu Jul 23 12:23:35 2015
From: richter at cs.rwth-aachen.de (Stefan Richter)
Date: Thu, 23 Jul 2015 12:23:35 +0000
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>
References: <55AFBBE6.3060702@electrum.org> <1437606706.2688.0.camel@yahoo.com>
	<114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>
Message-ID: <CAH+=Z+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>

This looks like a prime application for this PIR library:
http://percy.sourceforge.net/apidocs/index.html

Eric Voskuil via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
schrieb am Do., 23. Juli 2015 um 02:07 Uhr:

> This is a good point. I didn't delve into the specifics of
> implementation due to the larger issues that I raised. Libbitcoin Server
> uses CurveZMQ, an implementation of CurveCP.
>
> http://curvecp.org
> http://curvezmq.org
> https://en.bitcoin.it/wiki/Libbitcoin_Server
>
> e
>
> On 07/22/2015 04:11 PM, gb via bitcoin-dev wrote:
> > Why RSA?
> >
> >>
> >> Here is an idea, inspired by TOR, on which I would like to have some
> >> feedback: We create an anonymous routing layer between Electrum servers
> >> and clients.
> >>
> >> * Each server S publishes a RSA public key, KS
> >> * Each client receives a list of available servers and their pubkeys
> >> * For each wallet address, addr_i, a client chooses a server S_i, and a
> >> RSA keypair (K_addr_i, k_addr_i)
> >> * The client creates a list of encrypted requests. Each request contains
> >> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> >> * The client chooses a main server M, and sends the list of encrypted
> >> requests to M
> >> * M dispatches the client's requests to the corresponding servers S_i
> >> (without the client's IP address.)
> >> * Each server decrypts the requests it receives, performs the request,
> >> and encrypts the result with K_addr_i
> >> * M receives encrypted responses, and forwards them to the client.
> >> * The client decrypts the encrypted response with k_addr_i
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/63b8773b/attachment.html>

From thomasv at electrum.org  Thu Jul 23 13:07:37 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Thu, 23 Jul 2015 15:07:37 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55B0B858.8000106@electrum.org>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>	<CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
	<55B0B858.8000106@electrum.org>
Message-ID: <55B0E719.4030004@electrum.org>

Le 23/07/2015 11:48, Thomas Voegtlin via bitcoin-dev a ?crit :
> 
> One benefit of having an intermediate "_wallet" level is to allow zone
> delegation. Is that the reason for that choice?
> 

Thinking about it, I think that it would be better to separate those two
operations: on one hand, the listing of TXT records under a name, and on
the other hand, the possibility to use Zone Delegation.

For example, let us use the "_oa2" name (Openalias version 2) when we
need to introduce an intermediate level, and "_oa2_keys" for key listing.

Here is an example:

_oa2_keys.sample      3600 IN TXT "btc ltc email fullname"
_btc.sample           3600 IN TXT "bitcoinaddress"
_ltc.sample           3600 IN TXT "litecoinaddress"
_btc.sample           3600 IN TXT "otherbitcoinaddress"
_email.sample         3600 IN TXT "john.smith at googlemail.com"
_fullname.sample      3600 IN TXT "John Smith"

Zone Delegation: Let us assume example.com wants to delegate all its
Bitcoin aliases to Netki. We introduce an intermediate level, with the
"_oa2" name. In the alias, this string is translated as "@"

john._oa2.example.com        <--  will be looked up as john at example.com
_btc.john._oa2.example.com   <--  bitcoin address of john at example.com


From slurms at gmx.us  Thu Jul 23 14:19:59 2015
From: slurms at gmx.us (slurms at gmx.us)
Date: Thu, 23 Jul 2015 16:19:59 +0200
Subject: [bitcoin-dev] Bitcoin Node Speed Test
Message-ID: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>

On this day, the Bitcoin network was crawled and reachable nodes surveyed to find their maximum throughput in order to determine if it can safely support a faster block rate. Specifically this is an attempt to prove or disprove the common statement that 1MB blocks were only suitable slower internet connections in 2009 when Bitcoin launched, and that connection speeds have improved to the point of obviously supporting larger blocks.


The testing methodology is as follows:

?* Nodes were randomly selected from a peers.dat, 5% of the reachable nodes in the network were contacted.

?* A random selection of blocks was downloaded from each peer.

?* There is some bias towards higher connection speeds, very slow connections (<30KB/s) timed out in order to run the test at a reasonable rate.

?* The connecting node was in Amsterdam with a 1GB NIC. 

?
Results:

 * 37% of connected nodes failed to upload blocks faster than 1MB/s.

 * 16% of connected nodes uploaded blocks faster than 10MB/s.

 * Raw data, one line per connected node, kilobytes per second http://pastebin.com/raw.php?i=6b4NuiVQ


This does not support the theory that the network has the available bandwidth for increased block sizes, as in its current state 37% of nodes would fail to upload a 20MB block to a single peer in under 20 seconds (referencing a number quoted by Gavin). If the bar for suitability is placed at taking only 1% of the block time (6 seconds) to upload one block to one peer, then 69% of the network fails for 20MB blocks. For comparison, only 10% fail this metric for 1MB blocks.

From jtimon at jtimon.cc  Thu Jul 23 14:30:06 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 16:30:06 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin Core
	and hard forks)
Message-ID: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>

On Thu, Jul 23, 2015 at 2:49 AM, Eric Voskuil via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On 07/22/2015 05:13 PM, Eric Lombrozo via bitcoin-dev wrote:
>> Only being partly serious - I strongly am in favor of a sufficiently
> modularized codebase that swapping out consensus rules is fairly
> straightforward and easy to test...
>
> We (libbitcoin) have taken the time to publish and maintain bitcoind's
> "libbitcoinconsensus" source files as an independent C++ library (with
> Java and Python bindings).
>
> https://en.bitcoin.it/wiki/Libbitcoin_Consensus
>
> It can be easily verified against bitcoind sources and in builds of
> libbitcoin-blockchain it can be swapped out for libbitcoin's native
> consensus checks.
>
> https://en.bitcoin.it/wiki/Libbitcoin_Blockchain#Consensus_Validation
>
> So there is really no reason to consider the original client synonymous
> with consensus. I initially argued for this library to be natively
> isolated from bitcoind, but that didn't seem to be in the cards so we
> did it independently.

I think there were some misunderstandings in our previous conversation
about this topic.
I completely agree with having a separated repository for libconsensus
(that's the whole point, alternative implementations can be
consensus-safe by using it, and in the event of a schism fork[1], they
can fork just that smaller project without having to relay on Bitcoin
Core [satoshi] at all).
But I thought you also wanted Bitcoin Core to use libconsensus instead
of just having a subtree/subrepository like it currently does with
libsecp256k1.
I'm not sure if that would ever be accepted, but in any case we're
certainly far away from that goal. Here are some things that need to
happen first:

1) Finish encapsulating consensus code so that it can be built without
any (we've done it only with script-related code so far). Here are
some related PRs (other people havee done other things that help with
this as well):

** MERGED or DELETED
*** MERGED Consensus: Decouple pow from chainparams #5812 [consensuspow]
*** DELETED MOVEONLY: Move constants and globals to consensus.h and
policy.o #5696 [consensus_policy0]
*** DELETED Refactor: Create CCoinsViewEfficient interface for
CCoinsViewCache #5747 [coins]
*** MERGED Chainparams: Refactor: Decouple IsSuperMajority from
Params() #5968 [params_consensus]
*** MERGED Remove redundant getter
CChainParams::SubsidyHalvingInterval() #5996 [params_subsidy]
*** MERGED Separate CValidationState from main #5669 [consensus]
*** DELETED Consensus: Refactor: Separate CheckFinalTx from
main::IsFinalTx #6063 [consensus_finaltx]
*** MERGED Consensus: Decouple ContextualCheckBlockHeader from
checkpoints #5975 [consensus_checkpoints]
*** MERGED Separate Consensus::CheckTxInputs and GetSpendHeight in
CheckInputs #6061 [consensus_inputs]
*** MERGED Bugfix: Don't check the genesis block header before
accepting it #6299 [5975-quick-fix]
** REVIEW Optimizations: Consensus: In AcceptToMemoryPool,
ConnectBlock, and CreateNewBlock #6445 [consensus-txinputs-0.12.99]
** REBASE MOVEONLY: Move most of consensus functions (pre-block) #6051
[consensus_moveonly]
** REBASE Consensus: Refactor: Turn CBlockIndex::GetMedianTimePast
into independent function #6009 [consensus_mediantime]
** DEPENDENT Consensus: Refactor: Consensus version of
CheckBlockHeader() #6035 [consensus_checkblockheader]
** DEPENDENT Consensus: Consensus version of pow functions [consensus_pow2]

2) Finish libconsensus's API: expose more things than VerifyScript, at
the very least, also expose VerifyTx, VerifyHeader and VerifyBlock.
Feedback from alternative implementations like libbitcoin is extremely
valuable here. Some related closed-for-now PRs:

** DEPENDENT API: Expose bitcoinconsensus_verify_header() in
libconsensus #5995 [consensus_header]
** DEPENDENT API: Expose bitcoinconsensus_verify_block() in
libconsensus #5946 [consensus_tip]
** REBASE Chainparams: Explicit Consensus::Params arg in consensus
functions #6024 [params_consensus2]

3) Move libconsensus to a separate repository as a
subtree/subrepository of Bitcoin Core.

Only after all that we can discuss whether Bitcoin Core itself should
include libconsensus' code or just use its API directly.
I hope that after all this, libbitcoin also reconsiders whether to
reimplement its own libconsensus or use the "official" one directly
instead.

> In any case I agree with your stated need for this isolation (if not the
> means) for the reasons you state. The community needs to move beyond a
> largely singular and monolithic codebase that is holding that position
> in part due to fear about consensus bug forks.

I completely agree. That's the goal of libconsensus (and an
alternative implementation like libbitcoin being able to use it
without sacrificing any of its current or future design differences
from Bitcoin Core would be a sign of success in this reward).
Unfortunately any changes that touch consensus code are risky and
therefore slow. And when consensus encapsulation changes conflict with
other changes (not because the other changes need to change consensus
but because consensus code is still coupled with policy and other
bitcoind-specific code), refactors are never prioritized. Ironically,
you need to encapsulate the consensus code to avoid such conflicts,
which would make all non-consensus changes far less risky (reducing
the consensus-critical review development bottleneck).

Unfortunately and ironically again, safer, small and incremental
changes are less interesting for reviewers.
For example, I've been trying to move consensus code to the consensus
folder for a long time. The correctness of a MOVEONLY change is
trivial to review for anyone who knows how to copy/paste in its
favorite editor and how to use git diff, but will I ever get answers
to my questions in [1]?
I know there's many people who really care about this, Cory Fields,
Wladimir and Pieter Wuille to name a few have reviewed many of this
changes (I've just got used to publicly whine about lack of review on
this front and policy encapsulation [very related fronts] as an
attempt to get some attention: not always, but begging for review
actually works some times).

Another unfortunate fact is that although a script-only libconsensus
allows you to avoid a big part of all possible consensus fork bugs,
there cannot be users of a finished libconsensus to ask things to util
a finished libconsensus actually exists. At the same time, the future
users (alternative implementations, since bitcoin core is already
"using libconsensus") are the most relevant people to listen when it
comes to the C API. That's why I beg you to comment on [2], even if
#5995 is currently closed. Your input on [1] would be very appreciated
as well (maybe you think it's better to expose verifyTx before
exposing verifyHeader, even if exposing verifyHeader is something that
could be done faster).

 > To make choice regarding consensus an actual choice (and thereby actual
> consensus) the modularity you suggest is essential. One must be able to
> take new developments without having to take consensus changes. The
> option to fork the codebase is not reasonable for most people. At this
> point there is no defensible reason for coupling consensus checks with
> other features.

Would you agree that asking people to fork an independent libconsensus
project instead of having to fork the full Bitcoin-qt is much more
reasonable?
I mean, I agree with your points. If "the specification of the
consensus rules is an implementation", then that implementation
shouldn't be coupled with a bunch of policy and non-consensus
technical choices (storage, dependencies, p2p protocol...). But I
still think that "the specification of the consensus rules should be a
concrete implementation" rather than based purely on a natural
language like English.
I believe that's the only point where we fundamentally disagree, but
it shouldn't be a barrier in our common goal of taking "power" away
from Bitcoin Core development. If we're successful Bitcoin Core won't
have any privileged position with regards to, say, libbitcoin when it
comes to deciding consensus rules changes.
You see, people like Mike Hearn believe that "uncontroversial
acceptance by Bitcoin Core devs" is the same as "uncontroversial
acceptance by all users of the system" (for a libbitcoin developer
like you, obviously a superset of Bitcoin Core's users). He thinks
that Gavin proposal is only a schism consensus fork[3] because the
code is in github/bitcoinxt/bitcoinxt instead of
github/bitcoin/bitcoin, not because PeterTodd-the-user-of-the-system
(he doesn't care about him) opposes it.
But let's imagine a different situation:

1) libconsensus us finished and used by libbitcoin
2) Bitcoin Core was unanimously in favor of Gavin's 32 GB initial
proposal and the changes are applied to bitcoin/bitcoin and
bitcoin/libconsensus (or Bitcoin Core has a dictator like Mike
wants[4] and he accepts it, it doesn't really matter for this
example).

But let's also assume that X% of the users and 10% of the miners are
against that Schism hardfork, and they don't want to be forced to
change the rules by any influential group, mining, economic or user
majority.
Libbitcoin cannot be forced to accept the next, controversial version
of bitcoin/libconsensus, so you guys fork libbitcoin/libconsensus out
of the last ok version.
Centralized-bitcoin and old-bitcoin would become 2 separated
currencies and some people would likely lose money in the transition
from one currency to 2 of them, but the users of old-bitcoin have the
right of keeping the rules they signed up for and the only responsible
people for this likely-catastrophic schism would be the Bitcoin core
developers for trying to impose consensus changes into others against
their will. Trying to impose consensus changes against the will of
some users is wrong, and it is irrelevant if that happens in Bitcoin
Core or Bitcoin Tx (if it is uncontroversial, it's also irrelevant
where it gets implemented first).

I really believe bitcoin needs competitive alternative implementations
and I believe libconsensus is a tool to help that happen and reduce
the "gatekeeping" friction that there's (unfortunately) around Bitcoin
Core. I look forward to any potential collaboration on this front.
Even if you still want to maintain a reimplementation of libconsensus
(which I humbly think it's a mistake, but I don't think there's any
point on keep discussing that, since we know we disagree) we can
collaborate on the future common API of a complete libconsensus (with
verifyBlock and all). I really hope we can do that.

[1] https://github.com/bitcoin/bitcoin/pull/6051#issuecomment-120708121

[2] (kind of outdated, but the API is what matters here)
https://github.com/jtimon/bitcoin/commit/00b9b227afc8669a877984561329dde75d3d8942

[3] https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#schism1-hardforks

[4] http://lmgtfy.com/?q=mike+hearn+dictator&l=1

From milly at bitcoins.info  Thu Jul 23 14:57:38 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 23 Jul 2015 10:57:38 -0400
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
Message-ID: <55B100E2.4040901@bitcoins.info>

On 7/23/2015 10:30 AM, Jorge Tim?n via bitcoin-dev wrote:

> [4] http://lmgtfy.com/?q=mike+hearn+dictator&l=1
> _______________________________________________


You spend too much time on reddit.  All this drama queen stuff is 
getting ridiculous.


Russ


From gavinandresen at gmail.com  Thu Jul 23 15:04:39 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 23 Jul 2015 11:04:39 -0400
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <CABsx9T2VnMSQpwdh8FWcfhM8ETb-x6Es4WW1vLKVyQKtLcpe8A@mail.gmail.com>

Ahh, data... a breath of fresh air...

Can you re-analyze for 8MB blocks?  There is no current proposal for 20MB
blocks.

Also, most hashing power is now using Matt Corallo's fast block propagation
network; slow 'block' propagation to merchants/end-users doesn't really
matter (as long as it doesn't get anywhere near the 10-minute block time).

On Thu, Jul 23, 2015 at 10:19 AM, slurms--- via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On this day, the Bitcoin network was crawled and reachable nodes surveyed
> to find their maximum throughput in order to determine if it can safely
> support a faster block rate. Specifically this is an attempt to prove or
> disprove the common statement that 1MB blocks were only suitable slower
> internet connections in 2009 when Bitcoin launched, and that connection
> speeds have improved to the point of obviously supporting larger blocks.
>
>
> The testing methodology is as follows:
>
>  * Nodes were randomly selected from a peers.dat, 5% of the reachable
> nodes in the network were contacted.
>
>  * A random selection of blocks was downloaded from each peer.
>
>  * There is some bias towards higher connection speeds, very slow
> connections (<30KB/s) timed out in order to run the test at a reasonable
> rate.
>
>  * The connecting node was in Amsterdam with a 1GB NIC.
>
>
> Results:
>
>  * 37% of connected nodes failed to upload blocks faster than 1MB/s.
>
>  * 16% of connected nodes uploaded blocks faster than 10MB/s.
>
>  * Raw data, one line per connected node, kilobytes per second
> http://pastebin.com/raw.php?i=6b4NuiVQ
>
>
> This does not support the theory that the network has the available
> bandwidth for increased block sizes, as in its current state 37% of nodes
> would fail to upload a 20MB block to a single peer in under 20 seconds
> (referencing a number quoted by Gavin). If the bar for suitability is
> placed at taking only 1% of the block time (6 seconds) to upload one block
> to one peer, then 69% of the network fails for 20MB blocks. For comparison,
> only 10% fail this metric for 1MB blocks.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/d834f223/attachment.html>

From gavinandresen at gmail.com  Thu Jul 23 15:41:18 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 23 Jul 2015 11:41:18 -0400
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
	<CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
Message-ID: <CABsx9T3mEYPMFfxFbM-Jj7nADWsVg9HbvQOr0JZeEjC8gOvLZA@mail.gmail.com>

On Mon, Jul 20, 2015 at 4:55 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:

> On Mon, Jul 20, 2015 at 7:10 PM, Gavin Andresen via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Mitigate a potential CPU exhaustion denial-of-service attack by limiting
> > the maximum size of a transaction included in a block.
>
> This seems like a fairly indirect approach. The resource being watched
> for is not the size (otherwise two transactions for 200k would be
> strictly worse than one 200k transactions) but the potential of N^2
> costs related to repeated hashing in checksig; which this ignores.
>

To get a feeling for the implementation complexity / correctness tradeoff,
I implemented changes to Core to count exactly how many signature operations
are performed and how many bytes are hashed to compute sighashes:

https://github.com/gavinandresen/bitcoin-git/commit/08ecd6f67d977271faa92bc1890b8f94b15c2792

I haven't benchmarked how much keeping track of the counts affects
performance (but I expect
it to be minimal compared to ECDSA signature validation, accessing inputs
from the UTXO, etc).

I like the idea of a consensus rule that directly addresses the attack--
e.g. "validating
a transaction must not require more than X megabytes hashed to compute
signature hashes."
(or: "validating a block must not require more than X megabytes hashed..."
which is
more symmetric with the current "maximum number of sigops allowed per
block")

Thinking about this and looking at block 364,292, I think I see a simple
optimization that would
speed up validation for transactions with lots of inputs:  use
SIGHASH_ANYONECANPAY
for all of the inputs instead of SIGHASH_ALL.

(which would make the transaction malleable-- if that's a concern, then
make one of the inputs
SIGHASH_ALL and the rest SIGHASH_ANYONECANPAY-- I think this is a change
that
should be made to Core and other wallets should make).

---

I'd like to hear from maintainers of other full implementations: how hard
would it be for you
to keep track of the number of bytes hashed to validate a transaction or
block, and use
it as a consensus rule?

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/f0db9377/attachment.html>

From jameson.lopp at gmail.com  Thu Jul 23 15:55:14 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Thu, 23 Jul 2015 11:55:14 -0400
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <CADL_X_dmeyjR2PJN8oLn8EutVCu8Pn_qsP9ATRCYadx3dh4Erg@mail.gmail.com>

Are you willing to share the code that you used to run the test?

- Jameson

On Thu, Jul 23, 2015 at 10:19 AM, slurms--- via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On this day, the Bitcoin network was crawled and reachable nodes surveyed
> to find their maximum throughput in order to determine if it can safely
> support a faster block rate. Specifically this is an attempt to prove or
> disprove the common statement that 1MB blocks were only suitable slower
> internet connections in 2009 when Bitcoin launched, and that connection
> speeds have improved to the point of obviously supporting larger blocks.
>
>
> The testing methodology is as follows:
>
>  * Nodes were randomly selected from a peers.dat, 5% of the reachable
> nodes in the network were contacted.
>
>  * A random selection of blocks was downloaded from each peer.
>
>  * There is some bias towards higher connection speeds, very slow
> connections (<30KB/s) timed out in order to run the test at a reasonable
> rate.
>
>  * The connecting node was in Amsterdam with a 1GB NIC.
>
>
> Results:
>
>  * 37% of connected nodes failed to upload blocks faster than 1MB/s.
>
>  * 16% of connected nodes uploaded blocks faster than 10MB/s.
>
>  * Raw data, one line per connected node, kilobytes per second
> http://pastebin.com/raw.php?i=6b4NuiVQ
>
>
> This does not support the theory that the network has the available
> bandwidth for increased block sizes, as in its current state 37% of nodes
> would fail to upload a 20MB block to a single peer in under 20 seconds
> (referencing a number quoted by Gavin). If the bar for suitability is
> placed at taking only 1% of the block time (6 seconds) to upload one block
> to one peer, then 69% of the network fails for 20MB blocks. For comparison,
> only 10% fail this metric for 1MB blocks.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/312f6262/attachment.html>

From slurms at gmx.us  Thu Jul 23 15:56:05 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Thu, 23 Jul 2015 17:56:05 +0200
Subject: [bitcoin-dev] Electrum Server Speed Test
Message-ID: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>

Similar to the Bitcoin Node Speed Test, this is a quick quantitative look at how the Electrum server software handles under load. The Electrum wallet is extremely popular, and the distributed servers which power it are all hosted by volunteers without budget. The server requires a fully indexed Bitcoin Core daemon running, and produces sizable external index in order to allow SPV clients to quickly retrieve their history. 

    3.9G    electrum/utxo
    67M     electrum/undo
    19G     electrum/hist
    1.4G    electrum/addr
    24G     electrum/

Based on my own logs produced by the electrum-server console, it takes this server (Xeon, lots of memory, 7200 RPM RAID) approximately 3.7 minutes per megabyte of block to process into the index. This seems to hold true through the 10 or so blocks I have in my scroll buffer, the contents of blocks seem to be of approximately the same processing load. Continuing this trend with the current inter-block time of 9.8 minutes, an electrum-server instance running on modest-high end dedicated server is able to support up to 2.64 MB block sizes before permanently falling behind the chain. 

From pete at petertodd.org  Thu Jul 23 16:05:11 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 23 Jul 2015 16:05:11 +0000
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <25607701-D3ED-4D0D-A5B3-C02B727671BF@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 23 July 2015 10:19:59 GMT-04:00, slurms--- via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>This does not support the theory that the network has the available
>bandwidth for increased block sizes, as in its current state 37% of
>nodes would fail to upload a 20MB block to a single peer in under 20
>seconds (referencing a number quoted by Gavin). If the bar for
>suitability is placed at taking only 1% of the block time (6 seconds)
>to upload one block to one peer, then 69% of the network fails for 20MB
>blocks. For comparison, only 10% fail this metric for 1MB blocks.

Note how due to bandwidth being generally asymetric your findings are probably optimistic - you've measured download capacity. On top of that upload is further reduced by the fact that multiple peers at once need to be sent blocks for reliability.

Secondly you're measuring a network that isn't under attack - we need significant additional margin to resist attack as performance is consensus-critical.

-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsRCj
AAoJEMCF8hzn9Lnc47AIAIQbznavjd2Rbqxeq5a3GLqeYoI4BZIQYqfWky+6OQtq
yGRKaqPtGuES5y9L0k7efivT385mOl87PWnWMy61xxZ9FJgoS+YHkEx8K4tfgfA2
yLOKzeFSar2ROCcjHYyPWa2XXjRbNmiLzfNuQyIBArg/Ch9//iXUUM+GG0mChF5k
nUxLstXgXDNh5H8xkHeLi4lEbt9HFiwcZnT1Tzeo2dvVTujrtyNb/zEhNZScMXDc
UOlT8rBLxzHlytKdXt1GNKIq0feTRJNbreBh7/EB4nYTT54CItaaVXul0LdHd5/2
kgKtdbUdeyaRUKrKcvxiuIwclyoOuRQp0DZThsB262o=
=tBUM
-----END PGP SIGNATURE-----


From tomh at thinlink.com  Thu Jul 23 16:17:51 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 23 Jul 2015 09:17:51 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
Message-ID: <55B113AF.40500@thinlink.com>

On 7/23/2015 5:17 AM, Jorge Tim?n via bitcoin-dev wrote:

> If the user expectation is that a price would never arise because
> supply is going to be increased ad infinitum and they will always be
> able to send fast in-chain bitcoin transactions for free, just like
> breath air (an abundant resource) for free, then we should change that
> expectation as soon as possible. 

No.  We should accept that reality may change, and we should promote
understanding of that fact.

We should not artificially manipulate the market "as soon as possible,"
since we ourselves don't know much at all about how the market will
unfold in the future.


> the criteria for the consensus block size should be purely based on
> technological capacity (propagation benchmarking, etc) and
> centralization concerns

Right, purely these.  There is no place for artificially manipulating
expectations.


> they will simply advance the front and start another battle, because
> their true hidden faction is the "not ever side". Please, Jeff, Gavin,
> Mike, show me that I'm wrong on this point. Please, answer my question
> this time. If "not now", then when?

Bitcoin has all the hash power.  The merkle root has effectively
infinite capacity.  We should be asking HOW to scale the supporting
information propagation system appropriately, not WHEN to limit the
capacity of the primary time-stamping machine.

We haven't tried yet.  I can't answer for the people you asked, but
personally I haven't thought much about when we should declare failure.


From jl2012 at xbt.hk  Thu Jul 23 16:23:21 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Thu, 23 Jul 2015 16:23:21 +0000
Subject: [bitcoin-dev] BIP draft: Hardfork bit
Message-ID: <20150723162321.Horde.bphh__8AhyXa_m-YAYpiyw1@server47.web-hosting.com>

Please feel free to comment, for technical issues and language

BIP: ??
Title: Hardfork bit
Author: jl2012 <jl2012 at xbt.hk>
Status: Draft
Type: Standard Track
Created: 2015-07-23

Abstract

This document specifies a proposed change to the semantics of the most  
significant bit of the ?version? field in Bitcoin block headers, as a  
mechanism to indicate a hardfork is deployed. It alleviates certain  
risks related to a hardfork by introducing an explicit ?point of no  
return? in the blockchain. This is a general mechanism which should be  
employed by any planned hardfork in the future.

Motivation

Hardforks in Bitcoin are usually considered as difficult and risky, because:

1) Hardforks require not only support of miners, but also, most  
importantly, supermajority support of the Bitcoin economy. As a  
result, softfork deployment mechanisms described in BIP 34 or BIP XX  
?Version bits? (https://gist.github.com/sipa/bf69659f43e763540550) are  
not enough for introducing hardforks safely.

2) Full nodes and SPV nodes following original consensus rules may not  
be aware of the deployment of a hardfork. They may stick to an  
economic-minority fork and unknowingly accept devalued legacy tokens.

3) In the case which the original consensus rules are also valid under  
the new consensus rules, users following the new chain may  
unexpectedly reorg back to the original chain if it grows faster than  
the new one. People may find their confirmed transactions becoming  
unconfirmed and lose money.

The first issue involves soliciting support for a hardfork proposal,  
which is more a political topic than a technical one. This proposal  
aims at alleviating the risks related to the second and third issues.  
It should be employed by any planned hardfork in the future.

Definitions

See BIP YY ?Motivation and deployment of consensus rules changes?
https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org

Specification

Hardfork bit: The most significant bit in nVersion is defined as the  
hardfork bit. Currently, blocks with this header bit setting to 1 are  
invalid, since BIP34 interprets nVersion as a signed number and  
requires it to be >=2 (with BIP66, >=3). Among the 640 bits in the  
block header, this is the only one which is fixed and serves no  
purpose, and therefore the best way to indicate the deployment of a  
hardfork.

Flag block: Any planned hardfork must have one and only one flag block  
which is the ?point of no return?. To ensure monotonicity, flag block  
should be determined by block height, or as the first block with  
GetMedianTimePast() greater than a threshold. Other mechanisms could  
be difficult for SPV nodes to follow. The height/time threshold could  
be a predetermined value or relative to other events (e.g. 1000 blocks  
/ 10 days after 75% of miner support). The exact mechanism is out of  
the scope of this BIP. No matter what mechanism is used, the threshold  
is consensus critical. It must be publicly verifiable with only  
blockchain data and the programme source code, and preferably  
SPV-friendly.

Flag block is constructed in a way that nodes with the original  
consensus rules must reject. On the other hand, nodes with the new  
consensus rules must reject a block if it is not a flag block while it  
is supposed to be. To achieve these goals, the flag block must 1) have  
the hardfork bit setting to 1, 2) include a short predetermined unique  
description of the hardfork anywhere in its coinbase, and 3) follow  
any other rules required by the hardfork. If these conditions are not  
fully satisfied, upgraded nodes shall reject the block.

The hardfork bit must be turned off in the decedents of the flag  
block, until the deployment of the next hardfork. The requirement of  
coinbase message is also limited to the flag block. In the rare case  
that multiple hardforks share the same flag block, the coinbase shall  
include all relevant messages and the order/position of the messages  
shall not be consensus critical.

Although a hardfork is officially deployed after the flag block, the  
exact behavioural change is out of the scope of this BIP. For example,  
a hardfork may not be fully active until certain time after the flag  
block.

Automatic warning system: When a flag block is found on the network,  
full nodes and SPV nodes should look into its coinbase. They should  
alert their users and/or stop accepting incoming transactions if it is  
an unknown hardfork. It should be noted that the warning system could  
become a DoS vector if the attacker is willing to give up the block  
reward. Therefore, the warning may be issued only if a few blocks are  
built on top of the flag block in a reasonable time frame. This will  
in turn increase the risk in case of a real planned hardfork so it is  
up to the wallet programmers to decide the optimal strategy. Human  
warning system (e.g. the emergency alert system in Bitcoin Core) could  
fill the gap.

Compatibility

As a mechanism to indicate hardfork deployment, this BIP breaks  
backward compatibility intentionally. However, without further changes  
in the block header format, full nodes and SPV nodes could still  
verify the PoW of a flag block and its descendants.

This proposal is also compatible with the BIP XX ?Version bits?. The  
version bits mechanism could be employed to measure miner support  
towards a hardfork proposal, and to determine the height or time  
threshold of the flag block. Also, miners of the flag block may still  
cast votes for other concurrent softfork or hardfork proposals as  
normal.

After the flag block is generated, a miner may support either fork but  
not both. It is not possible for miners in one fork to attack or  
overtake the other fork because the forks are mutually exclusive.


From gavinandresen at gmail.com  Thu Jul 23 16:28:44 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 23 Jul 2015 12:28:44 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B113AF.40500@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
Message-ID: <CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>

On Thu, Jul 23, 2015 at 12:17 PM, Tom Harding via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On 7/23/2015 5:17 AM, Jorge Tim?n via bitcoin-dev wrote:
> > they will simply advance the front and start another battle, because
> > their true hidden faction is the "not ever side". Please, Jeff, Gavin,
> > Mike, show me that I'm wrong on this point. Please, answer my question
> > this time. If "not now", then when?
>
> Bitcoin has all the hash power.  The merkle root has effectively
> infinite capacity.  We should be asking HOW to scale the supporting
> information propagation system appropriately, not WHEN to limit the
> capacity of the primary time-stamping machine.
>
> We haven't tried yet.  I can't answer for the people you asked, but
> personally I haven't thought much about when we should declare failure.


Yes! Lets plan for success!

I'd really like to move from "IMPOSSIBLE because...  (electrum hasn't been
optimized
(by the way: you should run on SSDs, LevelDB isn't designed for spinning
disks),
what if the network is attacked?  (attacked HOW???), current p2p network is
using
the simplest, stupidest possible block propagation algorithm...)"

... to "lets work together and work through the problems and scale it up."

I'm frankly tired of all the negativity here; so tired of it I've decided
to mostly ignore
all the debate for a while, not respond to misinformation I see being spread
(like "miners have some incentive to create slow-to-propagate blocks"),
work with people like Tom and Mike who have a 'lets get it done' attitude,
and
focus on what it will take to scale up.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/9a8c53b6/attachment.html>

From leo at LeoWandersleb.de  Thu Jul 23 16:36:53 2015
From: leo at LeoWandersleb.de (Leo Wandersleb)
Date: Thu, 23 Jul 2015 13:36:53 -0300
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <55B11825.90700@LeoWandersleb.de>

Thank you a lot for doing this test!

Two questions:

1) A node is typically connected to many nodes that would all in parallel
download said block. In your test you measured how fast new blocks that
presumably are being uploaded in parallel to all those other nodes are being
uploaded? Or did you download blocks while those nodes were basically idle?

2) What is your percentage of the very slow connections?

On 07/23/2015 11:19 AM, slurms--- via bitcoin-dev wrote:
> On this day, the Bitcoin network was crawled and reachable nodes surveyed to find their maximum throughput in order to determine if it can safely support a faster block rate. Specifically this is an attempt to prove or disprove the common statement that 1MB blocks were only suitable slower internet connections in 2009 when Bitcoin launched, and that connection speeds have improved to the point of obviously supporting larger blocks.
>
>
> The testing methodology is as follows:
>
>  * Nodes were randomly selected from a peers.dat, 5% of the reachable nodes in the network were contacted.
>
>  * A random selection of blocks was downloaded from each peer.
>
>  * There is some bias towards higher connection speeds, very slow connections (<30KB/s) timed out in order to run the test at a reasonable rate.
>
>  * The connecting node was in Amsterdam with a 1GB NIC. 
>
>  
> Results:
>
>  * 37% of connected nodes failed to upload blocks faster than 1MB/s.
>
>  * 16% of connected nodes uploaded blocks faster than 10MB/s.
>
>  * Raw data, one line per connected node, kilobytes per second http://pastebin.com/raw.php?i=6b4NuiVQ
>
>
> This does not support the theory that the network has the available bandwidth for increased block sizes, as in its current state 37% of nodes would fail to upload a 20MB block to a single peer in under 20 seconds (referencing a number quoted by Gavin). If the bar for suitability is placed at taking only 1% of the block time (6 seconds) to upload one block to one peer, then 69% of the network fails for 20MB blocks. For comparison, only 10% fail this metric for 1MB blocks.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev




-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/042b0879/attachment-0001.sig>

From cipher.anthem at gmx.com  Thu Jul 23 16:50:45 2015
From: cipher.anthem at gmx.com (cipher anthem)
Date: Thu, 23 Jul 2015 18:50:45 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>,
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
Message-ID: <trinity-f82ce2cb-7260-4b58-a577-9a1b6afad214-1437670245144@3capp-mailcom-bs02>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/aa972a99/attachment.html>

From slurms at gmx.us  Thu Jul 23 17:12:04 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Thu, 23 Jul 2015 19:12:04 +0200
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <55B11825.90700@LeoWandersleb.de>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>,
	<55B11825.90700@LeoWandersleb.de>
Message-ID: <trinity-7d2b5b09-8b25-47fc-b01e-7ffbdc8138b3-1437671524217@3capp-mailcom-bs04>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/82f24718/attachment.html>

From slurms at gmx.us  Thu Jul 23 17:14:31 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Thu, 23 Jul 2015 19:14:31 +0200
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <CADL_X_dmeyjR2PJN8oLn8EutVCu8Pn_qsP9ATRCYadx3dh4Erg@mail.gmail.com>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>,
	<CADL_X_dmeyjR2PJN8oLn8EutVCu8Pn_qsP9ATRCYadx3dh4Erg@mail.gmail.com>
Message-ID: <trinity-650f6539-8135-4f95-a54f-9dd0744df911-1437671671241@3capp-mailcom-bs04>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/004e3b9e/attachment.html>

From fireduck at gmail.com  Thu Jul 23 17:18:59 2015
From: fireduck at gmail.com (=?UTF-8?B?Sm9zZXBoIEdsZWFzb24g4pGI?=)
Date: Thu, 23 Jul 2015 17:18:59 +0000
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
Message-ID: <CA+ASnrG4mubjKb8qeH0Kus6Ga+7o5L6kV=RNzFTBskiYQdt7sg@mail.gmail.com>

I have concerns about the performance of the Electrum server software as
well.  It seems to load data one block at a time (which normally makes
sense) and I think it is even single threaded on transactions inside the
block.

To try to addresses these issues, I made my own implementation of the
electrum server.  It doesn't support UTXO (yet) but happily interacts with
all the clients I've tested.  It is heavily multithreaded, uses mongodb as
a key value store and bitcoinj for block and transaction parsing.

https://github.com/fireduck64/jelectrum

You can hit a running instance at:
b.1209k.com:50002:s
or
b.1209k.com:50001:t

A synced node uses 347G of mongodb storage.

Here are the recent blocks imported, with number of transactions and import
time.
http://pastebin.com/cfW3C2L6
These times are based on having mongodb on SSD.
The CPU is 8 core Intel(R) Xeon(R) CPU E5430  @ 2.66GHz

I'd be happy to help with anything you need to evaluate it.


On Thu, Jul 23, 2015 at 9:01 AM Slurms MacKenzie via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Similar to the Bitcoin Node Speed Test, this is a quick quantitative look
> at how the Electrum server software handles under load. The Electrum wallet
> is extremely popular, and the distributed servers which power it are all
> hosted by volunteers without budget. The server requires a fully indexed
> Bitcoin Core daemon running, and produces sizable external index in order
> to allow SPV clients to quickly retrieve their history.
>
>     3.9G    electrum/utxo
>     67M     electrum/undo
>     19G     electrum/hist
>     1.4G    electrum/addr
>     24G     electrum/
>
> Based on my own logs produced by the electrum-server console, it takes
> this server (Xeon, lots of memory, 7200 RPM RAID) approximately 3.7 minutes
> per megabyte of block to process into the index. This seems to hold true
> through the 10 or so blocks I have in my scroll buffer, the contents of
> blocks seem to be of approximately the same processing load. Continuing
> this trend with the current inter-block time of 9.8 minutes, an
> electrum-server instance running on modest-high end dedicated server is
> able to support up to 2.64 MB block sizes before permanently falling behind
> the chain.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/2fe297d2/attachment-0001.html>

From bip at mattwhitlock.name  Thu Jul 23 17:28:12 2015
From: bip at mattwhitlock.name (Matt Whitlock)
Date: Thu, 23 Jul 2015 13:28:12 -0400
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
Message-ID: <1690410.cgD4NDVhNv@crushinator>

Great data points, but isn't this an argument for improving Electrum Server's database performance, not for holding Bitcoin back?

(Nice alias, by the way. Whimmy wham wham wozzle!)


On Thursday, 23 July 2015, at 5:56 pm, Slurms MacKenzie via bitcoin-dev wrote:
> Similar to the Bitcoin Node Speed Test, this is a quick quantitative look at how the Electrum server software handles under load. The Electrum wallet is extremely popular, and the distributed servers which power it are all hosted by volunteers without budget. The server requires a fully indexed Bitcoin Core daemon running, and produces sizable external index in order to allow SPV clients to quickly retrieve their history. 
> 
>     3.9G    electrum/utxo
>     67M     electrum/undo
>     19G     electrum/hist
>     1.4G    electrum/addr
>     24G     electrum/
> 
> Based on my own logs produced by the electrum-server console, it takes this server (Xeon, lots of memory, 7200 RPM RAID) approximately 3.7 minutes per megabyte of block to process into the index. This seems to hold true through the 10 or so blocks I have in my scroll buffer, the contents of blocks seem to be of approximately the same processing load. Continuing this trend with the current inter-block time of 9.8 minutes, an electrum-server instance running on modest-high end dedicated server is able to support up to 2.64 MB block sizes before permanently falling behind the chain. 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From fireduck at gmail.com  Thu Jul 23 17:41:17 2015
From: fireduck at gmail.com (=?UTF-8?B?Sm9zZXBoIEdsZWFzb24g4pGI?=)
Date: Thu, 23 Jul 2015 17:41:17 +0000
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <1690410.cgD4NDVhNv@crushinator>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
	<1690410.cgD4NDVhNv@crushinator>
Message-ID: <CA+ASnrH7KWFZMPNOXFs0ijV-dKE3AbC8iu_mnZYqcgs2TxffLA@mail.gmail.com>

I think our friendly original party worm is just trying to evaluate where
we are currently so arguments can be based on data.

I would tend to agree that there are performance improvements to be made
and would rather do that work than limit the block size.




On Thu, Jul 23, 2015 at 10:28 AM Matt Whitlock via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Great data points, but isn't this an argument for improving Electrum
> Server's database performance, not for holding Bitcoin back?
>
> (Nice alias, by the way. Whimmy wham wham wozzle!)
>
>
> On Thursday, 23 July 2015, at 5:56 pm, Slurms MacKenzie via bitcoin-dev
> wrote:
> > Similar to the Bitcoin Node Speed Test, this is a quick quantitative
> look at how the Electrum server software handles under load. The Electrum
> wallet is extremely popular, and the distributed servers which power it are
> all hosted by volunteers without budget. The server requires a fully
> indexed Bitcoin Core daemon running, and produces sizable external index in
> order to allow SPV clients to quickly retrieve their history.
> >
> >     3.9G    electrum/utxo
> >     67M     electrum/undo
> >     19G     electrum/hist
> >     1.4G    electrum/addr
> >     24G     electrum/
> >
> > Based on my own logs produced by the electrum-server console, it takes
> this server (Xeon, lots of memory, 7200 RPM RAID) approximately 3.7 minutes
> per megabyte of block to process into the index. This seems to hold true
> through the 10 or so blocks I have in my scroll buffer, the contents of
> blocks seem to be of approximately the same processing load. Continuing
> this trend with the current inter-block time of 9.8 minutes, an
> electrum-server instance running on modest-high end dedicated server is
> able to support up to 2.64 MB block sizes before permanently falling behind
> the chain.
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/947413eb/attachment.html>

From pindar.wong at gmail.com  Thu Jul 23 17:41:33 2015
From: pindar.wong at gmail.com (Pindar Wong)
Date: Fri, 24 Jul 2015 01:41:33 +0800
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-650f6539-8135-4f95-a54f-9dd0744df911-1437671671241@3capp-mailcom-bs04>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
	<CADL_X_dmeyjR2PJN8oLn8EutVCu8Pn_qsP9ATRCYadx3dh4Erg@mail.gmail.com>
	<trinity-650f6539-8135-4f95-a54f-9dd0744df911-1437671671241@3capp-mailcom-bs04>
Message-ID: <CAM7BtUrtfCM+P6DTGdgTTSpfq-Ot=YdTzn40dbwa_KkyoN7F7w@mail.gmail.com>

This looks like the beginnings of some great analysis.

Per Peter's remarks, I think it would be productive to run the test(s) on a
simulated network with worst case network failure(s) so that we can
determine the safety margin needed.

I have potential access to h/w resources that would be available for
running such tests at the necessary scales.

Cheers,

p.


On Fri, Jul 24, 2015 at 1:14 AM, Slurms MacKenzie via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> The library used isn't open source, so unfortunately not. It shouldn't be
> too hard to replicate in python-bitcoinlib or bitcoinj though.
>
> *Sent:* Thursday, July 23, 2015 at 6:55 PM
> *From:* "Jameson Lopp" <jameson.lopp at gmail.com>
> *To:* slurms at gmx.us
> *Cc:* bitcoin-dev at lists.linuxfoundation.org
> *Subject:* Re: [bitcoin-dev] Bitcoin Node Speed Test
>  Are you willing to share the code that you used to run the test?
>
> - Jameson
>
> On Thu, Jul 23, 2015 at 10:19 AM, slurms--- via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> On this day, the Bitcoin network was crawled and reachable nodes surveyed
>> to find their maximum throughput in order to determine if it can safely
>> support a faster block rate. Specifically this is an attempt to prove or
>> disprove the common statement that 1MB blocks were only suitable slower
>> internet connections in 2009 when Bitcoin launched, and that connection
>> speeds have improved to the point of obviously supporting larger blocks.
>>
>>
>> The testing methodology is as follows:
>>
>>  * Nodes were randomly selected from a peers.dat, 5% of the reachable
>> nodes in the network were contacted.
>>
>>  * A random selection of blocks was downloaded from each peer.
>>
>>  * There is some bias towards higher connection speeds, very slow
>> connections (<30KB/s) timed out in order to run the test at a reasonable
>> rate.
>>
>>  * The connecting node was in Amsterdam with a 1GB NIC.
>>
>>
>> Results:
>>
>>  * 37% of connected nodes failed to upload blocks faster than 1MB/s.
>>
>>  * 16% of connected nodes uploaded blocks faster than 10MB/s.
>>
>>  * Raw data, one line per connected node, kilobytes per second
>> http://pastebin.com/raw.php?i=6b4NuiVQ
>>
>>
>> This does not support the theory that the network has the available
>> bandwidth for increased block sizes, as in its current state 37% of nodes
>> would fail to upload a 20MB block to a single peer in under 20 seconds
>> (referencing a number quoted by Gavin). If the bar for suitability is
>> placed at taking only 1% of the block time (6 seconds) to upload one block
>> to one peer, then 69% of the network fails for 20MB blocks. For comparison,
>> only 10% fail this metric for 1MB blocks.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/48d9276d/attachment.html>

From elombrozo at gmail.com  Thu Jul 23 17:43:06 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 10:43:06 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
Message-ID: <C5A70F53-4779-457A-A06A-686877706F89@gmail.com>


> On Jul 23, 2015, at 9:28 AM, Gavin Andresen via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> I'd really like to move from "IMPOSSIBLE because...  (electrum hasn't been optimized
> (by the way: you should run on SSDs, LevelDB isn't designed for spinning disks),
> what if the network is attacked?  (attacked HOW???), current p2p network is using
> the simplest, stupidest possible block propagation algorithm...)"
> 
> ... to "lets work together and work through the problems and scale it up."

Let?s be absolutely clear about one thing - block size increases are *not* about scaling the network. Can we please stop promoting this falsehood? It doesn?t matter by what number we multiply the block size?we can NEVER satisfy the full demand if we insist on every single transaction from every single person everywhere in the world being on the blockchain?it?s just absurd.

Increasing block size only temporarily addresses one significant issue - how to postpone having to deal with transaction fees, which by design, are how the cost of operating the Bitcoin network (which is already very expensive) is supposed to be paid for ultimately. Suggesting we avoid dealing with this constitutes a new economic policy - dealing with it is the default economic policy we?ve all known about from the beginning?so please stop claiming otherwise.

> On Jul 23, 2015, at 9:50 AM, cipher anthem via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Why not help on a project that actually seems to offer great scalability like the lightning network? There have been great progress there.


Exactly. There?s been tremendous progress here in addressing scalability, yet I don?t see you participating in that discussion, Gavin.

> On Jul 23, 2015, at 5:17 AM, Jorge Tim?n via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> But it seems to me that the "not now side" has no centralization
> concerns at all and their true position is "not ever hit the blocksize
> limit", that's the only explanation I can find to their lack of
> answers to the "when do you think we should allow users to notice that
> there's a limit in the blocksize to guarantee that the system can be
> decentralized?".

I agree with what you?re saying, Jorge?but It?s even worse than that. The July 4th fork illustrated that the security model of the network itself could be at risk from the increasing costs in validation causing people to rely on others to validate for them?and increasing block size only makes the problem worse.

- Eric Lombrozo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/0f431ef8/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/0f431ef8/attachment-0001.sig>

From jtimon at jtimon.cc  Thu Jul 23 17:51:11 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 19:51:11 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B113AF.40500@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
Message-ID: <CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>

On Thu, Jul 23, 2015 at 6:17 PM, Tom Harding via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On 7/23/2015 5:17 AM, Jorge Tim?n via bitcoin-dev wrote:
>
>> If the user expectation is that a price would never arise because
>> supply is going to be increased ad infinitum and they will always be
>> able to send fast in-chain bitcoin transactions for free, just like
>> breath air (an abundant resource) for free, then we should change that
>> expectation as soon as possible.
>
> No.  We should accept that reality may change, and we should promote
> understanding of that fact.
>
> We should not artificially manipulate the market "as soon as possible,"
> since we ourselves don't know much at all about how the market will
> unfold in the future.

We know perfectly well that the system will need to eventually be
sustained by fees.
We should stop misinforming new users talking them about how bitcoin
transactions "are free", because they're clearly not.

>> the criteria for the consensus block size should be purely based on
>> technological capacity (propagation benchmarking, etc) and
>> centralization concerns
>
> Right, purely these.  There is no place for artificially manipulating
> expectations.

Am I "artificially manipulating expectations" ?

>> they will simply advance the front and start another battle, because
>> their true hidden faction is the "not ever side". Please, Jeff, Gavin,
>> Mike, show me that I'm wrong on this point. Please, answer my question
>> this time. If "not now", then when?
>
> Bitcoin has all the hash power.  The merkle root has effectively
> infinite capacity.  We should be asking HOW to scale the supporting
> information propagation system appropriately, not WHEN to limit the
> capacity of the primary time-stamping machine.

Timestamping data using the blockchain is not the same as including
that the data in the blockchain itself because the later is a scarce
resource.
The "timestamping space" is already unlimited today with no changes.
You can use a bitcoin transaction to timestamp an unbounded amount of
external data using exactly 0 extra bytes in your transaction!
Here's the code: https://github.com/Blockstream/contracthashtool

And I'm very interested in scaling Bitcoin, I just disagree that
changing a constant is a "scaling solution".

On Thu, Jul 23, 2015 at 6:28 PM, Gavin Andresen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Jul 23, 2015 at 12:17 PM, Tom Harding via bitcoin-dev
>> We haven't tried yet.  I can't answer for the people you asked, but
>> personally I haven't thought much about when we should declare failure.
>
>
> Yes! Lets plan for success!

I extremely disagree that having a block limit is failure. It's a
design decision to protect the system against centralization (which we
will be able to rise as we solve technical and centralization problems
we have today).
But thank you for being more clear about it now, Gavin. You won't stop
on a 8GB or 32GB limit because you think having ANY limit would be a
failure.
Is that correct?
If not, can you please answer clearly when and why you think the
blocksize should be lower than demand (when you will be ok with
bitcoin users having to pay fees for the service they're enjoying)?
If your answer is "never", I would prefer to hear it from you than
just concluding it by the lack of an answer.

From thomasv at electrum.org  Thu Jul 23 17:58:52 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Thu, 23 Jul 2015 19:58:52 +0200
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
Message-ID: <55B12B5C.3000108@electrum.org>

There is some room for optimization in the Electrum server:
 - the utxo database (patricia tree) should be made a binary tree.
 - the server is written in python, which is slow.

I am not too worried about the short-term; a block takes on average 15s
to process on my server. For example, here are the last blocks in my log:

[23/07/2015-17:11:57] catch_up: block 366604 (0.145s 27.278s)
[23/07/2015-17:37:55] catch_up: block 366605 (0.126s 24.453s)
[23/07/2015-17:50:23] catch_up: block 366606 (0.133s 21.666s)
[23/07/2015-18:03:22] catch_up: block 366607 (0.110s 31.680s)
[23/07/2015-18:11:14] catch_up: block 366608 (0.093s 18.269s)
[23/07/2015-18:26:38] catch_up: block 366609 (0.115s 27.925s)
[23/07/2015-18:29:07] catch_up: block 366610 (0.062s 8.163s)
[23/07/2015-18:44:18] catch_up: block 366611 (0.118s 21.294s)
[23/07/2015-18:52:14] catch_up: block 366612 (0.075s 12.535s)
[23/07/2015-18:58:54] catch_up: block 366613 (0.100s 17.857s)
[23/07/2015-19:04:18] catch_up: block 366614 (0.061s 11.174s)
[23/07/2015-19:10:31] catch_up: block 366615 (0.064s 10.151s)
[23/07/2015-19:11:04] catch_up: block 366616 (0.035s 2.962s)
[23/07/2015-19:19:53] catch_up: block 366617 (0.081s 13.125s)
[23/07/2015-19:25:23] catch_up: block 366618 (0.037s 8.377s)
[23/07/2015-19:28:08] catch_up: block 366619 (0.044s 3.984s)
[23/07/2015-19:30:36] catch_up: block 366620 (0.051s 6.105s)
[23/07/2015-19:40:05] catch_up: block 366621 (0.058s 14.632s)
[23/07/2015-19:42:10] catch_up: block 366622 (0.040s 4.143s)

That server is a Hetzner EX40 box, rented for 50 eur/month. Of course if
you run the electrum server on a cheap VPS, performance might not be as
good.



Le 23/07/2015 17:56, Slurms MacKenzie via bitcoin-dev a ?crit :
> Similar to the Bitcoin Node Speed Test, this is a quick quantitative look at how the Electrum server software handles under load. The Electrum wallet is extremely popular, and the distributed servers which power it are all hosted by volunteers without budget. The server requires a fully indexed Bitcoin Core daemon running, and produces sizable external index in order to allow SPV clients to quickly retrieve their history. 
> 
>     3.9G    electrum/utxo
>     67M     electrum/undo
>     19G     electrum/hist
>     1.4G    electrum/addr
>     24G     electrum/
> 
> Based on my own logs produced by the electrum-server console, it takes this server (Xeon, lots of memory, 7200 RPM RAID) approximately 3.7 minutes per megabyte of block to process into the index. This seems to hold true through the 10 or so blocks I have in my scroll buffer, the contents of blocks seem to be of approximately the same processing load. Continuing this trend with the current inter-block time of 9.8 minutes, an electrum-server instance running on modest-high end dedicated server is able to support up to 2.64 MB block sizes before permanently falling behind the chain. 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From tier.nolan at gmail.com  Thu Jul 23 17:59:40 2015
From: tier.nolan at gmail.com (Tier Nolan)
Date: Thu, 23 Jul 2015 18:59:40 +0100
Subject: [bitcoin-dev] BIP draft: Hardfork bit
In-Reply-To: <20150723162321.Horde.bphh__8AhyXa_m-YAYpiyw1@server47.web-hosting.com>
References: <20150723162321.Horde.bphh__8AhyXa_m-YAYpiyw1@server47.web-hosting.com>
Message-ID: <CAE-z3OWZGsSS2s1OZU5ScH7C4BcOtCb9mcz62TA7HZQe_=y0uA@mail.gmail.com>

On Thu, Jul 23, 2015 at 5:23 PM, jl2012 via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> 2) Full nodes and SPV nodes following original consensus rules may not be
> aware of the deployment of a hardfork. They may stick to an
> economic-minority fork and unknowingly accept devalued legacy tokens.
>

This change means that they are kicked off the main chain immediately when
the fork activates.

The change is itself a hard fork.  Clients have be updated to get the
benefits.

3) In the case which the original consensus rules are also valid under the
> new consensus rules, users following the new chain may unexpectedly reorg
> back to the original chain if it grows faster than the new one. People may
> find their confirmed transactions becoming unconfirmed and lose money.
>

I don't understand the situation here.  Is the assumption of a group of
miners suddenly switching (for example, they realise that they didn't
intend to support the new rules)?

>
> Flag block is constructed in a way that nodes with the original consensus
> rules must reject. On the other hand, nodes with the new consensus rules
> must reject a block if it is not a flag block while it is supposed to be.
> To achieve these goals, the flag block must 1) have the hardfork bit
> setting to 1, 2) include a short predetermined unique description of the
> hardfork anywhere in its coinbase, and 3) follow any other rules required
> by the hardfork. If these conditions are not fully satisfied, upgraded
> nodes shall reject the block.
>

Ok, so set the bit and then include BIP-GIT-HASH of the canonical BIP on
github in the coinbase?

Since it is a hard fork, the version field could be completely
re-purposed.  Set the bit and add the BIP number as the lower bits in the
version field.  This lets SPV clients check if they know about the hard
fork.

There network protocol could be updated to add getdata support for asking
for a coinbase only merkleblock.  This would allow SPV clients to obtain
the coinbase.

Automatic warning system: When a flag block is found on the network, full
> nodes and SPV nodes should look into its coinbase. They should alert their
> users and/or stop accepting incoming transactions if it is an unknown
> hardfork. It should be noted that the warning system could become a DoS
> vector if the attacker is willing to give up the block reward. Therefore,
> the warning may be issued only if a few blocks are built on top of the flag
> block in a reasonable time frame. This will in turn increase the risk in
> case of a real planned hardfork so it is up to the wallet programmers to
> decide the optimal strategy. Human warning system (e.g. the emergency alert
> system in Bitcoin Core) could fill the gap.
>

If the rule was that hard forks only take effect 100 blocks after the flag
block, then this problem is eliminated.

Emergency hard forks may still have to take effect immediately though, so
it would have to be a custom not a rule.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/3e7c184a/attachment.html>

From jameson.lopp at gmail.com  Thu Jul 23 18:10:22 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Thu, 23 Jul 2015 14:10:22 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
Message-ID: <CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>

On Thu, Jul 23, 2015 at 1:43 PM, Eric Lombrozo via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> On Jul 23, 2015, at 9:28 AM, Gavin Andresen via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I'd really like to move from "IMPOSSIBLE because...  (electrum hasn't been
> optimized
> (by the way: you should run on SSDs, LevelDB isn't designed for spinning
> disks),
> what if the network is attacked?  (attacked HOW???), current p2p network
> is using
> the simplest, stupidest possible block propagation algorithm...)"
>
> ... to "lets work together and work through the problems and scale it up."
>
>
> Let?s be absolutely clear about one thing - block size increases are *not*
> about scaling the network. Can we please stop promoting this falsehood? It
> doesn?t matter by what number we multiply the block size?we can NEVER
> satisfy the full demand if we insist on every single transaction from every
> single person everywhere in the world being on the blockchain?it?s just
> absurd.
>
>
Increasing block size only temporarily addresses one significant issue -
> how to postpone having to deal with transaction fees, which by design, are
> how the cost of operating the Bitcoin network (which is already very
> expensive) is supposed to be paid for ultimately. Suggesting we avoid
> dealing with this constitutes a new economic policy - dealing with it is
> the default economic policy we?ve all known about from the beginning?so
> please stop claiming otherwise.
>
>
Larger block sizes don't scale the network, they merely increase how much
load we allow the network to bear. On the flip side, the scalability
proposals will still require larger blocks if we are ever to support
anything close to resembling "mainstream" usage. This is not an either/or
proposition - we clearly need both.

- Jameson

> On Jul 23, 2015, at 9:50 AM, cipher anthem via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Why not help on a project that actually seems to offer great scalability
> like the lightning network? There have been great progress there.
>
>
> Exactly. There?s been tremendous progress here in addressing scalability,
> yet I don?t see you participating in that discussion, Gavin.
>
> On Jul 23, 2015, at 5:17 AM, Jorge Tim?n via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> But it seems to me that the "not now side" has no centralization
> concerns at all and their true position is "not ever hit the blocksize
> limit", that's the only explanation I can find to their lack of
> answers to the "when do you think we should allow users to notice that
> there's a limit in the blocksize to guarantee that the system can be
> decentralized?".
>
>
> I agree with what you?re saying, Jorge?but It?s even worse than that. The
> July 4th fork illustrated that the security model of the network itself
> could be at risk from the increasing costs in validation causing people to
> rely on others to validate for them?and increasing block size only makes
> the problem worse.
>
> - Eric Lombrozo
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/a658ea27/attachment-0001.html>

From jtimon at jtimon.cc  Thu Jul 23 18:12:33 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 20:12:33 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
References: <COL402-EAS482BCC1B2EFF6D50273832CD830@phx.gbl>
	<CAApLimjMPvXHM4McB+xBrho2hktz8Rr7QZyU-Dgbgd7sFdoyLw@mail.gmail.com>
Message-ID: <CABm2gDquCeB7F5X6Drv_LcFcUYL6kL45swaMeZY31tQyXqknyA@mail.gmail.com>

On Thu, Jul 23, 2015 at 1:42 AM, Cory Fields via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I'm not sure why Bitcoin Core and the rules and policies that it
> enforces are being conflated in this thread. There's nothing stopping
> us from adding the ability for the user to decide what their consensus
> parameters should be at runtime. In fact, that's already in use:
> ./bitcoind -testnet. As mentioned in another thread, the chain params
> could even come from a config file that the user could edit without
> touching the code.

For what is worth, here's yet another piece of code from the "doing
nothing" side:

https://github.com/bitcoin/bitcoin/pull/6382

It allows you to create a regtest-like testchain with a maximum block
size chosen at run time.
Rusty used a less generic testchain for testing 8 MB blocks:

http://rusty.ozlabs.org/?p=509

Unfortunately I don't know of anybody that has used my patch to test
any other size (maybe there's not that much interest in testing other
sizes after all?).

I'm totally in favor of preemptively adapting the code so that when a
new blocksize is to be deployed, adapting the code is not a problem.
Developers can agree on many changes in the code without users having
to agree on a concrete block size first.
I offer my help to do that. That's what I'm trying to do in #6382 and
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008961.html
but to my surprise that gets disregarded as "doing nothing" and as
"having a negative attitude", when not simply ignored.

From slurms at gmx.us  Thu Jul 23 18:12:35 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Thu, 23 Jul 2015 20:12:35 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>,
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
Message-ID: <trinity-4a084235-61c0-4c48-a4e2-eae912a67d8c-1437675155432@3capp-mailcom-bs03>

> Sent: Thursday, July 23, 2015 at 7:28 PM
> From: "Gavin Andresen via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: "Tom Harding" <tomh at thinlink.com>
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Bitcoin Core and hard forks
> 
> I'm frankly tired of all the negativity here

You complained about the lack of quantitative analysis being used, I gave it to you. There's nothing "negative" about displaying data which doesn't completely back up what your position is, I made a sensible conclusion based on the facts I have in front of me. Ignoring the information I collected and presented for you is incredibly childish. 


> I'd really like to move from "IMPOSSIBLE because...  (electrum hasn't been optimized
> (by the way: you should run on SSDs, LevelDB isn't designed for spinning disks),

I should stress that I didn't present that timing information as a dig against their software, it just happens to be something I have direct access to and can prevent clean data about. The point that I was attempting to make is that Bitcoin Core isn't the only piece of software in the ecosystem with performance problems, given that a large portion of users have Electrum wallets it would be insane not to consider the impact changes will have on the people that charitably run servers for the community. 

By the way, is that an offer to buy my dedicated server some new SSDs? 


> work with people like Tom and Mike who have a 'lets get it done' attitude, and
> focus on what it will take to scale up.

Scaling up isn't tweaking parameters and ignoring the brickwork falling around your head. You mention that you think the merkle tree can hold an unlimited amount of information, that's all very well so long as people can actually validate the thing. Miners aren't even willing to validate their own blocks at the peril of losing $7000 USD (on two occasions now), so why would anybody else? 

From robertlearney at mac.com  Thu Jul 23 17:14:06 2015
From: robertlearney at mac.com (Robert Learney)
Date: Thu, 23 Jul 2015 18:14:06 +0100
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <trinity-f82ce2cb-7260-4b58-a577-9a1b6afad214-1437670245144@3capp-mailcom-bs02>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<trinity-f82ce2cb-7260-4b58-a577-9a1b6afad214-1437670245144@3capp-mailcom-bs02>
Message-ID: <DA1298CE-1C3B-4153-A72D-A0F89D6F1833@mac.com>

That?s not exactly what?s happened though, is it Cipher? Gavin put forward 20Mb then after analysis and discussion has moved to 8Mb, whereas the other camp of core developers is firmly stuck in the ?1Mb or bust? group.

-Rob.

> On 23 Jul 2015, at 17:50, cipher anthem via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Why not help on a project that actually seems to offer great scalability like the lightning network? There have been great progress there.
>  
> Seems like you did your calculations some time ago to prove that your increase is reasonable, yet when others come with different numbers that don't support your position you say it doesn't matter.
>  
> Sent: Thursday, July 23, 2015 at 4:28 PM
> From: "Gavin Andresen via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: "Tom Harding" <tomh at thinlink.com>
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Bitcoin Core and hard forks
> On Thu, Jul 23, 2015 at 12:17 PM, Tom Harding via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <x-msg://14/bitcoin-dev at lists.linuxfoundation.org>> wrote:
> On 7/23/2015 5:17 AM, Jorge Tim?n via bitcoin-dev wrote:
> > they will simply advance the front and start another battle, because
> > their true hidden faction is the "not ever side". Please, Jeff, Gavin,
> > Mike, show me that I'm wrong on this point. Please, answer my question
> > this time. If "not now", then when?
> 
> Bitcoin has all the hash power.  The merkle root has effectively
> infinite capacity.  We should be asking HOW to scale the supporting
> information propagation system appropriately, not WHEN to limit the
> capacity of the primary time-stamping machine.
> 
> We haven't tried yet.  I can't answer for the people you asked, but
> personally I haven't thought much about when we should declare failure.
>  
> Yes! Lets plan for success!
>  
> I'd really like to move from "IMPOSSIBLE because...  (electrum hasn't been optimized
> (by the way: you should run on SSDs, LevelDB isn't designed for spinning disks),
> what if the network is attacked?  (attacked HOW???), current p2p network is using
> the simplest, stupidest possible block propagation algorithm...)"
>  
> ... to "lets work together and work through the problems and scale it up."
>  
> I'm frankly tired of all the negativity here; so tired of it I've decided to mostly ignore
> all the debate for a while, not respond to misinformation I see being spread
> (like "miners have some incentive to create slow-to-propagate blocks"),
> work with people like Tom and Mike who have a 'lets get it done' attitude, and
> focus on what it will take to scale up.
>  
> --
> --
> Gavin Andresen
>  
> _______________________________________________ bitcoin-dev mailing list bitcoin-dev at lists.linuxfoundation.org https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>_______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/a80e6328/attachment.html>

From eric at voskuil.org  Thu Jul 23 18:21:17 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Thu, 23 Jul 2015 11:21:17 -0700
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>
Message-ID: <55B1309D.7020209@voskuil.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Does "to process into the index" include time for transport and/or
block validation (presumably by bitcoind) or this this exclusively the
time for Electrum Server to index a validated block?

e

On 07/23/2015 08:56 AM, Slurms MacKenzie via bitcoin-dev wrote:

> Similar to the Bitcoin Node Speed Test, this is a quick
> quantitative
look at how the Electrum server software handles under load. The
Electrum wallet is extremely popular, and the distributed servers
which power it are all hosted by volunteers without budget. The server
requires a fully indexed Bitcoin Core daemon running, and produces
sizable external index in order to allow SPV clients to quickly
retrieve their history.
> 
> 
> 3.9G    electrum/utxo 67M     electrum/undo 19G     electrum/hist 
> 1.4G    electrum/addr 24G     electrum/
> 
> 
> Based on my own logs produced by the electrum-server console, it
takes this server (Xeon, lots of memory, 7200 RPM RAID) approximately
3.7 minutes per megabyte of block to process into the index. This
seems to hold true through the 10 or so blocks I have in my scroll
buffer, the contents of blocks seem to be of approximately the same
processing load. Continuing this trend with the current inter-block
time of 9.8 minutes, an electrum-server instance running on
modest-high end dedicated server is able to support up to 2.64 MB
block sizes before permanently falling behind the chain.


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVsTCdAAoJEDzYwH8LXOFOLpgIAIAe5QBTTgpe2kyYrqamUKNI
uasljmNQi3In/rdxNm9Ga+vwTsBg7f4v/xHVrQYAGxdjjZxs0h9bOmAvuc+p2fad
ZeHC/vewrtLxB2aVj5JVbSk5ik57ePyk3SmghTpGMAhgTIWkceIrxR+Fq7TFOlqn
NGnTuBSSsGL9nY57hIFwMJb2CKdPwMVLL/0gjVQ9Llqt+Fu31eSRhDzHOvJnkofO
xwVrVGgST2GE73np3WA0jvzRHjFgsPnQknhjLGQiTgDKsKL0BywE9/Vke2zVNyP7
cAlTQoScEal++9u0h3D475lsxv43V0Rxafc7W0a/OyfXujJ2AlixgV8PlLwhvaY=
=DK5K
-----END PGP SIGNATURE-----

From elombrozo at gmail.com  Thu Jul 23 18:21:25 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 11:21:25 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <DA1298CE-1C3B-4153-A72D-A0F89D6F1833@mac.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<trinity-f82ce2cb-7260-4b58-a577-9a1b6afad214-1437670245144@3capp-mailcom-bs02>
	<DA1298CE-1C3B-4153-A72D-A0F89D6F1833@mac.com>
Message-ID: <C7DED50B-0881-4015-8BA6-EAE30EDFB7C5@gmail.com>


> On Jul 23, 2015, at 10:14 AM, Robert Learney via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> That?s not exactly what?s happened though, is it Cipher? Gavin put forward 20Mb then after analysis and discussion has moved to 8Mb, whereas the other camp of core developers is firmly stuck in the ?1Mb or bust? group.

The issue isn?t really whether it?s 1MB or 2MB or 4MB or 8MB or whatever. First of all, the burden of justifying this change should be on those proposing a hardfork. The default is to not have a hard fork. Second of all, it?s not really about *whether* the block size is increased?but about *when* and *how* it is increased. There?s a good argument to be made that right now it is more important to address issues such as the fact that validation is so expensive (which as others and myself have pointed out has led to a collapse of the security model in the past, requiring manual intervention to temporarily ?fix?)?and the fact that we don?t yet have great solutions to dealing with fees, which are a crucial component of the design of the protocol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/262a77d2/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/262a77d2/attachment-0001.sig>

From slurms at gmx.us  Thu Jul 23 18:26:41 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Thu, 23 Jul 2015 20:26:41 +0200
Subject: [bitcoin-dev] Electrum Server Speed Test
In-Reply-To: <55B1309D.7020209@voskuil.org>
References: <trinity-c358bbcc-a5d1-487f-9aae-730241fc4eac-1437666965282@3capp-mailcom-bs12>,
	<55B1309D.7020209@voskuil.org>
Message-ID: <trinity-5fc3c701-4768-45bb-9a49-1214362e68be-1437676001187@3capp-mailcom-bs03>

That's purely the time on the wall for electrum-server, validation in bitcoind happens before. As ThomasV has pointed out it is significantly faster with a solid state disk (but much more expensive to operate), if we get to that point it'll only be expensive servers with lots of SSD space which are able to keep up with the current software. 

I was mostly trying to make a point about other software being impacted in ways which aren't really discussed, rather than a specific dig about electrum-server. I should have made that more clear. 


> Sent: Thursday, July 23, 2015 at 9:21 PM
> From: "Eric Voskuil" <eric at voskuil.org>
> To: "Slurms MacKenzie" <slurms at gmx.us>, bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Electrum Server Speed Test
>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Does "to process into the index" include time for transport and/or
> block validation (presumably by bitcoind) or this this exclusively the
> time for Electrum Server to index a validated block?
> 
> e
> 

From jtimon at jtimon.cc  Thu Jul 23 18:47:08 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 20:47:08 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <DA1298CE-1C3B-4153-A72D-A0F89D6F1833@mac.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<trinity-f82ce2cb-7260-4b58-a577-9a1b6afad214-1437670245144@3capp-mailcom-bs02>
	<DA1298CE-1C3B-4153-A72D-A0F89D6F1833@mac.com>
Message-ID: <CABm2gDoGUZ2eC6Jogt6zA6vWOkqZyteb+kUYqs-E54PL=UEyiQ@mail.gmail.com>

On Thu, Jul 23, 2015 at 7:14 PM, Robert Learney via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> That?s not exactly what?s happened though, is it Cipher? Gavin put forward
> 20Mb then after analysis and discussion has moved to 8Mb, whereas the other
> camp of core developers is firmly stuck in the ?1Mb or bust? group.

His proposals actually end up with 20 GB and 8 GB respectively. I'm
not sure if you count me on the ?1Mb or bust? group, but I'm not
firmly stuck anywhere.
I've never said that the block size should never be increased, that it
shouldn't change now, that 8 MB is too much or anything like that
because I simply don't have the data (and I don't think anybody has
it). I invite people to collect that data and I've written a patch to
bitcoin to facilitate that task.
Do you really think that's an obstructionist attitude?

My position could be summarized like this:

- We're going to hit the limit tomorrow, and Bitcoin will fail when we do.
- I'm not so sure we will hit the limit tomorrow but even accepting
the premise, this is a non sequitur. Fees will probably rise, but
that's not necessarily a bad thing. A limit that is meaningful in
practice must happen eventually, mustn't it? If not now, when are we
planning to let that "disaster" happen?
- That's too far in the future to worry about it.
- Does that mean waiting, say, 4 more subsidy halvings, 8? 10?
- Just don't worry about it

I'm not opposing to anything, I'm just patiently waiting for some
answers that never seem to arrive.
If people interpret questions or the fact that when people use
fallacious arguments I like to identify the concrete fallacy they're
using and state it so publicly (I do it for sport and "against all
sides") as "opposition", I don't really think I can do anything about
it.

From hearn at vinumeris.com  Thu Jul 23 18:57:04 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Thu, 23 Jul 2015 20:57:04 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <trinity-4a084235-61c0-4c48-a4e2-eae912a67d8c-1437675155432@3capp-mailcom-bs03>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<trinity-4a084235-61c0-4c48-a4e2-eae912a67d8c-1437675155432@3capp-mailcom-bs03>
Message-ID: <CA+w+GKR3tuG4bhk+ArEF6OqPQOeO3kE-LPdg2u0bD4bYENq=5w@mail.gmail.com>

>
> You complained about the lack of quantitative analysis being used, I gave
> it to you. There's nothing "negative" about displaying data which doesn't
> completely back up what your position is, I made a sensible conclusion
> based on the facts I have in front of me. Ignoring the information I
> collected and presented for you is incredibly childish.
>

He hasn't ignored you, and he wasn't responding to your email specifically
but rather the general attitude displayed in this forum for the last
several months (and I'd argue the last year or so).

Your data is interesting but ultimately tell us what we already know - that
the next bottleneck after the hard coded limit could easily be propagation
speed. The solution is likely to be a better protocol. Matt's custom
network already has optimised things, rolling some of those ideas into the
P2P protocol may be a good place to start, or something fancier like IBLTs.

Regardless, the *next* bottleneck is not the protocol, it's the hard cap.

So the conclusion remains unchanged: Bitcoin must grow, and solutions for
scaling it up will be found as the need arises.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/23883077/attachment.html>

From elombrozo at gmail.com  Thu Jul 23 19:14:50 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 12:14:50 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
Message-ID: <6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>


> On Jul 23, 2015, at 11:10 AM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
> 
> Larger block sizes don't scale the network, they merely increase how much load we allow the network to bear.

Very well put, Jameson. And the cost of bearing this load must be paid for. And unless we?re willing to accept that computational resources are finite and subject to the same economic issues as any other finite resource, our incentive model collapses the security of the network will be significantly at risk. Whatever your usability concerns may be regarding fees, when the security model?s busted usability issues are moot.

Larger blocks support more transactions?but they also incur ?(n) overhead in bandwidth, CPU, and space. These are finite resources that must be paid for somehow?and as we all already know miners are willing to cut corners on all this and push the costs onto others (not to mention wallets and online block explorers). And who can really blame them? It?s rational behavior given the skewed incentives.

> On the flip side, the scalability proposals will still require larger blocks if we are ever to support anything close to resembling "mainstream" usage. This is not an either/or proposition - we clearly need both.

Mainstream usage of cryptocurrency will be enabled primarily by direct party-to-party contract negotiation?with the use of the blockchain primarily as a dispute resolution mechanism. The block size isn?t about scaling but about supply and demand of finite resources. As demand for block space increases, we can address it either by increasing computational resources (block size) or by increasing fees. But to do the former we need a way to offset the increase in cost by making sure that those who contribute said resources have incentive to do so.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/6b2ba5e8/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/6b2ba5e8/attachment.sig>

From jl2012 at xbt.hk  Thu Jul 23 19:26:33 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Thu, 23 Jul 2015 19:26:33 +0000
Subject: [bitcoin-dev] BIP draft: Hardfork bit
In-Reply-To: <CAE-z3OWZGsSS2s1OZU5ScH7C4BcOtCb9mcz62TA7HZQe_=y0uA@mail.gmail.com>
References: <20150723162321.Horde.bphh__8AhyXa_m-YAYpiyw1@server47.web-hosting.com>
	<CAE-z3OWZGsSS2s1OZU5ScH7C4BcOtCb9mcz62TA7HZQe_=y0uA@mail.gmail.com>
Message-ID: <20150723192633.Horde.cGMZGo9Ji0-_9HZhcSUpww5@server47.web-hosting.com>


Quoting Tier Nolan via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>:

> On Thu, Jul 23, 2015 at 5:23 PM, jl2012 via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> 2) Full nodes and SPV nodes following original consensus rules may not be
>> aware of the deployment of a hardfork. They may stick to an
>> economic-minority fork and unknowingly accept devalued legacy tokens.
>>
>
> This change means that they are kicked off the main chain immediately when
> the fork activates.
>
> The change is itself a hard fork.  Clients have be updated to get the
> benefits.

I refrain from calling it the "main chain". I use "original chain" and  
"new chain" instead as I make no assumption about the distribution of  
mining power. This BIP still works when we have a 50/50 hardfork. The  
main point is to protect all users on both chains, and allow them to  
make an informed choice.


> 3) In the case which the original consensus rules are also valid under the
>> new consensus rules, users following the new chain may unexpectedly reorg
>> back to the original chain if it grows faster than the new one. People may
>> find their confirmed transactions becoming unconfirmed and lose money.
>>
>
> I don't understand the situation here.  Is the assumption of a group of
> miners suddenly switching (for example, they realise that they didn't
> intend to support the new rules)?
>

Again, as I make no assumption about the mining power distribution,  
the new chain may actually have less miner support. Without any  
protection (AFAIK, for example, BIP100, 101, 102), the weaker new  
chain will get 51%-attacked by the original chain constantly.


>>
>> Flag block is constructed in a way that nodes with the original consensus
>> rules must reject. On the other hand, nodes with the new consensus rules
>> must reject a block if it is not a flag block while it is supposed to be.
>> To achieve these goals, the flag block must 1) have the hardfork bit
>> setting to 1, 2) include a short predetermined unique description of the
>> hardfork anywhere in its coinbase, and 3) follow any other rules required
>> by the hardfork. If these conditions are not fully satisfied, upgraded
>> nodes shall reject the block.
>>
>
> Ok, so set the bit and then include BIP-GIT-HASH of the canonical BIP on
> github in the coinbase?

I guess the git hash is not known until the code is written? (correct  
me if I'm wrong) As the coinbase message is consensus-critical, it  
must be part of the source code and therefore you can't use any kind  
of hash of the code itself (a chicken-and-egg problem)

> Since it is a hard fork, the version field could be completely
> re-purposed.  Set the bit and add the BIP number as the lower bits in the
> version field.  This lets SPV clients check if they know about the hard
> fork.

This may not be compatible with the other version bits voting mechanisms.

> There network protocol could be updated to add getdata support for asking
> for a coinbase only merkleblock.  This would allow SPV clients to obtain
> the coinbase.

Yes


> Automatic warning system: When a flag block is found on the network, full
>> nodes and SPV nodes should look into its coinbase. They should alert their
>> users and/or stop accepting incoming transactions if it is an unknown
>> hardfork. It should be noted that the warning system could become a DoS
>> vector if the attacker is willing to give up the block reward. Therefore,
>> the warning may be issued only if a few blocks are built on top of the flag
>> block in a reasonable time frame. This will in turn increase the risk in
>> case of a real planned hardfork so it is up to the wallet programmers to
>> decide the optimal strategy. Human warning system (e.g. the emergency alert
>> system in Bitcoin Core) could fill the gap.
>>
>
> If the rule was that hard forks only take effect 100 blocks after the flag
> block, then this problem is eliminated.
>
> Emergency hard forks may still have to take effect immediately though, so
> it would have to be a custom not a rule.

The flag block itself is a hardfork already and old miners will not  
mine on top of the flag block. So your suggestion won't be helpful in  
this situation.

To make it really meaningful, we need to consume one more bit of the  
'version' field ("notice bit"). Supporting miners will turn on the  
notice bit, and include a message in coinbase ("notice block"). When a  
full node/SPV node find many notice blocks with the same coinbase  
message, they could bet that the subsequent flag block is a legit one.  
However, an attacker may still troll you by injecting an invalid flag  
block after many legit notice blocks. So I'm not sure if it is worth  
the added complexity.




From pete at petertodd.org  Thu Jul 23 19:29:05 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 23 Jul 2015 19:29:05 +0000
Subject: [bitcoin-dev] Process for BIP number allocation
In-Reply-To: <CAPswA9yU8MkbS_7CkJBmRTTxBdZ+2fx7FetGaqeHMZGG0G=1eA@mail.gmail.com>
References: <CAPswA9yU8MkbS_7CkJBmRTTxBdZ+2fx7FetGaqeHMZGG0G=1eA@mail.gmail.com>
Message-ID: <E1C2C971-03EB-47F6-9879-D6EC659404D4@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 23 July 2015 06:21:55 GMT-04:00, Kalle Rosenbaum via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>Hi all
>
>I suggest that we add to the "BIP Editor Responsibilities & Workflow"
>section of BIP0001 that if the BIP editor for some reason won't handle
>the BIP within a week, he/she should notify the author within that
>same week with an estimate on when it will be handled.
>
>Maybe we could extend it to two weeks instead, the important thing is
>that the author knows what to expect.
>
>I'm trying to get BIP numbers allocated for Proof of Payment. I have
>requested it from the BIP editor Gregory Maxwell with CC this list. I
>also emailed Gregory in private about it. So far I have not seen any
>reaction to my requests.

To be clear, where is an implementation of your proposed BIP?

The philosophy of the process - particularly for non-consensus BIPs - is running code, preferably in production. An actual number for the standard that code implements isn't a barrier to that process.

Remember that it's convenient for all if the number of BIPs out there isn't significantly higher than the number of actual standards in place that are being used.


-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsUBy
AAoJEMCF8hzn9Lnc47AIAI11FdNBCFr9TybCvxKS32Idk4aZ4fveJ6ucHZx1PWPl
lzoz/CJBZGolWF9jWnpyiCnNxl64MjflNxi62ZD+VS4SEl0uHcYXdqXsNQzk9OoK
bZFXHJ57jZlHCwpwiLM72EWN6AZG/XZZFXisNRAvoYqryHdb5dDmVok0wPH87qOH
PBTlspyaKH4/OFDpslCdoDTLHcMxlasiyqNdC5NxC7eB1WpEtyGbOd1twvNeNH00
1opJNuajiUm1vJEhMS67a9DhfnYf9/3TDRtkc0lrYfF3r1n2aVtyzlPcJANX/cWa
7L9HtC4WpVLqny0AiTs5dK6DxPIUy/u2Q9yFZ2oL6dM=
=RW4h
-----END PGP SIGNATURE-----


From gavinandresen at gmail.com  Thu Jul 23 19:35:10 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 23 Jul 2015 15:35:10 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
Message-ID: <CABsx9T2wF+VfvPDRmyj38rg=6YogZKtg+JCSjtg1Mn7SSJ=LzA@mail.gmail.com>

On Thu, Jul 23, 2015 at 3:14 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

> Mainstream usage of cryptocurrency will be enabled primarily by direct
> party-to-party contract negotiation?with the use of the blockchain
> primarily as a dispute resolution mechanism. The block size isn?t about
> scaling but about supply and demand of finite resources. As demand for
> block space increases, we can address it either by increasing computational
> resources (block size) or by increasing fees. But to do the former we need
> a way to offset the increase in cost by making sure that those who
> contribute said resources have incentive to do so.


There are so many things wrong with this paragraph I just can't let it
slide.

"Mainstream usage will be enabled primarily by..."  Maybe. Maybe not, we
don't know what use case(s) will primarily take cryptocurrency mainstream.
I believe it is a big mistake to pick one and bet "THIS is going to be the
winner".

"we can address it either by... or..."  False dichotomy. There are lots of
things we can do to decrease costs, and a lot of things have ALREADY been
done (e.g. running a pruned full node).  I HATE the "it must be this or
that" "us or them" attitude, it fosters unproductive bickering and
negativity.

(and yes, I'm human, I'm sure you can find instances in the recent past
where I did it, too... mea culpa)

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/76ddbef2/attachment.html>

From elombrozo at gmail.com  Thu Jul 23 19:39:33 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 12:39:33 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABsx9T2wF+VfvPDRmyj38rg=6YogZKtg+JCSjtg1Mn7SSJ=LzA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CABsx9T2wF+VfvPDRmyj38rg=6YogZKtg+JCSjtg1Mn7SSJ=LzA@mail.gmail.com>
Message-ID: <122B1683-E67C-43BE-830D-029AAB03CE80@gmail.com>


> On Jul 23, 2015, at 12:35 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> 
> 
> On Thu, Jul 23, 2015 at 3:14 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
> Mainstream usage of cryptocurrency will be enabled primarily by direct party-to-party contract negotiation?with the use of the blockchain primarily as a dispute resolution mechanism. The block size isn?t about scaling but about supply and demand of finite resources. As demand for block space increases, we can address it either by increasing computational resources (block size) or by increasing fees. But to do the former we need a way to offset the increase in cost by making sure that those who contribute said resources have incentive to do so.
> 
> There are so many things wrong with this paragraph I just can't let it slide.
> 
> "Mainstream usage will be enabled primarily by..."  Maybe. Maybe not, we don't know what use case(s) will primarily take cryptocurrency mainstream. I believe it is a big mistake to pick one and bet "THIS is going to be the winner".
> 
> "we can address it either by... or..."  False dichotomy. There are lots of things we can do to decrease costs, and a lot of things have ALREADY been done (e.g. running a pruned full node).  I HATE the "it must be this or that" "us or them" attitude, it fosters unproductive bickering and negativity.
> 
> (and yes, I'm human, I'm sure you can find instances in the recent past where I did it, too... mea culpa)
> 
> --
> --
> Gavin Andresen
> 

Regarding rhetoric, fair enough, Gavin - I?m human and I could be wrong. It is my educated best guess, a conclusion I?ve drawn given my understanding of computer science, economics, and what?s been happening in this space.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/a2e0c0b4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/a2e0c0b4/attachment.sig>

From elombrozo at gmail.com  Thu Jul 23 19:51:29 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 12:51:29 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABsx9T2wF+VfvPDRmyj38rg=6YogZKtg+JCSjtg1Mn7SSJ=LzA@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CABsx9T2wF+VfvPDRmyj38rg=6YogZKtg+JCSjtg1Mn7SSJ=LzA@mail.gmail.com>
Message-ID: <CFD51C0D-3233-4509-9B1A-74D22972B550@gmail.com>


> On Jul 23, 2015, at 12:35 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:
> 
> There are lots of things we can do to decrease costs, and a lot of things have ALREADY been done (e.g. running a pruned full node).

I also wanted to point out I fully agree with you that there are still many optimizations we could do to reduce costs, and think many of these things are certainly worth doing. However, there?s only so much we can do in this regard. Sooner or later we still run up against theoretical limitations. These optimizations can reduce costs by some factor?but they are highly unlikely to overcome the ?(n) validation complexity barring some major algorithmic breakthrough (and perhaps allowing for nondeterminism, perhaps accepting a negligible but finite error probability).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/8b4fd65c/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/8b4fd65c/attachment-0001.sig>

From jameson.lopp at gmail.com  Thu Jul 23 19:52:11 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Thu, 23 Jul 2015 15:52:11 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
Message-ID: <CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>

On Thu, Jul 23, 2015 at 3:14 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:

>
> On Jul 23, 2015, at 11:10 AM, Jameson Lopp <jameson.lopp at gmail.com> wrote:
>
> Larger block sizes don't scale the network, they merely increase how much
> load we allow the network to bear.
>
>
> Very well put, Jameson. And the cost of bearing this load must be paid
> for. And unless we?re willing to accept that computational resources are
> finite and subject to the same economic issues as any other finite
> resource, our incentive model collapses the security of the network will be
> significantly at risk. Whatever your usability concerns may be regarding
> fees, when the security model?s busted usability issues are moot.
>
> Larger blocks support more transactions?but they also incur ?(n) overhead
> in bandwidth, CPU, and space. These are finite resources that must be paid
> for somehow?and as we all already know miners are willing to cut corners on
> all this and push the costs onto others (not to mention wallets and online
> block explorers). And who can really blame them? It?s rational behavior
> given the skewed incentives.
>

Running a node certainly has real-world costs that shouldn't be ignored.
There are plenty of advocates who argue that Bitcoin should strive to keep
it feasible for the average user to run their own node (as opposed to
Satoshi's vision of beefy servers in data centers.) My impression is that
even most of these advocates agree that it will be acceptable to eventually
increase block sizes as resources become faster and cheaper because it
won't be 'pricing out' the average user from running their own node. If
this is the case, it seems to me that we have a problem given that there is
no established baseline for the acceptable performance / hardware cost
requirements to run a node. I'd really like to see further clarification
from these advocates around the acceptable cost of running a node and how
we can measure the global reduction in hardware and bandwidth costs in
order to establish a baseline that we can use to justify additional
resource usage by nodes.

- Jameson

>
> On the flip side, the scalability proposals will still require larger
> blocks if we are ever to support anything close to resembling "mainstream"
> usage. This is not an either/or proposition - we clearly need both.
>
>
> Mainstream usage of cryptocurrency will be enabled primarily by direct
> party-to-party contract negotiation?with the use of the blockchain
> primarily as a dispute resolution mechanism. The block size isn?t about
> scaling but about supply and demand of finite resources. As demand for
> block space increases, we can address it either by increasing computational
> resources (block size) or by increasing fees. But to do the former we need
> a way to offset the increase in cost by making sure that those who
> contribute said resources have incentive to do so.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/9407b8c4/attachment.html>

From marcel at jamin.net  Thu Jul 23 19:56:36 2015
From: marcel at jamin.net (Marcel Jamin)
Date: Thu, 23 Jul 2015 21:56:36 +0200
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <25607701-D3ED-4D0D-A5B3-C02B727671BF@petertodd.org>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
	<25607701-D3ED-4D0D-A5B3-C02B727671BF@petertodd.org>
Message-ID: <CAAUq485RqbNpBa6i34H517Oo4+MHkT683inwU-sMX3Y=vBTwqg@mail.gmail.com>

He measured the upload capacity of the peers by downloading from them, or
am I being dumb? :)


2015-07-23 18:05 GMT+02:00 Peter Todd via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org>:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
>
>
> On 23 July 2015 10:19:59 GMT-04:00, slurms--- via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> >This does not support the theory that the network has the available
> >bandwidth for increased block sizes, as in its current state 37% of
> >nodes would fail to upload a 20MB block to a single peer in under 20
> >seconds (referencing a number quoted by Gavin). If the bar for
> >suitability is placed at taking only 1% of the block time (6 seconds)
> >to upload one block to one peer, then 69% of the network fails for 20MB
> >blocks. For comparison, only 10% fail this metric for 1MB blocks.
>
> Note how due to bandwidth being generally asymetric your findings are
> probably optimistic - you've measured download capacity. On top of that
> upload is further reduced by the fact that multiple peers at once need to
> be sent blocks for reliability.
>
> Secondly you're measuring a network that isn't under attack - we need
> significant additional margin to resist attack as performance is
> consensus-critical.
>
> -----BEGIN PGP SIGNATURE-----
>
> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsRCj
> AAoJEMCF8hzn9Lnc47AIAIQbznavjd2Rbqxeq5a3GLqeYoI4BZIQYqfWky+6OQtq
> yGRKaqPtGuES5y9L0k7efivT385mOl87PWnWMy61xxZ9FJgoS+YHkEx8K4tfgfA2
> yLOKzeFSar2ROCcjHYyPWa2XXjRbNmiLzfNuQyIBArg/Ch9//iXUUM+GG0mChF5k
> nUxLstXgXDNh5H8xkHeLi4lEbt9HFiwcZnT1Tzeo2dvVTujrtyNb/zEhNZScMXDc
> UOlT8rBLxzHlytKdXt1GNKIq0feTRJNbreBh7/EB4nYTT54CItaaVXul0LdHd5/2
> kgKtdbUdeyaRUKrKcvxiuIwclyoOuRQp0DZThsB262o=
> =tBUM
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/a4aa2bc7/attachment.html>

From fireduck at gmail.com  Thu Jul 23 19:57:38 2015
From: fireduck at gmail.com (=?UTF-8?B?Sm9zZXBoIEdsZWFzb24g4pGI?=)
Date: Thu, 23 Jul 2015 19:57:38 +0000
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <CAAUq485RqbNpBa6i34H517Oo4+MHkT683inwU-sMX3Y=vBTwqg@mail.gmail.com>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
	<25607701-D3ED-4D0D-A5B3-C02B727671BF@petertodd.org>
	<CAAUq485RqbNpBa6i34H517Oo4+MHkT683inwU-sMX3Y=vBTwqg@mail.gmail.com>
Message-ID: <CA+ASnrGrBr6-QGaMx6j8aGZc+q+W6WpGy3okJRMa+TwHsnwxYg@mail.gmail.com>

That is how I read it as well.


On Thu, Jul 23, 2015 at 12:56 PM Marcel Jamin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> He measured the upload capacity of the peers by downloading from them, or
> am I being dumb? :)
>
>
> 2015-07-23 18:05 GMT+02:00 Peter Todd via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org>:
>
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA256
>>
>>
>>
>> On 23 July 2015 10:19:59 GMT-04:00, slurms--- via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> >This does not support the theory that the network has the available
>> >bandwidth for increased block sizes, as in its current state 37% of
>> >nodes would fail to upload a 20MB block to a single peer in under 20
>> >seconds (referencing a number quoted by Gavin). If the bar for
>> >suitability is placed at taking only 1% of the block time (6 seconds)
>> >to upload one block to one peer, then 69% of the network fails for 20MB
>> >blocks. For comparison, only 10% fail this metric for 1MB blocks.
>>
>> Note how due to bandwidth being generally asymetric your findings are
>> probably optimistic - you've measured download capacity. On top of that
>> upload is further reduced by the fact that multiple peers at once need to
>> be sent blocks for reliability.
>>
>> Secondly you're measuring a network that isn't under attack - we need
>> significant additional margin to resist attack as performance is
>> consensus-critical.
>>
>> -----BEGIN PGP SIGNATURE-----
>>
>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsRCj
>> AAoJEMCF8hzn9Lnc47AIAIQbznavjd2Rbqxeq5a3GLqeYoI4BZIQYqfWky+6OQtq
>> yGRKaqPtGuES5y9L0k7efivT385mOl87PWnWMy61xxZ9FJgoS+YHkEx8K4tfgfA2
>> yLOKzeFSar2ROCcjHYyPWa2XXjRbNmiLzfNuQyIBArg/Ch9//iXUUM+GG0mChF5k
>> nUxLstXgXDNh5H8xkHeLi4lEbt9HFiwcZnT1Tzeo2dvVTujrtyNb/zEhNZScMXDc
>> UOlT8rBLxzHlytKdXt1GNKIq0feTRJNbreBh7/EB4nYTT54CItaaVXul0LdHd5/2
>> kgKtdbUdeyaRUKrKcvxiuIwclyoOuRQp0DZThsB262o=
>> =tBUM
>> -----END PGP SIGNATURE-----
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/1b3c9718/attachment.html>

From jeremy.l.rubin.travel at gmail.com  Thu Jul 23 20:12:19 2015
From: jeremy.l.rubin.travel at gmail.com (Jeremy Rubin)
Date: Fri, 24 Jul 2015 04:12:19 +0800
Subject: [bitcoin-dev] BIP Draft: Minimum Viable TXIn Hash
Message-ID: <CAJ+8mENU5kQuKg=-UAh05qGEPS1OuiKTgXFVGcF0Z0gsRo+Czw@mail.gmail.com>

Please see the following draft BIP which should decrease the amount of
bytes needed per transaction. This is very much a draft BIP, as the design
space for this type of improvement is large.

This BIP can be rolled out by a soft fork.

Improvements are around 12% for  standard "one in two out" txn, and even
more with more inputs hashes.

https://gist.github.com/JeremyRubin/e175662d2b8bf814a688
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/2088f57c/attachment-0001.html>

From jtimon at jtimon.cc  Thu Jul 23 20:26:19 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 22:26:19 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
Message-ID: <CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>

On Thu, Jul 23, 2015 at 9:52 PM, Jameson Lopp via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Running a node certainly has real-world costs that shouldn't be ignored.
> There are plenty of advocates who argue that Bitcoin should strive to keep
> it feasible for the average user to run their own node (as opposed to
> Satoshi's vision of beefy servers in data centers.) My impression is that
> even most of these advocates agree that it will be acceptable to eventually
> increase block sizes as resources become faster and cheaper because it won't
> be 'pricing out' the average user from running their own node. If this is
> the case, it seems to me that we have a problem given that there is no
> established baseline for the acceptable performance / hardware cost
> requirements to run a node. I'd really like to see further clarification
> from these advocates around the acceptable cost of running a node and how we
> can measure the global reduction in hardware and bandwidth costs in order to
> establish a baseline that we can use to justify additional resource usage by
> nodes.

Although I don't have a concrete proposals myself, I agree that
without having any common notion of what the "minimal target hardware"
looks like, it is very difficult to discuss other things that depend
on that.
If there's data that shows that a 100 usd raspberry pi with a 1 MB
connection in say, India (I actually have no idea about internet
speeds there) size X is a viable full node, then I don't think anybody
can reasonably oppose to rising the block size to X, and such a
hardfork can perfectly be uncontroversial.
I'm exaggerating ultra-low specifications, but it's just an example to
illustrate your point.
There was a thread about formalizing such "minimum hardware
requirements", but I think the discussion simply finished there:
- Let's do this
- Yeah, let's do it
- +1, let's have concrete values, I generally agree.

From elombrozo at gmail.com  Thu Jul 23 20:52:26 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 13:52:26 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
Message-ID: <D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>

> On Thu, Jul 23, 2015 at 3:14 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:
> Mainstream usage of cryptocurrency will be enabled primarily by direct party-to-party contract negotiation?with the use of the blockchain primarily as a dispute resolution mechanism. The block size isn?t about scaling but about supply and demand of finite resources. As demand for block space increases, we can address it either by increasing computational resources (block size) or by increasing fees. But to do the former we need a way to offset the increase in cost by making sure that those who contribute said resources have incentive to do so.?

I should also point out, improvements in hardware and network infrastructure can also reduce costs?and we could very well have a model where resource requirements can be increased as technology improves. However, currently, the computational cost of validation is clearly growing far more quickly than the cost of computational resources is going down. There are 7,000,000,000 people in the world. Payment networks in the developed world already regularly handle thousands of transactions a second. Even with highly optimized block propagation, pruning, and signature validation, we?re still many orders shy of being able to satisfy demand. To achieve mainstream adoption, we?ll have to pass through a period of quasi-exponential growth in userbase (until the market saturates?or until the network resources run out). Unless we?re able to achieve a validation complexity of O(polylog n) or better, it?s not a matter of having a negative attitude about the prospects?it?s just math. Whether we have 2MB or 20MB or 100MB blocks (even assuming the above mentioned optimizations and that the computational resources exist and are willing to handle it) we will not be able to satisfy demand if we insist on requiring global validation for all transactions.


> On Jul 23, 2015, at 1:26 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> 
> On Thu, Jul 23, 2015 at 9:52 PM, Jameson Lopp via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Running a node certainly has real-world costs that shouldn't be ignored.
>> There are plenty of advocates who argue that Bitcoin should strive to keep
>> it feasible for the average user to run their own node (as opposed to
>> Satoshi's vision of beefy servers in data centers.) My impression is that
>> even most of these advocates agree that it will be acceptable to eventually
>> increase block sizes as resources become faster and cheaper because it won't
>> be 'pricing out' the average user from running their own node. If this is
>> the case, it seems to me that we have a problem given that there is no
>> established baseline for the acceptable performance / hardware cost
>> requirements to run a node. I'd really like to see further clarification
>> from these advocates around the acceptable cost of running a node and how we
>> can measure the global reduction in hardware and bandwidth costs in order to
>> establish a baseline that we can use to justify additional resource usage by
>> nodes.
> 
> Although I don't have a concrete proposals myself, I agree that
> without having any common notion of what the "minimal target hardware"
> looks like, it is very difficult to discuss other things that depend
> on that.
> If there's data that shows that a 100 usd raspberry pi with a 1 MB
> connection in say, India (I actually have no idea about internet
> speeds there) size X is a viable full node, then I don't think anybody
> can reasonably oppose to rising the block size to X, and such a
> hardfork can perfectly be uncontroversial.
> I'm exaggerating ultra-low specifications, but it's just an example to
> illustrate your point.
> There was a thread about formalizing such "minimum hardware
> requirements", but I think the discussion simply finished there:
> - Let's do this
> - Yeah, let's do it
> - +1, let's have concrete values, I generally agree.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/fbe5e705/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/fbe5e705/attachment.sig>

From jtimon at jtimon.cc  Thu Jul 23 21:02:20 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 23 Jul 2015 23:02:20 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <55B100E2.4040901@bitcoins.info>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<55B100E2.4040901@bitcoins.info>
Message-ID: <CABm2gDrLJ+7kNRmmYUvJJ6d98zP5CBSenRVZv=rCSTHBLDA=+A@mail.gmail.com>

On Thu, Jul 23, 2015 at 4:57 PM, Milly Bitcoin via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On 7/23/2015 10:30 AM, Jorge Tim?n via bitcoin-dev wrote:
>
>> [4] http://lmgtfy.com/?q=mike+hearn+dictator&l=1

Mike has sincerely said that he would like "Bitcoin Core to have a
benevolent dictator like other free software projects", and I wanted
to make clear that I wasn't putting words in his mouth but it's
actually something very easy to find on the internet. But I now
realize that the search can be interpreted as me calling him dictator
or something of the sort. That wasn't my intention. In fact, Mike's
point of view on Bitcoin Core development wasn't even relevant for my
example so I shouldn't even have mentioned him in the first place. I
apologize for both mistakes, but please let's keep this thread focused
on libconsensus.

> You spend too much time on reddit.

I actually don't spend much time on reddit: I don't particularly like
it. But I do spend some time in reddit so, I agree: I spend too much
time on reddit.

From milly at bitcoins.info  Thu Jul 23 21:30:18 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 23 Jul 2015 17:30:18 -0400
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <CABm2gDrLJ+7kNRmmYUvJJ6d98zP5CBSenRVZv=rCSTHBLDA=+A@mail.gmail.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<55B100E2.4040901@bitcoins.info>
	<CABm2gDrLJ+7kNRmmYUvJJ6d98zP5CBSenRVZv=rCSTHBLDA=+A@mail.gmail.com>
Message-ID: <55B15CEA.9090703@bitcoins.info>

 > Mike has sincerely said that he would like "Bitcoin Core to have a
 > benevolent dictator like other free software projects", and I wanted
 > to make clear that I wasn't putting words in his mouth

He is just pointing out reality. Decentralization is really just a 
collection of centralized processes. If you ever want to change anything 
someone, somewhere has to make a decision.

Satoshi was the first dictator and he set the consensus rules for his 
version of Bitcoin and that is what people accepted. Those rules did not 
appear by magic nor did they appear via some unexplained 'consensus' 
mechanism. He made decisions and updated the code or accepted updates 
made by others.

Russ



From kalle at rosenbaum.se  Thu Jul 23 21:36:45 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Thu, 23 Jul 2015 23:36:45 +0200
Subject: [bitcoin-dev] Process for BIP number allocation
In-Reply-To: <E1C2C971-03EB-47F6-9879-D6EC659404D4@petertodd.org>
References: <CAPswA9yU8MkbS_7CkJBmRTTxBdZ+2fx7FetGaqeHMZGG0G=1eA@mail.gmail.com>
	<E1C2C971-03EB-47F6-9879-D6EC659404D4@petertodd.org>
Message-ID: <CAPswA9zCxZ+mmwpHxF2Q8zur+UjjUMfZmgn75j4hLu1kux36AA@mail.gmail.com>

A PoP-enabled fork of Mycelium is available at
https://github.com/kallerosenbaum/wallet and the server (validating
code) is available at https://github.com/kallerosenbaum/poppoc/

There's also a demo site using the server code at
http://www.rosenbaum.se:8080/ and a demo video at
https://www.youtube.com/watch?v=euzZcoCilhc

Mycelium Binaries are also available on the demo site.

Regards,
Kalle

2015-07-23 21:29 GMT+02:00, Peter Todd <pete at petertodd.org>:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
>
>
> On 23 July 2015 06:21:55 GMT-04:00, Kalle Rosenbaum via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>Hi all
>>
>>I suggest that we add to the "BIP Editor Responsibilities & Workflow"
>>section of BIP0001 that if the BIP editor for some reason won't handle
>>the BIP within a week, he/she should notify the author within that
>>same week with an estimate on when it will be handled.
>>
>>Maybe we could extend it to two weeks instead, the important thing is
>>that the author knows what to expect.
>>
>>I'm trying to get BIP numbers allocated for Proof of Payment. I have
>>requested it from the BIP editor Gregory Maxwell with CC this list. I
>>also emailed Gregory in private about it. So far I have not seen any
>>reaction to my requests.
>
> To be clear, where is an implementation of your proposed BIP?
>
> The philosophy of the process - particularly for non-consensus BIPs - is
> running code, preferably in production. An actual number for the standard
> that code implements isn't a barrier to that process.
>
> Remember that it's convenient for all if the number of BIPs out there isn't
> significantly higher than the number of actual standards in place that are
> being used.
>
>
> -----BEGIN PGP SIGNATURE-----
>
> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsUBy
> AAoJEMCF8hzn9Lnc47AIAI11FdNBCFr9TybCvxKS32Idk4aZ4fveJ6ucHZx1PWPl
> lzoz/CJBZGolWF9jWnpyiCnNxl64MjflNxi62ZD+VS4SEl0uHcYXdqXsNQzk9OoK
> bZFXHJ57jZlHCwpwiLM72EWN6AZG/XZZFXisNRAvoYqryHdb5dDmVok0wPH87qOH
> PBTlspyaKH4/OFDpslCdoDTLHcMxlasiyqNdC5NxC7eB1WpEtyGbOd1twvNeNH00
> 1opJNuajiUm1vJEhMS67a9DhfnYf9/3TDRtkc0lrYfF3r1n2aVtyzlPcJANX/cWa
> 7L9HtC4WpVLqny0AiTs5dK6DxPIUy/u2Q9yFZ2oL6dM=
> =RW4h
> -----END PGP SIGNATURE-----
>
>

From bencxr at fragnetics.com  Thu Jul 23 23:42:42 2015
From: bencxr at fragnetics.com (Benedict Chan)
Date: Thu, 23 Jul 2015 16:42:42 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
Message-ID: <CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>

On Thu, Jul 23, 2015 at 1:52 PM, Eric Lombrozo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Jul 23, 2015 at 3:14 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>
>> Mainstream usage of cryptocurrency will be enabled primarily by direct
>> party-to-party contract negotiation?with the use of the blockchain primarily
>> as a dispute resolution mechanism. The block size isn?t about scaling but
>> about supply and demand of finite resources. As demand for block space
>> increases, we can address it either by increasing computational resources
>> (block size) or by increasing fees. But to do the former we need a way to
>> offset the increase in cost by making sure that those who contribute said
>> resources have incentive to do so.?
>
>
> I should also point out, improvements in hardware and network infrastructure
> can also reduce costs?and we could very well have a model where resource
> requirements can be increased as technology improves. However, currently,
> the computational cost of validation is clearly growing far more quickly
> than the cost of computational resources is going down. There are
> 7,000,000,000 people in the world. Payment networks in the developed world
> already regularly handle thousands of transactions a second. Even with
> highly optimized block propagation, pruning, and signature validation, we?re
> still many orders shy of being able to satisfy demand. To achieve mainstream
> adoption, we?ll have to pass through a period of quasi-exponential growth in
> userbase (until the market saturates?or until the network resources run
> out). Unless we?re able to achieve a validation complexity of O(polylog n)
> or better, it?s not a matter of having a negative attitude about the
> prospects?it?s just math. Whether we have 2MB or 20MB or 100MB blocks (even
> assuming the above mentioned optimizations and that the computational
> resources exist and are willing to handle it) we will not be able to satisfy
> demand if we insist on requiring global validation for all transactions.
>

Scaling the network will come in the form of a combination of many
optimizations. Just because we do not know for sure how to eventually
serve 7 billion people does not mean we should make decisions on
global validation that impact our ability to serve the current set of
users.

Also, blocking a change because it's "more important to address issues
such as..." other improvements will further slow down the discussion.
I believe an increase will not prevent the development of other
improvements that we need - in contrast, the sooner we can get over
the limit (which, as you agree, needs to be changed at some point),
the sooner we can get back to work.

>
> On Jul 23, 2015, at 1:26 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>
> On Thu, Jul 23, 2015 at 9:52 PM, Jameson Lopp via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Running a node certainly has real-world costs that shouldn't be ignored.
> There are plenty of advocates who argue that Bitcoin should strive to keep
> it feasible for the average user to run their own node (as opposed to
> Satoshi's vision of beefy servers in data centers.) My impression is that
> even most of these advocates agree that it will be acceptable to eventually
> increase block sizes as resources become faster and cheaper because it won't
> be 'pricing out' the average user from running their own node. If this is
> the case, it seems to me that we have a problem given that there is no
> established baseline for the acceptable performance / hardware cost
> requirements to run a node. I'd really like to see further clarification
> from these advocates around the acceptable cost of running a node and how we
> can measure the global reduction in hardware and bandwidth costs in order to
> establish a baseline that we can use to justify additional resource usage by
> nodes.
>
>
> Although I don't have a concrete proposals myself, I agree that
> without having any common notion of what the "minimal target hardware"
> looks like, it is very difficult to discuss other things that depend
> on that.
> If there's data that shows that a 100 usd raspberry pi with a 1 MB
> connection in say, India (I actually have no idea about internet
> speeds there) size X is a viable full node, then I don't think anybody
> can reasonably oppose to rising the block size to X, and such a
> hardfork can perfectly be uncontroversial.
> I'm exaggerating ultra-low specifications, but it's just an example to
> illustrate your point.
> There was a thread about formalizing such "minimum hardware
> requirements", but I think the discussion simply finished there:
> - Let's do this
> - Yeah, let's do it
> - +1, let's have concrete values, I generally agree.
>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From elombrozo at gmail.com  Thu Jul 23 23:57:02 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 16:57:02 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
Message-ID: <42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmail.com>


> On Jul 23, 2015, at 4:42 PM, Benedict Chan <bencxr at fragnetics.com> wrote:
> 
> Scaling the network will come in the form of a combination of many
> optimizations. Just because we do not know for sure how to eventually
> serve 7 billion people does not mean we should make decisions on
> global validation that impact our ability to serve the current set of
> users.

Agreed. But I believe the economic and security arguments I gave regarding fees and incentives still hold and are largely separate from the scalability issue. Please correct me if I overlooked something.


> Also, blocking a change because it's "more important to address issues
> such as..." other improvements will further slow down the discussion.
> I believe an increase will not prevent the development of other
> improvements that we need - in contrast, the sooner we can get over
> the limit (which, as you agree, needs to be changed at some point),
> the sooner we can get back to work.

An increase in block size at this time will exacerbate security concerns around nodes relying on other nodes to validate (particularly miners and wallets). It?s not really a matter of having limited developer resources that need to be budgeted, as you seem to suggest.

Regarding developments on properly handling fees, there must exist the economic need for it before there?s an earnest effort to solve it. Increasing the block size right now will, in all likelihood, delay this effort. I?d much prefer to first let the fee market evolve because it?s a crucial component to the protocol?s design and its security model?and so we can get a better sense for fee economics. Then we might be able to figure out better approaches to block size changes in the future that makes sense economically?perhaps with mechanisms that can dynamically adjust it to reflect resource availability and network load.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/7bcddf71/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/7bcddf71/attachment.sig>

From elombrozo at gmail.com  Fri Jul 24 00:04:07 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 17:04:07 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai l.com>
Message-ID: <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>

I should also add that I think those who claim that fee pressure will scare away users and break the industry are *seriously* underestimating human ingenuity in the face of a challenge. We can do this - we can overcome this obstacle?we can find good solutions to a fee market. Unless someone can come up with another way to pay for the operation of the network, we NEED to do this. What makes anyone think it will be easier to do later rather than now? The longer we wait, the lower block rewards get, the larger the deployed infrastructure, the larger our userbase, the HARDER it will be to solve it. We should solve it now - we will be much better off for it?and so will our users.


> On Jul 23, 2015, at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jul 23, 2015, at 4:42 PM, Benedict Chan <bencxr at fragnetics.com <mailto:bencxr at fragnetics.com>> wrote:
>> 
>> Scaling the network will come in the form of a combination of many
>> optimizations. Just because we do not know for sure how to eventually
>> serve 7 billion people does not mean we should make decisions on
>> global validation that impact our ability to serve the current set of
>> users.
> 
> Agreed. But I believe the economic and security arguments I gave regarding fees and incentives still hold and are largely separate from the scalability issue. Please correct me if I overlooked something.
> 
> 
>> Also, blocking a change because it's "more important to address issues
>> such as..." other improvements will further slow down the discussion.
>> I believe an increase will not prevent the development of other
>> improvements that we need - in contrast, the sooner we can get over
>> the limit (which, as you agree, needs to be changed at some point),
>> the sooner we can get back to work.
> 
> An increase in block size at this time will exacerbate security concerns around nodes relying on other nodes to validate (particularly miners and wallets). It?s not really a matter of having limited developer resources that need to be budgeted, as you seem to suggest.
> 
> Regarding developments on properly handling fees, there must exist the economic need for it before there?s an earnest effort to solve it. Increasing the block size right now will, in all likelihood, delay this effort. I?d much prefer to first let the fee market evolve because it?s a crucial component to the protocol?s design and its security model?and so we can get a better sense for fee economics. Then we might be able to figure out better approaches to block size changes in the future that makes sense economically?perhaps with mechanisms that can dynamically adjust it to reflect resource availability and network load.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/2a0f074c/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/2a0f074c/attachment-0001.sig>

From simon at bitcartel.com  Fri Jul 24 00:20:37 2015
From: simon at bitcartel.com (Simon Liu)
Date: Thu, 23 Jul 2015 17:20:37 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>	<55B113AF.40500@thinlink.com>	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai
	l.com> <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
Message-ID: <55B184D5.2010100@bitcartel.com>

Increasing the block size does not hinder research and development of
Lightning or other technologies.


On 07/23/2015 05:04 PM, Eric Lombrozo via bitcoin-dev wrote:
> I should also add that I think those who claim that fee pressure will
> scare away users and break the industry are *seriously* underestimating
> human ingenuity in the face of a challenge. We can do this - we can
> overcome this obstacle?we can find good solutions to a fee market.
> Unless someone can come up with another way to pay for the operation of
> the network, we NEED to do this. What makes anyone think it will be
> easier to do later rather than now? The longer we wait, the lower block
> rewards get, the larger the deployed infrastructure, the larger our
> userbase, the HARDER it will be to solve it. We should solve it now - we
> will be much better off for it?and so will our users.
> 

From jeanpaulkogelman at me.com  Fri Jul 24 00:22:53 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 08:22:53 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
Message-ID: <346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>

You are not going to get a fair fee market if your only form of enforcement is the threat of exclusion.

A more fair fee market will develop if miners start offering quality of service, preferably at multiple tiers. At that point any interference from a block size cap will only be detrimental. In fact it will only highlight what the cap is actually for; to prevent monster blocks. 

Add better QoS tools for miners and extend the cap (when possible) and there's your fee market.

jp


> On Jul 24, 2015, at 8:04 AM, Eric Lombrozo via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> I should also add that I think those who claim that fee pressure will scare away users and break the industry are *seriously* underestimating human ingenuity in the face of a challenge. We can do this - we can overcome this obstacle?we can find good solutions to a fee market. Unless someone can come up with another way to pay for the operation of the network, we NEED to do this. What makes anyone think it will be easier to do later rather than now? The longer we wait, the lower block rewards get, the larger the deployed infrastructure, the larger our userbase, the HARDER it will be to solve it. We should solve it now - we will be much better off for it?and so will our users.
> 
> 
>>> On Jul 23, 2015, at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> 
>>> 
>>> On Jul 23, 2015, at 4:42 PM, Benedict Chan <bencxr at fragnetics.com> wrote:
>>> 
>>> Scaling the network will come in the form of a combination of many
>>> optimizations. Just because we do not know for sure how to eventually
>>> serve 7 billion people does not mean we should make decisions on
>>> global validation that impact our ability to serve the current set of
>>> users.
>> 
>> Agreed. But I believe the economic and security arguments I gave regarding fees and incentives still hold and are largely separate from the scalability issue. Please correct me if I overlooked something.
>> 
>> 
>>> Also, blocking a change because it's "more important to address issues
>>> such as..." other improvements will further slow down the discussion.
>>> I believe an increase will not prevent the development of other
>>> improvements that we need - in contrast, the sooner we can get over
>>> the limit (which, as you agree, needs to be changed at some point),
>>> the sooner we can get back to work.
>> 
>> An increase in block size at this time will exacerbate security concerns around nodes relying on other nodes to validate (particularly miners and wallets). It?s not really a matter of having limited developer resources that need to be budgeted, as you seem to suggest.
>> 
>> Regarding developments on properly handling fees, there must exist the economic need for it before there?s an earnest effort to solve it. Increasing the block size right now will, in all likelihood, delay this effort. I?d much prefer to first let the fee market evolve because it?s a crucial component to the protocol?s design and its security model?and so we can get a better sense for fee economics. Then we might be able to figure out better approaches to block size changes in the future that makes sense economically?perhaps with mechanisms that can dynamically adjust it to reflect resource availability and network load.
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/596bbb00/attachment.html>

From elombrozo at gmail.com  Fri Jul 24 00:32:21 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 17:32:21 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
Message-ID: <29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>


> On Jul 23, 2015, at 5:22 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
> 
> You are not going to get a fair fee market if your only form of enforcement is the threat of exclusion.
> 
> A more fair fee market will develop if miners start offering quality of service, preferably at multiple tiers. At that point any interference from a block size cap will only be detrimental. In fact it will only highlight what the cap is actually for; to prevent monster blocks.
> 
> Add better QoS tools for miners and extend the cap (when possible) and there's your fee market.
> 
> jp

Not sure what you mean by QoS here. Either your transaction is included or it isn?t. It?s not like you can upgrade to a master suite with a view or anything.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/2d67e8c5/attachment-0001.sig>

From elombrozo at gmail.com  Fri Jul 24 00:38:15 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 17:38:15 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
Message-ID: <D83751B4-5A01-458D-A7F1-92F9CF2C8467@gmail.com>

Are you referring to mining contracts?

> On Jul 23, 2015, at 5:32 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jul 23, 2015, at 5:22 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>> 
>> You are not going to get a fair fee market if your only form of enforcement is the threat of exclusion.
>> 
>> A more fair fee market will develop if miners start offering quality of service, preferably at multiple tiers. At that point any interference from a block size cap will only be detrimental. In fact it will only highlight what the cap is actually for; to prevent monster blocks.
>> 
>> Add better QoS tools for miners and extend the cap (when possible) and there's your fee market.
>> 
>> jp
> 
> Not sure what you mean by QoS here. Either your transaction is included or it isn?t. It?s not like you can upgrade to a master suite with a view or anything.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/e5292776/attachment.sig>

From jeanpaulkogelman at me.com  Fri Jul 24 00:45:04 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 08:45:04 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
Message-ID: <55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>

Quality of service as in:

> X satoshi / kb = included in block currently worked on;

> Y satoshi / kb = included in next block;

> Z satoshi / kb = included in block after that, etc.

Block count starts when transaction is first seen. Miners can set X, Y, Z. 

Market develops when miners start setting different values and adding more transactions to blocks as opposed to other miners with higher settings. 

It basically comes down to the miners themselves if they want a healthy fee market. If they stick to their guns, their influence on the fees will be proportional to their hashing power.

jp

> On Jul 24, 2015, at 8:32 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jul 23, 2015, at 5:22 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>> 
>> You are not going to get a fair fee market if your only form of enforcement is the threat of exclusion.
>> 
>> A more fair fee market will develop if miners start offering quality of service, preferably at multiple tiers. At that point any interference from a block size cap will only be detrimental. In fact it will only highlight what the cap is actually for; to prevent monster blocks.
>> 
>> Add better QoS tools for miners and extend the cap (when possible) and there's your fee market.
>> 
>> jp
> 
> Not sure what you mean by QoS here. Either your transaction is included or it isn?t. It?s not like you can upgrade to a master suite with a view or anything.

From jeanpaulkogelman at me.com  Fri Jul 24 00:49:20 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 08:49:20 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
Message-ID: <4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>


And it's obvious how a size cap would interfere with such a QoS scheme. Miners wouldn't be able to deliver the below guarantees if they have to start excluding transactions.



> On Jul 24, 2015, at 8:45 AM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Quality of service as in:
> 
>> X satoshi / kb = included in block currently worked on;
> 
>> Y satoshi / kb = included in next block;
> 
>> Z satoshi / kb = included in block after that, etc.
> 
> Block count starts when transaction is first seen. Miners can set X, Y, Z. 
> 
> Market develops when miners start setting different values and adding more transactions to blocks as opposed to other miners with higher settings. 
> 
> It basically comes down to the miners themselves if they want a healthy fee market. If they stick to their guns, their influence on the fees will be proportional to their hashing power.
> 
> jp
> 
>> On Jul 24, 2015, at 8:32 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> 
>> 
>>> On Jul 23, 2015, at 5:22 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>>> 
>>> You are not going to get a fair fee market if your only form of enforcement is the threat of exclusion.
>>> 
>>> A more fair fee market will develop if miners start offering quality of service, preferably at multiple tiers. At that point any interference from a block size cap will only be detrimental. In fact it will only highlight what the cap is actually for; to prevent monster blocks.
>>> 
>>> Add better QoS tools for miners and extend the cap (when possible) and there's your fee market.
>>> 
>>> jp
>> 
>> Not sure what you mean by QoS here. Either your transaction is included or it isn?t. It?s not like you can upgrade to a master suite with a view or anything.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From pete at petertodd.org  Fri Jul 24 00:53:50 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 24 Jul 2015 00:53:50 +0000
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
Message-ID: <DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>And it's obvious how a size cap would interfere with such a QoS scheme.
>Miners wouldn't be able to deliver the below guarantees if they have to
>start excluding transactions.

As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.


-----BEGIN PGP SIGNATURE-----

iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
=LY1+
-----END PGP SIGNATURE-----


From elombrozo at gmail.com  Fri Jul 24 00:56:02 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 17:56:02 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
Message-ID: <9E5835B1-4FCC-4CB4-9ABD-F63B9D1C93D9@gmail.com>


> On Jul 23, 2015, at 5:45 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
> 
> Quality of service as in:
> 
>> X satoshi / kb = included in block currently worked on;
> 
>> Y satoshi / kb = included in next block;
> 
>> Z satoshi / kb = included in block after that, etc.
> 
> Block count starts when transaction is first seen. Miners can set X, Y, Z.
> 
> Market develops when miners start setting different values and adding more transactions to blocks as opposed to other miners with higher settings.
> 
> It basically comes down to the miners themselves if they want a healthy fee market. If they stick to their guns, their influence on the fees will be proportional to their hashing power.
> 
> jp


The scheme I?ve been considering is the use of services (separate from miners) that guarantee inclusion for you for some predetermined price and then do the bidding on your behalf. Via contracts you can guarantee you get included within a certain number of blocks or you receive a full refund?or even possibly receive compensation for failure to deliver.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/c498890b/attachment-0001.sig>

From jeanpaulkogelman at me.com  Fri Jul 24 01:03:26 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 09:03:26 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
Message-ID: <DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>

Doesn't matter.

It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.

jp


> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
> 
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
> 
> 
> 
>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> And it's obvious how a size cap would interfere with such a QoS scheme.
>> Miners wouldn't be able to deliver the below guarantees if they have to
>> start excluding transactions.
> 
> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
> 
> 
> -----BEGIN PGP SIGNATURE-----
> 
> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
> =LY1+
> -----END PGP SIGNATURE-----
> 

From jeanpaulkogelman at me.com  Fri Jul 24 01:05:58 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 09:05:58 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <9E5835B1-4FCC-4CB4-9ABD-F63B9D1C93D9@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<9E5835B1-4FCC-4CB4-9ABD-F63B9D1C93D9@gmail.com>
Message-ID: <470A7E5F-752A-47B6-BACD-916D043646F1@me.com>

There really isn't any need for a 3rd party here. Those "services" can just be the miners themselves.


jp

> On Jul 24, 2015, at 8:56 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> 
>> On Jul 23, 2015, at 5:45 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>> 
>> Quality of service as in:
>> 
>>> X satoshi / kb = included in block currently worked on;
>> 
>>> Y satoshi / kb = included in next block;
>> 
>>> Z satoshi / kb = included in block after that, etc.
>> 
>> Block count starts when transaction is first seen. Miners can set X, Y, Z.
>> 
>> Market develops when miners start setting different values and adding more transactions to blocks as opposed to other miners with higher settings.
>> 
>> It basically comes down to the miners themselves if they want a healthy fee market. If they stick to their guns, their influence on the fees will be proportional to their hashing power.
>> 
>> jp
> 
> 
> The scheme I?ve been considering is the use of services (separate from miners) that guarantee inclusion for you for some predetermined price and then do the bidding on your behalf. Via contracts you can guarantee you get included within a certain number of blocks or you receive a full refund?or even possibly receive compensation for failure to deliver.

From elombrozo at gmail.com  Fri Jul 24 01:08:45 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 18:08:45 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
Message-ID: <B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>

By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.

Negotiating directly with miners via smart contracts seems difficult at best.


> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Doesn't matter.
> 
> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
> 
> jp
> 
> 
>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>> 
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA256
>> 
>> 
>> 
>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> 
>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>> start excluding transactions.
>> 
>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>> 
>> 
>> -----BEGIN PGP SIGNATURE-----
>> 
>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>> =LY1+
>> -----END PGP SIGNATURE-----
>> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/569da4c2/attachment.sig>

From gacrux at gmail.com  Fri Jul 24 01:17:34 2015
From: gacrux at gmail.com (Gareth Williams)
Date: Fri, 24 Jul 2015 11:17:34 +1000
Subject: [bitcoin-dev] BIP draft: Hardfork bit
In-Reply-To: <CAE-z3OWZGsSS2s1OZU5ScH7C4BcOtCb9mcz62TA7HZQe_=y0uA@mail.gmail.com>
References: <20150723162321.Horde.bphh__8AhyXa_m-YAYpiyw1@server47.web-hosting.com>
	<CAE-z3OWZGsSS2s1OZU5ScH7C4BcOtCb9mcz62TA7HZQe_=y0uA@mail.gmail.com>
Message-ID: <CAB8D56D-58B0-4FC7-BD40-A1C613D8EBD6@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

>I don't understand the situation here.  Is the assumption of a group of
>miners suddenly switching (for example, they realise that they didn't
>intend to support the new rules)?

Or they're economically rational miners, and a large difficulty decrease on the original chain, without an equally large decrease in the value of original chain tokens, has made it profitable to switch?

It's dangerous to assume all miners will continue to support the side they have initially signaled. They're only invested in the chain they mine for a short time (until coinbase maturity.)

If both sides if a fork retain value you'd expect mining to redistribute itself WRT short term profitability at every difficulty adjustment, irrespective of initially signaled support for the fork.
-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFABAEBCgAqBQJVsZIuIxxHYXJldGggV2lsbGlhbXMgPGdhY3J1eEBnbWFpbC5j
b20+AAoJEEY5w2E3jkVEN7YIAIlgaAahHCssIEXYzqB1gRKYRP4fPsq8NtOMrkki
dc1gfKmprlPDShFvu2Hn5L8amP51ouRpmDSJwNyU//1DyU5p1tcWTAtkHr6SY7TY
uJtcPMM03BUD2i3rXSY4FbpWn8aOoUnQrkYFhx5Y/Aru+l47C0I5KF4fgMag7FhI
RxkTFylvq7uWvu0QCUkVh1MgohNxMqIGAvE5t8yoj5LxrNzOq95TcOGwFngWCdJM
a5BADFjq7v4j/+cP748ZTPcLUusTQTwEuIsCIhpwwiKADsy1FKjmAdHhKTff/6wn
cpNYvwimKNSSESCwzAnxekaJCTXpEOWQV7/6FO9vJbTMKw8=
=/hJk
-----END PGP SIGNATURE-----


From jeanpaulkogelman at me.com  Fri Jul 24 01:25:57 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 09:25:57 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
Message-ID: <D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>

I think implicit QoS is far simpler to implement, requires less parties and is closer to what Bitcoin started out as: a peer-to-peer digital cash system, not a peer-to-let-me-handle-that-for-you-to-peer system.

jp

> On Jul 24, 2015, at 9:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.
> 
> Negotiating directly with miners via smart contracts seems difficult at best.
> 
> 
>> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> Doesn't matter.
>> 
>> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
>> 
>> jp
>> 
>> 
>>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>>> 
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA256
>>> 
>>> 
>>> 
>>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> 
>>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>>> start excluding transactions.
>>> 
>>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>>> 
>>> 
>>> -----BEGIN PGP SIGNATURE-----
>>> 
>>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>>> =LY1+
>>> -----END PGP SIGNATURE-----
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From elombrozo at gmail.com  Fri Jul 24 01:28:25 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 18:28:25 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
Message-ID: <0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>

I suppose you can use a timelocked output that is spendable by anyone you could go somewhat in this direction?the thing is it still means the wallet must make fee estimations rather than being able to get a quick quote.

> On Jul 23, 2015, at 6:25 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
> 
> I think implicit QoS is far simpler to implement, requires less parties and is closer to what Bitcoin started out as: a peer-to-peer digital cash system, not a peer-to-let-me-handle-that-for-you-to-peer system.
> 
> jp
> 
>> On Jul 24, 2015, at 9:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> 
>> By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.
>> 
>> Negotiating directly with miners via smart contracts seems difficult at best.
>> 
>> 
>>> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> 
>>> Doesn't matter.
>>> 
>>> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
>>> 
>>> jp
>>> 
>>> 
>>>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>>>> 
>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>> Hash: SHA256
>>>> 
>>>> 
>>>> 
>>>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> 
>>>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>>>> start excluding transactions.
>>>> 
>>>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>>>> 
>>>> 
>>>> -----BEGIN PGP SIGNATURE-----
>>>> 
>>>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>>>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>>>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>>>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>>>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>>>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>>>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>>>> =LY1+
>>>> -----END PGP SIGNATURE-----
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/e7496cfa/attachment-0001.sig>

From elombrozo at gmail.com  Fri Jul 24 01:37:20 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 18:37:20 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
Message-ID: <C50E24C5-B108-4DD1-851C-BC3391CC7E58@gmail.com>

I think it?s pretty clear by now that the assumption that all nodes have pretty similar computational resources leads to very misplaced incentives. Ultimately, cryptocurrencies will allow direct outsourcing of computation, making it possible to distribute computational tasks in an economically sensible way.

Wallets should be assumed to have low computational resources and intermittent Internet connections for the foreseeable future if we ever intend for this to be a practical payment system, methinks.


> On Jul 23, 2015, at 6:28 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I suppose you can use a timelocked output that is spendable by anyone you could go somewhat in this direction?the thing is it still means the wallet must make fee estimations rather than being able to get a quick quote.
> 
>> On Jul 23, 2015, at 6:25 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>> 
>> I think implicit QoS is far simpler to implement, requires less parties and is closer to what Bitcoin started out as: a peer-to-peer digital cash system, not a peer-to-let-me-handle-that-for-you-to-peer system.
>> 
>> jp
>> 
>>> On Jul 24, 2015, at 9:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> 
>>> By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.
>>> 
>>> Negotiating directly with miners via smart contracts seems difficult at best.
>>> 
>>> 
>>>> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> 
>>>> Doesn't matter.
>>>> 
>>>> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
>>>> 
>>>> jp
>>>> 
>>>> 
>>>>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>>>>> 
>>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>>> Hash: SHA256
>>>>> 
>>>>> 
>>>>> 
>>>>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>> 
>>>>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>>>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>>>>> start excluding transactions.
>>>>> 
>>>>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>>>>> 
>>>>> 
>>>>> -----BEGIN PGP SIGNATURE-----
>>>>> 
>>>>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>>>>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>>>>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>>>>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>>>>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>>>>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>>>>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>>>>> =LY1+
>>>>> -----END PGP SIGNATURE-----
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> 
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/61072561/attachment.sig>

From jeanpaulkogelman at me.com  Fri Jul 24 01:42:12 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 24 Jul 2015 09:42:12 +0800
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
Message-ID: <9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>

Miners could include their fee tiers in the coinbase, but this is obviously open to manipulation, with little recourse (unless they are a pool and miners move away because of it). 

In any event, I think that trying out a solution that is both simple and involves the least number of parties necessary is preferable.

Have miners set their tiers, have users select the level of quality they want, ignore the block size.

Miners will adapt their tiers depending on how many transactions actually end up in them. If for example they set the first tier to be $1 to be included in the current block and no user chooses that level of service, they've obviously priced themselves out of the market. The opposite is also true; if a tier is popular they can choose to increase the cost of that tier.

jp 

> On Jul 24, 2015, at 9:28 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I suppose you can use a timelocked output that is spendable by anyone you could go somewhat in this direction?the thing is it still means the wallet must make fee estimations rather than being able to get a quick quote.
> 
>> On Jul 23, 2015, at 6:25 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>> 
>> I think implicit QoS is far simpler to implement, requires less parties and is closer to what Bitcoin started out as: a peer-to-peer digital cash system, not a peer-to-let-me-handle-that-for-you-to-peer system.
>> 
>> jp
>> 
>>> On Jul 24, 2015, at 9:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>> 
>>> By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.
>>> 
>>> Negotiating directly with miners via smart contracts seems difficult at best.
>>> 
>>> 
>>>> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> 
>>>> Doesn't matter.
>>>> 
>>>> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
>>>> 
>>>> jp
>>>> 
>>>> 
>>>>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>>>>> 
>>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>>> Hash: SHA256
>>>>> 
>>>>> 
>>>>> 
>>>>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>> 
>>>>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>>>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>>>>> start excluding transactions.
>>>>> 
>>>>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>>>>> 
>>>>> 
>>>>> -----BEGIN PGP SIGNATURE-----
>>>>> 
>>>>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>>>>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>>>>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>>>>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>>>>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>>>>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>>>>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>>>>> =LY1+
>>>>> -----END PGP SIGNATURE-----
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From elombrozo at gmail.com  Fri Jul 24 01:55:25 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 23 Jul 2015 18:55:25 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABsx9T1MTc-GmuQyFN1vaFK=CDWV_L214Pi9nR6jLMouQQD0fw@mail.gmail.com>
	<C5A70F53-4779-457A-A06A-686877706F89@gmail.com>
	<CADL_X_exckh5T2BfzPEp26fPR3TD69QarwroDEdS_9wtnKbf+g@mail.gmail.com>
	<6F436293-9E2B-461C-B105-FC4CF9EBFC69@gmail.com>
	<CADL_X_fs3-Zj-9nHu5HXCS=kNFUTJkrUR_8SL+d+M4ziwB66Jw@mail.gmail.com>
	<CABm2gDqFe+_g5Mk=tXCD94x74pu6SiL+XHhMM-T3bBw78m3Mow@mail.gmail.com>
	<D161F6BB-BFB1-4B9F-B024-D60A170F393C@gmail.com>
	<CALqmWPC8PdSPS3chhnjBaTixrvvg0VrEaXzd3OvbXifkMs0DUw@mail.gmail.com>
	<42BF7FEB-320F-43BE-B3D9-1D76CB8B9975@gmai> <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
Message-ID: <83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>

I agree that the fewer the necessary parties the better - however, some entities are much better positioned to offer certain services on the network than others - and the fact we can trustlessly negotiate smart contracts with them is one of the most significant developments in the cryptospace - it?s one of the most revolutionary aspects of this technology?it accomplishes something we?ve never really been able to do before.

Notice that third parties can encapsulate complex tasks and provide a far simpler interface. Crypto contracts provide the incentives for them to do this. And by having competition and transparency, these services automatically get optimized via human ingenuity. We don?t need to design top-down for it.

> On Jul 23, 2015, at 6:42 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
> 
> Miners could include their fee tiers in the coinbase, but this is obviously open to manipulation, with little recourse (unless they are a pool and miners move away because of it).
> 
> In any event, I think that trying out a solution that is both simple and involves the least number of parties necessary is preferable.
> 
> Have miners set their tiers, have users select the level of quality they want, ignore the block size.
> 
> Miners will adapt their tiers depending on how many transactions actually end up in them. If for example they set the first tier to be $1 to be included in the current block and no user chooses that level of service, they've obviously priced themselves out of the market. The opposite is also true; if a tier is popular they can choose to increase the cost of that tier.
> 
> jp
> 
>> On Jul 24, 2015, at 9:28 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>> 
>> I suppose you can use a timelocked output that is spendable by anyone you could go somewhat in this direction?the thing is it still means the wallet must make fee estimations rather than being able to get a quick quote.
>> 
>>> On Jul 23, 2015, at 6:25 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
>>> 
>>> I think implicit QoS is far simpler to implement, requires less parties and is closer to what Bitcoin started out as: a peer-to-peer digital cash system, not a peer-to-let-me-handle-that-for-you-to-peer system.
>>> 
>>> jp
>>> 
>>>> On Jul 24, 2015, at 9:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
>>>> 
>>>> By using third parties separate from individual miners that do bidding on your behalf you get a mechanism that allows QoS guarantees and shifting the complexity and risk from the wallet with little computational resources to a service with abundance of them. Using timelocked contracts it?s possible to enforce the guarantees.
>>>> 
>>>> Negotiating directly with miners via smart contracts seems difficult at best.
>>>> 
>>>> 
>>>>> On Jul 23, 2015, at 6:03 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> 
>>>>> Doesn't matter.
>>>>> 
>>>>> It's not going to be perfect given the block time variance among other factors but it's far more workable than guessing whether or not your transaction is going to end up in a block at all.
>>>>> 
>>>>> jp
>>>>> 
>>>>> 
>>>>>> On Jul 24, 2015, at 8:53 AM, Peter Todd <pete at petertodd.org> wrote:
>>>>>> 
>>>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>>>> Hash: SHA256
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>>> On 23 July 2015 20:49:20 GMT-04:00, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>>>> 
>>>>>>> And it's obvious how a size cap would interfere with such a QoS scheme.
>>>>>>> Miners wouldn't be able to deliver the below guarantees if they have to
>>>>>>> start excluding transactions.
>>>>>> 
>>>>>> As mining is a random, poisson process, obviously giving guarantees without a majority of hashing power isn't possible.
>>>>>> 
>>>>>> 
>>>>>> -----BEGIN PGP SIGNATURE-----
>>>>>> 
>>>>>> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVsYyK
>>>>>> AAoJEMCF8hzn9Lnc47AH/28WlecQLb37CiJpcvXO9tC4zqYEodurtB9nBHTSJrug
>>>>>> VIEXZW53pSTdd3vv2qpGIlHxuYP8QmDSATztwQLuN6XWEszz7TO8MXBfLxKqZyGu
>>>>>> i83WqSGjMAfwqjl0xR1G7PJgt4+E+0vaAFZc98vLCgZnedbiXRVtTGjhofG1jjTc
>>>>>> DFMwMZHP0eqWTwtWwqUvnA7PTFHxdqoJruY/t1KceN+JDbBCJWMxBDswU64FXcVH
>>>>>> 0ecsk9nhLMyylBX/2v4HjCXyayocH8jQ+FpLSP0xxERyS+f1npFX9cxFMq24uXqn
>>>>>> PcnZfLfaSJ6gMbmhbYG5wYDKN3u732j7dLzSJnMW6jk=
>>>>>> =LY1+
>>>>>> -----END PGP SIGNATURE-----
>>>>> _______________________________________________
>>>>> bitcoin-dev mailing list
>>>>> bitcoin-dev at lists.linuxfoundation.org
>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/79d0ce0e/attachment.sig>

From raystonn at hotmail.com  Fri Jul 24 02:12:26 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Thu, 23 Jul 2015 19:12:26 -0700
Subject: [bitcoin-dev]  Bitcoin, Perceptions, and Expectations
In-Reply-To: <83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
References: <l.com@mac.com><D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com><346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com><29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com><55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com><4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com><DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org><DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com><B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com><D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com><0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com><9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
Message-ID: <COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>

There is now a pull request to remove mention of "zero or low fees", "fast 
international payments", and "instant peer-to-peer transactions" from 
bitcoin.org.  For those non-technical users who do not read source code, 
this may come across as the breaking of the social contract on what Bitcoin 
is ultimately intended to be.  It looks like we already have a Reddit post 
on the subject as well.

Raystonn


From eric at voskuil.org  Fri Jul 24 02:26:28 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Thu, 23 Jul 2015 19:26:28 -0700
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <CAH+=Z+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>
References: <55AFBBE6.3060702@electrum.org> <1437606706.2688.0.camel@yahoo.com>
	<114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>
	<CAH+=Z+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>
Message-ID: <55B1A254.6070806@voskuil.org>

I've looked at IT-PIR for Libbitcoin. It's certainly more elegant than
onion routing for query privacy, but doesn't improve on the collusion
problem. As a result the related directory problem would also remain.

"This protocol sacrifices some level of privacy to gain robustness.
Because of this  we need to assume that there is no collusion between
some number of servers. In some  settings, it is unclear how this
requirement can be enforced or detected. This uncertainty  may make this
protocol less desirable than others with different privacy guarantees."

http://www.cypherpunks.ca/~iang/pubs/hybridpir-pets.pdf

From the same source, regarding aforementioned options:

"An assumption used in many PETs, including mix networks, secret
sharing, onion routing and some voting protocols, is that no more than
some threshold of agents are colluding against the user to discover the
private information."

Another option is computationally-bounded CPIR, but from the same source:

"The main problem with the CPIR protocols already  discussed is that
they do not generally perform queries faster than the trivial protocol."

Where the "trivial protocol" in our problem is full blockchain download.

WRT an alternative CPIR proposed in 2007:

"The idea behind their protocol is to add noise to the query in a way
that the server  cannot discover which record the client is interested
in, but with the secret information  that the client has, she can remove
the noise from the server?s response."

This is the idea behind stealth prefix queries:

https://github.com/libbitcoin/libbitcoin-explorer/wiki/bx-fetch-stealth

From our perspective, another important objective of query privacy is
allowing the caller make the trade-off between the relative levels of
privacy and performance - from absolute to non-existent. In some cases
privacy is neither required nor desired.

Prefix filtering accomplishes the client-tuning objective. It also does
not suffer server collusion attacks nor is it dependent on computational
bounds. The primary trade-off becomes result set (download) size against
privacy.

e

On 07/23/2015 05:23 AM, Stefan Richter wrote:
> This looks like a prime application for this PIR
> library: http://percy.sourceforge.net/apidocs/index.html
> 
> Eric Voskuil via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> schrieb am Do., 23. Juli
> 2015 um 02:07 Uhr:
> 
>     This is a good point. I didn't delve into the specifics of
>     implementation due to the larger issues that I raised. Libbitcoin Server
>     uses CurveZMQ, an implementation of CurveCP.
> 
>     http://curvecp.org
>     http://curvezmq.org
>     https://en.bitcoin.it/wiki/Libbitcoin_Server
> 
>     e
> 
>     On 07/22/2015 04:11 PM, gb via bitcoin-dev wrote:
>     > Why RSA?
>     >
>     >>
>     >> Here is an idea, inspired by TOR, on which I would like to have some
>     >> feedback: We create an anonymous routing layer between Electrum
>     servers
>     >> and clients.
>     >>
>     >> * Each server S publishes a RSA public key, KS
>     >> * Each client receives a list of available servers and their pubkeys
>     >> * For each wallet address, addr_i, a client chooses a server S_i,
>     and a
>     >> RSA keypair (K_addr_i, k_addr_i)
>     >> * The client creates a list of encrypted requests. Each request
>     contains
>     >> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
>     >> * The client chooses a main server M, and sends the list of encrypted
>     >> requests to M
>     >> * M dispatches the client's requests to the corresponding servers S_i
>     >> (without the client's IP address.)
>     >> * Each server decrypts the requests it receives, performs the
>     request,
>     >> and encrypts the result with K_addr_i
>     >> * M receives encrypted responses, and forwards them to the client.
>     >> * The client decrypts the encrypted response with k_addr_i
> 
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/7613c6a2/attachment.sig>

From pete at petertodd.org  Fri Jul 24 02:26:13 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 23 Jul 2015 22:26:13 -0400
Subject: [bitcoin-dev] Process for BIP number allocation
In-Reply-To: <CAPswA9zCxZ+mmwpHxF2Q8zur+UjjUMfZmgn75j4hLu1kux36AA@mail.gmail.com>
References: <CAPswA9yU8MkbS_7CkJBmRTTxBdZ+2fx7FetGaqeHMZGG0G=1eA@mail.gmail.com>
	<E1C2C971-03EB-47F6-9879-D6EC659404D4@petertodd.org>
	<CAPswA9zCxZ+mmwpHxF2Q8zur+UjjUMfZmgn75j4hLu1kux36AA@mail.gmail.com>
Message-ID: <20150724022613.GB12252@muck>

On Thu, Jul 23, 2015 at 11:36:45PM +0200, Kalle Rosenbaum wrote:
> A PoP-enabled fork of Mycelium is available at
> https://github.com/kallerosenbaum/wallet and the server (validating
> code) is available at https://github.com/kallerosenbaum/poppoc/
> 
> There's also a demo site using the server code at
> http://www.rosenbaum.se:8080/ and a demo video at
> https://www.youtube.com/watch?v=euzZcoCilhc
> 
> Mycelium Binaries are also available on the demo site.

Good!

Now get people to actually use this and get back to us.

Remember that once there's actual adoption, BIP #'s will and have been
assigned even for standards that are dangerous and badly designed; the
barrier for non-consensus-stuff is the desire to avoid assigning a bunch
of numbers for things that never get used.

-- 
'peter'[:-1]@petertodd.org
00000000000000000402fe6fb9ad613c93e12bddfc6ec02a2bd92f002050594d
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/e8ec7645/attachment.sig>

From lf-lists at mattcorallo.com  Fri Jul 24 02:48:03 2015
From: lf-lists at mattcorallo.com (Matt Corallo)
Date: Fri, 24 Jul 2015 02:48:03 +0000
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <55B1A763.3000000@mattcorallo.com>

You may see much better throughput if you run a few servers around the
globe and test based on closest-by-geoip. TCP throughput is rather
significantly effected by latency, though I'm not really sure what you
should be testing here, ideally.

On 07/23/15 14:19, slurms--- via bitcoin-dev wrote:
> On this day, the Bitcoin network was crawled and reachable nodes surveyed to find their maximum throughput in order to determine if it can safely support a faster block rate. Specifically this is an attempt to prove or disprove the common statement that 1MB blocks were only suitable slower internet connections in 2009 when Bitcoin launched, and that connection speeds have improved to the point of obviously supporting larger blocks.
> 
> 
> The testing methodology is as follows:
> 
>  * Nodes were randomly selected from a peers.dat, 5% of the reachable nodes in the network were contacted.
> 
>  * A random selection of blocks was downloaded from each peer.
> 
>  * There is some bias towards higher connection speeds, very slow connections (<30KB/s) timed out in order to run the test at a reasonable rate.
> 
>  * The connecting node was in Amsterdam with a 1GB NIC. 
> 
>  
> Results:
> 
>  * 37% of connected nodes failed to upload blocks faster than 1MB/s.
> 
>  * 16% of connected nodes uploaded blocks faster than 10MB/s.
> 
>  * Raw data, one line per connected node, kilobytes per second http://pastebin.com/raw.php?i=6b4NuiVQ
> 
> 
> This does not support the theory that the network has the available bandwidth for increased block sizes, as in its current state 37% of nodes would fail to upload a 20MB block to a single peer in under 20 seconds (referencing a number quoted by Gavin). If the bar for suitability is placed at taking only 1% of the block time (6 seconds) to upload one block to one peer, then 69% of the network fails for 20MB blocks. For comparison, only 10% fail this metric for 1MB blocks.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From pete at petertodd.org  Fri Jul 24 02:55:14 2015
From: pete at petertodd.org (Peter Todd)
Date: Thu, 23 Jul 2015 22:55:14 -0400
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <CAAUq485RqbNpBa6i34H517Oo4+MHkT683inwU-sMX3Y=vBTwqg@mail.gmail.com>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
	<25607701-D3ED-4D0D-A5B3-C02B727671BF@petertodd.org>
	<CAAUq485RqbNpBa6i34H517Oo4+MHkT683inwU-sMX3Y=vBTwqg@mail.gmail.com>
Message-ID: <20150724025514.GD12252@muck>

On Thu, Jul 23, 2015 at 09:56:36PM +0200, Marcel Jamin wrote:
> He measured the upload capacity of the peers by downloading from them, or
> am I being dumb? :)

Lol, no, I'm being dumb. :)

-- 
'peter'[:-1]@petertodd.org
00000000000000000402fe6fb9ad613c93e12bddfc6ec02a2bd92f002050594d
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/11017c4c/attachment.sig>

From dscotese at litmocracy.com  Fri Jul 24 02:57:12 2015
From: dscotese at litmocracy.com (Dave Scotese)
Date: Thu, 23 Jul 2015 19:57:12 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015, or "If We Do Nothing" Analysis
Message-ID: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>

I used Google to establish that there is not already a post from 2015 that
mentions "roadmap" in the subject line.  Such would be a good skeleton for
anyone new to the list (like me).

1. Increase the 7 Tx per second - by increasing block size.

2. Do something about the trend toward centralization.  This is really two
issues in my mind:
A) Mining is falling to an ever shrinking number of businesses with the
infrastructure to run a datacenter.
B) The protocol as it is will soon make common computing machines
inadequate for running full nodes, and as a result they will not be able to
contribute to the ecosystem in meaningful ways.

Feel free to copy and then remove or alter any of that.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/ea7fd11a/attachment.html>

From slurms at gmx.us  Fri Jul 24 03:19:35 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 05:19:35 +0200
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <55B1A763.3000000@mattcorallo.com>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>,
	<55B1A763.3000000@mattcorallo.com>
Message-ID: <trinity-fedcdb1a-27cc-44cc-9638-be520331e59f-1437707974947@3capp-mailcom-bs10>

Yes that is completely doable for the next crawl, however I am not sure how much that reflects the behavior bitcoind would see when making connections. Nodes do not make any attempt to sync with close peers, which is an undesirable property if you are attempting to be sybil resistant. With some quick playing around it seems that you do get the expected speedup with close proximity, but it's not a particularly huge difference at present. I'll keep working on it and see where I get. 


> Sent: Friday, July 24, 2015 at 4:48 AM
> From: "Matt Corallo via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Bitcoin Node Speed Test
>
> You may see much better throughput if you run a few servers around the
> globe and test based on closest-by-geoip. TCP throughput is rather
> significantly effected by latency, though I'm not really sure what you
> should be testing here, ideally.

From slurms at gmx.us  Fri Jul 24 03:37:30 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 05:37:30 +0200
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
Message-ID: <trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>

It's worth noting that even massive companies with $30M USD of funding don't run a single Bitcoin Core node, which is somewhat against the general concept people present of companies having an incentive to run their own to protect their own wallet. 


> Sent:?Friday, July 24, 2015 at 4:57 AM
> From:?"Dave Scotese via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To:?bitcoin-dev at lists.linuxfoundation.org
> Subject:?[bitcoin-dev] Bitcoin Roadmap 2015, or "If We Do Nothing" Analysis
> 
> B) The protocol as it is will soon make common computing machines inadequate for running full nodes, and as a result they will not be able to contribute to the ecosystem in meaningful ways.

From slurms at gmx.us  Fri Jul 24 03:42:07 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 05:42:07 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55B1A254.6070806@voskuil.org>
References: <55AFBBE6.3060702@electrum.org> <1437606706.2688.0.camel@yahoo.com>
	<114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>
	<CAH+=Z+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>,
	<55B1A254.6070806@voskuil.org>
Message-ID: <trinity-61061d18-d667-4dd3-b87e-01880612c446-1437709327718@3capp-mailcom-bs10>

Keep in mind this is the similar premise as claimed to be offered by BIP37 bloom filters, but faulty assumptions and implementation failure in BitcoinJ have meant that bloom filters uniquely identify the wallet and offer no privacy for the user no matter what the settings are. If you imagine a system where there is somehow complete separation and anonymization between all requests and subscriptions, the timing still leaks the association between the addresses to the listeners. The obvious solution to that is to use a very high latency mix network, but I somehow doubt that there's any desire for a wallet with SPV security that takes a week to return results. 


> Sent: Friday, July 24, 2015 at 4:26 AM
> From: "Eric Voskuil via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: "Stefan Richter" <richter at cs.rwth-aachen.de>, gb <kiwigb at yahoo.com>, "Thomas Voegtlin" <thomasv at electrum.org>
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Making Electrum more anonymous
>
> 
> From our perspective, another important objective of query privacy is
> allowing the caller make the trade-off between the relative levels of
> privacy and performance - from absolute to non-existent. In some cases
> privacy is neither required nor desired.
> 
> Prefix filtering accomplishes the client-tuning objective. It also does
> not suffer server collusion attacks nor is it dependent on computational
> bounds. The primary trade-off becomes result set (download) size against
> privacy.
> 

From grarpamp at gmail.com  Fri Jul 24 03:54:31 2015
From: grarpamp at gmail.com (grarpamp)
Date: Thu, 23 Jul 2015 23:54:31 -0400
Subject: [bitcoin-dev] Bitcoin Node Speed Test
In-Reply-To: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
References: <trinity-c97bc41b-a953-4580-b2d2-ebdda9eb96b2-1437661199263@3capp-mailcom-bs02>
Message-ID: <CAD2Ti2-4YAjUUH3znAUwwkLSXHLvG1N2+VPDTfKuCmVhDg7qqA@mail.gmail.com>

On Thu, Jul 23, 2015 at 10:19 AM, slurms--- via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>  * A random selection of blocks was downloaded from each peer.

If the selection is different for each peer the results will be broken.

From eric at voskuil.org  Fri Jul 24 04:44:18 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Thu, 23 Jul 2015 21:44:18 -0700
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <trinity-61061d18-d667-4dd3-b87e-01880612c446-1437709327718@3capp-mailcom-bs10>
References: <55AFBBE6.3060702@electrum.org>
	<1437606706.2688.0.camel@yahoo.com>	<114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>	<CAH+=Z+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>,
	<55B1A254.6070806@voskuil.org>
	<trinity-61061d18-d667-4dd3-b87e-01880612c446-1437709327718@3capp-mailcom-bs10>
Message-ID: <55B1C2A2.6020704@voskuil.org>

On 07/23/2015 08:42 PM, Slurms MacKenzie via bitcoin-dev wrote:
>> From: "Eric Voskuil via bitcoin-dev"
>>
>> From our perspective, another important objective of query privacy is
>> allowing the caller make the trade-off between the relative levels of
>> privacy and performance - from absolute to non-existent. In some
>> cases privacy is neither required nor desired.
>>
>> Prefix filtering accomplishes the client-tuning objective. It also
>> does not suffer server collusion attacks nor is it dependent on
>> computational bounds. The primary trade-off becomes result set
>> (download) size against privacy.
>
> Keep in mind this is the similar premise as claimed to be offered by
> BIP37 bloom filters, but faulty assumptions and implementation
> failure in BitcoinJ have meant that bloom filters uniquely identify
> the wallet and offer no privacy for the user no matter what the
> settings are.

Yes, quite true. And without the ability to search using filters there
is no private restore from backup short of downloading the full chain,
rendering the idea rather pointless.

This is why privacy remains a significant issue. Privacy is an essential
aspect of fungibility. This is a central problem for Bitcoin. The
correlation of addresses within transactions is of course problematic.
Possibly zero knowledge proof will at some point come to the rescue. But
the correlation of addresses via search works against the benefits of
address non-reuse, and the correlation of addresses to IP addresses
works against the use of private addresses.

Solving the latter two problems can go a long way to reducing the impact
of the former. But currently the only solution is to run a full chain
wallet. This is not a viable solution for many scenarios, and getting
less so.

This is not a problem that can be ignored, nor is it unique to Electrum.
The Bloom filter approach was problematic, but that doesn't preclude the
existence of valid solutions.

> If you imagine a system where there is somehow complete
> separation and anonymization between all requests and subscriptions,
> the timing still leaks the association between the addresses to the
> listeners.

Well because of presumed relationship in time these are not actually
separated requests. Which is why even the (performance-unrealistic)
option of a distinct Tor route for each independent address request is
*still* problematic.

> The obvious solution to that is to use a very high latency
> mix network, but I somehow doubt that there's any desire for a wallet
> with SPV security that takes a week to return results.

Introducing truly-random timing variations into the mixnet solutions can
mitigate timing attacks, but yes, this just makes the already
intolerable performance problem much worse.

e

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150723/d0b298ac/attachment.sig>

From tomh at thinlink.com  Fri Jul 24 06:30:28 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 23 Jul 2015 23:30:28 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
Message-ID: <55B1DB84.6070001@thinlink.com>

On 7/23/2015 10:51 AM, Jorge Tim?n wrote:
> We know perfectly well that the system will need to eventually be
> sustained by fees.

Fee revenue can rise just as easily without increased BTC fee rates.

Two avenues that are just as effective: increased exchange rate,
increased number of fee-paying transactions.  Neither of these avenues
benefits from increased "fee pressure" (scarcity of block space).


> I just disagree that changing a constant is a "scaling solution".
>

Nobody here thinks that.  Even on Reddit, not very many people seem to
think that.



From kalle at rosenbaum.se  Fri Jul 24 06:55:12 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Fri, 24 Jul 2015 08:55:12 +0200
Subject: [bitcoin-dev] [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9w8QaWV72UuGnitWWeDTr5MPKvzwrD5udmq_FQke-NGAQ@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
	<CAPswA9z5fo5Vw_cSoUu1qtgU4kKf+W3FxREPJ5UpvvJUSi+doA@mail.gmail.com>
	<CAPswA9w8QaWV72UuGnitWWeDTr5MPKvzwrD5udmq_FQke-NGAQ@mail.gmail.com>
Message-ID: <CAPswA9ydvva=BqtqVAc0deDE+do0vm8CawOLX5d5D-BV59vtyA@mail.gmail.com>

These BIPs have been assigned 120 and 121:

120: Proof of Payment
121: Proof of Payment URI scheme

Regards,
Kalle
Den 24 jul 2015 08:27 skrev "Kalle Rosenbaum" <kalle at rosenbaum.se>:

> These BIPs have been assigned 120 and 121:
>
> 120: Proof of Payment
> 121: Proof of Payment URI scheme
>
> Regards,
> Kalle
> Den 21 jun 2015 16:39 skrev "Kalle Rosenbaum" <kalle at rosenbaum.se>:
>
>> Hi Greg!
>>
>> After a lot of constructive discussion, feedback and updating, I'm
>> requesting that you please assign these proposals BIP numbers. It's both
>> the "Proof of Payment" proposal and the "Proof of Payment URI scheme"
>> proposal that I'm referring to.
>>
>> The wikimedia source is available here:
>> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and
>> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP.
>>
>> Is this what you need in order to proceed or is there something else you
>> need from me?
>>
>> Best regards,
>> /Kalle
>>
>> 2015-06-17 11:51 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:
>>
>>> 2015-06-16 21:48 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>>> > I don't see why existing software could create a 40-byte OP_RETURN but
>>> not
>>> > larger? The limitation comes from a relay policy in full nodes, not a
>>> > limitation is wallet software... and PoPs are not relayed on the
>>> network.
>>>
>>> You are probably right here. The thing is that I don't know how *all*
>>> wallet signing and validating software is written, so I figure it's
>>> better to stick to a "valid" output. Since I don't *need* more data
>>> than 40 bytes, why bother. There's another constraint to this as well:
>>> The other BIP proposal, "Proof of Payment URI scheme", includes a
>>> nonce parameter in the URI. If the nonce is very long, the QR code
>>> will be unnecessarily big. The server should try to detect a brute
>>> force of the 48 bit nonce, or at least delay the pop requests by some
>>> 100 ms or so.
>>>
>>> Do you think this is an actual problem, and why? Is your suggestion to
>>> use a bigger nonce, given the above?
>>>
>>> >
>>> > Regarding sharing, I think you're talking about a different use case.
>>> Say
>>> > you want to pay for 1-week valid entrance to some venue. I thought the
>>> > purpose of the PoP was to be sure that only the person who paid for
>>> it, and
>>> > not anyone else can use it during that week.
>>> >
>>>
>>> That's right. That's one use case. You pay for the 1-week entrance and
>>> then you use your wallet to sign PoPs when you enter the venue.
>>>
>>> > My argument against that is that the original payer can also hand the
>>> > private keys in his wallet to someone else, who would then become able
>>> to
>>> > create PoPs for the service. He does not lose anything by this,
>>> assuming the
>>> > address is not reused.
>>> >
>>>
>>> Yes, that is possible. It's about the same as giving out a
>>> username/password for a service that you have paid for. In the case of
>>> a concert ticket, it's simple. Just allow one entrance per payment.
>>> But in the example you gave, it's a bit more complicated. You could
>>> for example give all guests a bracelet upon first entry or upon first
>>> exit. Or you can put a stamp on people leaving the venue, and demand
>>> that all re-entries show the stamp, possibly along with a new PoP.
>>> Pretty much as is done already. Different use cases will need
>>> different protection. In this example, the value added by PoP is that
>>> the venue does not have to distribute tickets in advance. This in turn
>>> allows for better privacy for the customer, who don't have to give out
>>> personal information such as an email-address.
>>>
>>> > So, using a token does not change anything, except it can be provided
>>> to the
>>> > payer - instead of relying on creating an implicit identity based on
>>> who
>>> > seems to have held particular private keys in the past.
>>> >
>>>
>>> Yes, that's a difference, but it comes at the cost of security. The
>>> stolen token can be used over and over. In the case of PoP it's only
>>> usable once, and it's only created when it's actually needed,
>>> minimizing the window of opportunity for the thief.
>>>
>>> Regards,
>>> Kalle
>>>
>>> > On Jun 16, 2015 9:41 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
>>> >>
>>> >> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:
>>> >> > You can't avoid sharing the token, and you can't avoid sharing the
>>> >> > private
>>> >> > keys used for signing either. If they are single use, you don't lose
>>> >> > anything by sharing them.
>>> >>
>>> >> Forwarding the PoP request would be a way to avoid sharing keys, as
>>> >> suggested above.
>>> >>
>>> >> >
>>> >> > Also you are not creating a real transaction. Why does the OP_RETURN
>>> >> > limitation matter?
>>> >>
>>> >> This was discussed in the beginning of this thread: "The idea is to
>>> >> simplify implementation. Existing software can be used as is to sign
>>> >> and validate PoPs"
>>> >>
>>> >> Regards,
>>> >> Kalle
>>> >>
>>> >> >
>>> >> > On Jun 16, 2015 9:22 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se>
>>> wrote:
>>> >> >>
>>> >> >> Thank you for your comments Pieter! Please find my answers below.
>>> >> >>
>>> >> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com
>>> >:
>>> >> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <
>>> kalle at rosenbaum.se>
>>> >> >> > wrote:
>>> >> >> >>
>>> >> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <
>>> pieter.wuille at gmail.com>:
>>> >> >> >> I'm not sure if we will be able to support PoP with CoinJoin.
>>> Maybe
>>> >> >> >> someone with more insight into CoinJoin have some input?
>>> >> >> >
>>> >> >> >
>>> >> >> > Not really. The problem is that you assume a transaction
>>> corresponds
>>> >> >> > to
>>> >> >> > a
>>> >> >> > single payment. This is true for simple wallet use cases, but not
>>> >> >> > compatible
>>> >> >> > with CoinJoin, or with systems that for example would want to
>>> combine
>>> >> >> > multiple payments in a single transaction.
>>> >> >> >
>>> >> >>
>>> >> >> Yes, you are right. It's not compatible with CoinJoin and the
>>> likes.
>>> >> >>
>>> >> >> >
>>> >> >> > 48 bits seems low to me, but it does indeed solve the problem.
>>> Why
>>> >> >> > not
>>> >> >> > 128
>>> >> >> > or 256 bits?
>>> >> >>
>>> >> >> The nonce is limited because of the OP_RETURN output being limited
>>> to
>>> >> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.
>>> >> >>
>>> >> >> >
>>> >> >> >> > Why does anyone care who paid? This is like walking into a
>>> >> >> >> > coffeshop,
>>> >> >> >> > noticing I don't have money with me, let me friend pay for
>>> me, and
>>> >> >> >> > then
>>> >> >> >> > have
>>> >> >> >> > the shop insist that I can't drink it because I'm not the
>>> buyer.
>>> >> >> >>
>>> >> >> >> If you pay as you use the service (ie pay for coffee upfront),
>>> >> >> >> there's
>>> >> >> >> no need for PoP. Please see the Motivation section. But you are
>>> >> >> >> right
>>> >> >> >> that you must have the wallet(s) that paid at hand when you
>>> issue a
>>> >> >> >> PoP.
>>> >> >> >>
>>> >> >> >> >
>>> >> >> >> > Track payments, don't try to assign identities to payers.
>>> >> >> >>
>>> >> >> >> Please elaborate, I don't understand what you mean here.
>>> >> >> >
>>> >> >> >
>>> >> >> > I think that is a mistake. You should not assume that the wallet
>>> who
>>> >> >> > held
>>> >> >> > the coins is the payer/buyer. That's what I said earlier; you're
>>> >> >> > implicitly
>>> >> >> > creating an identity (the one who holds these keys) based on the
>>> >> >> > transaction. This seems fundamentally wrong to me, and not
>>> necessary.
>>> >> >> > The
>>> >> >> > receiver should not care who paid or how, he should care what was
>>> >> >> > payed
>>> >> >> > for.
>>> >> >>
>>> >> >> You are saying that it's a problem that the wallet used to pay,
>>> must
>>> >> >> also be used to issue the PoP? That may very well be a problem in
>>> some
>>> >> >> cases. People using PoP should of course be aware of it's
>>> limitations
>>> >> >> and act accordingly, i.e. don't pay for concert tickets for a
>>> friend
>>> >> >> and expect your friend to be able to enter the arena with her
>>> wallet.
>>> >> >> As Tom Harding noted, it is possible to transfer keys to your
>>> friend's
>>> >> >> wallet, but that might not be desirable if those keys are also used
>>> >> >> for other payments. Also that would weaken the security of an HD
>>> >> >> wallet, since a chain code along with a private key would reveal
>>> all
>>> >> >> keys in that tree. Another solution is that your friend forwards
>>> the
>>> >> >> PoP request to your wallet, through twitter or SMS, and you send
>>> the
>>> >> >> PoP for her. Maybe that forwarding mechanism can be built into
>>> wallets
>>> >> >> and automated so that the wallet automatically suggests to sign the
>>> >> >> PoP for your friend. This is probably something to investigate
>>> >> >> further, but not within the scope of this BIP.
>>> >> >>
>>> >> >> Of course the simplest solution would be to send money to your
>>> friend
>>> >> >> first so that she can pay for the ticket from her own wallet, but
>>> >> >> that's not always feasible.
>>> >> >>
>>> >> >> >
>>> >> >> > The easiest solution to this IMHO would be an extension to the
>>> >> >> > payment
>>> >> >> > protocol that gives you (or your wallet) a token in return for
>>> >> >> > paying,
>>> >> >> > and
>>> >> >> > that knowledge of that token is used to gain access to the
>>> services
>>> >> >> > you
>>> >> >> > provide.
>>> >> >> >
>>> >> >>
>>> >> >> That token would then be reusable. Someone stealing it would be
>>> able
>>> >> >> to use it as much as she wants. That is what I want to avoid with
>>> PoP.
>>> >> >> The BIP proposal briefly mentions something like this in the
>>> >> >> rationale. I also had a discussion about this with Mike Hearn on
>>> this
>>> >> >> list on Mars 13 that I think covers most pros and cons of the
>>> >> >> different approaches.
>>> >> >>
>>> >> >> While your suggestion does indeed separate the transaction from the
>>> >> >> proof of payment, it also assumes that the token is held in the
>>> wallet
>>> >> >> that pays. Otherwise you would need to keep it in another safe
>>> place,
>>> >> >> remember it's reusable. Where would that be? How would you transfer
>>> >> >> that token to your friend?
>>> >> >>
>>> >> >> Thank you again for your comments. I appreciate it.
>>> >> >>
>>> >> >> Best regards,
>>> >> >> Kalle
>>> >> >>
>>> >> >> > --
>>> >> >> > Pieter
>>> >> >> >
>>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/34e83c0a/attachment-0001.html>

From dev at jonasschnelli.ch  Fri Jul 24 08:48:14 2015
From: dev at jonasschnelli.ch (Jonas Schnelli)
Date: Fri, 24 Jul 2015 10:48:14 +0200
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
References: <l.com@mac.com><D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com><346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com><29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com><55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com><4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com><DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org><DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com><B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com><D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com><0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com><9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
Message-ID: <55B1FBCE.1080002@jonasschnelli.ch>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


> There is now a pull request to remove mention of "zero or low
> fees", "fast international payments", and "instant peer-to-peer
> transactions" from bitcoin.org.  For those non-technical users who
> do not read source code, this may come across as the breaking of
> the social contract on what Bitcoin is ultimately intended to be.
> It looks like we already have a Reddit post on the subject as
> well.

This PR makes absolutely sense.
A documentation or description should reflect how a system works NOW.
Not how it *was working and how it *might work once.

The concept of free transaction just doens't really work well with the
current system and advertising bitcoin with "free transaction" is
missleading.

/jonas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJVsfvOAAoJECnUvLZBb1PseawP/1KrqKw5IGKUHmTf1E+oOLmq
nD7c1JekBGrJc7Lk0PfKZqS21aQZIt145DnFPv//u/C43x3zt7QSggMNSVYJmI85
AnrTRRP18TBGDm9CwVFjTbZ4tY/sRoDX9XMDBtlGDdAABX47C493PEI9pXZ5pRc7
cuLsSTKNqQdJgl3vUydfwddgaaVKPWN+zO72lZVo/edrUwzpjqjO3tu/+36ytto7
Ebm/vxOT+afrcFfAt3ZwuSwx7uiVoqsVRAwV1LWobod2wejpkUxf7Qkb1XRraSEV
m2opX6UAmPc3emKP+nT2ufDUM3z8YnW1WgjGB6UDXcCge+X5B7aXICI+qOzVR5Ck
djf4XMY9gXku26K72zk27XxmutajAYzsFvFbhm+HYa1q9yKRvDg8A9hYZ/6sKPQD
s6Hn3jou75YVz0mLpAKP7hkP7AmzOkS2gq/M/6SL3Fq+B3mObRMhpMgcpebzT2Oq
p7vLuh5OejcBX7VasVeodAEh9BkTJH9ll72QaJ63C4AjZ1Si87CnijIf8ACmmSxQ
wImwWs7aH0/x8xwxrpZzvVTf0/4hrPu5St6IMhz0DZlEaKJ/Rg6gI2/UKy/jma6u
6uVEGBft4eJH+zQN1Ddral5d56P3DSW7ClLLjiMXx1NpB2U1XAWDXNybqYIrSlvX
ej0qto4XVj20K3JS3CMl
=e71j
-----END PGP SIGNATURE-----

From thomas at thomaszander.se  Fri Jul 24 08:52:24 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Fri, 24 Jul 2015 10:52:24 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <201507172029.17056.luke@dashjr.org>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>
Message-ID: <1536871.OeviznBiyx@coldstorage>

On Friday 17. July 2015 20.29.16 Luke Dashjr via bitcoin-dev wrote:
> We are unlikely to approach 1 MB of actual volume by November, so I would 
> prefer to see the activation date on this moved later - maybe November
> 2016,  if not 2017. It would also be an improvement to try to follow
> reasonably- expected bandwidth increases, so 15% (1.15 MB) rather than
> doubling. Doubling in only a few months seems to be far from a
> "conservative" increase.

The reference to bandwidth increases makes no sense, the bandwidth in most of 
the world is already far exceeding the 8Mb limit. Not everyone lives where you 
live :)

In Germany you buy a 150Mbit connection for a flatrate and a cheap monthly 
rate, for instance.  Not saying that Germany is where all the miners are, but 
since 150Mbit allows one to comfortably have 16 megabyte blocks, it is a good 
example of how far off Luke's calculations are from real-world.

I don't belief your argument to push forward holds.
-- 
Thomas Zander

From jtimon at jtimon.cc  Fri Jul 24 09:24:01 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 24 Jul 2015 11:24:01 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B1DB84.6070001@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
Message-ID: <CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>

On Jul 24, 2015 8:30 AM, "Tom Harding" <tomh at thinlink.com> wrote:
>
> On 7/23/2015 10:51 AM, Jorge Tim?n wrote:
> > We know perfectly well that the system will need to eventually be
> > sustained by fees.
>
> Fee revenue can rise just as easily without increased BTC fee rates.
>
> Two avenues that are just as effective: increased exchange rate,
> increased number of fee-paying transactions.  Neither of these avenues
> benefits from increased "fee pressure" (scarcity of block space).
>

Why do you expect users to "increase the number of fee-paying transactions"
if their free transactions reliably get mined relatively fast?
And if it's good that they pay fees, why is not good when the reason they
do it is because there's limited space in the block? Is user's paying fees
soon a good thing or the "catastrophe" we need to avoid by rising the block
size, what is it? Or is there something else wrong with having a limit
other than "fees will hurt short-term adoption"? I'm confused about your
position now...

Regarding "increasing the exchange rate" it would be really nice to just
push a button and double bitcoin's price just before the next subsidy
halving, but unfortunately that's something out of our control.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/f546c1a4/attachment.html>

From slurms at gmx.us  Fri Jul 24 09:38:44 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 11:38:44 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55B1C2A2.6020704@voskuil.org>
References: =?UTF-8?Q?<55AFBBE6.3060702@electrum.org>=20<1437606706.2688.0.camel@yahoo.com>=09<114b2a76-ebc7-461a-b4bc-10873574d6c4@HUB2.rwth-ad.de>=09<CAH+=3DZ+Xt4mja348Rg5Ot0u1VeCnVxm0wkVUA3GVgryZ4Yp4QNw@mail.gmail.com>,
	=09<55B1A254.6070806@voskuil.org>=20<trinity-61061d18-d667-4dd3-b87e-01880612c446-1437709327718@3capp-mailcom-bs10>,
	=20<55B1C2A2.6020704@voskuil.org>?=
Message-ID: <trinity-8808ac13-3a67-4337-a9c8-fcb361ea071e-1437730724154@3capp-mailcom-bs01>

> Sent: Friday, July 24, 2015 at 6:44 AM
> From: "Eric Voskuil" <eric at voskuil.org>
> To: "Slurms MacKenzie" <slurms at gmx.us>, bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Making Electrum more anonymous
> 
> This is why privacy remains a significant issue. Privacy is an essential
> aspect of fungibility. This is a central problem for Bitcoin. 

Somewhat under discussed too, really. Peoples money doesn't fly out the window when their privacy is ripped out from under them, as such discussing it seems a little meaningless. As some of the most popular wallets don't even use change addresses, for the comfort of the developers and at the cost of the user. 


> Solving the latter two problems can go a long way to reducing the impact
> of the former. But currently the only solution is to run a full chain
> wallet. This is not a viable solution for many scenarios, and getting
> less so.

Which makes the general clambering for demise of the full node wallet all the more baffling.


> Well because of presumed relationship in time these are not actually
> separated requests. Which is why even the (performance-unrealistic)
> option of a distinct Tor route for each independent address request is
> *still* problematic.

Yep, any leak is a useful leak. Even if you only expose one single address request to me, I now have an idea of what timezone you are in and can eliminate it from other implausible ones. Onion routing is not a solution in my mind, you're just asking for people to sybil attack Electrum clients to capture as much timing data as possible. There's no defending against that.


> Introducing truly-random timing variations into the mixnet solutions can
> mitigate timing attacks, but yes, this just makes the already
> intolerable performance problem much worse.

Realistically this is all too broken to be building wallets on top of. 

SPV clients are neither secure nor private, we should feel guilty for ever promoting them. 

From jtimon at jtimon.cc  Fri Jul 24 09:42:53 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 24 Jul 2015 11:42:53 +0200
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <55B1FBCE.1080002@jonasschnelli.ch>
References: <l.com@mac.com> <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
	<55B1FBCE.1080002@jonasschnelli.ch>
Message-ID: <CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>

Well, I think "fast international transactions" is still true. An hour is
pretty fast when you compare it with several days. But yeah, "free" and
"instant" are misleading words.
Low fees may be ok. One thing that is not mentioned often is that the fact
that the system is p2p is what makes transactions irreversible (otherwise a
court order can tell any centralized server to cancel any transaction).
Irreversible transactions don't need proportional fees, because there's
nothing being ensured and the amount being moved is irrelevant. So even if
we have a future with 5 usd fees, that's still a very low fee for moving,
say 1 M usd worth of btc. So I'm not opposed to talking about low fees,
just not free and not instant (although lightning can actually provide free
and instant transactions).
On Jul 24, 2015 10:48 AM, "Jonas Schnelli via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
> > There is now a pull request to remove mention of "zero or low
> > fees", "fast international payments", and "instant peer-to-peer
> > transactions" from bitcoin.org.  For those non-technical users who
> > do not read source code, this may come across as the breaking of
> > the social contract on what Bitcoin is ultimately intended to be.
> > It looks like we already have a Reddit post on the subject as
> > well.
>
> This PR makes absolutely sense.
> A documentation or description should reflect how a system works NOW.
> Not how it *was working and how it *might work once.
>
> The concept of free transaction just doens't really work well with the
> current system and advertising bitcoin with "free transaction" is
> missleading.
>
> /jonas
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQIcBAEBAgAGBQJVsfvOAAoJECnUvLZBb1PseawP/1KrqKw5IGKUHmTf1E+oOLmq
> nD7c1JekBGrJc7Lk0PfKZqS21aQZIt145DnFPv//u/C43x3zt7QSggMNSVYJmI85
> AnrTRRP18TBGDm9CwVFjTbZ4tY/sRoDX9XMDBtlGDdAABX47C493PEI9pXZ5pRc7
> cuLsSTKNqQdJgl3vUydfwddgaaVKPWN+zO72lZVo/edrUwzpjqjO3tu/+36ytto7
> Ebm/vxOT+afrcFfAt3ZwuSwx7uiVoqsVRAwV1LWobod2wejpkUxf7Qkb1XRraSEV
> m2opX6UAmPc3emKP+nT2ufDUM3z8YnW1WgjGB6UDXcCge+X5B7aXICI+qOzVR5Ck
> djf4XMY9gXku26K72zk27XxmutajAYzsFvFbhm+HYa1q9yKRvDg8A9hYZ/6sKPQD
> s6Hn3jou75YVz0mLpAKP7hkP7AmzOkS2gq/M/6SL3Fq+B3mObRMhpMgcpebzT2Oq
> p7vLuh5OejcBX7VasVeodAEh9BkTJH9ll72QaJ63C4AjZ1Si87CnijIf8ACmmSxQ
> wImwWs7aH0/x8xwxrpZzvVTf0/4hrPu5St6IMhz0DZlEaKJ/Rg6gI2/UKy/jma6u
> 6uVEGBft4eJH+zQN1Ddral5d56P3DSW7ClLLjiMXx1NpB2U1XAWDXNybqYIrSlvX
> ej0qto4XVj20K3JS3CMl
> =e71j
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/5856bbe6/attachment-0001.html>

From slurms at gmx.us  Fri Jul 24 09:43:00 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 11:43:00 +0200
Subject: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
In-Reply-To: <1536871.OeviznBiyx@coldstorage>
References: <CADm_WcZKoMAhYvXbFMbE+5K9HOD75YkQu8_qTW4S6YN6ZMrfjA@mail.gmail.com>
	<201507172029.17056.luke@dashjr.org>, <1536871.OeviznBiyx@coldstorage>
Message-ID: <trinity-387914cc-b201-48e9-8eb0-8708a8e95199-1437730980193@3capp-mailcom-bs01>

> Sent: Friday, July 24, 2015 at 10:52 AM
> From: "Thomas Zander via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] BIP 102 - kick the can down the road to 2MB
>
> 
> The reference to bandwidth increases makes no sense, the bandwidth in most of 
> the world is already far exceeding the 8Mb limit. Not everyone lives where you 
> live :)
> 
> In Germany you buy a 150Mbit connection for a flatrate and a cheap monthly 
> rate, for instance.  Not saying that Germany is where all the miners are, but 
> since 150Mbit allows one to comfortably have 16 megabyte blocks, it is a good 
> example of how far off Luke's calculations are from real-world.

I'll have better stats available soon, but this does not reflect the current state of the network. 

Only 4% of my initial crawl presented bandwidth above your stated 18MB/s. 

From s7r at sky-ip.org  Fri Jul 24 11:12:39 2015
From: s7r at sky-ip.org (s7r)
Date: Fri, 24 Jul 2015 14:12:39 +0300
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55AFBBE6.3060702@electrum.org>
References: <55AFBBE6.3060702@electrum.org>
Message-ID: <55B21DA7.2020706@sky-ip.org>

Hi,

I think this would be too complicated in practice and you'd have to
defend against many other types of attacks, including but not limited to
Sybil attacks, misbehaving servers not responding to requests,
misbehaving servers not forwarding requests, you'd need some kind of
directory servers or master servers which sign and authenticate the
public server keys, otherwise someone can poison that data and provide
the clients with wrong server keys.

Secondly, you'd not use RSA for this, but rather Ed25519 which is
faster, more cpu efficient and provides better security.

Last but not least, I don't see this as a major issue and I really thin
it is not worth your time. Better work on electrum server defenses,
hardening them against DoS. After all, Electrum is a SPV based Bitcoin
wallet, so it cannot be more anonymous than Bitcoin itself, which we
already know it is pseudonymous, not anonymous and transactions can
/will be linked to addresses. This is just a limitation of Bitcoin as it
is today, and using SPV you assume the risk of trusting the server, it's
just how SPV should work. As a pro, it gives you the ability to sync
immediately and not download the entire blockchain.

Privacy concerned people should run their own Electrum server and make
it accessible via .onion, and connect the bitcoind running on the
electrum server host only to other onion peers (onlynet=tor). We should
highlight that using Electrum with Tor cannot leak more that some
addresses belong to the same wallet, which is not the end of the world.

On 7/22/2015 6:51 PM, Thomas Voegtlin via bitcoin-dev wrote:
> Hello,
> 
> Although Electrum clients connect to several servers in order to fetch
> block headers, they typically request address balances and address
> histories from a single server. This means that the chosen server knows
> that a given set of addresses belong to the same wallet. That is true
> even if Electrum is used over TOR.
> 
> There have been various proposals to improve on that, but none of them
> really convinced me so far. One recurrent proposal has been to create
> subsets of wallet addresses, and to send them to separate servers. In my
> opinion, this does not really improve anonymity, because it requires
> trusting more servers.
> 
> Here is an idea, inspired by TOR, on which I would like to have some
> feedback: We create an anonymous routing layer between Electrum servers
> and clients.
> 
> * Each server S publishes a RSA public key, KS
> * Each client receives a list of available servers and their pubkeys
> * For each wallet address, addr_i, a client chooses a server S_i, and a
> RSA keypair (K_addr_i, k_addr_i)
> * The client creates a list of encrypted requests. Each request contains
> addr_i and K_addr_i, and is encrypted with the pubkey KS_i of S_i
> * The client chooses a main server M, and sends the list of encrypted
> requests to M
> * M dispatches the client's requests to the corresponding servers S_i
> (without the client's IP address.)
> * Each server decrypts the requests it receives, performs the request,
> and encrypts the result with K_addr_i
> * M receives encrypted responses, and forwards them to the client.
> * The client decrypts the encrypted response with k_addr_i
> 
> What do you think? What are the costs and benefits of such an approach?
> 
> (Note: this will not work if all servers, or a large fraction of them,
> are controlled by the same entity that controls M)
> 
> 
> Thomas
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

From hearn at vinumeris.com  Fri Jul 24 11:38:46 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Fri, 24 Jul 2015 13:38:46 +0200
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
Message-ID: <CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>

>
> It's worth noting that even massive companies with $30M USD of funding
> don't run a single Bitcoin Core node


This has nothing to do with block sizes, and everything to do with Core not
directly providing the services businesses actually want.

The whole "node count is falling because of block sizes" is nothing more
than conjecture presented as fact. The existence of multiple companies who
could easily afford to do this but don't because they perceive it as
valueless should be a wakeup call there.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/1b990dec/attachment.html>

From thomas at thomaszander.se  Fri Jul 24 13:39:08 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Fri, 24 Jul 2015 15:39:08 +0200
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
Message-ID: <2275059.uyAkQvreAU@coldstorage>

On Friday 24. July 2015 05.37.30 Slurms MacKenzie via bitcoin-dev wrote:
> It's worth noting that even massive companies with $30M USD of funding don't
> run a single Bitcoin Core node,

I assume you mean that they don't have a Bitcoin Core node that is open to 
incoming connections. Since that is the only thing you can actually test, no?

Most companies are still terrified of accepting incoming connections from the 
scary Internet. So I'm not entirely surprised by this conclusion.  I would be 
very surprised if companies don't actually have a node at all.
-- 
Thomas Zander

From adam at cypherspace.org  Fri Jul 24 14:09:13 2015
From: adam at cypherspace.org (Adam Back)
Date: Fri, 24 Jul 2015 07:09:13 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
Message-ID: <CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>

(Claim of large bitcoin ecosystem companies without full nodes) this
says to me rather we have a need for education: I run a full node
myself (intermittently), just for my puny collection of bitcoins.  If
I ran a business with custody of client funds I'd wake up in a cold
sweat at night about the security and integrity of the companies full
nodes, and reconciliation of client funds against them.

However I'm not sure the claim is accurate ($30m funding and no full
node) but to take the hypothetical that this pattern exists, security
people and architects at such companies must insist on the company
running their own full node to depend on and cross check from
otherwise they would be needlessly putting their client's funds at
risk.

The crypto currency security standards document probably covers
requirement for fullnode somewhere
https://cryptoconsortium.github.io/CCSS/ - we need some kind of basic
minimum bar standard for companies to aim for and this seems like a
reasonable start!

Reducing custody in my opinion should also be an aim eg 2 of 2
multisig + timelock seems like a more prudent approach, transaction
throughput permitting.  Right now exchange volume wouldnt fit on
chain, once bitcoin scaling has improved, perhaps it can.  I am
optimistic that within a year Bitcoin scaling and decentralisation
will look much better with current active work on decentralisation,
layer 2 scaling solutions.  As part of that I could see a modest
blocksize increase to smooth out the transition to layer 2.

In terms of a constructive discussion, I think it's interesting to
talk about the root cause and solutions: decentralisation (more
economically dependent full nodes, lower miner policy centralisation),
more layer 2 work.  People interested in scaling, if they havent,
should go read the lightning paper, look at the github and participate
in protocol or code work.  I think realistically we can have this
running inside of a year.  That significantly changes the dynamic.
Similarly a significant part of mining centralisation is artificial
and work is underway that will improve that.

What I mean about decentralisation is if decentralisation simple
metrics were in a healthy place, it would be a simple conversation to
make use of bandwidth improvements (in the range of 15%/year per Cisco
numbers) to get more throughput.  I do think flexcap is interesting as
a way to add one more control variable such that we can have
economically validated scaling.  Pushing fees to zero and increasing
centralisation to levels that weaken security with economically weak
payments is probably not desirable.  Without flexcap it seems the next
best thing we can do is rely on miners to balance user utility against
mining revenue, and it seems plausible that they would in extremis but
to my mind there are factors suggesting this could be problematic
incrementally: miners have not often been responsive to editing
defaults, or reacting to security or soft-fork upgrades; miners may
have some conflict of interest of users, eg they could use switching
cost economics to optimise for miner profit at the expense of user
utility, or attack each other in selfish-miner or other variants as
miners are also pitted against each other while being held honest by
economically dependent full nodes.

Adam

From vincent.truong at procabiak.com  Fri Jul 24 14:37:15 2015
From: vincent.truong at procabiak.com (Vincent Truong)
Date: Sat, 25 Jul 2015 00:37:15 +1000
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>
References: <l.com@mac.com> <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
	<55B1FBCE.1080002@jonasschnelli.ch>
	<CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>
Message-ID: <CACrzPenbkh86bW9GQe1M4Zt1OxDTQNeMU6osatRDEvcwOyxHAg@mail.gmail.com>

"Fast transactions"
Fast transactions implies it is slower than Visa, and Visa is 'instant' by
comparison from the spender's POV. Bitcoin is still very instant because
wallets still send notifications/pings when transactions are first seen,
not when it goes into a block. We shouldn't mislead people into thinking a
transaction literally takes 10 minutes to travel the globe.

Maybe this feels like PR speak. But being too humble about Bitcoin's
attributes isn't a good idea either.

If we're going to look at perception, image and expectations, perhaps we
can start to look at redefining some terminology too. Like confirmations,
which is an arbitrary concept. Where possible we should describe it with
finance terminology.

"0 conf transaction"
0 conf is the 'transaction' - just the act of making an exchange. It
doesn't imply safe and I believe using the word 'settle' in place of
confirmations will automatically click with merchants.

"1st conf"
A 'confirmation' is a 'settlement'. If it is 'settled', it implies final
(except by court order), whereas confirmation usually means 'ah, I've seen
it come through'. I rarely hear any sales clerk call credit card
transactions confirmed. More often you will hear 'approved' instead.
Although 1st conf can be overtaken, so...

"n confirmations"
This term can probably stay since I can't come up with a better word.
Settlements only happen once, putting a number next to it breaks the
meaning of the word. "Settled with 4 confirmations" seems pretty clear.
Alternatively I think instead of displaying a meaningless number we ought
to go by a percentage (the double spend improbability) and go by
'confidence'. "Settled with 92% confidence." Or we can pick an arbitrary
number like 6 and use 'settling...' and 'settled' when reached.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150725/77062ad2/attachment.html>

From dscotese at litmocracy.com  Fri Jul 24 15:08:24 2015
From: dscotese at litmocracy.com (Dave Scotese)
Date: Fri, 24 Jul 2015 08:08:24 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
Message-ID: <CAGLBAhf-qtEZCrwTR3fbKxJW=sLF-AqGyOHSD0k+k+-Rvkz6Og@mail.gmail.com>

On Fri, Jul 24, 2015 at 4:38 AM, Mike Hearn <hearn at vinumeris.com> wrote:

> It's worth noting that even massive companies with $30M USD of funding
>> don't run a single Bitcoin Core node
>
>
> This has nothing to do with block sizes, and everything to do with Core
> not directly providing the services businesses actually want.
>
> The whole "node count is falling because of block sizes" is nothing more
> than conjecture presented as fact. The existence of multiple companies who
> could easily afford to do this but don't because they perceive it as
> valueless should be a wakeup call there.
>

Regardless of why node count is falling, many people who used to run a full
node stopped doing so.  To mitigate that, their chances of getting
something out of it have to be greater.  What if propagating a valid
transaction generated a small chance of earning a piece of the fee?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/9fb27b1b/attachment.html>

From simon at bitcartel.com  Fri Jul 24 15:22:44 2015
From: simon at bitcartel.com (Simon Liu)
Date: Fri, 24 Jul 2015 08:22:44 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
	<CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
Message-ID: <55B25844.6020801@bitcartel.com>

Would a 1MB increase to 2MB, as outlined in BIP 102, be considered a
"modest" increase?

On 07/24/2015 07:09 AM, Adam Back via bitcoin-dev wrote:
> I am
> optimistic that within a year Bitcoin scaling and decentralisation
> will look much better with current active work on decentralisation,
> layer 2 scaling solutions.  As part of that I could see a modest
> blocksize increase to smooth out the transition to layer 2.

From milly at bitcoins.info  Fri Jul 24 15:40:39 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Fri, 24 Jul 2015 11:40:39 -0400
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
Message-ID: <55B25C77.8090107@bitcoins.info>

On 7/23/2015 10:57 PM, Dave Scotese via bitcoin-dev wrote:
> I used Google to establish that there is not already a post from 2015
> that mentions "roadmap" in the subject line.  Such would be a good
> skeleton for anyone new to the list (like me).

Just a point about terminology:

Roadmap - A plan of proposed changed used to meet some sort of goal.  If 
the goal is increased scaling then you list a series of changes that 
need to be done to achieve that goal.

Baseline - That is the "If We Do Nothing" Analysis.  Each proposed 
change will generally have one or more alternatives which are compared 
to the "baseline."

those would be 2 different documents.

Russ






From dscotese at litmocracy.com  Fri Jul 24 16:32:34 2015
From: dscotese at litmocracy.com (Dave Scotese)
Date: Fri, 24 Jul 2015 09:32:34 -0700
Subject: [bitcoin-dev] bitcoin-dev Digest, Vol 2, Issue 95
Message-ID: <CAGLBAhe8-u+Tx25Q9nq8DYFvdmDes3GaAuOOQrjdS+Q=1pjwcg@mail.gmail.com>

> Alternatively I think instead of displaying a meaningless number we ought
> to go by a percentage (the double spend improbability) and go by
> 'confidence'.


That is a great idea, and not too hard to implement.  A bit of code can
determine over the last N blocks, how many blocks that were at the current
depth of the present transaction were orphaned and divide that by the total
number of blocks solved (orphaned or not) while those N blocks were
solved.  That's the historical number (H), and then the "51% attack" number
(A) can make an explicit assumptions like "Assuming a bad actor has 51% of
the hashing power for 24 hours starting right now, the block holding this
transaction has an X% chance of being orphaned."  Report "# confirmations"
as "99.44% confidence" using [100% - max(H,A)].
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/537c5972/attachment.html>

From pete at petertodd.org  Fri Jul 24 17:40:39 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 24 Jul 2015 13:40:39 -0400
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
	<CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
Message-ID: <20150724174039.GA25947@savin.petertodd.org>

On Fri, Jul 24, 2015 at 07:09:13AM -0700, Adam Back via bitcoin-dev wrote:
> (Claim of large bitcoin ecosystem companies without full nodes) this
> says to me rather we have a need for education: I run a full node
> myself (intermittently), just for my puny collection of bitcoins.  If
> I ran a business with custody of client funds I'd wake up in a cold
> sweat at night about the security and integrity of the companies full
> nodes, and reconciliation of client funds against them.
> 
> However I'm not sure the claim is accurate ($30m funding and no full
> node) but to take the hypothetical that this pattern exists, security
> people and architects at such companies must insist on the company
> running their own full node to depend on and cross check from
> otherwise they would be needlessly putting their client's funds at
> risk.

FWIW, blockchain.info is obviously *not* running a full node as their
wallet was accepting invalid confirmations on transactions caused by the
recent BIP66 related fork; blockchain.info has $30m in funding.

Coinbase also was not running a full node not all that long ago, instead
running a custom Ruby implementation that caused their service to go
down whenever it forked. (and would have also accepted invalid
confirmations) I believe right now they're running that implementation
behind a full node however.

> The crypto currency security standards document probably covers
> requirement for fullnode somewhere
> https://cryptoconsortium.github.io/CCSS/ - we need some kind of basic
> minimum bar standard for companies to aim for and this seems like a
> reasonable start!

Actually I've been trying to get the CCSS standard to cover full nodes,
and have been getting push-back:

https://github.com/CryptoConsortium/CCSS/issues/15

tl;dr: Running a full node is *not* required by the standard right now
at any certification level.

This is of course completely ridiculous... But I haven't had much much
time to put into getting that changed so maybe we just need some better
explanations to the others maintaining the standard. That said, if the
standard stays that way, obviously I'm going to have to ask to have my
name taken off it.

> In terms of a constructive discussion, I think it's interesting to
> talk about the root cause and solutions: decentralisation (more
> economically dependent full nodes, lower miner policy centralisation),
> more layer 2 work.  People interested in scaling, if they havent,
> should go read the lightning paper, look at the github and participate
> in protocol or code work.  I think realistically we can have this
> running inside of a year.  That significantly changes the dynamic.
> Similarly a significant part of mining centralisation is artificial
> and work is underway that will improve that.

I would point out that lack of understanding of how Bitcoin works, as
well as a lack of understanding of security engineering in general, is
probably a significant contributor to these problems. Furthermore
Bitcoin and cryptocurrencies in general are still small enough that many
forseeable low probability but high impact events haven't happened,
making it difficult to explain to non-technical stakeholders why they
should be listening to experts rather than charlatans and fools.

After a few major centralization related failures have occured, we'll
have an easier job here. Unfortunately there's also a good chance we
only get one shot at this due to how easy it is to kill PoW systems at
birth...

-- 
'peter'[:-1]@petertodd.org
000000000000000014438a428adfcf4d113a09b87e4a552a1608269ff137ef2d
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/a3a73338/attachment.sig>

From pete at petertodd.org  Fri Jul 24 17:43:20 2015
From: pete at petertodd.org (Peter Todd)
Date: Fri, 24 Jul 2015 13:43:20 -0400
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <2275059.uyAkQvreAU@coldstorage>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<2275059.uyAkQvreAU@coldstorage>
Message-ID: <20150724174320.GB25947@savin.petertodd.org>

On Fri, Jul 24, 2015 at 03:39:08PM +0200, Thomas Zander via bitcoin-dev wrote:
> On Friday 24. July 2015 05.37.30 Slurms MacKenzie via bitcoin-dev wrote:
> > It's worth noting that even massive companies with $30M USD of funding don't
> > run a single Bitcoin Core node,
> 
> I assume you mean that they don't have a Bitcoin Core node that is open to 
> incoming connections. Since that is the only thing you can actually test, no?

We can test the fact that blockchain.info's wallet and block explorer
has behaved in a way consistent with not running a full node - they have
shown invalid data that any full node would reject on multiple
occasions, most recently invalid confirmations during the BIP66 fork.

-- 
'peter'[:-1]@petertodd.org
000000000000000006baf20e289b563e3ec69320275086169a47e9c58d4abfba
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/9fa29c09/attachment.sig>

From elombrozo at gmail.com  Fri Jul 24 20:23:27 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 24 Jul 2015 13:23:27 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <20150724174320.GB25947@savin.petertodd.org>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<2275059.uyAkQvreAU@coldstorage>
	<20150724174320.GB25947@savin.petertodd.org>
Message-ID: <D7531018-087E-4588-B113-7DD838E4ED22@gmail.com>

Thanks for bringing up the CCSS, Adam and Peter.

I was actually working on a post inviting everyone in this mailing list to come and participate?but you guys beat me to it. :)

The CCSS is an open standard, born out of the belief that sharing the industry's best practices amongst each other and with the community at large benefits everyone.

To read more about it and how you can contribute, please visit http://blog.cryptoconsortium.org/contributing-to-the-ccss/ <http://blog.cryptoconsortium.org/contributing-to-the-ccss/>

The standard:  https://cryptoconsortium.github.io/CCSS/ <https://cryptoconsortium.github.io/CCSS/>

The github repository: https://github.com/CryptoConsortium/CCSS <https://github.com/CryptoConsortium/CCSS>


- Eric

> On Jul 24, 2015, at 10:43 AM, Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On Fri, Jul 24, 2015 at 03:39:08PM +0200, Thomas Zander via bitcoin-dev wrote:
>> On Friday 24. July 2015 05.37.30 Slurms MacKenzie via bitcoin-dev wrote:
>>> It's worth noting that even massive companies with $30M USD of funding don't
>>> run a single Bitcoin Core node,
>> 
>> I assume you mean that they don't have a Bitcoin Core node that is open to
>> incoming connections. Since that is the only thing you can actually test, no?
> 
> We can test the fact that blockchain.info's wallet and block explorer
> has behaved in a way consistent with not running a full node - they have
> shown invalid data that any full node would reject on multiple
> occasions, most recently invalid confirmations during the BIP66 fork.
> 
> --
> 'peter'[:-1]@petertodd.org
> 000000000000000006baf20e289b563e3ec69320275086169a47e9c58d4abfba
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/b837dbd2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/b837dbd2/attachment.sig>

From elombrozo at gmail.com  Fri Jul 24 20:28:28 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 24 Jul 2015 13:28:28 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <20150724174039.GA25947@savin.petertodd.org>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
	<CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
	<20150724174039.GA25947@savin.petertodd.org>
Message-ID: <79149E7A-0357-448D-BE59-BF1FC46C33BA@gmail.com>


> On Jul 24, 2015, at 10:40 AM, Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On Fri, Jul 24, 2015 at 07:09:13AM -0700, Adam Back via bitcoin-dev wrote:
>> (Claim of large bitcoin ecosystem companies without full nodes) this
>> says to me rather we have a need for education: I run a full node
>> myself (intermittently), just for my puny collection of bitcoins.  If
>> I ran a business with custody of client funds I'd wake up in a cold
>> sweat at night about the security and integrity of the companies full
>> nodes, and reconciliation of client funds against them.
>> 
>> However I'm not sure the claim is accurate ($30m funding and no full
>> node) but to take the hypothetical that this pattern exists, security
>> people and architects at such companies must insist on the company
>> running their own full node to depend on and cross check from
>> otherwise they would be needlessly putting their client's funds at
>> risk.
> 
> FWIW, blockchain.info is obviously *not* running a full node as their
> wallet was accepting invalid confirmations on transactions caused by the
> recent BIP66 related fork; blockchain.info has $30m in funding.
> 
> Coinbase also was not running a full node not all that long ago, instead
> running a custom Ruby implementation that caused their service to go
> down whenever it forked. (and would have also accepted invalid
> confirmations) I believe right now they're running that implementation
> behind a full node however.
> 
>> The crypto currency security standards document probably covers
>> requirement for fullnode somewhere
>> https://cryptoconsortium.github.io/CCSS/ - we need some kind of basic
>> minimum bar standard for companies to aim for and this seems like a
>> reasonable start!
> 
> Actually I've been trying to get the CCSS standard to cover full nodes,
> and have been getting push-back:
> 
> https://github.com/CryptoConsortium/CCSS/issues/15
> 
> tl;dr: Running a full node is *not* required by the standard right now
> at any certification level.
> 
> This is of course completely ridiculous... But I haven't had much much
> time to put into getting that changed so maybe we just need some better
> explanations to the others maintaining the standard. That said, if the
> standard stays that way, obviously I'm going to have to ask to have my
> name taken off it.

For the record, there?s pretty much unanimous agreement that running a full node should be a requirement at the higher levels of certification (if not the lower ones as well). I?m not sure exactly what pushback you?re referring to.


>> In terms of a constructive discussion, I think it's interesting to
>> talk about the root cause and solutions: decentralisation (more
>> economically dependent full nodes, lower miner policy centralisation),
>> more layer 2 work.  People interested in scaling, if they havent,
>> should go read the lightning paper, look at the github and participate
>> in protocol or code work.  I think realistically we can have this
>> running inside of a year.  That significantly changes the dynamic.
>> Similarly a significant part of mining centralisation is artificial
>> and work is underway that will improve that.
> 
> I would point out that lack of understanding of how Bitcoin works, as
> well as a lack of understanding of security engineering in general, is
> probably a significant contributor to these problems. Furthermore
> Bitcoin and cryptocurrencies in general are still small enough that many
> forseeable low probability but high impact events haven't happened,
> making it difficult to explain to non-technical stakeholders why they
> should be listening to experts rather than charlatans and fools.
> 
> After a few major centralization related failures have occured, we'll
> have an easier job here. Unfortunately there's also a good chance we
> only get one shot at this due to how easy it is to kill PoW systems at
> birth...
> 
> --
> 'peter'[:-1]@petertodd.org
> 000000000000000014438a428adfcf4d113a09b87e4a552a1608269ff137ef2d
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/99f69216/attachment-0001.sig>

From elombrozo at gmail.com  Fri Jul 24 20:31:46 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 24 Jul 2015 13:31:46 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
In-Reply-To: <79149E7A-0357-448D-BE59-BF1FC46C33BA@gmail.com>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<CA+w+GKS91NWB9ffysD4qEvAm+r1PswMePq6dirshbcZzpFg6Cg@mail.gmail.com>
	<CALqxMTFWfvc7LL5UgOMNnzNCxwbgyGRXgdV7wt1LYGGZ9h4XWw@mail.gmail.com>
	<20150724174039.GA25947@savin.petertodd.org>
	<79149E7A-0357-448D-BE59-BF1FC46C33BA@gmail.com>
Message-ID: <081736BF-5DF8-4302-9680-A8395F2498B5@gmail.com>

Peter, it?s a work in evolution, it?s not complete yet. It?s still missing a bunch of stuff - please feel free to contribute.

> On Jul 24, 2015, at 1:28 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
>> 
>> On Jul 24, 2015, at 10:40 AM, Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> On Fri, Jul 24, 2015 at 07:09:13AM -0700, Adam Back via bitcoin-dev wrote:
>>> (Claim of large bitcoin ecosystem companies without full nodes) this
>>> says to me rather we have a need for education: I run a full node
>>> myself (intermittently), just for my puny collection of bitcoins.  If
>>> I ran a business with custody of client funds I'd wake up in a cold
>>> sweat at night about the security and integrity of the companies full
>>> nodes, and reconciliation of client funds against them.
>>> 
>>> However I'm not sure the claim is accurate ($30m funding and no full
>>> node) but to take the hypothetical that this pattern exists, security
>>> people and architects at such companies must insist on the company
>>> running their own full node to depend on and cross check from
>>> otherwise they would be needlessly putting their client's funds at
>>> risk.
>> 
>> FWIW, blockchain.info is obviously *not* running a full node as their
>> wallet was accepting invalid confirmations on transactions caused by the
>> recent BIP66 related fork; blockchain.info has $30m in funding.
>> 
>> Coinbase also was not running a full node not all that long ago, instead
>> running a custom Ruby implementation that caused their service to go
>> down whenever it forked. (and would have also accepted invalid
>> confirmations) I believe right now they're running that implementation
>> behind a full node however.
>> 
>>> The crypto currency security standards document probably covers
>>> requirement for fullnode somewhere
>>> https://cryptoconsortium.github.io/CCSS/ - we need some kind of basic
>>> minimum bar standard for companies to aim for and this seems like a
>>> reasonable start!
>> 
>> Actually I've been trying to get the CCSS standard to cover full nodes,
>> and have been getting push-back:
>> 
>> https://github.com/CryptoConsortium/CCSS/issues/15
>> 
>> tl;dr: Running a full node is *not* required by the standard right now
>> at any certification level.
>> 
>> This is of course completely ridiculous... But I haven't had much much
>> time to put into getting that changed so maybe we just need some better
>> explanations to the others maintaining the standard. That said, if the
>> standard stays that way, obviously I'm going to have to ask to have my
>> name taken off it.
> 
> For the record, there?s pretty much unanimous agreement that running a full node should be a requirement at the higher levels of certification (if not the lower ones as well). I?m not sure exactly what pushback you?re referring to.
> 
> 
>>> In terms of a constructive discussion, I think it's interesting to
>>> talk about the root cause and solutions: decentralisation (more
>>> economically dependent full nodes, lower miner policy centralisation),
>>> more layer 2 work.  People interested in scaling, if they havent,
>>> should go read the lightning paper, look at the github and participate
>>> in protocol or code work.  I think realistically we can have this
>>> running inside of a year.  That significantly changes the dynamic.
>>> Similarly a significant part of mining centralisation is artificial
>>> and work is underway that will improve that.
>> 
>> I would point out that lack of understanding of how Bitcoin works, as
>> well as a lack of understanding of security engineering in general, is
>> probably a significant contributor to these problems. Furthermore
>> Bitcoin and cryptocurrencies in general are still small enough that many
>> forseeable low probability but high impact events haven't happened,
>> making it difficult to explain to non-technical stakeholders why they
>> should be listening to experts rather than charlatans and fools.
>> 
>> After a few major centralization related failures have occured, we'll
>> have an easier job here. Unfortunately there's also a good chance we
>> only get one shot at this due to how easy it is to kill PoW systems at
>> birth...
>> 
>> --
>> 'peter'[:-1]@petertodd.org
>> 000000000000000014438a428adfcf4d113a09b87e4a552a1608269ff137ef2d
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/0e2bcbdf/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/0e2bcbdf/attachment.sig>

From gavinandresen at gmail.com  Fri Jul 24 20:59:40 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Fri, 24 Jul 2015 16:59:40 -0400
Subject: [bitcoin-dev] For discussion: limit transaction size to
	mitigate CVE-2013-2292
In-Reply-To: <CABsx9T3mEYPMFfxFbM-Jj7nADWsVg9HbvQOr0JZeEjC8gOvLZA@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>
	<CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>
	<CABsx9T3mEYPMFfxFbM-Jj7nADWsVg9HbvQOr0JZeEjC8gOvLZA@mail.gmail.com>
Message-ID: <CABsx9T2s3WaRZK8rEZLd9+FEVaUPxz=EmhL2JH=CnH-y6C1b0w@mail.gmail.com>

After thinking about it, implementing it, and doing some benchmarking, I'm
convinced replacing the existing, messy, ad-hoc sigop-counting consensus
rules is the right thing to do.

The last two commits in this branch are an implementation:
   https://github.com/gavinandresen/bitcoin-git/commits/count_hash_size

>From the commit message in the last commit:

Summary of old rules / new rules:

Old rules: 20,000 inaccurately-counted-sigops for a 1MB block
New: 80,000 accurately-counted sigops for an 8MB block

A scan of the last 100,000 blocks for high-sigop blocks gets
a maximum of 7,350 sigops in block 364,773 (in a single, huge,
~1MB transaction).

For reference, Pieter Wuille's libsecp256k1 validation code
validates about 10,000 signatures per second on a single
2.7GHZ CPU core.

Old rules: no limit for number of bytes hashed to generate
signature hashes

New rule: 1.3gigabytes hashed per 8MB block to generate
signature hashes

Block 364,422 contains a single ~1MB transaction that requires
1.2GB of data hashed to generate signature hashes.

TODO: benchmark Core's sighash-creation code ('openssl speed sha256'
reports something like 1GB per second on my machine).

Note that in normal operation most validation work is done as transactions
are received from the network, and can be cached so it doesn't have to be
repeated when a new block is found. The limits described in this BIP are
intended, as the existing sigop limits are intended, to be an extra "belt
and suspenders" measure to mitigate any possible attack that involves
creating and broadcasting a very expensive-to-verify block.


Draft BIP:

  BIP: ??
  Title: Consensus rules to limit CPU time required to validate blocks
  Author: Gavin Andresen <gavinandresen at gmail.com>
  Status: Draft
  Type: Standards Track
  Created: 2015-07-24

==Abstract==

Mitigate potential CPU exhaustion denial-of-service attacks by limiting
the maximum number of ECDSA signature verfications done per block,
and limiting the number of bytes hashed to compute signature hashes.

==Motivation==

Sergio Demian Lerner reported that a maliciously constructed block could
take several minutes to validate, due to the way signature hashes are
computed for OP_CHECKSIG/OP_CHECKMULTISIG ([[
https://bitcointalk.org/?topic=140078|CVE-2013-2292]]).
Each signature validation can require hashing most of the transaction's
bytes, resulting in O(s*b) scaling (where s is the number of signature
operations and b is the number of bytes in the transaction, excluding
signatures). If there are no limits on s or b the result is O(n^2) scaling
(where n is a multiple of the number of bytes in the block).

This potential attack was mitigated by changing the default relay and
mining policies so transactions larger than 100,000 bytes were not
relayed across the network or included in blocks. However, a miner
not following the default policy could choose to include a
transaction that filled the entire one-megaybte block and took
a long time to validate.

==Specification==

After deployment, the existing consensus rule for maximum number of
signature operations per block (20,000, counted in two different,
idiosyncratic, ad-hoc ways) shall be replaced by the following two rules:

1. The maximum number of ECDSA verify operations required to validate
all of the transactions in a block must be less than or equal to
the maximum block size in bytes divided by 100 (rounded down).

2. The maximum number of bytes hashed to compute ECDSA signatures for
all transactions in a block must be less than or equal to the
maximum block size in bytes times 160.

==Compatibility==

This change is compatible with existing transaction-creation software,
because transactions larger than 100,000 bytes have been considered
"non-standard"
(they are not relayed or mined by default) for years, and a block full of
"standard" transactions will be well-under the limits.

Software that assembles transactions into blocks and software that validates
blocks must be updated to enforce the new consensus rules.

==Deployment==

This change will be deployed with BIP 100 or BIP 101.

==Discussion==

Linking these consensus rules to the maximum block size allows more
transactions
and/or transactions with more inputs or outputs to be included if the
maximum
block size increases.

The constants are chosen to be maximally compatible with the existing
consensus rule,
and to virtually eliminate the possibility that bitcoins could be lost if
somebody had locked some funds in a pre-signed, expensive-to-validate,
locktime-in-the-future
transaction.

But they are chosen to put a reasonable upper bound on the CPU time
required to validate
a maximum-sized block.

===Alternatives to this BIP:===

1. A simple limit on transaction size (e.g. any transaction in a block must
be 100,000
bytes or smaller).

2. Fix the CHECKSIG/CHECKMULTISIG opcodes so they don't re-hash variations
of
the transaction's data. This is the "most correct" solution, but would
require
updating every piece of transaction-creating and transaction-validating
software
to change how they compute the signature hash, and to avoid potential
attacks would
still require some limit on how many such operations were permitted.

==References==

[[https://bitcointalk.org/?topic=140078|CVE-2013-2292]]: Sergio Demian
Lerner's original report
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/742c5a7d/attachment-0001.html>

From slurms at gmx.us  Fri Jul 24 21:12:38 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 23:12:38 +0200
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <20150724174320.GB25947@savin.petertodd.org>
References: <CAGLBAhepXCaChSBsz49YNnLOOpiy9nsNYqNv0NH+G3W=17=2yA@mail.gmail.com>
	<trinity-44986062-638d-4c20-a1f8-56a7c7cec648-1437709050654@3capp-mailcom-bs10>
	<2275059.uyAkQvreAU@coldstorage>,
	<20150724174320.GB25947@savin.petertodd.org>
Message-ID: <trinity-5b2c14a6-d74e-48a6-992c-c22d156b8343-1437772358792@3capp-mailcom-bs07>

They do not run anything but BitcoinJ (evidenced by them blindly following invalid chains), so no proper consensus checking going on here at all. Connected to my nodes is a bad peer (doesn?t relay inventory but downloads everything) from 37.187.136.15, with the user agent /BitcoinJ:0.12SNAPHOT/Satoshi:0.2.0/ which is owned by blockchain.info. You can also submit an invalid transaction through their /pushtx interface and get a mixture of noise and BitcoinJ error messages out of it as well. 

If even the people who have to their claim hundreds of thousands of wallets are relying on their security don?t bother running even a single node to sanity check against, who are we really going to expect people to in the future if the load goes 8x, 16x, 32x higher? Like CoinBase and others, these are the companies which are claimed will be the ones supporting the network with ludicrous sized blocks because they have a financial incentive to. 

Well, they don't even do it now when it could be achieved with a $5 VPS. 


> Sent: Friday, July 24, 2015 at 8:43 PM
> From: "Peter Todd via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: "Thomas Zander" <thomas at thomaszander.se>
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Bitcoin Roadmap 2015, or "If We Do Nothing" Analysis
> We can test the fact that blockchain.info's wallet and block explorer
> has behaved in a way consistent with not running a full node - they have
> shown invalid data that any full node would reject on multiple
> occasions, most recently invalid confirmations during the BIP66 fork.

From slurms at gmx.us  Fri Jul 24 21:20:06 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Fri, 24 Jul 2015 23:20:06 +0200
Subject: [bitcoin-dev] Making Electrum more anonymous
In-Reply-To: <55B21DA7.2020706@sky-ip.org>
References: <55AFBBE6.3060702@electrum.org>, <55B21DA7.2020706@sky-ip.org>
Message-ID: <trinity-37f4d177-8dea-4035-aaf0-d2f6d0070837-1437772806124@3capp-mailcom-bs07>

> Sent: Friday, July 24, 2015 at 2:12 PM
> From: "s7r via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Making Electrum more anonymous
>
> Privacy concerned people should run their own Electrum server and make
> it accessible via .onion, and connect the bitcoind running on the
> electrum server host only to other onion peers (onlynet=tor). We should
> highlight that using Electrum with Tor cannot leak more that some
> addresses belong to the same wallet, which is not the end of the world.
> 

It leaks your timezone too. As pointed out in another thread running a electrum-server instance is no easy task and can't really be suggested to another as a sensible thing to run for themselves. Enthusiasts maybe, but they'll just want to run Bitcoin core and skip the behemoth middleman. 

From tomh at thinlink.com  Fri Jul 24 22:50:36 2015
From: tomh at thinlink.com (Tom Harding)
Date: Fri, 24 Jul 2015 15:50:36 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
	<CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
Message-ID: <55B2C13C.9040708@thinlink.com>

On 7/24/2015 2:24 AM, Jorge Tim?n wrote:

> Regarding "increasing the exchange rate" it would be really nice to
> just push a button and double bitcoin's price just before the next
> subsidy halving, but unfortunately that's something out of our control. 

Jorge, right now, from the activity on github, you are working at least
as hard as anyone else, probably harder.  Why?  Why, if not to make
bitcoin more valuable?

Even apart from the convenience/curse of real-time exchange markets,
just with an abstract definition of "value," isn't that exactly what a
developer can influence, if not "control?"

Isn't figuring out ways to increase the value of bitcoin what we are doing?


From odinn.cyberguerrilla at riseup.net  Sat Jul 25 00:47:51 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Fri, 24 Jul 2015 17:47:51 -0700
Subject: [bitcoin-dev] For discussion: limit transaction size to
 mitigate CVE-2013-2292
In-Reply-To: <CABsx9T2s3WaRZK8rEZLd9+FEVaUPxz=EmhL2JH=CnH-y6C1b0w@mail.gmail.com>
References: <CABsx9T30aUx+Leb2HXx2QrMT8R_eTXV9hiC99av957645iQm1Q@mail.gmail.com>	<CAAS2fgRBa47ye-ouV2jDe16MJFCKxYh0zF0Jw4BTwzpXVKgwOg@mail.gmail.com>	<CABsx9T3mEYPMFfxFbM-Jj7nADWsVg9HbvQOr0JZeEjC8gOvLZA@mail.gmail.com>
	<CABsx9T2s3WaRZK8rEZLd9+FEVaUPxz=EmhL2JH=CnH-y6C1b0w@mail.gmail.com>
Message-ID: <55B2DCB7.2020005@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Interesting, so this basically would merge into an already existing
BIP (Jeff Garzik's).  However, it proposes some changes.

OK

CVE-2013-2292 is a severity thingy of "high" which is described as

"bitcoind and Bitcoin-Qt 0.8.0 and earlier allow remote attackers to
cause a denial of service (electricity consumption) by mining a block
to create a nonstandard Bitcoin transaction containing multiple
OP_CHECKSIG script opcodes."

(munches popcorn)

I do appreciate seeing the effort toward working something toward /
into Garzik's proposal.  The general idea that I suggested before - to
work some new ideas (not XT-related), into a BIP, and to work with
Jeff Garzik on getting something done, seems to be the direction that
you are taking... so I'm hopeful that continues.

- -O

On 07/24/2015 01:59 PM, Gavin Andresen via bitcoin-dev wrote:
> After thinking about it, implementing it, and doing some
> benchmarking, I'm convinced replacing the existing, messy, ad-hoc
> sigop-counting consensus rules is the right thing to do.
> 
> The last two commits in this branch are an implementation: 
> https://github.com/gavinandresen/bitcoin-git/commits/count_hash_size
>
>  From the commit message in the last commit:
> 
> Summary of old rules / new rules:
> 
> Old rules: 20,000 inaccurately-counted-sigops for a 1MB block New:
> 80,000 accurately-counted sigops for an 8MB block
> 
> A scan of the last 100,000 blocks for high-sigop blocks gets a
> maximum of 7,350 sigops in block 364,773 (in a single, huge, ~1MB
> transaction).
> 
> For reference, Pieter Wuille's libsecp256k1 validation code 
> validates about 10,000 signatures per second on a single 2.7GHZ CPU
> core.
> 
> Old rules: no limit for number of bytes hashed to generate 
> signature hashes
> 
> New rule: 1.3gigabytes hashed per 8MB block to generate signature
> hashes
> 
> Block 364,422 contains a single ~1MB transaction that requires 
> 1.2GB of data hashed to generate signature hashes.
> 
> TODO: benchmark Core's sighash-creation code ('openssl speed
> sha256' reports something like 1GB per second on my machine).
> 
> Note that in normal operation most validation work is done as 
> transactions are received from the network, and can be cached so
> it doesn't have to be repeated when a new block is found. The
> limits described in this BIP are intended, as the existing sigop
> limits are intended, to be an extra "belt and suspenders" measure
> to mitigate any possible attack that involves creating and
> broadcasting a very expensive-to-verify block.
> 
> 
> Draft BIP:
> 
> BIP: ?? Title: Consensus rules to limit CPU time required to
> validate blocks Author: Gavin Andresen <gavinandresen at gmail.com 
> <mailto:gavinandresen at gmail.com>> Status: Draft Type: Standards
> Track Created: 2015-07-24
> 
> ==Abstract==
> 
> Mitigate potential CPU exhaustion denial-of-service attacks by
> limiting the maximum number of ECDSA signature verfications done
> per block, and limiting the number of bytes hashed to compute
> signature hashes.
> 
> ==Motivation==
> 
> Sergio Demian Lerner reported that a maliciously constructed block
> could take several minutes to validate, due to the way signature
> hashes are computed for OP_CHECKSIG/OP_CHECKMULTISIG 
> ([[https://bitcointalk.org/?topic=140078|CVE-2013-2292]]). Each
> signature validation can require hashing most of the transaction's 
> bytes, resulting in O(s*b) scaling (where s is the number of
> signature operations and b is the number of bytes in the
> transaction, excluding signatures). If there are no limits on s or
> b the result is O(n^2) scaling (where n is a multiple of the number
> of bytes in the block).
> 
> This potential attack was mitigated by changing the default relay
> and mining policies so transactions larger than 100,000 bytes were
> not relayed across the network or included in blocks. However, a
> miner not following the default policy could choose to include a 
> transaction that filled the entire one-megaybte block and took a
> long time to validate.
> 
> ==Specification==
> 
> After deployment, the existing consensus rule for maximum number
> of signature operations per block (20,000, counted in two
> different, idiosyncratic, ad-hoc ways) shall be replaced by the
> following two rules:
> 
> 1. The maximum number of ECDSA verify operations required to
> validate all of the transactions in a block must be less than or
> equal to the maximum block size in bytes divided by 100 (rounded
> down).
> 
> 2. The maximum number of bytes hashed to compute ECDSA signatures
> for all transactions in a block must be less than or equal to the 
> maximum block size in bytes times 160.
> 
> ==Compatibility==
> 
> This change is compatible with existing transaction-creation
> software, because transactions larger than 100,000 bytes have been
> considered "non-standard" (they are not relayed or mined by
> default) for years, and a block full of "standard" transactions
> will be well-under the limits.
> 
> Software that assembles transactions into blocks and software that
> validates blocks must be updated to enforce the new consensus
> rules.
> 
> ==Deployment==
> 
> This change will be deployed with BIP 100 or BIP 101.
> 
> ==Discussion==
> 
> Linking these consensus rules to the maximum block size allows
> more transactions and/or transactions with more inputs or outputs
> to be included if the maximum block size increases.
> 
> The constants are chosen to be maximally compatible with the
> existing consensus rule, and to virtually eliminate the possibility
> that bitcoins could be lost if somebody had locked some funds in a
> pre-signed, expensive-to-validate, locktime-in-the-future 
> transaction.
> 
> But they are chosen to put a reasonable upper bound on the CPU
> time required to validate a maximum-sized block.
> 
> ===Alternatives to this BIP:===
> 
> 1. A simple limit on transaction size (e.g. any transaction in a
> block must be 100,000 bytes or smaller).
> 
> 2. Fix the CHECKSIG/CHECKMULTISIG opcodes so they don't re-hash 
> variations of the transaction's data. This is the "most correct"
> solution, but would require updating every piece of
> transaction-creating and transaction-validating software to change
> how they compute the signature hash, and to avoid potential attacks
> would still require some limit on how many such operations were
> permitted.
> 
> ==References==
> 
> [[https://bitcointalk.org/?topic=140078|CVE-2013-2292]]: Sergio
> Demian Lerner's original report
> 
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVsty2AAoJEGxwq/inSG8ChnsH/1zvxxYlKE4LPdwx9PPdk4Pi
W9Vj1RAX+J57f+kxE6tVZRLkIVo0vpTPqDaNMAcvsDWPdlK1wQKrjzws1qN8UpiO
yoMHAu8TC+HMoV+wJZVHafXf/e+PitWMS2P2HMZFVSlh7m/nsZNvjkykgyBNgaoh
wf4SQOSoorCUr4HDDsw32lmMq5Sohaq3Z+WSXKik8awel6OcerVPDwAWkb79tXTC
THI+t3YjLhQjwXNvs3Iwn7z1iYSSUbZUoUlOpCwaeVx6tdtDgW4vzzohCOEl2VqO
z8K6TM60+01pHAbrsWv9ItOBus8wJWHEyUFcdshf71BaNq2NHfijyCy9dCxtgWg=
=speV
-----END PGP SIGNATURE-----

From kiwigb at yahoo.com  Sat Jul 25 02:18:11 2015
From: kiwigb at yahoo.com (gb)
Date: Sat, 25 Jul 2015 14:18:11 +1200
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <CACrzPenbkh86bW9GQe1M4Zt1OxDTQNeMU6osatRDEvcwOyxHAg@mail.gmail.com>
References: <l.com@mac.com> <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
	<55B1FBCE.1080002@jonasschnelli.ch>
	<CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>
	<CACrzPenbkh86bW9GQe1M4Zt1OxDTQNeMU6osatRDEvcwOyxHAg@mail.gmail.com>
Message-ID: <1437790691.2111.3.camel@yahoo.com>


Validated - (seen on network) 

Settled/Cleared - 1 conf

Finalised - 6 confs

On Sat, 2015-07-25 at 00:37 +1000, Vincent Truong via bitcoin-dev wrote:
> 
> "Fast transactions"
> Fast transactions implies it is slower than Visa, and Visa is
> 'instant' by comparison from the spender's POV. Bitcoin is still very
> instant because wallets still send notifications/pings when
> transactions are first seen, not when it goes into a block. We
> shouldn't mislead people into thinking a transaction literally takes
> 10 minutes to travel the globe.
> 
> Maybe this feels like PR speak. But being too humble about Bitcoin's
> attributes isn't a good idea either.
> 
> If we're going to look at perception, image and expectations, perhaps
> we can start to look at redefining some terminology too. Like
> confirmations, which is an arbitrary concept. Where possible we should
> describe it with finance terminology.
> 
> "0 conf transaction"
> 0 conf is the 'transaction' - just the act of making an exchange. It
> doesn't imply safe and I believe using the word 'settle' in place of
> confirmations will automatically click with merchants.
> 
> "1st conf"
> A 'confirmation' is a 'settlement'. If it is 'settled', it implies
> final (except by court order), whereas confirmation usually means 'ah,
> I've seen it come through'. I rarely hear any sales clerk call credit
> card transactions confirmed. More often you will hear 'approved'
> instead. Although 1st conf can be overtaken, so...
> 
> "n confirmations"
> This term can probably stay since I can't come up with a better word.
> Settlements only happen once, putting a number next to it breaks the
> meaning of the word. "Settled with 4 confirmations" seems pretty
> clear. Alternatively I think instead of displaying a meaningless
> number we ought to go by a percentage (the double spend improbability)
> and go by 'confidence'. "Settled with 92% confidence." Or we can pick
> an arbitrary number like 6 and use 'settling...' and 'settled' when
> reached.
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev



From dscotese at litmocracy.com  Sat Jul 25 02:23:00 2015
From: dscotese at litmocracy.com (Dave Scotese)
Date: Fri, 24 Jul 2015 19:23:00 -0700
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
	or "If We Do Nothing" Analysis
Message-ID: <CAGLBAhdggPPnxLgp+xQPWGtK1KA_QZt7eug2votak4in2DrwJA@mail.gmail.com>

Incentivize investigations for public consumption.  The people on this list
are the ones who probably care the most.

When I looked up that IP address, the Whois info names "OVH" and "Octave
Klaba" (who founded OVH, according to Wikipedia) as the owner.  "
blockchain.info" appears in the HTML header as retrieved by the
"Anti-Hacker Alliance" (
http://anti-hacker-alliance.com/index.php?details=37.187.136.15).
Blockchain.info itself returns IP addresses managed by CloudFlare whenever
I try it.

On Fri, Jul 24, 2015 at 2:12 PM, Slurms MacKenzie via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> They do not run anything but BitcoinJ (evidenced by them blindly following
> invalid chains), so no proper consensus checking going on here at all.
> Connected to my nodes is a bad peer (doesn?t relay inventory but downloads
> everything) from 37.187.136.15, with the user agent
> /BitcoinJ:0.12SNAPHOT/Satoshi:0.2.0/ which is owned by blockchain.info.
> You can also submit an invalid transaction through their /pushtx interface
> and get a mixture of noise and BitcoinJ error messages out of it as well.
>
> If even the people who have to their claim hundreds of thousands of
> wallets are relying on their security don?t bother running even a single
> node to sanity check against, who are we really going to expect people to
> in the future if the load goes 8x, 16x, 32x higher? Like CoinBase and
> others, these are the companies which are claimed will be the ones
> supporting the network with ludicrous sized blocks because they have a
> financial incentive to.
>
> Well, they don't even do it now when it could be achieved with a $5 VPS.
>
>
> > Sent: Friday, July 24, 2015 at 8:43 PM
> > From: "Peter Todd via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org>
> > To: "Thomas Zander" <thomas at thomaszander.se>
> > Cc: bitcoin-dev at lists.linuxfoundation.org
> > Subject: Re: [bitcoin-dev] Bitcoin Roadmap 2015, or "If We Do Nothing"
> Analysis
> > We can test the fact that blockchain.info's wallet and block explorer
> > has behaved in a way consistent with not running a full node - they have
> > shown invalid data that any full node would reject on multiple
> > occasions, most recently invalid confirmations during the BIP66 fork.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150724/5b4b2169/attachment.html>

From slurms at gmx.us  Sat Jul 25 11:19:43 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Sat, 25 Jul 2015 13:19:43 +0200
Subject: [bitcoin-dev] Bitcoin Roadmap 2015,
 or "If We Do Nothing" Analysis
In-Reply-To: <CAGLBAhdggPPnxLgp+xQPWGtK1KA_QZt7eug2votak4in2DrwJA@mail.gmail.com>
References: <CAGLBAhdggPPnxLgp+xQPWGtK1KA_QZt7eug2votak4in2DrwJA@mail.gmail.com>
Message-ID: <trinity-eb8ed324-143d-48a4-9b11-ac782d96c65b-1437823183453@3capp-mailcom-bs03>

The answer to that is a less illegal than probing other peoples web servers. Up until recently the reverse name lookup for that IP address was markets.blockchain.info, which I resolve when I log incoming connections in an attempt to filter out some abusive clients coming from university connections. 

Other people have noticed these abusive clients too. There?s mentions of other connections running the same version of BitcoinJ coming from sources that appear to be blockchain.info which display similar behavior. A user in #bitcoin-dev was complaining about this client hammering closed ports with connections when they are kicked off. 

http://bitcoinstats.com/irc/bitcoin-dev/logs/2015/02/09#l1423513396.0
?
?
> Sent:?Saturday, July 25, 2015 at 4:23 AM
> From:?"Dave Scotese via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To:?bitcoin-dev at lists.linuxfoundation.org
> Subject:?Re: [bitcoin-dev] Bitcoin Roadmap 2015, or "If We Do Nothing" Analysis

> When I looked up that IP address, the Whois info names "OVH" and "Octave Klaba" (who founded OVH, according  to Wikipedia) as the owner.? "blockchain.info[http://blockchain.info]" appears in the HTML header as retrieved by the "Anti-Hacker Alliance" (http://anti-hacker-alliance.com/index.php?details=37.187.136.15[http://anti-hacker-alliance.com/index.php?details=37.187.136.15]).? Blockchain.info itself returns IP addresses managed by CloudFlare whenever I try it.

?

From slurms at gmx.us  Sat Jul 25 11:22:24 2015
From: slurms at gmx.us (Slurms MacKenzie)
Date: Sat, 25 Jul 2015 13:22:24 +0200
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <1437790691.2111.3.camel@yahoo.com>
References: <l.com@mac.com> <D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>
	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>
	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>
	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>
	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>
	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>
	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>
	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>
	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>
	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>
	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>
	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>
	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>
	<55B1FBCE.1080002@jonasschnelli.ch>
	<CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>
	<CACrzPenbkh86bW9GQe1M4Zt1OxDTQNeMU6osatRDEvcwOyxHAg@mail.gmail.com>,
	<1437790691.2111.3.camel@yahoo.com>
Message-ID: <trinity-f9dab30b-bd68-436a-b128-b17102135ea7-1437823344503@3capp-mailcom-bs03>

How do you explain to end users that a "validated" transaction can instantly become completely unspendable by a mined block? This seems like setting up people to just be Finney attacked even more.


> Sent: Saturday, July 25, 2015 at 4:18 AM
> From: "gb via bitcoin-dev" <bitcoin-dev at lists.linuxfoundation.org>
> To: "Vincent Truong" <vincent.truong at procabiak.com>
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
>
> 
> Validated - (seen on network) 
> 
> Settled/Cleared - 1 conf
> 
> Finalised - 6 confs
> 

From thomas.kerin at gmail.com  Sat Jul 25 15:04:41 2015
From: thomas.kerin at gmail.com (Thomas Kerin)
Date: Sat, 25 Jul 2015 16:04:41 +0100
Subject: [bitcoin-dev] Bitcoin, Perceptions, and Expectations
In-Reply-To: <1437790691.2111.3.camel@yahoo.com>
References: <l.com@mac.com>
	<D472C05D-7164-4ED1-B571-94415AD8E60F@gmail.com>	<346D4CE0-E00D-4ABB-B131-EFA1416CB20C@me.com>	<29363BE6-72A7-4D06-A974-C52BA12FD8BD@gmail.com>	<55FFBC8F-A3C9-4109-89C7-AC359FBBD478@me.com>	<4734381C-2000-4D9B-9099-DDE3D38D64A3@me.com>	<DEF9C610-2FBC-40C1-9AFA-9E91903C7F96@petertodd.org>	<DFA3CCE4-52F7-4D63-8982-2EB133AB6EAA@me.com>	<B8F9DE4B-A8AA-490D-991B-11C28B2AA527@gmail.com>	<D7EE14EC-B36D-43F2-8CEC-B63443FBBCA8@me.com>	<0E15E07E-E21C-4541-869A-3C34CBA35774@gmail.com>	<9AC88C7C-4BA4-4DF2-913F-9DC6874BD19D@me.com>	<83982C1D-4FE6-4A5C-BC93-BFBD9756F3D2@gmail.com>	<COL131-DS24D730A430CE77D648AE9CCD810@phx.gbl>	<55B1FBCE.1080002@jonasschnelli.ch>	<CABm2gDqK0qd_JNHCUrnz4L1axG99i9=M7DjCQWatE3Lf0HOiyA@mail.gmail.com>	<CACrzPenbkh86bW9GQe1M4Zt1OxDTQNeMU6osatRDEvcwOyxHAg@mail.gmail.com>
	<1437790691.2111.3.camel@yahoo.com>
Message-ID: <55B3A589.1010107@gmail.com>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

FWIW, the 6 confirmations figure came from a modest estimate of a miner
with 10% of the hash rate, such that there is < 0.1% probability of the
transaction being undone.

I wonder at times if this figure should fluctuate with the hashrate of
the largest player. Presently, AntMiner has 20% of the hashrate,
requiring 11 blocks to give you the same certainty. And previously when
GHash.io had 45%, the number of blocks to wait would be 340 - over two days!

With this in mind, I would be wary about publishing these numbers as
they are prone to change.

On 25/07/15 03:18, gb via bitcoin-dev wrote:
>
> Validated - (seen on network)
>
> Settled/Cleared - 1 conf
>
> Finalised - 6 confs
>
> On Sat, 2015-07-25 at 00:37 +1000, Vincent Truong via bitcoin-dev wrote:
>>
>> "Fast transactions"
>> Fast transactions implies it is slower than Visa, and Visa is
>> 'instant' by comparison from the spender's POV. Bitcoin is still very
>> instant because wallets still send notifications/pings when
>> transactions are first seen, not when it goes into a block. We
>> shouldn't mislead people into thinking a transaction literally takes
>> 10 minutes to travel the globe.
>>
>> Maybe this feels like PR speak. But being too humble about Bitcoin's
>> attributes isn't a good idea either.
>>
>> If we're going to look at perception, image and expectations, perhaps
>> we can start to look at redefining some terminology too. Like
>> confirmations, which is an arbitrary concept. Where possible we should
>> describe it with finance terminology.
>>
>> "0 conf transaction"
>> 0 conf is the 'transaction' - just the act of making an exchange. It
>> doesn't imply safe and I believe using the word 'settle' in place of
>> confirmations will automatically click with merchants.
>>
>> "1st conf"
>> A 'confirmation' is a 'settlement'. If it is 'settled', it implies
>> final (except by court order), whereas confirmation usually means 'ah,
>> I've seen it come through'. I rarely hear any sales clerk call credit
>> card transactions confirmed. More often you will hear 'approved'
>> instead. Although 1st conf can be overtaken, so...
>>
>> "n confirmations"
>> This term can probably stay since I can't come up with a better word.
>> Settlements only happen once, putting a number next to it breaks the
>> meaning of the word. "Settled with 4 confirmations" seems pretty
>> clear. Alternatively I think instead of displaying a meaningless
>> number we ought to go by a percentage (the double spend improbability)
>> and go by 'confidence'. "Settled with 92% confidence." Or we can pick
>> an arbitrary number like 6 and use 'settling...' and 'settled' when
>> reached.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

- -- 
My PGP key can be found here <https://thomaskerin.io/me.pub.asc>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVs6WBAAoJEAiDZR291eTlmA4P/1uARaRISbq6ZN9gSy+Tsq+N
aooU/irB06IdTnOrxqW/iAS2M2SxqTq5/M6PVMK6LAefRuAAYE6KeDQb5/n2QWIM
vBgVeDPBVkq+KHOJlaswO962kl/Mr9TC9xb9hbfB9IdQACLbSwfyQ+cYNY3RRnvl
Jkgj7boVjA4o/lE/BxTshPTriQNtVl9c6OxOfXsZotpTphSlMGIUrEHR/t2rjbcV
yPeTwHFIAaqcCMivYvfsk24JD9DiygwGVvjqwQPsNF8H9y6xor+QAc23aaD8WPi1
1J91bfRxJWghxyGmsPx1G/EVi/0retE1tZdkyqlahThdSACZtUfA997V0KT/DrdH
svHjNclViHExWGL7cUd2s9AMjIz1vr0tUGxvU7KsZT2kEXP0qp96mjIfo0TkZbUb
xsYMKujE8ZRpn8+CakfeT7RMtAhGIRvtPDQDm+Qv84A6JOufrgF4C0B00/9kERIe
g5hH2YG2R4YD40G4wtxEGpk/2jcdWc37CJ+T17+7m8MgPFNmX8V5YsAFwfPe6iAt
1QON3crilFRYCawYcOypbjh4hb5O5Usvg0msUrvzaRJ7Gj6K/SmFdG4hOepCHbPc
g2Bu15ifdmaCa8ssZHK+HJmhbGTMkDqdBnv2lziR8TXIC/se2+y7Iasz4eVkfG1/
RkDgokFOv7YA5aqp5ZHn
=VgWS
-----END PGP SIGNATURE-----

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150725/efb395b9/attachment.html>

From luke at dashjr.org  Sat Jul 25 19:51:53 2015
From: luke at dashjr.org (Luke Dashjr)
Date: Sat, 25 Jul 2015 19:51:53 +0000
Subject: [bitcoin-dev] BIP Draft: Minimum Viable TXIn Hash
In-Reply-To: <CAJ+8mENU5kQuKg=-UAh05qGEPS1OuiKTgXFVGcF0Z0gsRo+Czw@mail.gmail.com>
References: <CAJ+8mENU5kQuKg=-UAh05qGEPS1OuiKTgXFVGcF0Z0gsRo+Czw@mail.gmail.com>
Message-ID: <201507251951.53970.luke@dashjr.org>

On Thursday, July 23, 2015 8:12:19 PM Jeremy Rubin via bitcoin-dev wrote:
> Please see the following draft BIP which should decrease the amount of
> bytes needed per transaction. This is very much a draft BIP, as the design
> space for this type of improvement is large.
> 
> This BIP can be rolled out by a soft fork.
> 
> Improvements are around 12% for  standard "one in two out" txn, and even
> more with more inputs hashes.
> 
> https://gist.github.com/JeremyRubin/e175662d2b8bf814a688

This looks like just a p2p protocol optimisation, which doesn't even need a 
softfork. You do need to document the suggested protocol changes more 
specifically, however.

Luke

From jtimon at jtimon.cc  Sat Jul 25 22:05:28 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Sun, 26 Jul 2015 00:05:28 +0200
Subject: [bitcoin-dev] BIP Draft: Minimum Viable TXIn Hash
In-Reply-To: <201507251951.53970.luke@dashjr.org>
References: <CAJ+8mENU5kQuKg=-UAh05qGEPS1OuiKTgXFVGcF0Z0gsRo+Czw@mail.gmail.com>
	<201507251951.53970.luke@dashjr.org>
Message-ID: <CABm2gDrCzYTo7hYB7EaVoDUq5bhD9TmMO=uGLn3H33Bz8J8ppg@mail.gmail.com>

>From your draft:

"It could also more easily, ignoring the difficulties of a hard-fork
period, be rolled out as a hard fork to avoid hokey-pokey.[1]
[...]

[1] Because someone asked... The Txid Hokey Pokey: you put the tail
end in, you put the tail end out, you put the tail end in and you hash
it all about you do the hokey pokey and you solve the block difficulty
bound, that's what it's all about!"

Reading this, the first thing that comes to mind is "What the h#$% is
a hokey pokey?"

>From https://en.wikipedia.org/wiki/Hokey_cokey : "It is well known in
English-speaking countries.".
That explains why I haven't heard about it in my whole life.
It may things clearer for people in these countries, but at least to
me, it just makes things more complicated: the analogy (that I still
don't understand after skimming the wikipedia article) doesn't allow
me to understand the actual explanation.

Can you please rewrite that with a more culturally-neutral analogy (or
just no analogy and just leave the explanation)?

On Sat, Jul 25, 2015 at 9:51 PM, Luke Dashjr via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thursday, July 23, 2015 8:12:19 PM Jeremy Rubin via bitcoin-dev wrote:
>
> This looks like just a p2p protocol optimisation, which doesn't even need a
> softfork. You do need to document the suggested protocol changes more
> specifically, however.

I think his goal is to make it a consensus change so that confirmed
transactions can also use less space in blocks.
But, yes, I don't think it gives you anything to enforce it as a
consensus rule (all you care about is the savings when transmitting
the transactions and blocks).
In fact, I'm not sure how would that work, would the "compact tx"
produce a different hash than the non-compact one?

From kalle at rosenbaum.se  Sun Jul 26 21:13:49 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Sun, 26 Jul 2015 23:13:49 +0200
Subject: [bitcoin-dev] [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CABm2gDrickFojwmUi7GqAhSW5K0yTa_59VjKrY+wAXEq1MYUoA@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
	<CABm2gDrickFojwmUi7GqAhSW5K0yTa_59VjKrY+wAXEq1MYUoA@mail.gmail.com>
Message-ID: <CAPswA9yYOzehfd=UxV+EmNOSZnY9nif2Y1GZ_FEy7r5UdzGA0g@mail.gmail.com>

(Resending to the new bitcoin-dev list after sending to the old list)

2015-07-25 21:34 GMT+02:00 Jorge Tim?n <jtimon at jtimon.cc>:
> Then why do you assume they have a policy limit that not even bitcoin core
> itself maintains (the default limit was moved from 42 to 83 [counting the
> op_return and pushes])?
>
> The policy check is not a consensus rule. Other implementations may have
> another default or not have a limit at all.

Thank you for pointing this out.

That's right. Bitcoin core now support 80 bytes data by default. And
yes, I was wrong in assuming 40 bytes policy in all implementations,
even if 40 bytes was the limit in bitcoin core at the time of writing
the BIP.

If there's a need to increase the size of the nonce, for example to
128 bits instead of the 48 bits as designed in BIP 120, then we can of
course do that, either now or in a subsequent version of PoP.

As noted before though, a longer nonce also means bigger QR codes
generated from the BIP 121 URIs. So I think that 48 bits is a good
tradeoff right now. And as stated in BIP120, a server generating PoP
requests should try to detect brute force attacks, or at least delay
the response (containing the nonce) by some 100 ms or so.

Do you think we need a bigger nonce? In that case, why?

If PoP later becomes an extension of BIP70, then there is no such size
constraint on the nonce, since it will be part of some kind of (e.g.)
PopRequest message and not contained in a QR encoded URI.

/Kalle

From karra.etc at gmail.com  Mon Jul 27 08:14:43 2015
From: karra.etc at gmail.com (Sriram Karra)
Date: Mon, 27 Jul 2015 13:44:43 +0530
Subject: [bitcoin-dev] [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9ydvva=BqtqVAc0deDE+do0vm8CawOLX5d5D-BV59vtyA@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
	<CAPswA9z5fo5Vw_cSoUu1qtgU4kKf+W3FxREPJ5UpvvJUSi+doA@mail.gmail.com>
	<CAPswA9w8QaWV72UuGnitWWeDTr5MPKvzwrD5udmq_FQke-NGAQ@mail.gmail.com>
	<CAPswA9ydvva=BqtqVAc0deDE+do0vm8CawOLX5d5D-BV59vtyA@mail.gmail.com>
Message-ID: <CAFkt3UNmW9pgDf+Yr9Bm8HyW_ng2ByJaDeyC2e8pRERrh7Fm6g@mail.gmail.com>

On Fri, Jul 24, 2015 at 12:25 PM, Kalle Rosenbaum via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> These BIPs have been assigned 120 and 121:
>
Did you break open the bubbly? From the outside it certainly looked harder
than everything else about this proposal combined.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/84ee276b/attachment.html>

From jtimon at jtimon.cc  Mon Jul 27 09:08:48 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 27 Jul 2015 11:08:48 +0200
Subject: [bitcoin-dev] [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CAPswA9yYOzehfd=UxV+EmNOSZnY9nif2Y1GZ_FEy7r5UdzGA0g@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
	<CABm2gDrickFojwmUi7GqAhSW5K0yTa_59VjKrY+wAXEq1MYUoA@mail.gmail.com>
	<CAPswA9yYOzehfd=UxV+EmNOSZnY9nif2Y1GZ_FEy7r5UdzGA0g@mail.gmail.com>
Message-ID: <CABm2gDpv0Q3j+om_-bJNbgwn1JkZyfByqaCZBNHVJxvTr_w+Cg@mail.gmail.com>

On Jul 26, 2015 11:13 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
> Do you think we need a bigger nonce? In that case, why?

I don't know, it wasn't me that proposed a bigger nonce. I just wanted to
point out that the policy limit shouldn't be a concern.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/c8f6c49f/attachment.html>

From kalle at rosenbaum.se  Mon Jul 27 11:21:38 2015
From: kalle at rosenbaum.se (Kalle Rosenbaum)
Date: Mon, 27 Jul 2015 13:21:38 +0200
Subject: [bitcoin-dev] [Bitcoin-development] BIP for Proof of Payment
In-Reply-To: <CABm2gDpv0Q3j+om_-bJNbgwn1JkZyfByqaCZBNHVJxvTr_w+Cg@mail.gmail.com>
References: <CAPswA9w5Sgg6AV=9Pqx5sqbkdrwv9LmwoxmMu7xZsQSNXtmZnQ@mail.gmail.com>
	<CAPg+sBjtovFpLoibpVGLsNJXexBcoiYzjrvctraXntCUZBJsGg@mail.gmail.com>
	<CAPswA9zhB4GV=JJ28RRLFNrkVwExUv36zujmuAjwPd6rG6rvzQ@mail.gmail.com>
	<CALJP9GCBJiofY7k2RJ460CuLuWQunHcx7EcLi1-d07v76Y-E2g@mail.gmail.com>
	<CAPswA9wqdbU0z8ydBt+9M0iQX0VSi1ce=dg3fR2_2bx3-vEqzA@mail.gmail.com>
	<CAPswA9z_xKY6v9=Ejh=01mZN0QCVo1e0RY1FTzXzS39i3tjgAw@mail.gmail.com>
	<CAPswA9xk5QYAXxQ6ES3cnNPeB1FTiiSJgLahLEkSk4CLpoM_QQ@mail.gmail.com>
	<CAPg+sBiWykR6RaHhbyYQbL=A5t1TmHgEmS_sC7jj9d3SUTMO9g@mail.gmail.com>
	<CAPswA9zycU0pwZKaHU9J3Tvg=ovLJ8TZ9OH6ebTPONaRaiOE8g@mail.gmail.com>
	<CAPg+sBhuth22+vAHyS2iwpze8X=-b2wJQ5s1z2FhZ1jsLXobgQ@mail.gmail.com>
	<CAPswA9yB3wfV1auXR=ggXjh+f1C3Qpkv8qP1miQwkc8R2_aBLg@mail.gmail.com>
	<CAPg+sBjp-BmSXhanOuKE0DN1wdfVwCtFwiAbPse1GLxy3+L3nA@mail.gmail.com>
	<CAPswA9zzKvh6G+NqzTmhrNXMSWOPtZ2DGW2t_2Jrisy8x9m2qw@mail.gmail.com>
	<CAPg+sBhZCayaxNg_thO=nzxvuo-xZ-ZeZMXEVWb6Mw2POreOZQ@mail.gmail.com>
	<CAPswA9yFUAqFyNBFBnnwpT=B9RcdNssdjz-_KWbX5GuLM5Uyxw@mail.gmail.com>
	<CAPg+sBigK7K2YVnhcU5Ysf0d0Gbp+GaNdGoKZCco5zvYLKDxFw@mail.gmail.com>
	<CAPswA9wLDpf0Q3aL=a+uaqkFecPgC4ASj73XVfj=MOrof-yh1g@mail.gmail.com>
	<CABm2gDrickFojwmUi7GqAhSW5K0yTa_59VjKrY+wAXEq1MYUoA@mail.gmail.com>
	<CAPswA9yYOzehfd=UxV+EmNOSZnY9nif2Y1GZ_FEy7r5UdzGA0g@mail.gmail.com>
	<CABm2gDpv0Q3j+om_-bJNbgwn1JkZyfByqaCZBNHVJxvTr_w+Cg@mail.gmail.com>
Message-ID: <CAPswA9ySEB_xwr_dMcZSPXdagkJc4y7iGJCg6oR1Wbu2-PxRcg@mail.gmail.com>

Ok, Thanks
Den 27 jul 2015 11:08 skrev "Jorge Tim?n" <jtimon at jtimon.cc>:

>
> On Jul 26, 2015 11:13 PM, "Kalle Rosenbaum" <kalle at rosenbaum.se> wrote:
> > Do you think we need a bigger nonce? In that case, why?
>
> I don't know, it wasn't me that proposed a bigger nonce. I just wanted to
> point out that the policy limit shouldn't be a concern.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/3c7c4f1c/attachment.html>

From pete at petertodd.org  Mon Jul 27 12:08:29 2015
From: pete at petertodd.org (Peter Todd)
Date: Mon, 27 Jul 2015 08:08:29 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
Message-ID: <20150727120829.GA27361@savin.petertodd.org>

On Wed, Jul 22, 2015 at 12:52:20PM -0400, Pieter Wuille via bitcoin-dev wrote:
> Hello all,
> 
> I'd like to talk a bit about my view on the relation between the Bitcoin
> Core project, and the consensus rules of Bitcoin.
> 
> I believe it is the responsibility of the maintainers/developers of Bitcoin
> Core to create software which helps guarantee the security and operation of
> the Bitcoin network.
> 
> In addition to normal software maintenance, bug fixes and performance
> improvements, this includes DoS protection mechanism deemed necessary to
> keep the network operational. Sometimes, such (per-node configurable)
> policies have had economic impact, for example the dust rule.
> 
> This also includes participating in discussions about consensus changes,
> but not the responsibility to decide on them - only to implement them when
> agreed upon. It would be irresponsible and dangerous to the network and
> thus the users of the software to risk forks, or to take a leading role in
> pushing dramatic changes. Bitcoin Core developers obviously have the
> ability to make any changes to the codebase or its releases, but it is
> still up to the community to choose to run that code.
> 
> Some people have called the prospect of limited block space and the
> development of a fee market a change in policy compared to the past. I
> respectfully disagree with that. Bitcoin Core is not running the Bitcoin
> economy, and its developers have no authority to set its rules. Change in
> economics is always happening, and should be expected. Worse, intervening
> in consensus changes would make the ecosystem more dependent on the group
> taking that decision, not less.
> 
> So to point out what I consider obvious: if Bitcoin requires central
> control over its rules by a group of developers, it is completely
> uninteresting to me. Consensus changes should be done using consensus, and
> the default in case of controversy is no change.

It's worth reminding people that Bitcoin Core, Bitcoin XT, my own
Bitcoin RBF, Luke-Jr's Bitcoin distribution, etc. are all software
packages that implement the Bitcoin protocol. Like many protocols,
changing the Bitcoin protocol isn't easy, and requires a broad consensus
among many players for any change to proceed smoothly. Conversely,
changing non-protocol aspects of any of those software packages is easy,
and requires little to no coordination.

Of course, in practice the Bitcoin Core dev team does have a lot of
influence, to the point where soft-forks proposed by them are adopted
pretty much blindly by most users. This is essentially a meta-consensus:
the community is assuming what the Bitcoin Core team releases will be a
good idea to run as well as non-controversial without necessarily
investigating too closely. The Core dev team has a strong track record
of making good decisions with very few mistakes, while still adding new
features, fixing security bugs, and improving performance significantly.
That leads to a fairly strong meta-consensus of "Just run Bitcoin Core"

Of course, if the Core team was taking changes and making controversial
changes, I suspect that meta-consensus would quickly break down! So it's
not as strong as it looks - the Core team doesn't really have the
ability to push through controversial changes, and the Core team acts
accordingly.

If you don't agree with that "meta-consensus", running an alternative
Bitcoin protocol implementation such as Bitcoin XT is a logical way of
showing your support for a different way of coming to consensus on
protocol changes. It's not totally clear yet what that way actually is,
but it's certainly shaping up to have a lot less emphasis on broad
consensus among the technical community. (of course, the XT team to date
has much less experience with the Bitcoin protocol and codebase than the
combined Core team does)

The ugly thing is I think everyone in this process recognises the
meta-consensus nature of the debate already. Notice how Gavin Andresen's
initial blocksize posts were in the form of a non-technical blog, making
non-technical arguments to the public - not the Core dev team - in ways
not conducive to open response.  A rather annoying example is Jeff
Garzik's recent efforts: a fundementally broken troll pull-req raising
the blocksize to 2MB that simply can't be merged for reasons unrelated
to the blocksize, followed by very public and loud efforts to spin a
non-issue - closing a pull-req that had no real impact on blockchain
capacity - into a broader reddit furor over a "changed" policy on
scaling. As a PR effort to the public this was fairly effective: framing
the Core dev team's actions as a change and raising the blocksize as a
default action puts the team on the defensive. As a way of building
consensus among the Core dev team, Garzik's actions are very
counterproductive.

I personally have a fairly high tolerance to trolling, but I wouldn't be
surprised if other devs start getting tired of this stuff and just leave
Bitcoin development to focus on more productive stuff. To many it's
discouraging when the other side gets to "promise ponies" - we've got a
fundamentally uphill PR battle in arguing for the development of
scalability tech.

For the long term, I think it'd be useful for research to be done on how
to better manage these social issues. I suspect a lot of the problem -
at least for non-scalable blockchain designs - stems from how
centralization failures aren't gradual, and the ease of relying on trust
rather than verification. While we get a lot of warning of issues, the
warning isn't directly associated with losses at first, making the
problem hard to explain to the general public.

> ===
> 
> My personal opinion is that we - as a community - should indeed let a fee
> market develop, and rather sooner than later, and that "kicking the can
> down the road" is an incredibly dangerous precedent: if we are willing to
> go through the risk of a hard fork because of a fear of change of
> economics, then I believe that community is not ready to deal with change
> at all. And some change is inevitable, at any block size. Again, this does
> not mean the block size needs to be fixed forever, but its intent should be
> growing with the evolution of technology, not a panic reaction because a
> fear of change.

Agreed.

You know, those promoting the idea of a "one-time-only" blocksize
increase would do well to get the stakeholders affected to publicly
explain what exactly are their plans with regard to scalability in the
long run. If they don't have any, then it's a strong sign that said
stakeholders don't actually intend to have a "one-time-only" blocksize
increase. Remember that there's no guarantee that the technology
limiting the blocksize will improve as fast as desired, or even for that
matter, improve at all. (bandwidth is limited by politics far more than
it is limited by technology)

There's strong parallels to zeroconf safety, where as far as I can tell
the relevant stakeholders - pretty much all large payment providers -
have no plans at all to move to genuine decentralized zeroconf
technology. Rather they have backup plans to get into dangerous and
centralizing mining contracts if zeroconf security gets any worse,
something Coinbase even publicly admitted on this list.

-- 
'peter'[:-1]@petertodd.org
000000000000000014e0038d4c6614025cf655cc976fcd11ee4c4f7861136b9f
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 650 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/6f1d75d7/attachment.sig>

From milly at bitcoins.info  Mon Jul 27 12:44:42 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Mon, 27 Jul 2015 08:44:42 -0400
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <20150727120829.GA27361@savin.petertodd.org>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<20150727120829.GA27361@savin.petertodd.org>
Message-ID: <55B627BA.9040108@bitcoins.info>

> The ugly thing is I think everyone in this process recognises the
> meta-consensus nature of the debate already. Notice how Gavin Andresen's
> initial blocksize posts were in the form of a non-technical blog, making
> non-technical arguments to the public - not the Core dev team - in ways
> not conducive to open response.  A rather annoying example is Jeff
> Garzik's recent efforts: a fundementally broken troll pull-req raising
> the blocksize to 2MB that simply can't be merged for reasons unrelated
> to the blocksize, followed by very public and loud efforts to spin a
> non-issue - closing a pull-req that had no real impact on blockchain
> capacity - into a broader reddit furor over a "changed" policy on
> scaling. As a PR effort to the public this was fairly effective: framing
> the Core dev team's actions as a change and raising the blocksize as a
> default action puts the team on the defensive. As a way of building
> consensus among the Core dev team, Garzik's actions are very
> counterproductive.

You are correct.  It is also counterproductive to take cheap shots at 
vendors in order to garner consulting revenue.  Measuring risk in a 
systematic way against known metrics is the way to go.  Tweeting, 
blogging, and drama are generally counterproductive.

When the issue is raised most of the developers shun the idea so until 
some of the developers become mature and experienced you will be left 
with all this teenager nonsense where everybody calls each other 
"trolls" on Reddit instead of engaging in real risk analysis.

Russ









From alicelarson at ruggedinbox.com  Mon Jul 27 17:05:48 2015
From: alicelarson at ruggedinbox.com (Alice Larson)
Date: Mon, 27 Jul 2015 17:05:48 +0000
Subject: [bitcoin-dev] Bitcoin Core and hard forks
Message-ID: <2bad149d24c6659b924e27c500619c60@ruggedinbox.com>

> You are correct.  It is also counterproductive to take cheap shots at
> vendors in order to garner consulting revenue.  Measuring risk in a
> systematic way against known metrics is the way to go.  Tweeting,
> blogging, and drama are generally counterproductive.
> 
> When the issue is raised most of the developers shun the idea so until
> some of the developers become mature and experienced you will be left
> with all this teenager nonsense where everybody calls each other
> "trolls" on Reddit instead of engaging in real risk analysis.

The twitter teenage nonsense from Todd is ridiculous: 
https://twitter.com/playatodd (warning, triggering)

Mike Hearn has mentioned a few times how Todd's habit of creating drama 
on twitter and reddit every time anyone wants to change something in 
Bitcoin in a way he doesn't like is driving away vendors. Openly 
commenting on a female developers cleavage on twitter, as well as 
referring to a female journalist as "naughty" is disgusting. Him 
constantly hitting on women developers in Bitcoin is driving away 
females.


From eric at voskuil.org  Mon Jul 27 17:22:29 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 27 Jul 2015 10:22:29 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <2bad149d24c6659b924e27c500619c60@ruggedinbox.com>
References: <2bad149d24c6659b924e27c500619c60@ruggedinbox.com>
Message-ID: <55B668D5.3020307@voskuil.org>

https://twitter.com/petertoddbtc

Thanks for the triggering warning, if not for that I may have gone into
seizures.

e


On 07/27/2015 10:05 AM, Alice Larson via bitcoin-dev wrote:
> The twitter teenage nonsense from Todd is ridiculous:
> https://twitter.com/playatodd (warning, triggering)

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/74be8e11/attachment.sig>

From justin at netki.com  Mon Jul 27 21:51:51 2015
From: justin at netki.com (Justin Newton)
Date: Mon, 27 Jul 2015 14:51:51 -0700
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <55B0E719.4030004@electrum.org>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
	<CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>
	<55B0B858.8000106@electrum.org> <55B0E719.4030004@electrum.org>
Message-ID: <CABqynxLKLTyp=+zLOt0dESKfxo2ojKmiQQT6ygZ1eQC5nZM2vA@mail.gmail.com>

Thomas,
  I think this is interesting and has some good thoughts behind it.  For
clarity, are you recommending that the "_oa2" portion of the domain name be
"hidden" as a way to make it easier to delegate just wallet names from a
zone?



On Thu, Jul 23, 2015 at 6:07 AM, Thomas Voegtlin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Le 23/07/2015 11:48, Thomas Voegtlin via bitcoin-dev a ?crit :
> >
> > One benefit of having an intermediate "_wallet" level is to allow zone
> > delegation. Is that the reason for that choice?
> >
>
> Thinking about it, I think that it would be better to separate those two
> operations: on one hand, the listing of TXT records under a name, and on
> the other hand, the possibility to use Zone Delegation.
>
> For example, let us use the "_oa2" name (Openalias version 2) when we
> need to introduce an intermediate level, and "_oa2_keys" for key listing.
>
> Here is an example:
>
> _oa2_keys.sample      3600 IN TXT "btc ltc email fullname"
> _btc.sample           3600 IN TXT "bitcoinaddress"
> _ltc.sample           3600 IN TXT "litecoinaddress"
> _btc.sample           3600 IN TXT "otherbitcoinaddress"
> _email.sample         3600 IN TXT "john.smith at googlemail.com"
> _fullname.sample      3600 IN TXT "John Smith"
>
> Zone Delegation: Let us assume example.com wants to delegate all its
> Bitcoin aliases to Netki. We introduce an intermediate level, with the
> "_oa2" name. In the alias, this string is translated as "@"
>
> john._oa2.example.com        <--  will be looked up as john at example.com
> _btc.john._oa2.example.com   <--  bitcoin address of john at example.com
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



-- 

Justin W. Newton
Founder/CEO
NetKi, Inc.

justin at netki.com
+1.818.261.4248
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/9f2e9f77/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 10972 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/9f2e9f77/attachment-0001.tiff>

From ric at spagni.net  Mon Jul 27 22:46:50 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Tue, 28 Jul 2015 00:46:50 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oTj91fqe3wvNNfS1yEp2faijmmQOGzj64z6_QsGHGsnuw@mail.gmail.com>

There are several reasons why we rejected doing it this way with OpenAlias:

1. It adds complexity for the alias creator. This may seem
unimportant, but the OpenAlias standard was created to empower people
to create their own aliases as simply as possible, not to make it
overly complex.

2. It's harder to mess things up by dropping a sub-record; you either
have the complete, valid record, or you don't. With a "tiered" system
you can claim that you support a particular alias, but then lack all
or some of the records for it.

3. You retain both forward and backwards compatibility (no need to
introduce a new OA version unnecessarily), as you can have an "old" KV
pair and a "new" KV pair within the same record. The addition of KV
pairs doesn't require the application to know the new pairs exist,
which makes it more extensible.

4. Even better - since an application gets the whole record it can
start off with a minimum viable product that merely gets the address,
and then at a later stage when support is added for additional
metadata *it already has the metadata* and can interpret it.

5. You can still do DNS delegation (proper, SOA delegation) or you can
do delegation via a KV pair of some sort (say, a reroute= pair or
something). In both cases delegation requires an additional lookup, so
there's nothing saved or improved with the two-tier system.

In this instance, as in many others, simplicity trumps complexity, and
the bonus is that the simpler solution is more extensible and
flexible.

Riccardo

> Thinking about it, I think that it would be better to separate those two
> operations: on one hand, the listing of TXT records under a name, and on
> the other hand, the possibility to use Zone Delegation.
>
> For example, let us use the "_oa2" name (Openalias version 2) when we
> need to introduce an intermediate level, and "_oa2_keys" for key listing.
>
> Here is an example:
>
> _oa2_keys.sample      3600 IN TXT "btc ltc email fullname"
> _btc.sample           3600 IN TXT "bitcoinaddress"
> _ltc.sample           3600 IN TXT "litecoinaddress"
> _btc.sample           3600 IN TXT "otherbitcoinaddress"
> _email.sample         3600 IN TXT "john.smith at googlemail.com"
> _fullname.sample      3600 IN TXT "John Smith"
>
> Zone Delegation: Let us assume example.com wants to delegate all its
> Bitcoin aliases to Netki. We introduce an intermediate level, with the
> "_oa2" name. In the alias, this string is translated as "@"
>
> john._oa2.example.com        <--  will be looked up as john at example.com
> _btc.john._oa2.example.com   <--  bitcoin address of john at example.com

From laanwj at gmail.com  Tue Jul 28 04:55:31 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Tue, 28 Jul 2015 06:55:31 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B668D5.3020307@voskuil.org>
References: <2bad149d24c6659b924e27c500619c60@ruggedinbox.com>
	<55B668D5.3020307@voskuil.org>
Message-ID: <20150728045530.GA29414@amethyst.visucore.com>

Eric Voskuil, Alice Larson, others:

Personal attacks or bullying of any kind are not tolerated on this mailing list.

This list is meant to be a low-volume community for technical proposals and discussion regarding Bitcoin. See the archive for say, 2012, for example.

What Peter Todd or anyone else is doing on Twitter or other places is not relevant here. This list is not a pillory for your issues, nor a place to exhibit your personal hobby horses.

Wladimir


From eric at voskuil.org  Tue Jul 28 06:40:42 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Mon, 27 Jul 2015 23:40:42 -0700
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
Message-ID: <55B723EA.7010700@voskuil.org>

On 07/23/2015 07:30 AM, Jorge Tim?n wrote:
> On Thu, Jul 23, 2015 at 2:49 AM, Eric Voskuil via bitcoin-dev wrote:
>> On 07/22/2015 05:13 PM, Eric Lombrozo via bitcoin-dev wrote:
>>> Only being partly serious - I strongly am in favor of a sufficiently
>>> modularized codebase that swapping out consensus rules is fairly
>>> straightforward and easy to test...
>>
>> We (libbitcoin) have taken the time to publish and maintain bitcoind's
>> "libbitcoinconsensus" source files as an independent C++ library...

> I think there were some misunderstandings in our previous conversation
> about this topic.
> I completely agree with having a separated repository for libconsensus
> (that's the whole point, alternative implementations can be
> consensus-safe by using it, and in the event of a schism fork[1], they
> can fork just that smaller project without having to relay on Bitcoin
> Core [satoshi] at all).
> But I thought you also wanted Bitcoin Core to use libconsensus instead
> of just having a subtree/subrepository like it currently does with
> libsecp256k1.

libsecp256k1 has it's own repository, libbitcoinconsensus doesn't.  A
separate repository was what I considered as a requirement for us to use it.

> I'm not sure if that would ever be accepted, but in any case we're
> certainly far away from that goal.

If it's not certain whether this would even be accepted, the commitment
to a community consensus library is too weak to take a strong dependency
on. But for us it's moot, as we have made the already accomplished that
goal.

> Here are some things that need to
> happen first:
> 
> 1) Finish encapsulating consensus code so that it can be built without
> any (we've done it only with script-related code so far). Here are
> some related PRs (other people have done other things that help with
> this as well):
...
> 2) Finish libconsensus's API: expose more things than VerifyScript, at
> the very least, also expose VerifyTx, VerifyHeader and VerifyBlock.
> Feedback from alternative implementations like libbitcoin is extremely
> valuable here. Some related closed-for-now PRs:

In our earlier discussion I believe you said that the library would not
be undergoing significant change or feature creep. If this is the very
least that's projected it would seem that constraint will not hold.

> 3) Move libconsensus to a separate repository as a
> subtree/subrepository of Bitcoin Core.
> 
> Only after all that we can discuss whether Bitcoin Core itself should
> include libconsensus' code or just use its API directly.

I don't think it's a question of whether it *should* use its own library
as it is published for others - this is a practically self-evident
conclusion.

> I hope that after all this, libbitcoin also reconsiders whether to
> reimplement its own libconsensus or use the "official" one directly
> instead.

We use a fork of libsecp256k1 and would probably do the same with the
consensus library if it was cleanly isolated.

>> In any case I agree with your stated need for this isolation (if not the
>> means) for the reasons you state. The community needs to move beyond a
>> largely singular and monolithic codebase that is holding that position
>> in part due to fear about consensus bug forks.
> 
> I completely agree. That's the goal of libconsensus (and an
> alternative implementation like libbitcoin being able to use it
> without sacrificing any of its current or future design differences
> from Bitcoin Core would be a sign of success in this reward).

It's a performance sacrifice, and then there's the OpenSSL dependency,
but these are both optional within our stack - so the application
developer has the option. So the only downside is that we are
maintaining the conditional compilation.

> Unfortunately any changes that touch consensus code are risky and
> therefore slow. And when consensus encapsulation changes conflict with
> other changes (not because the other changes need to change consensus
> but because consensus code is still coupled with policy and other
> bitcoind-specific code), refactors are never prioritized. Ironically,
> you need to encapsulate the consensus code to avoid such conflicts,
> which would make all non-consensus changes far less risky (reducing
> the consensus-critical review development bottleneck).
> 
> Unfortunately and ironically again, safer, small and incremental
> changes are less interesting for reviewers.
> For example, I've been trying to move consensus code to the consensus
> folder for a long time. The correctness of a MOVEONLY change is
> trivial to review for anyone who knows how to copy/paste in its
> favorite editor and how to use git diff, but will I ever get answers
> to my questions in [1]?

I think it's worthwhile work, especially if you are passionate about the
longer term objectives. I haven't been involved in these reviews as I
spend very little time with the satoshi client

> I know there's many people who really care about this, Cory Fields,
> Wladimir and Pieter Wuille to name a few have reviewed many of this
> changes (I've just got used to publicly whine about lack of review on
> this front and policy encapsulation [very related fronts] as an
> attempt to get some attention: not always, but begging for review
> actually works some times).

Well a cynic might observe that fear of consensus bugs is what keeps
people on the satoshi client, and therefore accelerating the development
of a clean and independent consensus library would be a very low priority.

> Another unfortunate fact is that although a script-only libconsensus
> allows you to avoid a big part of all possible consensus fork bugs,
> there cannot be users of a finished libconsensus to ask things to until
> a finished libconsensus actually exists.

Software is never finished, but this exists and we are using it.

> At the same time, the future
> users (alternative implementations, since bitcoin core is already
> "using libconsensus") 

It is using the same source files, but AFAICT not the library.

> are the most relevant people to listen when it
> comes to the C API. That's why I beg you to comment on [2], even if
> #5995 is currently closed. Your input on [1] would be very appreciated
> as well (maybe you think it's better to expose verifyTx before
> exposing verifyHeader, even if exposing verifyHeader is something that
> could be done faster).

I haven't looked at any of these commits, but I'll make some time to at
least give a cursory review.

>  > To make choice regarding consensus an actual choice (and thereby actual
>> consensus) the modularity you suggest is essential. One must be able to
>> take new developments without having to take consensus changes. The
>> option to fork the codebase is not reasonable for most people. At this
>> point there is no defensible reason for coupling consensus checks with
>> other features.
> 
> Would you agree that asking people to fork an independent libconsensus
> project instead of having to fork the full Bitcoin-qt is much more
> reasonable?

Yes, of course. We've already done it. For each release of the satoshi
client since we made libbitcoin-consensus I've copied the sources. It's
pretty much automated and easy to visually verify that the sources
match. That would be quite a bit more difficult if there wasn't an
independent build.

> I mean, I agree with your points. If "the specification of the
> consensus rules is an implementation", then that implementation
> shouldn't be coupled with a bunch of policy and non-consensus
> technical choices (storage, dependencies, p2p protocol...). But I
> still think that "the specification of the consensus rules should be a
> concrete implementation" rather than based purely on a natural
> language like English.

Useful specifications often have two reference implementations. It's the
idea that there can be only one legitimate implementation that's
problematic.

> I believe that's the only point where we fundamentally disagree, but
> it shouldn't be a barrier in our common goal of taking "power" away
> from Bitcoin Core development. If we're successful Bitcoin Core won't
> have any privileged position with regards to, say, libbitcoin when it
> comes to deciding consensus rules changes.

I don't think we disagree on anything fundamental. My issues with the
library were (1) the lack of isolation, (2) the fact that the satoshi
client wouldn't actually use the library, and (3) backtracking to use
OpenSSL, which we had recently removed from libbitcoin.

..

> 1) libconsensus us finished and used by libbitcoin
> 2) Bitcoin Core was unanimously in favor of Gavin's 32 GB initial
> proposal and the changes are applied to bitcoin/bitcoin and
> bitcoin/libconsensus (or Bitcoin Core has a dictator like Mike
> wants[4] and he accepts it, it doesn't really matter for this
> example).
> 
> But let's also assume that X% of the users and 10% of the miners are
> against that Schism hardfork, and they don't want to be forced to
> change the rules by any influential group, mining, economic or user
> majority.
> Libbitcoin cannot be forced to accept the next, controversial version
> of bitcoin/libconsensus, so you guys fork libbitcoin/libconsensus out
> of the last ok version.

This is already done.

> Centralized-bitcoin and old-bitcoin would become 2 separated
> currencies and some people would likely lose money in the transition
> from one currency to 2 of them, but the users of old-bitcoin have the
> right of keeping the rules they signed up for and the only responsible
> people for this likely-catastrophic schism would be the Bitcoin core
> developers for trying to impose consensus changes into others against
> their will. Trying to impose consensus changes against the will of
> some users is wrong, and it is irrelevant if that happens in Bitcoin
> Core or Bitcoin Tx (if it is uncontroversial, it's also irrelevant
> where it gets implemented first).

I don't disagree, but you previously argued that *everyone* had to agree
on consensus. Above you are making the argument that people can choose
to disagree. Yes, this is important. Yet it's unrealistic for any
alternative consensus to overcome inertia unless there are widely
deployed independent implementations.

> I really believe bitcoin needs competitive alternative implementations
> and I believe libconsensus is a tool to help that happen and reduce
> the "gatekeeping" friction that there's (unfortunately) around Bitcoin
> Core. I look forward to any potential collaboration on this front.
> Even if you still want to maintain a reimplementation of libconsensus
> (which I humbly think it's a mistake, but I don't think there's any
> point on keep discussing that, since we know we disagree) we can
> collaborate on the future common API of a complete libconsensus (with
> verifyBlock and all). I really hope we can do that.

I'm maintain our fork of the consensus sources until they are (1)
properly isolated from the satoshi client and (2) the satoshi client
uses the actual library.

I don't see it as important or even productive to try and wedge the
consensus library into the repository/build for bitcoind and Bitcoin-QT.
It's straightforward to maintain the consensus library independently.
Always willing to work with you on it, although we're all busy, and this
isn't my top priority presently.

e

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150727/1eaee5ae/attachment.sig>

From laanwj at gmail.com  Tue Jul 28 08:43:14 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Tue, 28 Jul 2015 10:43:14 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
Message-ID: <20150728084312.GA29453@amethyst.visucore.com>

On Thu, Jul 23, 2015 at 04:30:06PM +0200, Jorge Tim?n via bitcoin-dev wrote:

> I think there were some misunderstandings in our previous conversation
> about this topic.
> I completely agree with having a separated repository for libconsensus
> (that's the whole point, alternative implementations can be
> consensus-safe by using it, and in the event of a schism fork[1], they
> can fork just that smaller project without having to relay on Bitcoin
> Core [satoshi] at all).

Indeed.

> But I thought you also wanted Bitcoin Core to use libconsensus instead
> of just having a subtree/subrepository like it currently does with
> libsecp256k1.
> I'm not sure if that would ever be accepted, but in any case we're
> certainly far away from that goal. Here are some things that need to
> happen first:

I don't see any reason why Bitcoin Core would not use the consensus library. Eating our own dogfood and such.

Biggest risk, as I've said before, is that the refactoring loading to a (more complete) consensus library will result in code that is no longer bug-for-bug compatible with previous versions, thus defeating its entire purpose and introducing fork risk.

If that can be avoided - for example by going from here to there using pure code moves, as you're trying to do - I'm all for it.

> 2) Finish libconsensus's API: expose more things than VerifyScript, at
> the very least, also expose VerifyTx, VerifyHeader and VerifyBlock.
> Feedback from alternative implementations like libbitcoin is extremely
> valuable here. Some related closed-for-now PRs:

Agreed.

> 3) Move libconsensus to a separate repository as a
> subtree/subrepository of Bitcoin Core.

If the rest is done, this is the easy part :)

> Unfortunately and ironically again, safer, small and incremental
> changes are less interesting for reviewers.
> For example, I've been trying to move consensus code to the consensus
> folder for a long time. The correctness of a MOVEONLY change is
> trivial to review for anyone who knows how to copy/paste in its
> favorite editor and how to use git diff, but will I ever get answers
> to my questions in [1]?

Code review capacity is still our greatest bottleneck.
And I don't see any way out of that, unfortunately.

> I know there's many people who really care about this, Cory Fields,
> Wladimir and Pieter Wuille to name a few have reviewed many of this
> changes (I've just got used to publicly whine about lack of review on
> this front and policy encapsulation [very related fronts] as an
> attempt to get some attention: not always, but begging for review
> actually works some times).

I do really care about this.

Wladimir


From laanwj at gmail.com  Tue Jul 28 08:47:19 2015
From: laanwj at gmail.com (Wladimir J. van der Laan)
Date: Tue, 28 Jul 2015 10:47:19 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <55B723EA.7010700@voskuil.org>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<55B723EA.7010700@voskuil.org>
Message-ID: <20150728084718.GB29453@amethyst.visucore.com>

On Mon, Jul 27, 2015 at 11:40:42PM -0700, Eric Voskuil via bitcoin-dev wrote:

> It's a performance sacrifice, and then there's the OpenSSL dependency,
> but these are both optional within our stack - so the application
> developer has the option. So the only downside is that we are
> maintaining the conditional compilation.

Now that BIP66 became active, and only strict DER signatures are allowed, the OpenSSL dependency can be removed from consensus.

Pieter Wuille will do an announcement on this soon.

Wladimir

From jtimon at jtimon.cc  Tue Jul 28 09:58:33 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 28 Jul 2015 11:58:33 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
	Core and hard forks)
In-Reply-To: <55B723EA.7010700@voskuil.org>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<55B723EA.7010700@voskuil.org>
Message-ID: <CABm2gDok2gH2R8=x3a8PmPiM56WFg3TKzCum_WS=uV9-T1Ss3g@mail.gmail.com>

Ok, I'm going to separate terms: current-libconsensus from theoretical
future-libconsensus (implementing ALL consensus rules).

On Tue, Jul 28, 2015 at 8:40 AM, Eric Voskuil <eric at voskuil.org> wrote:
> libsecp256k1 has it's own repository, libbitcoinconsensus doesn't.  A
> separate repository was what I considered as a requirement for us to use it.

We want to complete future-libconsensus (decouple all the consensus
rules from the rest of the bitcoin core code) first.
Then we can move future-libconsensus to a subrepository/subtree like
libsecp256k1 and I believe everybody wants this to eventually happen.
Separating current-libconsensus now may make completing
future-libconsensus harder.

>> I'm not sure if that would ever be accepted, but in any case we're
>> certainly far away from that goal.
>
> If it's not certain whether this would even be accepted, the commitment
> to a community consensus library is too weak to take a strong dependency
> on. But for us it's moot, as we have made the already accomplished that
> goal.

What I mean is that once it is separated to a subtree, there's one more step:

Make Bitcoin Core use future-libconsensus' API instead of a subtree.
Decoupling future-libconsensus from Bitcoin Core is one thing, and
Decoupling Bitcoin Core from future-libconsensus is another thing: you
need to decouple Bitcoin Core from all future-libconsensus
implementation internals. For example, script/sign (part of Bitcoin
Core) depends on individual non-API-exposed classes in
current-libconsensus.
Moving from a subtree to a completely separated library is what I
don't know will ever happen, but I don't think this is "unfairly
advantageous" for Bitcoin Core or anything like that: other
implementations can also use future-libcosensus as a subtree instead
of the C API as well.

You have accomplished the goal of separating curren-libconsensus, not
future-libconsensus.
In fact, if you complete the equivalent of future-libconsensus in
libbitcoin and separate that, maybe that's a better place to start
drafting a full API.

>> 2) Finish libconsensus's API: expose more things than VerifyScript, at
>> the very least, also expose VerifyTx, VerifyHeader and VerifyBlock.
>> Feedback from alternative implementations like libbitcoin is extremely
>> valuable here. Some related closed-for-now PRs:
>
> In our earlier discussion I believe you said that the library would not
> be undergoing significant change or feature creep. If this is the very
> least that's projected it would seem that constraint will not hold.

future-libconsensus will not have significant changes *once it is
completed*. Currently future-libconsensus is spread around many places
inclusing src/main, so that obviously needs to change before it can be
separated to an independent repo.

>> 3) Move libconsensus to a separate repository as a
>> subtree/subrepository of Bitcoin Core.
>>
>> Only after all that we can discuss whether Bitcoin Core itself should
>> include libconsensus' code or just use its API directly.
>
> I don't think it's a question of whether it *should* use its own library
> as it is published for others - this is a practically self-evident
> conclusion.

Well, Bitcoin Core is "currently the only user of future-libconsensus"
since bitcoin core and future-libconsensus are currently mutually
coupled.
Bitcoin Core will always keep using future-libconsensus. The only
question is whether it will use it through the C API or as a
subtree/subrepository (both options are also available to other
implementations). I don't know if decoupling Bitcoin Core from
future-libconsensus' implementation details enough to be able to
directly use the API is worth it or if anyone will be interested in
doing so. For me this last step is not all that interesting: if we
have an independent repo with a full API that other implementations
can use, I don't really care about Bitcoin Core not going through the
API and using including all the code directly instead.

>> I hope that after all this, libbitcoin also reconsiders whether to
>> reimplement its own libconsensus or use the "official" one directly
>> instead.
>
> We use a fork of libsecp256k1 and would probably do the same with the
> consensus library if it was cleanly isolated.

Great.

>>> In any case I agree with your stated need for this isolation (if not the
>>> means) for the reasons you state. The community needs to move beyond a
>>> largely singular and monolithic codebase that is holding that position
>>> in part due to fear about consensus bug forks.
>>
>> I completely agree. That's the goal of libconsensus (and an
>> alternative implementation like libbitcoin being able to use it
>> without sacrificing any of its current or future design differences
>> from Bitcoin Core would be a sign of success in this reward).
>
> It's a performance sacrifice, and then there's the OpenSSL dependency,
> but these are both optional within our stack - so the application
> developer has the option. So the only downside is that we are
> maintaining the conditional compilation.

As I told you before the reason why current-libconsensus is using
OpenSSL instead of libsecp256k1 is that the very authors of
libsecp256k1 warned that using libsecp256k1 for validation was
consensus risky. As Wladimir said, Pieter Wuille will make an
announcement about this soon.
In any case, as I told you in previous conversations, the plan is to
move from OpenSSL to libsecp256k1 for validation too (so libconsensus
wil drop the OpenSSL dependency and this is just a temporary concern).

> I think it's worthwhile work, especially if you are passionate about the
> longer term objectives. I haven't been involved in these reviews as I
> spend very little time with the satoshi client

Well, the questions about the API are just in english, no need to
deeply know Bitcoin Core's (satoshi client) internals.
But maybe we should have an independent mailing list for
consensus-only things. Not all future-libconsensus users will be
interested in Bitcoin Core-specific discussions, and making them
subscribe and filter seems like an unnecessary burden to
participation.

> Well a cynic might observe that fear of consensus bugs is what keeps
> people on the satoshi client, and therefore accelerating the development
> of a clean and independent consensus library would be a very low priority.

I think that's precisely what makes it a high priority in the eyes of
all the people working on it or reviewing related changes.
But, yes, I guess "evil-thinking", maybe that's what make it a low
priority for someone evil that wants Bitcoin Core's implementation
have more importance than it shold forever. I prefer not to evil-think
and just attribute it to having other priorities or just apathy about
it.

>> Another unfortunate fact is that although a script-only libconsensus
>> allows you to avoid a big part of all possible consensus fork bugs,
>> there cannot be users of a finished libconsensus to ask things to until
>> a finished libconsensus actually exists.
>
> Software is never finished, but this exists and we are using it.

By "finished" I mean a future-libconsensus that implements ALL
consensus rules. We don't have that yet.

>> At the same time, the future
>> users (alternative implementations, since bitcoin core is already
>> "using libconsensus")
>
> It is using the same source files, but AFAICT not the library.

Bitcoin Core is the ONLY "user" of future-libconsensus (which actually
only exists inside Bitcoin Core and it's not exposed).
Current-libconsensus is used by Bitcoin Core and also exposed as an
independent build (not a separated repository yet).

Once future-Bitcoin's API is completed and the code in a different
repo, how is Bitcoin Core using the API instead of the sources
directly of any importance to other implementations?
That's really the part that I cannot understand. It will be a problem
Bitcoin Core, but if other implementations want to have (and maybe
solve later) the same problem they can use a subtree too and start
coupling their code with implementations details from
future-libconsensus.
Why would they want to do that? Again, I have no idea. I don't
understand what the complain is here.

>> are the most relevant people to listen when it
>> comes to the C API. That's why I beg you to comment on [2], even if
>> #5995 is currently closed. Your input on [1] would be very appreciated
>> as well (maybe you think it's better to expose verifyTx before
>> exposing verifyHeader, even if exposing verifyHeader is something that
>> could be done faster).
>
> I haven't looked at any of these commits, but I'll make some time to at
> least give a cursory review.

Great. I mean, I wasn't asking about reviewing the commits themselves
(which is also great if you do), but rather on answering the questions
I'm making there, ie: what to expose next (ie VerifyTx or
VerifyHeader)? would this be an acceptable way to expose VerifyHeader
? Which of he step-checks functions is worth exposing too (Bitcoin
Core is currently using some to prevent DoS attacks, for example)?

>> Would you agree that asking people to fork an independent libconsensus
>> project instead of having to fork the full Bitcoin-qt is much more
>> reasonable?
>
> Yes, of course. We've already done it. For each release of the satoshi
> client since we made libbitcoin-consensus I've copied the sources. It's
> pretty much automated and easy to visually verify that the sources
> match. That would be quite a bit more difficult if there wasn't an
> independent build.

Well, neither libbitcoincosnensus nor libbitcoin-consensus implements
all the consensus rules.
That's what makes them different from future-libconsensus.
But great, we're confirming more views that we share.

> Useful specifications often have two reference implementations. It's the
> idea that there can be only one legitimate implementation that's
> problematic.

Well, this is where I fear we will never agree. I think "Bitcoin is
different" in this reward and you disagree.
Maybe Pieter's explanation is more convincing to you:
https://youtu.be/PxW5D9xCIsc?t=769
Otherwise, I think I'll stop trying convincing you.
But one last try:

If there's 2 "specification implementations":

1) widely deployed but containing 1 bug
2) not deployed anywhere but more readable and without the bug.

When the bug is found, is it a consensus rule or not?
If it is, it turns out the second implementation wasn't an specification at all.
If it's not, nobody has been ever following consensus rules!!

>> I believe that's the only point where we fundamentally disagree, but
>> it shouldn't be a barrier in our common goal of taking "power" away
>> from Bitcoin Core development. If we're successful Bitcoin Core won't
>> have any privileged position with regards to, say, libbitcoin when it
>> comes to deciding consensus rules changes.
>
> I don't think we disagree on anything fundamental. My issues with the
> library were (1) the lack of isolation, (2) the fact that the satoshi
> client wouldn't actually use the library, and (3) backtracking to use
> OpenSSL, which we had recently removed from libbitcoin.

1) Working on it
2) The Satohi client has been using all along and it will use it
forever (maybe not through the API, but I don't get what the problem
with that is).
3) There will be an announce about this soon.

>> Libbitcoin cannot be forced to accept the next, controversial version
>> of bitcoin/libconsensus, so you guys fork libbitcoin/libconsensus out
>> of the last ok version.
>
> This is already done.

Once future-libconsensus exists as a separated repository, I don't
think you want to preemptively fork it unless you're actually changing
something.

> I don't disagree, but you previously argued that *everyone* had to agree
> on consensus. Above you are making the argument that people can choose
> to disagree. Yes, this is important. Yet it's unrealistic for any
> alternative consensus to overcome inertia unless there are widely
> deployed independent implementations.

Ideally schism consensus-rules changes will never happen, since they
effectively divide the currency in 2 and force the users to chose
(apart from other complications).
But if someone is trying to impose a schism fork (from Bitcoin Core,
from the new future-lbiconsensus repo or from anywhere else) it
becomes trivial to protect your implementation against forced changes.
Ideally all consensus changes will be uncontroversial or not happen at all.
But I think about non-ideal cases too.

> I'm maintain our fork of the consensus sources until they are (1)
> properly isolated from the satoshi client and (2) the satoshi client
> uses the actual library.

1) Reasonable.
2) You mean use it through the API? Seriously, why do you care?

> I don't see it as important or even productive to try and wedge the
> consensus library into the repository/build for bitcoind and Bitcoin-QT.
> It's straightforward to maintain the consensus library independently.

To be clear, Bitcoin Core's using future-libconsensus through a
subtree instead of the API is not a preference or a goal: it is just
how things will be just after completing and separating
future-libconsensus. Making it use the API instead of the subtree will
be additional work. I'm not sure I will want/have time to do it and I
don't know of anyone planning to do that (which seems very reasonably
given that a separated future-libconsensus is a dependency for such a
change).

> Always willing to work with you on it, although we're all busy, and this
> isn't my top priority presently.

Is it because "fear of consensus bugs is what keeps people on the
satoshi client" and you want to keep things this way?
Sorry, just joking about your previous "cynic" comment. See? Don't
attribute to malice what can be attributed to lack of time.

From jtimon at jtimon.cc  Tue Jul 28 10:09:22 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 28 Jul 2015 12:09:22 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <20150728084312.GA29453@amethyst.visucore.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<20150728084312.GA29453@amethyst.visucore.com>
Message-ID: <CABm2gDo-ziQLpDiFbmkYjMcsFJ2EVXe1hMOjm0gXQiRxp-K78Q@mail.gmail.com>

On Tue, Jul 28, 2015 at 10:43 AM, Wladimir J. van der Laan
<laanwj at gmail.com> wrote:
> On Thu, Jul 23, 2015 at 04:30:06PM +0200, Jorge Tim?n via bitcoin-dev wrote:
>> But I thought you also wanted Bitcoin Core to use libconsensus instead
>> of just having a subtree/subrepository like it currently does with
>> libsecp256k1.
>> I'm not sure if that would ever be accepted, but in any case we're
>> certainly far away from that goal. Here are some things that need to
>> happen first:
>
> I don't see any reason why Bitcoin Core would not use the consensus library. Eating our own dogfood and such.

As explained to Eric, it's not that I don't want Bitcoin Core to use
future-libconsensu through the API instead of a subtree: it's just
that that's more long-term and more work. And I don't see why other
implementations should really care about it.

> Biggest risk, as I've said before, is that the refactoring loading to a (more complete) consensus library will result in code that is no longer bug-for-bug compatible with previous versions, thus defeating its entire purpose and introducing fork risk.
>
> If that can be avoided - for example by going from here to there using pure code moves, as you're trying to do - I'm all for it.

Well, pure movements will not be enough, parameters will have to
change, incompatible dependencies have to be removed (ie util.h which
contains globals), etc.
But yes, I think we can do it with only low-risk and easy-to-review commits.

>> 3) Move libconsensus to a separate repository as a
>> subtree/subrepository of Bitcoin Core.
>
> If the rest is done, this is the easy part :)

And still, this doesn't require Bitcoin Core to use the API, a subtree
is enough at first.
This "easy step" doesn't guarantee that Bitcoin Core is using
future-libconsensus' API.

> Code review capacity is still our greatest bottleneck.
> And I don't see any way out of that, unfortunately.

I really think these code separations help with this (ie there are
many more people in the world with enough knowledge to review the qt
or even policy parts than there's people able to review consensus
changes).

> I do really care about this.

I know and I said so.

From jtimon at jtimon.cc  Tue Jul 28 11:29:36 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 28 Jul 2015 13:29:36 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B2C13C.9040708@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
	<CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
	<55B2C13C.9040708@thinlink.com>
Message-ID: <CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>

On Sat, Jul 25, 2015 at 12:50 AM, Tom Harding <tomh at thinlink.com> wrote:
> On 7/24/2015 2:24 AM, Jorge Tim?n wrote:
>
>> Regarding "increasing the exchange rate" it would be really nice to
>> just push a button and double bitcoin's price just before the next
>> subsidy halving, but unfortunately that's something out of our control.
>
> Jorge, right now, from the activity on github, you are working at least
> as hard as anyone else, probably harder.

My level of contributions are irrelevant to this discussion. But
still, I feel I should clarify some of the metrics you are looking to.
Most of my contributions so far are code refactors (with a small
change on the command-line options and a small optimization here and
there). This type of changes is usually better done incrementally to
be less risky and disruptive (this is specially important for
consensus-related code), and that makes my total commit count
unusually high, even when some people have contributed more in new
functionality than me in a single commit.
Also code movements (often required as part of these refactors)
produce unusually high total diff counts even when they require little
less than copy and paste (once you know what you want to move and
where, of course).
If I didn't thought this work is extremely important in the long term
(among other things, to make the code more accessible to new
reviewers/developers) I wouldn't be doing it, but you can't just
compare contributions counting commits or lines changed, that's not
how it works.
Github may say that I'm #10 with 96 commits / 9,371 ++ / 8,962 --, but
it's obvious to me that, say, gmaxwell #13 with 71 commits / 807 ++ /
707 -- has done a lot more for Bitcoin Core than I have.
Even if it was true that I'm the person currently coding more for
Bitcoin Core, I wouldn't write any of that if I had no hope of getting
review, so review is certain sense much more important than coding.

> Why?  Why, if not to make
> bitcoin more valuable?

Who cares?
If my work is good for the software, my motivations are irrelevant. If
I accidentally PR a bug, my motivations are again: the bug should not
be accepted no matter how pure and noble my intentions are.
But, no, making Bitcoin's price (no offense taken, but there's an
spanish say that goes like this "S?lo un necio confunde valor y
precio" which translates to "Only a fool confuses value and price")
rise is not one of my main motivations.
I'm much more concerned about the long term success of the currency
(for which turnover is a much more interesting metric than market cap
IMO) and about learning a technology that I believe will revolutionize
the world, but maybe you don't believe me. There's a Bitcoin incentive
as part of my Blockstream's contract, so I have a financial incentive
for Bitcoin's price to increase, but, in fact, when I started
contributing to bitcoin core my bitcoin holdings where extremely low.
It bothers me that so many people seem to assume that Bitcoin
developers are also hardcore currency speculators and are also good at
it (I can say Bitcoin has teach me that I'm a terrible day-trader
myself).
There's many reasons to contribute to Bitcoin core and none of them
are relevant to this discussion.

> Even apart from the convenience/curse of real-time exchange markets,
> just with an abstract definition of "value," isn't that exactly what a
> developer can influence, if not "control?"

The fact is that there's no "bitcoin developer dance" that makes it
rain and also raises bitcoin's market price 100 usd. And suggesting
"rising the price" as a solution to any problem just cannot be
considered a serious proposal.
No, we can't just ACK a "double the price" PR when the next halving comes.

> Isn't figuring out ways to increase the value of bitcoin what we are doing?

If that's what you're doing as a currency speculator, that's fine.
It's just off-topic to this list.
And, no, that's not "what I am doing" as a software developer.
I want the system to improve, like that "Jessie J" singer said, forget
about the priceeeeeeeeee, yeah.

From jtimon at jtimon.cc  Tue Jul 28 11:32:30 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 28 Jul 2015 13:32:30 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
	<CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
	<55B2C13C.9040708@thinlink.com>
	<CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>
Message-ID: <CABm2gDpboNwNTx+aJpP6C_y3k5GZ4VBgq9Kdew-OiCZDfDA-VQ@mail.gmail.com>

s/no offense taken/no offense intended

From pieter.wuille at gmail.com  Tue Jul 28 14:27:18 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 28 Jul 2015 16:27:18 +0200
Subject: [bitcoin-dev] Disclosure: consensus bug indirectly solved by BIP66
In-Reply-To: <55B78F56.3080802@gmail.com>
References: <55B78F56.3080802@gmail.com>
Message-ID: <55B79146.70309@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello all,

I'd like to disclose a vulnerability I discovered in September 2014,
which became unexploitable when BIP66's 95% threshold was reached
earlier this month.

## Short description:

A specially-crafted transaction could have forked the blockchain
between nodes:
* using OpenSSL on a 32-bit systems and on 64-bit Windows systems
* using OpenSSL on non-Windows 64-bit systems (Linux, OSX, ...)
* using some non-OpenSSL codebases for parsing signatures

## Upgrade instructions:

None. Transactions that could trigger this problem have become invalid
on the network since BIP66's deployment of version 3 blocks reached 95%
on July 4th, 2015.

## Long description:

The problem is related to the signature encoding rules.

Bitcoin's signatures are ASN.1 BER encoded. BER is a complex standard
that allows many different encodings for the same data. Since Bitcoin
Core 0.8, a standardness rule has been in effect that only allowed
subset of encodings (DER) for relay and mining, even though any BER
remained valid in the blockchain - at least in theory.

In practice, BER has many weird edge cases, and I have not found a
single cryptographic codebase that can parse all of them correctly.
This includes OpenSSL, Crypto++, BouncyCastle, btcec, and our own
libsecp256k1 library.

This on itself would not be a problem, as full nodes on the network
currently use OpenSSL. However, while researching what was needed to
make libsecp256k1 compatible with it, I discovered that OpenSSL is even
inconsistent with itself across different platforms.

One of the features of BER is the ability for internal structures to
have a length descriptor whose size itself is up to 126 bytes (see
X.690-0207 8.1.3.5). A 1 terabyte data structure would for example use
a 5-byte length descriptor. However, there is no requirement to use the
shortest possible descriptor, so even a 70-byte ECDSA signature could
use a 5-byte length descriptor and be valid. Unfortunately, OpenSSL
supports length descriptors only as long as their size is at most that
of a C 'long int', a type whose size depends on the platform (Windows
and 32-bit Linux/OSX have a 4-byte long int, 64-bit Linux/OSX have an
8-byte long int). See
https://github.com/openssl/openssl/blob/bfa34f551c2d38e826deb44a269cb0f720f9f63b/crypto/asn1/asn1_lib.c#L178.
Some non-OpenSSL based signature validation
systems don't support such length descriptors at all, resulting in an
extra forking risk on top for them if used for blockchain validation.

This effectively means that a block chain containing a transaction with
a valid signature using such a 5-byte length descriptor would be
accepted by some systems and not by others, resulting in a fork if it
were mined into a block.

## Timeline:

* 2013-Feb-19: Bitcoin Core 0.8.0 was released, which made non-DER
signatures non-standard. No release since then would relay or mine
transactions that could trigger the vulnerability. However, such a
transaction was still valid inside blocks.

* 2014-Feb-10: I proposed BIP62 to deal with transaction malleability.
The BIP62 draft includes a rule that would make version 2 transactions
with non-DER signatures invalid.

* 2014-Jul-18: In order to make Bitcoin's signature encoding rules not
depend on OpenSSL's specific parser, I modified the BIP62 proposal to
have its strict DER signatures requirement also apply to version 1
transactions. No non-DER signatures were being mined into blocks
anymore at the time, so this was assumed to not have any impact. See
https://github.com/bitcoin/bips/pull/90 and
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006299.html.
Unknown at the time, but if deployed this would have solved the
vulnerability.

* 2014-Sep-01: While analysing OpenSSL's source code for BER parsing, I
discovered the architecture dependency listed above and the associated
vulnerability. The best means to fix it at the time was by getting
BIP62 adopted.

* 2014-Sep-07, 2014-Oct-17, 2014-Oct-26, 2014-Dec-06, 2015-Jan-09:
Several proposed changes to BIP62. See
https://github.com/bitcoin/bips/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aclosed+bip62.

* 2015-Jan-10: OpenSSL releases versions 1.0.0p and 1.0.1k, with a fix
for CVE-2014-8275. The fix introduced a restriction on ECDSA signatures
to be strict DER, which would have solved all problems related to
signature encodings, except Bitcoin's consensus-critical nature
requires bug-for-bug compatibility between nodes. Worse, it seemed that
there was again a small (1%) number of blocks being created with
non-DER signatures in it, resulting in actual forks. The only immediate
solution that did not introduce more risk for forks was parsing and
re-encoding signatures using OpenSSL itself before verification to
bypass the restriction, making the problem persist. See
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007097.html.

* 2015-Jan-21: The new attention to signature encoding might have
revealed the vulnerability, and the presence of miners not enforcing
strict DER might have made the vulnerability actually exploitable.
BIP62 was still a moving target, so we wanted a faster means to solve
this. Therefore, a new BIP was proposed with just the strict DER
requirement, numbered BIP66. This would both allow non-OpenSSL
verification, and solve the vulnerability, without needing to fix the
less urgent malleability problem that BIP62 wanted to address. See
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007156.html.

* 2015-Feb-17: Bitcoin Core 0.10.0 was released, with support for
BIP66. See
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007480.html.

* 2015-Jul-04: BIP66's 95% threshold was reached, enabling a consensus
rule for strict DER signatures in the blockchain. This solved the
vulnerability, and opens the door to using non-OpenSSL signature
verification in the near future.

- -- 
Pieter Wuille

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQGcBAEBAgAGBQJVt5FGAAoJEFeJbS/48LZX3ccMAJdPrpa8ggcYEyy8naqc7ewL
1Mwv24p/6Q8+T7Q6EWmgoApY1jljF+AzgSpfaf310QZf9yuC/JC++AmHfUaa9UQG
Mq1+duX64uDWIeNKTfuCwZvU0ataARZKmFUpp60UF+VtiJyLo9tpHTVajM0lv9Oq
OX40qHVC/iBogRLNREC1ggWH1JPMTbEch50YX1bgNi3gE5gtMggSQ2OXrGCCtrvR
7cVFlIyOhlLtvSAnxzmHyY8Iol+qVhIZi4mCmDgOoQKVaiYm1cODQ+nrMHx02DKC
Wqstwb/mET/vbCX4qxSNQ2B+mQk0WO/gSrWiQkBLi/AfLBh/8A/kL1RpKxVQzoaP
O165LbXye42w8Js/sE/zT6d4CIbYaW0GpF6m4agwDYgPLomhdk/elPRojKYsEab+
oFWPVagqKI9e/pjFBxqfIv3iyx1hHB6YIaX5TfFRVjsWzag5Qi2ssQYOQymyjg4J
UHNR/xW0PMPAOg5KS/uFja4OWxstHhTW9G+rslEK9g==
=7F3K
-----END PGP SIGNATURE-----

From tomh at thinlink.com  Tue Jul 28 16:44:42 2015
From: tomh at thinlink.com (Tom Harding)
Date: Tue, 28 Jul 2015 09:44:42 -0700
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
	<CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
	<55B2C13C.9040708@thinlink.com>
	<CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>
Message-ID: <55B7B17A.6030701@thinlink.com>

Jorge,

We obviously disagree fundamentally on the role of societal adoption, in 
the system that Satoshi designed.

Adoption is well ahead of Satoshi's schedule, and the measure of this is 
the exchange rate.  It is at once an imperfect measure, and one of the 
most perfect markets that has ever existed.

As long as hardware, electric power, and bandwidth are priced in fiat 
currency, the exchange rate is a critical variable to security, 
capacity, and other metrics of network health.

It's not inconsistent that you consider the exchange rate irrelevant.  
In fact it explains why you believe that Satoshi's timetable for 
transitioning to fee incentives can be summarily tossed aside and 
replaced with something you think is better.

Here's an English saying I just invented.  A bunch of geniuses can do a 
lot more damage than one fool.


From jtimon at jtimon.cc  Tue Jul 28 17:33:29 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Tue, 28 Jul 2015 19:33:29 +0200
Subject: [bitcoin-dev] Bitcoin Core and hard forks
In-Reply-To: <55B7B17A.6030701@thinlink.com>
References: <CAPg+sBgs-ouEMu=LOVCmOyCGwfM1Ygxooz0shyvAuHDGGZYfJw@mail.gmail.com>
	<CAPg+sBgugLSVEwDLXhgey86_rM2fTjGWXFuXsiZioJKCZiHiNg@mail.gmail.com>
	<CADm_WcbnQQGZoQ92twfUvbzqGwu__xLn+BYOkHPZY_YT1pFrbA@mail.gmail.com>
	<CAPWm=eW8RgrG1CMEAMN4GeiMjZecFvNtZB_Y4rZNeofWSD0=Wg@mail.gmail.com>
	<CADm_WcYCUHs9Qe_T6WJOCUSK6stXYD8v6z5JcGHfRMURoOSFTA@mail.gmail.com>
	<CABm2gDq3JyZx0QCRDbcNSLSOBKdpi4h_7VN1XL8N42U38+eBAA@mail.gmail.com>
	<55B113AF.40500@thinlink.com>
	<CABm2gDp5-D3r=0rbq28-h8ewyHY8Rj9B0AFjO1fWfyuUEDMMfg@mail.gmail.com>
	<55B1DB84.6070001@thinlink.com>
	<CABm2gDqPvK8_eoMxv2hnVHw6H=xXdeugzTPJZEPUcwmpn-ZSKQ@mail.gmail.com>
	<55B2C13C.9040708@thinlink.com>
	<CABm2gDpz5Tm9Z34bgvU91O0tJrzNi1nvhsEz91uC1Z6CJM2UDg@mail.gmail.com>
	<55B7B17A.6030701@thinlink.com>
Message-ID: <CABm2gDrw_DBFaQxRETEyyCSsiT8k_oG4umU_0VrPVj3wCzPsCA@mail.gmail.com>

That's not what I said. We don't seem able to communicate with each other
efficiently, probably my fault since English is not my native language. But
I don't want to use more of my time (or yours) in this discussion, since
it's clearly unproductive.
On Jul 28, 2015 6:45 PM, "Tom Harding" <tomh at thinlink.com> wrote:

> Jorge,
>
> We obviously disagree fundamentally on the role of societal adoption, in
> the system that Satoshi designed.
>
> Adoption is well ahead of Satoshi's schedule, and the measure of this is
> the exchange rate.  It is at once an imperfect measure, and one of the most
> perfect markets that has ever existed.
>
> As long as hardware, electric power, and bandwidth are priced in fiat
> currency, the exchange rate is a critical variable to security, capacity,
> and other metrics of network health.
>
> It's not inconsistent that you consider the exchange rate irrelevant.  In
> fact it explains why you believe that Satoshi's timetable for transitioning
> to fee incentives can be summarily tossed aside and replaced with something
> you think is better.
>
> Here's an English saying I just invented.  A bunch of geniuses can do a
> lot more damage than one fool.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/c22de55e/attachment.html>

From elombrozo at gmail.com  Tue Jul 28 22:25:50 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 15:25:50 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
Message-ID: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>

I only got into Bitcoin in 2011, after the block size limit was already in place. After going through some more of the early history of Bitcoin to better understand the origins of this, things are starting to come into better perspective.

Initially there was no block size limit - it was thought that the fee market would naturally develop and would impose economic constraints on growth. But this hypothesis failed after a sudden influx of new uses. It was still too easy to attack the network. This idea had to wait until the network was more mature to handle things.

Enter a ?temporary? anti-spam measure - a one megabyte block size limit. Let?s test this out, then increase it once we see how things work. So far so good?

Except?well:

1) We never really got to test things out?a fee market never really got created, we never got to see how fees would really work in practice.

2) Turns out the vast majority of validation nodes have little if anything to do with mining - validators do not get compensated?validation cost is externalized to the entire network.

3) Miners don?t even properly validate blocks. And the bigger the blocks get, the greater the propensity to skip this step. Oops!

4) A satisfactory mechanism for thin clients to be able to securely obtain reasonably secure, short proofs for their transactions never materialized.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/1dfbd49a/attachment.sig>

From jeanpaulkogelman at me.com  Wed Jul 29 00:43:14 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Tue, 28 Jul 2015 17:43:14 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn't	temporary
In-Reply-To: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
Message-ID: <D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>


> Enter a ?temporary? anti-spam measure - a one megabyte block size limit. Let?s test this out, then increase it once we see how things work. So far so good?
> 

The block size limit was put in place as an anti-DoS measure (monster blocks), not "anti-spam". It was never intended to have any economic effect, not on spam and not on any future fee market.


jp


From elombrozo at gmail.com  Wed Jul 29 00:44:20 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 17:44:20 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
Message-ID: <7E427946-E19B-4214-8324-0AB2F78EE7BE@gmail.com>


> On Jul 28, 2015, at 5:43 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com> wrote:
> 
> 
>> Enter a ?temporary? anti-spam measure - a one megabyte block size limit. Let?s test this out, then increase it once we see how things work. So far so good?
>> 
> 
> The block size limit was put in place as an anti-DoS measure (monster blocks), not "anti-spam". It was never intended to have any economic effect, not on spam and not on any future fee market.
> 
> 
> jp
> 

I?m using spam and DoS somewhat synonymously here, although you?re correct - DoS is a more accurate term.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/da5402c9/attachment.sig>

From mark at friedenbach.org  Wed Jul 29 00:46:20 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Tue, 28 Jul 2015 17:46:20 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
Message-ID: <CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>

Does it matter even in the slightest why the block size limit was put in
place? It does not. Bitcoin is a decentralized payment network, and the
relationship between utility (block size) and decentralization is
empirical. Why the 1MB limit was put in place at the time might be a
historically interesting question, but it bears little relevance to the
present engineering issues.

On Tue, Jul 28, 2015 at 5:43 PM, Jean-Paul Kogelman via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> > Enter a ?temporary? anti-spam measure - a one megabyte block size limit.
> Let?s test this out, then increase it once we see how things work. So far
> so good?
> >
>
> The block size limit was put in place as an anti-DoS measure (monster
> blocks), not "anti-spam". It was never intended to have any economic
> effect, not on spam and not on any future fee market.
>
>
> jp
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/106ea598/attachment.html>

From elombrozo at gmail.com  Wed Jul 29 00:55:20 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 17:55:20 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
	<CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
Message-ID: <35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>

I agree that the historical reasons are irrelevant from an engineering perspective. But they still set a context for the discussion?and might help shed some insight into the motivations behind some of the participants. It?s also good to know these things to counter arguments that start with ?But Satoshi said that??

What?s critically important to note is that several of the assumptions that were being made at the time this limit was decided have turned out wrong?and that these other issues should probably be of greater concern and more highly prioritized in any discussion considering the merits of deploying potentially incompatible consensus rule changes. It seems if these other issues were fixed perhaps no block size limit would be required at all (as was originally hoped).

- Eric

> On Jul 28, 2015, at 5:46 PM, Mark Friedenbach <mark at friedenbach.org> wrote:
> 
> Does it matter even in the slightest why the block size limit was put in place? It does not. Bitcoin is a decentralized payment network, and the relationship between utility (block size) and decentralization is empirical. Why the 1MB limit was put in place at the time might be a historically interesting question, but it bears little relevance to the present engineering issues.
> 
> On Tue, Jul 28, 2015 at 5:43 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
> > Enter a ?temporary? anti-spam measure - a one megabyte block size limit. Let?s test this out, then increase it once we see how things work. So far so good?
> >
> 
> The block size limit was put in place as an anti-DoS measure (monster blocks), not "anti-spam". It was never intended to have any economic effect, not on spam and not on any future fee market.
> 
> 
> jp
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/d29e0571/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/d29e0571/attachment.sig>

From elombrozo at gmail.com  Wed Jul 29 02:40:21 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 19:40:21 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
	<CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
	<35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
Message-ID: <4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>

In the interest of promoting some constructive discussion on this, let me start by making a few proposals to correct the listed issues.

Note: many of these ideas are neither my own nor really all that new, but it seems in the past we?ve given up too easily on actually moving forward on them despite their critical importance.


??

1) A fee market never really got created, we don?t really know how transaction fees would  work in practice.

The only way to see how fees would work in practice is to have scarcity. If the network is still not sufficiently mature to be able to handle actual resource limits securely, the safest way to do this is to artificially impose limits. Some economists might bicker about the problems with production quotas and what not?but how else are we to solve the real, non-trivial engineering problems without risking system collapse? The eventual goal would be to remove these artificial limits once we?re confident that the economic incentives are properly aligned to maintain security. We?re still quite far from this goal, though, and it would be irresponsible, IMHO, to insist on letting the system hit its real limits.


2) Turns out the vast majority of validation nodes have little if anything to do with mining - validators do not get compensated?validation cost is externalized to the entire network.
3) Miners don?t even properly validate blocks. And the bigger the blocks get, the greater the propensity to skip this step. Oops!

Issues (2) and (3) are inextricably related so I?ll cover both together.

The obvious problem here is that as long as the cost of checking validators is the same as the cost of validating itself, there?s really little we can do to properly have any sort of division of labor. Requiring, at the very least, random checks might be a start. Perhaps some clever use of SNARKs might eventually be secure and practical.

It might also be possible to directly pay validators for satisfying random checks or providing SNARKs. If only we could trustlessly and securely outsource this work we?d make tremendous progress.

Of all the issues I?ve listed, these are perhaps the ones for which practical solutions seem most tentative at present.


4) A satisfactory mechanism for thin clients to be able to securely obtain reasonably secure, short proofs for their transactions never materialized.

The first part of the solution to this issue is the use of better data structures. Satoshi?s SPV can prove that transactions are included in blocks?and that outputs are spent. But it has no mechanism for proving that a given transaction is *not* included in any block?or that some particular output remains unspent. The structures to which we?re committing extremely inefficient for querying some of the most important things required for validation?i.e. whether an output exists and whether it is spent.

The second part is shifting the responsibility for constructing proofs to the parties who already have the greatest incentives to store the necessary data to construct these proofs to allow efficient prunability. Outsourceability of proofs would also be highly desirable.

??

If we want to be able to raise the block size limit?or perhaps get rid of it altogether, I would suggest we start by addressing these specific issues and work to find practical solutions. Since raising the block size limit is already a hard forking consensus rule change, at least the need for hard forks isn?t what?s stopping us.

- Eric


> On Jul 28, 2015, at 5:55 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I agree that the historical reasons are irrelevant from an engineering perspective. But they still set a context for the discussion?and might help shed some insight into the motivations behind some of the participants. It?s also good to know these things to counter arguments that start with ?But Satoshi said that??
> 
> What?s critically important to note is that several of the assumptions that were being made at the time this limit was decided have turned out wrong?and that these other issues should probably be of greater concern and more highly prioritized in any discussion considering the merits of deploying potentially incompatible consensus rule changes. It seems if these other issues were fixed perhaps no block size limit would be required at all (as was originally hoped).
> 
> - Eric
> 
>> On Jul 28, 2015, at 5:46 PM, Mark Friedenbach <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:
>> 
>> Does it matter even in the slightest why the block size limit was put in place? It does not. Bitcoin is a decentralized payment network, and the relationship between utility (block size) and decentralization is empirical. Why the 1MB limit was put in place at the time might be a historically interesting question, but it bears little relevance to the present engineering issues.
>> 
>> On Tue, Jul 28, 2015 at 5:43 PM, Jean-Paul Kogelman via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>> 
>> > Enter a ?temporary? anti-spam measure - a one megabyte block size limit. Let?s test this out, then increase it once we see how things work. So far so good?
>> >
>> 
>> The block size limit was put in place as an anti-DoS measure (monster blocks), not "anti-spam". It was never intended to have any economic effect, not on spam and not on any future fee market.
>> 
>> 
>> jp
>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/f797244b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/f797244b/attachment-0001.sig>

From elombrozo at gmail.com  Wed Jul 29 03:37:57 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 20:37:57 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
	<CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
	<35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
	<4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
Message-ID: <241A813C-91DC-4A66-AC55-BA8F256E9A9B@gmail.com>


> On Jul 28, 2015, at 7:40 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> Note: many of these ideas are neither my own nor really all that new, but it seems in the past we?ve given up too easily on actually moving forward on them despite their critical importance.

In retrospect I regret not having made this note more emphatic:

GUYS, WE?VE KNOWN ABOUT THESE PROBLEMS AND HAVE TALKED ABOUT THEM FOR YEARS ALREADY?AND IT SEEMS PRACTICALLY NOTHING HAS HAPPENED?WTF?!?!?!?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/e5e99247/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/e5e99247/attachment.sig>

From milly at bitcoins.info  Wed Jul 29 03:46:55 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Tue, 28 Jul 2015 23:46:55 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
 temporary
In-Reply-To: <241A813C-91DC-4A66-AC55-BA8F256E9A9B@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
	<CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
	<35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
	<4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
	<241A813C-91DC-4A66-AC55-BA8F256E9A9B@gmail.com>
Message-ID: <55B84CAF.9020601@bitcoins.info>

> GUYS, WE?VE KNOWN ABOUT THESE PROBLEMS AND HAVE TALKED ABOUT THEM FOR
> YEARS ALREADY?AND IT SEEMS PRACTICALLY NOTHING HAS HAPPENED?

What is the incentive for someone with high level technical skills to 
spend all their time developing and testing code?  Especially since the 
code is generally the boring task of "fixing the plumbing" and won't 
benefit the developer directly ... except they will be blamed if 
something goes wrong.

Russ



From elombrozo at gmail.com  Wed Jul 29 05:17:33 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Tue, 28 Jul 2015 22:17:33 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <55B84CAF.9020601@bitcoins.info>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D2CDA490-F04A-41EA-85F7-56BA5B052729@me.com>
	<CAOG=w-sanb-vOt6YaDJhdT2CCmnqWYTBF204sBZ1=Dsveko7og@mail.gmail.com>
	<35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
	<4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
	<241A813C-91DC-4A66-AC55-BA8F256E9A9B@gmail.com>
	<55B84CAF.9020601@bitcoins.info>
Message-ID: <B397D3EF-0D65-4FEA-93C6-471724966612@gmail.com>


> On Jul 28, 2015, at 8:46 PM, Milly Bitcoin via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>> GUYS, WE?VE KNOWN ABOUT THESE PROBLEMS AND HAVE TALKED ABOUT THEM FOR
>> YEARS ALREADY?AND IT SEEMS PRACTICALLY NOTHING HAS HAPPENED?
> 
> What is the incentive for someone with high level technical skills to spend all their time developing and testing code?  Especially since the code is generally the boring task of "fixing the plumbing" and won't benefit the developer directly ... except they will be blamed if something goes wrong.
> 
> Russ
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

Some of the most highly skilled technical people working on Bitcoin Core have been doing exactly that! The main incentive, of course, is that later on you get to work on something that?s actually pleasant to work on rather than a whole bunch of garbled crap that doesn?t work properly.

However, the great irony is that the devs who have long since recognized the importance of fixing these issues have also tended to be loathe to touching any of the consensus code unless it fixes some critical immediately exploitable security hole?while the devs who most clamor for consensus code changes have tended to all but ignore these issues entirely.

I sometimes wish it were the other way around.

- Eric
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150728/442ee8be/attachment.sig>

From hearn at vinumeris.com  Wed Jul 29 09:59:43 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 29 Jul 2015 11:59:43 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
Message-ID: <CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>

I do love history lessons from people who weren't actually there.

Let me correct your misconceptions.


Initially there was no block size limit - it was thought that the fee
> market would naturally develop and would impose economic constraints on
> growth.


The term "fee market" was never used back then, and Satoshi did not ever
postulate economic constraints on growth. Back then the talk was (quite
sensibly) how to grow faster, not how to slow things down!



> But this hypothesis failed after a sudden influx of new uses. It was still
> too easy to attack the network. This idea had to wait until the network was
> more mature to handle things.
>

No such event happened, and the hypothesis of which you talk never existed.



> Enter a ?temporary? anti-spam measure - a one megabyte block size limit.


The one megabyte limit was nothing to do with anti spam. It was a quick
kludge to try and avoid the user experience degrading significantly in the
event of a "DoS block", back when everyone used Bitcoin-Qt. The fear was
that some malicious miner would generate massive blocks and make the wallet
too painful to use, before there were any alternatives.

The plan was to remove it once SPV wallets were widespread. But Satoshi
left before that happened.


Now on to your claims:

1) We never really got to test things out?a fee market never really got
> created, we never got to see how fees would really work in practice.
>

The limit had nothing to do with fees. Satoshi explicitly wanted free
transactions to last as long as possible.


> 2) Turns out the vast majority of validation nodes have little if anything
> to do with mining - validators do not get compensated?validation cost is
> externalized to the entire network.
>

Satoshi explicitly envisioned a future where only miners ran nodes, so it
had nothing to do with this either.

Validators validate for themselves. Calculating a local UTXO set and then
not using it for anything doesn't help anyone. SPV wallets need filtering
and serving capability, but a computer can filter and serve the chain
without validating it.

The only purposes non-mining, non-rpc-serving, non-Qt-wallet-sustaining
full nodes are needed for with today's network are:

   1. Filtering the chain for bandwidth constrained SPV wallets (nb: you
   can run an SPV wallet that downloads all transactions if you want). But
   this could be handled by specialised nodes, just like we always imagined in
   future not every node will serve the entire chain but only special
   "archival nodes"

   2. Relaying validated transactions so SPV wallets can stick a thumb into
   the wind and heuristically guess whether a transaction is valid or not.
   This is useful for a better user interface.

   3. Storing the mempool and filtering/serving it so SPV wallets can find
   transactions that were broadcast before they started, but not yet included
   in a block. This is useful for a better user interface.

Outside of serving lightweight P2P wallets there's no purpose in running a
P2P node if you aren't mining, or using it as a trusted node for your own
operations.

And if one day there aren't enough network nodes being run by volunteers to
service all the lightweight wallets, then we can easily create an incentive
scheme to fix that.


3) Miners don?t even properly validate blocks. And the bigger the blocks
> get, the greater the propensity to skip this step. Oops!
>

Miners who don't validate have a habit of bleeding money:   that's the
system working as designed.



> 4) A satisfactory mechanism for thin clients to be able to securely obtain
> reasonably secure, short proofs for their transactions never materialized.
>

It did. I designed it. The proofs are short and "reasonably secure" in that
it would be a difficult and expensive attack to mount.

But as is so often the case with Bitcoin Core these days, someone who came
along much later has retroactively decided that the work done so far fails
to meet some arbitrary and undefined level of perfection. "Satisfactory"
and "reasonably secure" don't mean anything, especially not coming from
someone who hasn't done the work, so why should anyone care about that
opinion of yours?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/79c8c15d/attachment-0001.html>

From elombrozo at gmail.com  Wed Jul 29 10:43:50 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 29 Jul 2015 03:43:50 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
Message-ID: <D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>


> On Jul 29, 2015, at 2:59 AM, Mike Hearn <hearn at vinumeris.com> wrote:
> 
> I do love history lessons from people who weren't actually there.
> 
> Let me correct your misconceptions.
> 
> 
> Initially there was no block size limit - it was thought that the fee market would naturally develop and would impose economic constraints on growth.
> 
> The term "fee market" was never used back then, and Satoshi did not ever postulate economic constraints on growth. Back then the talk was (quite sensibly) how to grow faster, not how to slow things down!

Irrelevant what term was used - and as brilliant as Satoshi might have been at some things, he obviously got this one wrong.
> 


> But this hypothesis failed after a sudden influx of new uses. It was still too easy to attack the network. This idea had to wait until the network was more mature to handle things.
> 
> No such event happened, and the hypothesis of which you talk never existed.
> 

Nobody threatened to start mining huge blocks given how relatively inexpensive it was to mine back then?

> 
> Enter a ?temporary? anti-spam measure - a one megabyte block size limit.
> 
> The one megabyte limit was nothing to do with anti spam. It was a quick kludge to try and avoid the user experience degrading significantly in the event of a "DoS block", back when everyone used Bitcoin-Qt. The fear was that some malicious miner would generate massive blocks and make the wallet too painful to use, before there were any alternatives.

I thought I clarified this in an earlier post - I meant DoS. Please don?t digress on such stupid technicalities.


> The plan was to remove it once SPV wallets were widespread. But Satoshi left before that happened.
> 

Guess what? SPV wallets are still not particularly widespread?and those that are out there are notoriously terrible at detecting network forks and making sure they are on the right one.

> 
> Now on to your claims:
> 
> 1) We never really got to test things out?a fee market never really got created, we never got to see how fees would really work in practice.
> 
> The limit had nothing to do with fees. Satoshi explicitly wanted free transactions to last as long as possible.

Something has to limit block sizes in practice. Perhaps Satoshi was not constrained by finite computational resources, but the rest of us sure are. The fact that without imposing a hardcoded limit Satoshi couldn?t figure out a way to keep the DoS-block guys away suggests he didn?t have this fully worked out.

I understand that initially it was desirable that transactions be free?but surely even Satoshi understood this couldn?t be perpetually self-sustaining?and that the ability to bid for inclusion in blocks would eventually become a crucial component of the network. Or were fees just added for decoration?

We?re already more than six years into this. When were these mechanisms going to be developed and tested? After 10 years? 20? Perhaps after 1024 years?(https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki <https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki>)

> 
> 2) Turns out the vast majority of validation nodes have little if anything to do with mining - validators do not get compensated?validation cost is externalized to the entire network.
> 
> Satoshi explicitly envisioned a future where only miners ran nodes, so it had nothing to do with this either.

And Satoshi was dead wrong. As others have pointed out in this thread, while this is certainly of historical interest, it is irrelevant from an engineering perspective.


> Validators validate for themselves. Calculating a local UTXO set and then not using it for anything doesn't help anyone. SPV wallets need filtering and serving capability, but a computer can filter and serve the chain without validating it.

Right. Turns out the ledger structure is terrible for constructing the kinds of proofs that are most important to validators - i.e. whether an output exists, what its script and amounts are, whether it?s been spent, etc?

Despite Satoshi?s brilliance, software architecture was obviously not his strongest suit. But it didn?t really matter at the beginning since this was really an experiment?and he succeeded in making his point.

> The only purposes non-mining, non-rpc-serving, non-Qt-wallet-sustaining full nodes are needed for with today's network are:
> Filtering the chain for bandwidth constrained SPV wallets (nb: you can run an SPV wallet that downloads all transactions if you want). But this could be handled by specialised nodes, just like we always imagined in future not every node will serve the entire chain but only special "archival nodes"
> 
> Relaying validated transactions so SPV wallets can stick a thumb into the wind and heuristically guess whether a transaction is valid or not. This is useful for a better user interface.
> 
> Storing the mempool and filtering/serving it so SPV wallets can find transactions that were broadcast before they started, but not yet included in a block. This is useful for a better user interface.
> Outside of serving lightweight P2P wallets there's no purpose in running a P2P node if you aren't mining, or using it as a trusted node for your own operations.
> 
> And if one day there aren't enough network nodes being run by volunteers to service all the lightweight wallets, then we can easily create an incentive scheme to fix that.

Yes, let?s wait until things are about to break before even beginning to address the issue?because we can ?easily create? anything we haven?t invented yet at the last minute.

> 
> 
> 3) Miners don?t even properly validate blocks. And the bigger the blocks get, the greater the propensity to skip this step. Oops!
> 
> Miners who don't validate have a habit of bleeding money:   that's the system working as designed.
> 

Erm?most miners just trust mining pool operators to validate blocks for them?and some of the biggest pools have been blatantly cutting corners. Yes, a few pools might have temporarily bled a little?but properly validating is probably not the equilibrium strategy?and as time goes on, they are likely to start cutting corners again. Whether they ultimately bleed money isn?t really the point - many believe that cutting corners is actually a rational strategy. If you want to discuss the game theory behind this, fine?but the fact some of the biggest mining pool operators are on record saying they are likely to continue doing this is enough to seriously put to question one of the most fundamental assumptions behind the network security model.

> 
> 4) A satisfactory mechanism for thin clients to be able to securely obtain reasonably secure, short proofs for their transactions never materialized.
> 
> It did. I designed it. The proofs are short and "reasonably secure" in that it would be a difficult and expensive attack to mount.

You have my respect for BIP37, Mike. I know you can do amazing work. You actually made SPV semi-useful despite inheriting such crappy data structures. This is indeed to be respected.

> 
> But as is so often the case with Bitcoin Core these days, someone who came along much later has retroactively decided that the work done so far fails to meet some arbitrary and undefined level of perfection. "Satisfactory" and "reasonably secure" don't mean anything, especially not coming from someone who hasn't done the work, so why should anyone care about that opinion of yours?

Not done the work?

I?m one of the very few developers in this space that has actually tried *hard* to make your BIP37 work. Amongst the desktop wallets listed on bitcoin.org <http://bitcoin.org/>, there are only two that have always supported SPV (or at least I think MultiBit has always supported it, perhaps I?m wrong). One is MultiBit, the other one is mine. I give you credit for your work?perhaps you could be generous enough to extend me some credit too?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/215362e9/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/215362e9/attachment.sig>

From hearn at vinumeris.com  Wed Jul 29 11:15:49 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 29 Jul 2015 13:15:49 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
Message-ID: <CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>

>
> Irrelevant what term was used - and as brilliant as Satoshi might have
> been at some things, he obviously got this one wrong.
>

I don't think it's obvious. You may disagree, but don't pretend any of this
stuff is obvious.

Consider this:  the highest Bitcoin tx fees can possibly go is perhaps a
little higher than what our competition charges. Too much higher than that,
and people will just say, you know what .... I'll make a bank transfer.
It's cheaper and not much slower, sometimes no slower at all.

And now consider that in many parts of the world bank transfers are free.

They aren't actually free, of course, but they *appear* to be free because
the infrastructure for doing them is cross subsidised by the fees on other
products and services, or hidden in the prices of goods sold.

So that's a market reality Bitcoin has to handle. It's already more
expensive than the competition sometimes, but luckily not much more, and
anyway Bitcoin has some features those other systems lack (and vice versa).
So it can still be competitive.

But your extremely vague notion of a "fee market" neglects to consider that
it already exists, and it's not a market of "Bitcoin users buying space in
Bitcoin blocks". It's "users paying to move money".

You can argue with this sort of economic logic if you like, but don't claim
this stuff is obvious.

Nobody threatened to start mining huge blocks given how relatively
> inexpensive it was to mine back then?
>

Not that I recall. It wasn't a response to any actual event, I think, but
rather a growing realisation that the code was full of DoS attacks.



> Guess what? SPV wallets are still not particularly widespread?and those
> that are out there are notoriously terrible at detecting network forks and
> making sure they are on the right one.
>

The most popular mobile wallet (measured by installs) on Android is SPV. It
has between 500,000 and 1 million installs, whilst Coinbase has not yet
crossed the 500,000 mark. One of the most popular wallets on iOS is SPV. If
we had SPV wallets with better user interfaces on desktops, they'd be more
popular there too (perhaps MultiBit HD can recapture some lost ground).

So I would argue that they are in fact very widespread.

Likewise, they are not "notoriously terrible" at detecting chain forks.
That's a spurious idea that you and Patrick have been pushing lately, but
they detect them and follow reorgs across them according to the SPV
algorithm, which is based on most work done. This is exactly what they are
designed to do.

Contrast this with other lightweight wallets which either don't examine the
block chain or implement the algorithm incorrectly, and I fail to see how
this can be described as "notoriously terrible".



> I understand that initially it was desirable that transactions be free?but
> surely even Satoshi understood this couldn?t be perpetually
> self-sustaining?and that the ability to bid for inclusion in blocks would
> eventually become a crucial component of the network. Or were fees just
> added for decoration?
>

Fees were added as a way to get money to miners in a fair and decentralised
way.

Attaching fees directly to all transactions is certainly one way to use
that, but it's not the only way. As noted above, our competitors prefer a
combination of price-hiding and cross subsidisation. Both of these can be
implemented with tx fees, but not necessarily by trying to artificially
limit supply, which is economically nonsensical.



> We?re already more than six years into this. When were these mechanisms
> going to be developed and tested? After 10 years? 20? Perhaps after 1024
> years?(https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki)
>

Maybe when there is a need? I already discussed this topic of need here:

https://medium.com/@octskyward/hashing-7d04a887acc8

Right. Turns out the ledger structure is terrible for constructing the
> kinds of proofs that are most important to validators - i.e. whether an
> output exists, what its script and amounts are, whether it?s been spent,
> etc?
>

Validators don't require proofs. That's why they are validators.

I think you're trying to say the block chain doesn't provide the kinds of
proofs that are most important to lightweight wallets. But I would
disagree. Even with UTXO commitments, there can still be double spends out
there in the networks memory pools you are unaware of. Merely being
presented with a correctly signed transaction doesn't tell you a whole lot
..... if you wait for a block, you get the same level of proof regardless
of whether there are UTXO commitments or not. If you don't then you still
have to have some trust in your peers that you are seeing an accurate and
full view of network traffic.

So whilst there are ways to make the protocol incrementally better, when
you work through the use cases for these sorts of data structures and ask
"how will this impact the user experience", the primary candidates so far
don't seem to make much difference.

Remote attestation from secure hardware would make a big difference though.
Then you could get rid of the waiting times entirely because you know the
sending wallet won't double spend.


Yes, let?s wait until things are about to break before even beginning to
> address the issue?because we can ?easily create? anything we haven?t
> invented yet at the last minute.
>

bitcoinj already has a micropayment channel implementation in it. There's a
bit of work required to glue everything together, but it's not a massive
project to start using this to pay nodes for their services.

But it's not needed right now:  serving these clients is so darn cheap. And
there is plenty of room for optimising things still further!



> I?m one of the very few developers in this space that has actually tried
> *hard* to make your BIP37 work. Amongst the desktop wallets listed on
> bitcoin.org, there are only two that have always supported SPV (or at
> least I think MultiBit has always supported it, perhaps I?m wrong). One is
> MultiBit, the other one is mine. I give you credit for your work?perhaps
> you could be generous enough to extend me some credit too?
>

MultiBit has always supported it. I apologise for implying you have not
built a wallet. I think yours is mSIGNA, right? Did it used to be called
something else? I recognise the website design but must admit, I have not
heard of mSIGNA before.

Regardless, as a fellow implementor, I would appreciate it more if you
designed and implemented upgrades, rather than just trashing the work done
so far as "notoriously terrible", Satoshi as "not a systems architect" and
so on.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/29ef9231/attachment-0001.html>

From thomas at thomaszander.se  Wed Jul 29 11:18:59 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Wed, 29 Jul 2015 13:18:59 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<35B780B8-7282-4C98-9A0D-C7774028E277@gmail.com>
	<4F7FB1A0-E201-40F2-80BA-4C8D6ECC4DC4@gmail.com>
Message-ID: <3320169.dB2Z2CsUel@coldstorage>

On Tuesday 28. July 2015 19.40.21 Eric Lombrozo via bitcoin-dev wrote:
> 1) A fee market never really got created, we don?t really know how
> transaction fees would  work in practice.
> 
> The only way to see how fees would work in practice is to have scarcity.

This skips over the question why you need a fees market. There really is no 
reason that for the next 10 to 20 years there is a need for a fees market to 
incentive miners to mine.  Planning that far ahead is doomed to failure.

-- 
Thomas Zander

From thomas at thomaszander.se  Wed Jul 29 11:29:30 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Wed, 29 Jul 2015 13:29:30 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
Message-ID: <10819720.abeZStHP4e@coldstorage>

On Wednesday 29. July 2015 03.43.50 Eric Lombrozo via bitcoin-dev wrote:
> > > Enter a ?temporary? anti-spam measure - a one megabyte block size limit.

> > The one megabyte limit was nothing to do with anti spam. It was a quick
> > kludge to try and avoid the user experience degrading significantly in
> > the event of a "DoS block", back when everyone used Bitcoin-Qt. The fear
> > was that some malicious miner would generate massive blocks and make the
> > wallet too painful to use, before there were any alternatives.

> I thought I clarified this in an earlier post - I meant DoS. Please don?t
> digress on such stupid technicalities.

This particular technicality is rather important since it removes the basis of 
your argument.
More specifically, your 4 points of what you claim Satoshi expected to happen, 
but didn't were in actual fact not planned, wanted or predicted by Satoshi.

So, you can do name calling if you want, but maybe thats not very productive.

> > The plan was to remove it once SPV wallets were widespread. But Satoshi
> > left before that happened.
> > 
> 
> Guess what? SPV wallets are still not particularly widespread?

This is an odd statement, we keep on hearing about low bitcoin-core node count 
and since that is the only alternative, your statement can only be interpreted 
as saying there really are not a whole lot of users out there..
Is that really what you mean?

> and those that
> are out there are notoriously terrible at detecting network forks and
> making sure they are on the right one.

What is the point you are trying to make with that?  It seems completely 
irrelevant to the point of this thread...
-- 
Thomas Zander

From elombrozo at gmail.com  Wed Jul 29 12:03:45 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Wed, 29 Jul 2015 05:03:45 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
Message-ID: <59FC8BA8-C61F-4340-887F-CE2DD57ADD49@gmail.com>


> On Jul 29, 2015, at 4:15 AM, Mike Hearn <hearn at vinumeris.com> wrote:
> 
> Irrelevant what term was used - and as brilliant as Satoshi might have been at some things, he obviously got this one wrong.
> 
> I don't think it's obvious. You may disagree, but don't pretend any of this stuff is obvious.
> 
> Consider this:  the highest Bitcoin tx fees can possibly go is perhaps a little higher than what our competition charges. Too much higher than that, and people will just say, you know what .... I'll make a bank transfer. It's cheaper and not much slower, sometimes no slower at all.
> 
> And now consider that in many parts of the world bank transfers are free.
> 
> They aren't actually free, of course, but they appear to be free because the infrastructure for doing them is cross subsidised by the fees on other products and services, or hidden in the prices of goods sold.
> 
> So that's a market reality Bitcoin has to handle. It's already more expensive than the competition sometimes, but luckily not much more, and anyway Bitcoin has some features those other systems lack (and vice versa). So it can still be competitive.
> 
> But your extremely vague notion of a "fee market" neglects to consider that it already exists, and it's not a market of "Bitcoin users buying space in Bitcoin blocks". It's "users paying to move money".
> 
> You can argue with this sort of economic logic if you like, but don't claim this stuff is obvious.

100% granted - it was not obvious?and we speak today with the benefit of hindsight.

I?ll clarify my argument, for the sake of anyone who thinks I?m looking to play word games rather than trying to figure out a good way forward.

Point is?processing blocks requires computational resources that someone needs to put up. Unless the people who are putting up these resources are properly incentivized to continue doing it, the network will fail.

Unfortunately, it was unforeseen that most nodes on the network would turn out to not be miners?and that most miners wouldn?t even run full nodes. Yes, I speak with the benefit of hindsight, had I been discussing this in 2008 I very well could have made the same mistake or worse. But it isn?t 2008, it?s 2015?and we?ve learned a thing or two since.

Given that things are what they are, it is clear that larger blocks externalize costs onto the rest of the network.

Waiting until we can no longer count on the altruistic goodwill of volunteers because they suddenly decide that they have better uses for their computers is probably not such a wonderful idea. But even worse is further burdening the network with externalized costs before we?ve solved these important issues?especially given the evidence that larger blocks tend to lead to network forks. No, I?m not talking about regular run-of-the-mill reorgs?I?m talking consensus forks - a network partition that cannot be reconciled without manual intervention, so please don?t distract the issue. Yes, each incident occurred for a very different reason?but you?d have to be blind to miss the correlation between bigger blocks and the propensity for forks.

What Satoshi might have thought in 2008-2009 is fascinating from a historical perspective, but his early pioneering insights don?t appear to be of much help in addressing these particular issues.

> Nobody threatened to start mining huge blocks given how relatively inexpensive it was to mine back then?
> 
> Not that I recall. It wasn't a response to any actual event, I think, but rather a growing realisation that the code was full of DoS attacks.
> 
> 
> Guess what? SPV wallets are still not particularly widespread?and those that are out there are notoriously terrible at detecting network forks and making sure they are on the right one.
> 
> The most popular mobile wallet (measured by installs) on Android is SPV. It has between 500,000 and 1 million installs, whilst Coinbase has not yet crossed the 500,000 mark. One of the most popular wallets on iOS is SPV. If we had SPV wallets with better user interfaces on desktops, they'd be more popular there too (perhaps MultiBit HD can recapture some lost ground).
> 
> So I would argue that they are in fact very widespread.
> 
> Likewise, they are not "notoriously terrible" at detecting chain forks. That's a spurious idea that you and Patrick have been pushing lately, but they detect them and follow reorgs across them according to the SPV algorithm, which is based on most work done. This is exactly what they are designed to do.
> 
> Contrast this with other lightweight wallets which either don't examine the block chain or implement the algorithm incorrectly, and I fail to see how this can be described as "notoriously terrible".
> 
> 
> I understand that initially it was desirable that transactions be free?but surely even Satoshi understood this couldn?t be perpetually self-sustaining?and that the ability to bid for inclusion in blocks would eventually become a crucial component of the network. Or were fees just added for decoration?
> 
> Fees were added as a way to get money to miners in a fair and decentralised way.
> 
> Attaching fees directly to all transactions is certainly one way to use that, but it's not the only way. As noted above, our competitors prefer a combination of price-hiding and cross subsidisation. Both of these can be implemented with tx fees, but not necessarily by trying to artificially limit supply, which is economically nonsensical.
> 
> 
> We?re already more than six years into this. When were these mechanisms going to be developed and tested? After 10 years? 20? Perhaps after 1024 years?(https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki <https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki>)
> 
> Maybe when there is a need? I already discussed this topic of need here:
> 
> https://medium.com/@octskyward/hashing-7d04a887acc8 <https://medium.com/@octskyward/hashing-7d04a887acc8>
> 
> Right. Turns out the ledger structure is terrible for constructing the kinds of proofs that are most important to validators - i.e. whether an output exists, what its script and amounts are, whether it?s been spent, etc?
> 
> Validators don't require proofs. That's why they are validators.
> 
> I think you're trying to say the block chain doesn't provide the kinds of proofs that are most important to lightweight wallets. But I would disagree. Even with UTXO commitments, there can still be double spends out there in the networks memory pools you are unaware of. Merely being presented with a correctly signed transaction doesn't tell you a whole lot ..... if you wait for a block, you get the same level of proof regardless of whether there are UTXO commitments or not. If you don't then you still have to have some trust in your peers that you are seeing an accurate and full view of network traffic.
> 
> So whilst there are ways to make the protocol incrementally better, when you work through the use cases for these sorts of data structures and ask "how will this impact the user experience", the primary candidates so far don't seem to make much difference.
> 
> Remote attestation from secure hardware would make a big difference though. Then you could get rid of the waiting times entirely because you know the sending wallet won't double spend.
> 
> 
> Yes, let?s wait until things are about to break before even beginning to address the issue?because we can ?easily create? anything we haven?t invented yet at the last minute.
> 
> bitcoinj already has a micropayment channel implementation in it. There's a bit of work required to glue everything together, but it's not a massive project to start using this to pay nodes for their services.
> 
> But it's not needed right now:  serving these clients is so darn cheap. And there is plenty of room for optimising things still further!
> 
> 
> I?m one of the very few developers in this space that has actually tried *hard* to make your BIP37 work. Amongst the desktop wallets listed on bitcoin.org <http://bitcoin.org/>, there are only two that have always supported SPV (or at least I think MultiBit has always supported it, perhaps I?m wrong). One is MultiBit, the other one is mine. I give you credit for your work?perhaps you could be generous enough to extend me some credit too?
> 
> MultiBit has always supported it. I apologise for implying you have not built a wallet. I think yours is mSIGNA, right? Did it used to be called something else? I recognise the website design but must admit, I have not heard of mSIGNA before.
> 
> Regardless, as a fellow implementor, I would appreciate it more if you designed and implemented upgrades, rather than just trashing the work done so far as "notoriously terrible", Satoshi as "not a systems architect" and so on.
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/8e1ccf9c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/8e1ccf9c/attachment.sig>

From thomas at thomaszander.se  Wed Jul 29 12:13:04 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Wed, 29 Jul 2015 14:13:04 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <59FC8BA8-C61F-4340-887F-CE2DD57ADD49@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<59FC8BA8-C61F-4340-887F-CE2DD57ADD49@gmail.com>
Message-ID: <2621275.dzKadq7CQh@coldstorage>

On Wednesday 29. July 2015 05.03.45 Eric Lombrozo via bitcoin-dev wrote:
> Point is?processing blocks requires computational resources that someone
> needs to put up. Unless the people who are putting up these resources are
> properly incentivized to continue doing it, the network will fail.

This assumption is proven wrong by history.
Take a look at the RC5 challance, and its related cousins like the folding-at-
home or seti-at-home.

Next to that, there is incentive for running a node. It is that you don't have 
to trust someone else. This incentive has in business always been a very 
strong motivator. See how many companies run Outlook on their own intranet 
instead of using Outlook.com or similarly in the cloud. 

In my own opinion, its waaay to early to call failure on running nodes. Maybe 
you want to actually help merchants/chains/individuals run them by making 
bitcoin-core more useful for them.

What is the reason people don't run it? Well, reddit says its because of the 
upstream bandwidth not being able to be throttled. What about you try working 
on that instead of giving up on it?
-- 
Thomas Zander

From valizero at yahoo.ro  Wed Jul 29 13:27:06 2015
From: valizero at yahoo.ro (Vali Zero)
Date: Wed, 29 Jul 2015 13:27:06 +0000 (UTC)
Subject: [bitcoin-dev] Personal opinion on the fee market from a worried
	local trader
Message-ID: <1919500925.4932916.1438176426240.JavaMail.yahoo@mail.yahoo.com>

Hello,

I have been reading an argument saying that paying higher fees would scare Bitcoin users and they would stop using it, preferring bank transfers or other payment methods. This does not make sense for me. If some users leave, then demand for bitcoin transactions goes down and so do the fees. The others remain.

Fee market means that an equilibrium is found between the demand for bitcoin transactions and the available supply (given by the block size). The fee is the price that finds this equilibrium.

If a fee market starts to exist, the first ones to leave are the spammers, probably followed by the gamblers and perhaps people transacting very low amounts. The people that actually need Bitcoin would remain.

Please allow this fee market to form...

In the absence of a functioning fee market, I will refuse to run Bitcoin code that increases the block size and will do my best to tell everyone I know not to upgrade towards running such code. If Bitcoin succombs to the free stuff army, I will sell all the coins and leave. Nothing is for free.

I apologize for any exagerations, but I just felt strongly towards expressing my opinion here. I'm only a local Bitcoin trader, computer engineer, with a reasonable understanding of free markets. And I'm running only one full node.

Kind regards,
Valentin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/6e1cf551/attachment.html>

From hearn at vinumeris.com  Wed Jul 29 13:41:07 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 29 Jul 2015 15:41:07 +0200
Subject: [bitcoin-dev] Disclosure: consensus bug indirectly solved by
	BIP66
In-Reply-To: <55B79146.70309@gmail.com>
References: <55B78F56.3080802@gmail.com>
	<55B79146.70309@gmail.com>
Message-ID: <CA+w+GKSNw90FHRKQYvNVNQ=qdCgUL_vAyR8uZ8CJBN3t_A6Zsw@mail.gmail.com>

>
> This solved the vulnerability, and opens the door to using non-OpenSSL
> signature verification in the near future.


Great work!

It also means the remaining usages of OpenSSL can be safely replaced with
something like LibreSSL or (perhaps better) BoringSSL.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/79e82a36/attachment.html>

From adam at cypherspace.org  Wed Jul 29 13:46:46 2015
From: adam at cypherspace.org (Adam Back)
Date: Wed, 29 Jul 2015 06:46:46 -0700
Subject: [bitcoin-dev] Disclosure: consensus bug indirectly solved by
	BIP66
In-Reply-To: <CA+w+GKSNw90FHRKQYvNVNQ=qdCgUL_vAyR8uZ8CJBN3t_A6Zsw@mail.gmail.com>
References: <55B78F56.3080802@gmail.com> <55B79146.70309@gmail.com>
	<CA+w+GKSNw90FHRKQYvNVNQ=qdCgUL_vAyR8uZ8CJBN3t_A6Zsw@mail.gmail.com>
Message-ID: <CALqxMTHG3aN3gxMBVoviktc0NeO3P6aqzO6vjKZ97Yp+7dQDOw@mail.gmail.com>

I believe the idea is to replace openSSL with
https://github.com/bitcoin/secp256k1 that Pieter and Greg spent quite
some time rigorously testing and have at this point better confidence
in than *SSL libraries.

I think the lessons learned from it as concluded by Pieter and Greg
are that openSSL and derivatives are not focussed on consensus
consistency, such that even if actively maintained and security
reviewed, their own bug fixes can break bitcoin.

Adam

On 29 July 2015 at 06:41, Mike Hearn via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>> This solved the vulnerability, and opens the door to using non-OpenSSL
>> signature verification in the near future.
>
>
> Great work!
>
> It also means the remaining usages of OpenSSL can be safely replaced with
> something like LibreSSL or (perhaps better) BoringSSL.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From hearn at vinumeris.com  Wed Jul 29 13:48:16 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 29 Jul 2015 15:48:16 +0200
Subject: [bitcoin-dev] Disclosure: consensus bug indirectly solved by
	BIP66
In-Reply-To: <CALqxMTHG3aN3gxMBVoviktc0NeO3P6aqzO6vjKZ97Yp+7dQDOw@mail.gmail.com>
References: <55B78F56.3080802@gmail.com> <55B79146.70309@gmail.com>
	<CA+w+GKSNw90FHRKQYvNVNQ=qdCgUL_vAyR8uZ8CJBN3t_A6Zsw@mail.gmail.com>
	<CALqxMTHG3aN3gxMBVoviktc0NeO3P6aqzO6vjKZ97Yp+7dQDOw@mail.gmail.com>
Message-ID: <CA+w+GKQ6hXPjSTLqkOUrtwaXNwhwpY_Lr66ijVWDxoSPL-QO1w@mail.gmail.com>

>
> I believe the idea is to replace openSSL with
> https://github.com/bitcoin/secp256k1


Yes, I know. I said "other uses". For example RPC SSL and BIP 70.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/8c540bf1/attachment.html>

From valizero at yahoo.ro  Wed Jul 29 14:09:22 2015
From: valizero at yahoo.ro (Vali Zero)
Date: Wed, 29 Jul 2015 14:09:22 +0000 (UTC)
Subject: [bitcoin-dev] =?utf-8?q?R=C4=83spuns=3A__Personal_opinion_on_the_?=
 =?utf-8?q?fee_market_from_a_worried_local_trader?=
In-Reply-To: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
Message-ID: <543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>

 I am disappointed that you did not understand my point of view. Let me rephrase it for you,
People tipping, buying 0.99$ products and gamblers that need Bitcoin transactions *more* than the rest of the people will afford the fees that establish the equilibrium between demand and supply of Bitcoin transactions. The people are free to use they money for whatever they like, but you should understand that Bitcoin transactions are not free.
I was merely attempting to point out that spammers and gamblers would be the first ones that would go away. They would be free to spam or gamble, but they would have to pay for it.
When a category of users would get priced out because of the fee market, they would be free to use any altcoin they want.

Please understand that not everyone will leave. The more important players will remain, those that need it the most. The other players are free to use whatever altcoin they wish.

     ?n Miercuri, 29 Iulie 2015 16:47:57, Angel Leon <gubatron at gmail.com> a scris:
   

 "the gamblers and perhaps people transacting very low amounts.?The people that actually need Bitcoin would remain."

so people tipping, buying $0.99 products, and gamblers actually don't need Bitcoin.
Who are you to say what people need to use money for?This statement goes against the freedom of decentralization and financial freedom Bitcoin should be able to provide.
It's an open network and it will be used as most users see fit, and that requires a blocksize increase wether you like it or not, it's simple physics, other time wait times will become unbearable for those not willing to pay the high fees, if people leave, then it only mean bitcoins isn't useful, and if bitcoin isn't useful, it's worthless.



http://twitter.com/gubatron

On Wed, Jul 29, 2015 at 9:27 AM, Vali Zero via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

Hello,

I have been reading an argument saying that paying higher fees would scare Bitcoin users and they would stop using it, preferring bank transfers or other payment methods. This does not make sense for me. If some users leave, then demand for bitcoin transactions goes down and so do the fees. The others remain.

Fee market means that an equilibrium is found between the demand for bitcoin transactions and the available supply (given by the block size). The fee is the price that finds this equilibrium.

If a fee market starts to exist, the first ones to leave are the spammers, probably followed by the gamblers and perhaps people transacting very low amounts. The people that actually need Bitcoin would remain.

Please allow this fee market to form...

In the absence of a functioning fee market, I will refuse to run Bitcoin code that increases the block size and will do my best to tell everyone I know not to upgrade towards running such code. If Bitcoin succombs to the free stuff army, I will sell all the coins and leave. Nothing is for free.

I apologize for any exagerations, but I just felt strongly towards expressing my opinion here. I'm only a local Bitcoin trader, computer engineer, with a reasonable understanding of free markets. And I'm running only one full node.

Kind regards,
Valentin


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev





  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/680200ad/attachment-0001.html>

From gmaxwell at gmail.com  Wed Jul 29 16:53:54 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 29 Jul 2015 16:53:54 +0000
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
Message-ID: <CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>

On Wed, Jul 29, 2015 at 9:59 AM, Mike Hearn via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I do love history lessons from people who weren't actually there.

I doubt the rest of us really enjoy hearing these "lessons" from from
you where you wildly distort history to reflect your views.

> Satoshi explicitly envisioned a future where only miners ran nodes, so it
> had nothing to do with this either.

As others have pointed out-- even if this were true, --- so what?
Many errors were made early on in Bitcoin.

But in this case it's not actually true and I'm really getting fed up
with this continued self-appointment of all that the creator of the
system thought. Your position and knoweldge is not special or
priveleged compared to many of the people that you are arguing with.

It was _well_ understood while the creator of the system was around
that putting every consensus decision into the world into one system
would not scale; and also understood that the users of Bitcoin would
wish to protect its decenteralization by limiting the size of the
chain to keep it verifyable on small devices.

Don't think you can claim otherwise, because doing so is flat out wrong.

In the above statement you're outright backwards-- there was a clear
expectation that all who ran nodes would mine. The delegation of
consensus to third parties was unforseen. Presumably Bitcoin core
making mining inaccessable to users in software was also unforseen.

> Validators validate for themselves. Calculating a local UTXO set and then
> not using it for anything doesn't help anyone. SPV wallets need filtering
> and serving capability, but a computer can filter and serve the chain
> without validating it.
>
> The only purposes non-mining, non-rpc-serving, non-Qt-wallet-sustaining full
> nodes are needed for with today's network are:
[...]
> Outside of serving lightweight P2P wallets there's no purpose in running a
> P2P node if you aren't mining, or using it as a **trusted node for your own
> operations**.

You wrote a long list of activities that are actually irrelevant to
many node users with the result of burrying the main reason any party
should be running a node (emphasis mine).

The incentives of the system demand as it exist today that many other
economically significant parties run nodes in order to keep the half
dozen miners from having a blank check to do whatever they want
(including supporting their operations through inflation)-- do not
think they wouldn't, as we've seen their happy to skip verification
entirely.

(Which, incidentially, is insanely toxic to any security argument for
SPV; ---- and now we see the market failure that results from your and
Gavin years long campaign to ignore problems in the mining ecosystem:
The SPV model which you've fixated on as the true nature of bitcoin
has been demonstrated in practice to have a potentially empty security
claim.)

> Miners who don't validate have a habit of bleeding money:   that's the
> system working as designed.

The information I have currently is that the parties engaging in that
activity found it to be tremendously profitable, even including losses
from issues.

From raystonn at hotmail.com  Wed Jul 29 17:17:31 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Jul 2015 10:17:31 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
Message-ID: <COL131-DS18A37AF6651D961B49AFFFCD8C0@phx.gbl>

Eric, any plans to correct your article at https://bitcoinmagazine.com/21377/settling-block-size-debate/?


From: Mike Hearn via bitcoin-dev 
Sent: Wednesday, July 29, 2015 4:15 AM
To: Eric Lombrozo 
Cc: Bitcoin Dev 
Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn'ttemporary

  Irrelevant what term was used - and as brilliant as Satoshi might have been at some things, he obviously got this one wrong.

I don't think it's obvious. You may disagree, but don't pretend any of this stuff is obvious.

Consider this:  the highest Bitcoin tx fees can possibly go is perhaps a little higher than what our competition charges. Too much higher than that, and people will just say, you know what .... I'll make a bank transfer. It's cheaper and not much slower, sometimes no slower at all.

And now consider that in many parts of the world bank transfers are free.

They aren't actually free, of course, but they appear to be free because the infrastructure for doing them is cross subsidised by the fees on other products and services, or hidden in the prices of goods sold.

So that's a market reality Bitcoin has to handle. It's already more expensive than the competition sometimes, but luckily not much more, and anyway Bitcoin has some features those other systems lack (and vice versa). So it can still be competitive. 

But your extremely vague notion of a "fee market" neglects to consider that it already exists, and it's not a market of "Bitcoin users buying space in Bitcoin blocks". It's "users paying to move money".

You can argue with this sort of economic logic if you like, but don't claim this stuff is obvious.

  Nobody threatened to start mining huge blocks given how relatively inexpensive it was to mine back then?


Not that I recall. It wasn't a response to any actual event, I think, but rather a growing realisation that the code was full of DoS attacks.


  Guess what? SPV wallets are still not particularly widespread?and those that are out there are notoriously terrible at detecting network forks and making sure they are on the right one.

The most popular mobile wallet (measured by installs) on Android is SPV. It has between 500,000 and 1 million installs, whilst Coinbase has not yet crossed the 500,000 mark. One of the most popular wallets on iOS is SPV. If we had SPV wallets with better user interfaces on desktops, they'd be more popular there too (perhaps MultiBit HD can recapture some lost ground).

So I would argue that they are in fact very widespread.

Likewise, they are not "notoriously terrible" at detecting chain forks. That's a spurious idea that you and Patrick have been pushing lately, but they detect them and follow reorgs across them according to the SPV algorithm, which is based on most work done. This is exactly what they are designed to do. 

Contrast this with other lightweight wallets which either don't examine the block chain or implement the algorithm incorrectly, and I fail to see how this can be described as "notoriously terrible".


 
  I understand that initially it was desirable that transactions be free?but surely even Satoshi understood this couldn?t be perpetually self-sustaining?and that the ability to bid for inclusion in blocks would eventually become a crucial component of the network. Or were fees just added for decoration?


Fees were added as a way to get money to miners in a fair and decentralised way.

Attaching fees directly to all transactions is certainly one way to use that, but it's not the only way. As noted above, our competitors prefer a combination of price-hiding and cross subsidisation. Both of these can be implemented with tx fees, but not necessarily by trying to artificially limit supply, which is economically nonsensical.


  We?re already more than six years into this. When were these mechanisms going to be developed and tested? After 10 years? 20? Perhaps after 1024 years?(https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki)


Maybe when there is a need? I already discussed this topic of need here:

https://medium.com/@octskyward/hashing-7d04a887acc8


  Right. Turns out the ledger structure is terrible for constructing the kinds of proofs that are most important to validators - i.e. whether an output exists, what its script and amounts are, whether it?s been spent, etc?


Validators don't require proofs. That's why they are validators.

I think you're trying to say the block chain doesn't provide the kinds of proofs that are most important to lightweight wallets. But I would disagree. Even with UTXO commitments, there can still be double spends out there in the networks memory pools you are unaware of. Merely being presented with a correctly signed transaction doesn't tell you a whole lot ..... if you wait for a block, you get the same level of proof regardless of whether there are UTXO commitments or not. If you don't then you still have to have some trust in your peers that you are seeing an accurate and full view of network traffic.

So whilst there are ways to make the protocol incrementally better, when you work through the use cases for these sorts of data structures and ask "how will this impact the user experience", the primary candidates so far don't seem to make much difference.

Remote attestation from secure hardware would make a big difference though. Then you could get rid of the waiting times entirely because you know the sending wallet won't double spend.


  Yes, let?s wait until things are about to break before even beginning to address the issue?because we can ?easily create? anything we haven?t invented yet at the last minute.


bitcoinj already has a micropayment channel implementation in it. There's a bit of work required to glue everything together, but it's not a massive project to start using this to pay nodes for their services.

But it's not needed right now:  serving these clients is so darn cheap. And there is plenty of room for optimising things still further!


  I?m one of the very few developers in this space that has actually tried *hard* to make your BIP37 work. Amongst the desktop wallets listed on bitcoin.org, there are only two that have always supported SPV (or at least I think MultiBit has always supported it, perhaps I?m wrong). One is MultiBit, the other one is mine. I give you credit for your work?perhaps you could be generous enough to extend me some credit too?

MultiBit has always supported it. I apologise for implying you have not built a wallet. I think yours is mSIGNA, right? Did it used to be called something else? I recognise the website design but must admit, I have not heard of mSIGNA before.

Regardless, as a fellow implementor, I would appreciate it more if you designed and implemented upgrades, rather than just trashing the work done so far as "notoriously terrible", Satoshi as "not a systems architect" and so on.



--------------------------------------------------------------------------------
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/dd6da285/attachment.html>

From karra.etc at gmail.com  Wed Jul 29 17:30:08 2015
From: karra.etc at gmail.com (Sriram Karra)
Date: Wed, 29 Jul 2015 23:00:08 +0530
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
Message-ID: <CAFkt3UNoSnEkw8TcAPBQv+Fo2tfNsJfXFFO5jfz3o7G_EaY5nA@mail.gmail.com>

On Wed, Jul 29, 2015 at 10:23 PM, Gregory Maxwell via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

On Wed, Jul 29, 2015 at 9:59 AM, Mike Hearn via bitcoin-dev
>
>
> > Miners who don't validate have a habit of bleeding money:   that's the
> > system working as designed.
>
> The information I have currently is that the parties engaging in that
> activity found it to be tremendously profitable, even including losses
> from issues.


Is there any shred of evidence either of you can share to support your
claims on this pivotal point of interest to everyone here?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/0f0bfde4/attachment-0001.html>

From raystonn at hotmail.com  Wed Jul 29 17:47:50 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Jul 2015 10:47:50 -0700
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A__Personal_opinion_on_the_?=
	=?utf-8?q?fee_market_from_a_worried_local_trader?=
In-Reply-To: <543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>

> When a category of users would get priced out because of the fee market, they would be free to use any altcoin they want.

I believe that pretty well sums up where we?re headed if transaction rate is artificially limited, whether that be by maximum block size limit or something else.  A fee market will necessarily include more than just Bitcoin.  The reality is it?s very easy to trade value across different blockchains, and thus a fee market will bleed value from Bitcoin and give it to alternative blockchains.  If Bitcoin?s blocks are at maximum capacity, people will exchange for something that allows them to transact with a lesser fee, then make the desired payment.  This adds value to the alternative blockchain and removes it from Bitcoin.

Anyone thinking the fee market can be restrained to Bitcoin alone is mistaken.



From: Vali Zero via bitcoin-dev 
Sent: Wednesday, July 29, 2015 7:09 AM
To: bitcoin-dev at lists.linuxfoundation.org 
Subject: [bitcoin-dev] R?spuns: Personal opinion on the fee market from a worried local trader

I am disappointed that you did not understand my point of view. Let me rephrase it for you,

People tipping, buying 0.99$ products and gamblers that need Bitcoin transactions *more* than the rest of the people will afford the fees that establish the equilibrium between demand and supply of Bitcoin transactions. The people are free to use they money for whatever they like, but you should understand that Bitcoin transactions are not free.

I was merely attempting to point out that spammers and gamblers would be the first ones that would go away. They would be free to spam or gamble, but they would have to pay for it.

When a category of users would get priced out because of the fee market, they would be free to use any altcoin they want.


Please understand that not everyone will leave. The more important players will remain, those that need it the most. The other players are free to use whatever altcoin they wish.


?n Miercuri, 29 Iulie 2015 16:47:57, Angel Leon <gubatron at gmail.com> a scris:




"the gamblers and perhaps people transacting very low amounts. The people that actually need Bitcoin would remain."

so people tipping, buying $0.99 products, and gamblers actually don't need Bitcoin.
Who are you to say what people need to use money for? 
This statement goes against the freedom of decentralization and financial freedom Bitcoin should be able to provide.

It's an open network and it will be used as most users see fit, and that requires a blocksize increase wether you like it or not, it's simple physics, other time wait times will become unbearable for those not willing to pay the high fees, if people leave, then it only mean bitcoins isn't useful, and if bitcoin isn't useful, it's worthless.




http://twitter.com/gubatron


On Wed, Jul 29, 2015 at 9:27 AM, Vali Zero via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:

  Hello,

  I have been reading an argument saying that paying higher fees would scare Bitcoin users and they would stop using it, preferring bank transfers or other payment methods. This does not make sense for me. If some users leave, then demand for bitcoin transactions goes down and so do the fees. The others remain.

  Fee market means that an equilibrium is found between the demand for bitcoin transactions and the available supply (given by the block size). The fee is the price that finds this equilibrium.

  If a fee market starts to exist, the first ones to leave are the spammers, probably followed by the gamblers and perhaps people transacting very low amounts. The people that actually need Bitcoin would remain.

  Please allow this fee market to form...

  In the absence of a functioning fee market, I will refuse to run Bitcoin code that increases the block size and will do my best to tell everyone I know not to upgrade towards running such code. If Bitcoin succombs to the free stuff army, I will sell all the coins and leave. Nothing is for free.

  I apologize for any exagerations, but I just felt strongly towards expressing my opinion here. I'm only a local Bitcoin trader, computer engineer, with a reasonable understanding of free markets. And I'm running only one full node.

  Kind regards,
  Valentin



  _______________________________________________
  bitcoin-dev mailing list
  bitcoin-dev at lists.linuxfoundation.org
  https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev








--------------------------------------------------------------------------------
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/b16f0d17/attachment.html>

From jtimon at jtimon.cc  Wed Jul 29 18:00:10 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Wed, 29 Jul 2015 20:00:10 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
Message-ID: <CABm2gDqdN9o0SrpSRA3WPAaMGhbBY3EvXcE-KHa0q2qQgxaQ3Q@mail.gmail.com>

On Wed, Jul 29, 2015 at 12:43 PM, Eric Lombrozo via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Erm?most miners just trust mining pool operators to validate blocks for
> them?and some of the biggest pools have been blatantly cutting corners. Yes,
> a few pools might have temporarily bled a little?but properly validating is
> probably not the equilibrium strategy?and as time goes on, they are likely
> to start cutting corners again. Whether they ultimately bleed money isn?t
> really the point - many believe that cutting corners is actually a rational
> strategy. If you want to discuss the game theory behind this, fine?but the
> fact some of the biggest mining pool operators are on record saying they are
> likely to continue doing this is enough to seriously put to question one of
> the most fundamental assumptions behind the network security model.

Actually validating blocks IS the equilibrium strategy. When the
subsidy is completely gone (or at least when the block reward is not
almost exclusively composed of subsidy [a future where fees are not a
completely negligible part of the total reward]), miners will
re-calculate their estimations and they will find out that mining
empty blocks won't be so profitable in a future with less subsidy. In
fact, with the incentives they currently have (negligible fees)
actually bothering about including transactions at all it's not really
worth it for them. They may just do it because they're nice people,
meta-incentives...whatever the reason is, they users are enjoying a
service they're not paying for.

Only subsidy and no fees creates other incentive problems, not just
SPV mining. But apparently some people think that scaring some users
with unreasonable expectations away because they have to pay fees
(still, non-proportional [to the amount you're moving] fees due to the
irreversibility of the payments: something the reversible payments
based on the banking industry can't simply compete with) it's much
worse than perpetuating big incentive problems that could break the
system. And, of course, short term convenience for users is much more
important than figuring out the long term viability of the system once
the seigniorage (spent on the miner's subsidy) goes away.

The pattern seems clear to be: decentralization and long term
viability don't matter too much to some people.
For some people, short term market cap seems to be the most important
priority and everything else is secondary.

From hearn at vinumeris.com  Wed Jul 29 18:03:22 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Wed, 29 Jul 2015 20:03:22 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
Message-ID: <CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>

>
> It was _well_ .... understood that the users of Bitcoin would wish to
> protect its decenteralization by limiting the size of the chain to keep it
> verifyable on small devices.
>

No it wasn't. That is something you invented yourself much later. "Small
devices" isn't even defined anywhere, so there can't have been any such
understanding.

The actual understanding was the opposite. Satoshi's words:

"At first, most users would run network nodes, but as the network grows
beyond a certain point, it would be left more and more to specialists with
server farms of specialized hardware."

That is from 2008:


http://satoshi.nakamotoinstitute.org/emails/cryptography/2/#selection-75.16-83.14


Then he went on to talk about Moore's law and streaming HD videos and the
like. At no point did he ever talk about limiting the system for "small
devices".

I have been both working on and using Bitcoin for longer than you have been
around, Gregory. Please don't attempt to bullshit me about what the plan
was. And stop obscuring what this is about. It's not some personality cult
- the reason I keep beating you over the head with Satoshi's words is
because it's that founding vision of the project that brought everyone
together, and gave us all a shared goal.

If Satoshi had said from the start,

   "Bitcoin cannot ever scale. So I intend it to be heavily limited and
used only by a handful of people for rare transactions. I picked 1mb as an
arbitrary limit to ensure it never gets popular."

... then I'd have not bothered getting involved. I'd have said, huh, I
don't really feel like putting effort into a system that is intended to NOT
be popular. And so would many other people.


Don't think you can claim otherwise, because doing so is flat out wrong.
>

I just did claim otherwise and no, I am not wrong at all.

(Which, incidentially, is insanely toxic to any security argument for
> SPV; ---- and now we see the market failure that results from your and
> Gavin years long campaign to ignore problems in the mining ecosystem:
>

Since when have we "campaigned" to "ignore problems" in the mining
ecosystem? What does that even mean? Was it not I who wrote this blog post?


http://blog.bitcoinfoundation.org/mining-decentralisation-the-low-hanging-fruit/

Gregory, you are getting really crazy now. Stop it. The trend towards
mining centralisation is not the fault of Gavin or myself, or anyone else.
And SPV is exactly what was always intended to be used. It's not something
I "fixated" on, it's right there in the white paper. Satoshi even
encouraged me to keep working on bitcoinj before he left!


Look, it's clear you have decided that the way Bitcoin was meant to evolve
isn't to your personal liking. That's fine. Go make an alt coin where your
founding documents state that it's intended to always run on a 2015
Raspberry Pi, or whatever it is you mean by "small device". Remove SPV
capability from the protocol so everyone has to fully validate. Make sure
that's the understanding that everyone has from day one about what your alt
coin is for. Then when someone says, gee, it'd be nice if we had some more
capacity, you or someone else can go point at the announcement emails and
say "no, GregCoin is meant to always be verifiable on small devices, that's
our social contract and it's written into the consensus rules for that
reason".

But your attempt to convert Bitcoin into that altcoin by exploiting a
temporary hack is desperate, and deeply upsetting to many people. Not many
quit their jobs and created companies to build products only for today's
tiny user base.


My list of "things a full node is useful for" wasn't ordered by importance,
by the way.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/dc517511/attachment-0001.html>

From gmaxwell at gmail.com  Wed Jul 29 19:53:02 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 29 Jul 2015 19:53:02 +0000
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
	<CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>
Message-ID: <CAAS2fgSh0XGmV+PREpCW6rN_z=xnnnchQGZ=dX68qBfwpWwjJQ@mail.gmail.com>

On Wed, Jul 29, 2015 at 6:03 PM, Mike Hearn <hearn at vinumeris.com> wrote:
>> It was _well_ .... understood that the users of Bitcoin would wish to
>> protect its decenteralization by limiting the size of the chain to keep it
>> verifyable on small devices.
>
> No it wasn't. That is something you invented yourself much later. "Small
> devices" isn't even defined anywhere, so there can't have been any such
> understanding.
>
> The actual understanding was the opposite. Satoshi's words:
[...]
> Then he went on to talk about Moore's law and streaming HD videos and the
> like. At no point did he ever talk about limiting the system for "small
> devices".
>
> I have been both working on and using Bitcoin for longer than you have been
> around, Gregory. Please don't attempt to bullshit me about what the plan
> was. And stop obscuring what this is about. It's not some personality cult -
> the reason I keep beating you over the head with Satoshi's words is because
> it's that founding vision of the project that brought everyone together, and
> gave us all a shared goal.

Mike, my first use of Bitcoin was in 2009.  I wasn't vigorously active
in the Bitcoin community until the beginning of 2011, indeed. But this
is just a couple months after you (E.g. first code available for
BitcoinJ was March 2011-- if you go by forums.bitcoin.org account
times my account was created May 5th 2011 vs yours Dec 14th 2010; less
than five months after yours). I was also working with related systems
long before (E.g. RPOW in 2004). So give me a break, there is no rank
to pull here.

Yet again you've managed to call me a bullshitter and guilty of
"invention" when in fact I'm actually quoting the system's creator
(although without the explicit fallacious argument from authority
style you seem prefer). For someone who seems to base all his
arguments on interpretations of someone's words you sure seem to call
their words lies awfully often:

"Piling every proof-of-work quorum system in the world into one
dataset doesn't scale."
[...]
"Bitcoin users might get increasingly tyrannical about limiting the
size of the chain so it's easy for lots of users and small devices."
----  https://bitcointalk.org/index.php?topic=1790.msg28917#msg28917

If you'll note,, the post was Dec 10th 2010 and, presumably, made with
an improved understanding of the implications of the system then
comments made in 2008 before the system was even operational.

(The same message also mentions that smart contracts can be used to
create trustless trade with off-chain systems;  As well, later in that
thread: "it will be much easier if you can freely use all the space
you need without worrying about paying fees for expensive space in
Bitcoin's chain.")

I haven't bothered arguing from old posts in the past because I find
the practice of argument from authority on this subject abhorrent. It
undermines the unique value of Bitcoin to argue based on a single
personal opinion, to do so is to miss the point of Bitcoin in a deep
and fundamental way. And in my opinion what you're doing is actually
much worse: arguing from distortions of random quotations.  But it's
hard to tolerate the continue revision of history from you in silence.

Moreover, I find those arguments with respect Moore's law especially
unconvincing because while I cannot read the mind of people who are
not a part of this discussion and haven't chosen to comment, I've used
the same argument myself and I know what I was thinking when I used it
(and can establish as much, since I'm more verbose I elaborated on
it):  When someone pointed at Bitcoins _global_ broadcast medium and
loudly said that it cannot work because its absurd; and it's very easy
to point out broad scaling behavior about what Bitcoin could achieve
with complete centralization. Once this has been accepted the argument
is _over_ in Bitcoin's favor: Bitcoin's competition has highly
centralized administration and so once someone has accepted Bitcoin
can (in some way) accommodate the worlds transactions, even if that
comes at the cost of 99% of the decentralization, it's clear that
Bitcoin offers something interesting. (And for example, I elaborated
on this in a Wiki edit in Aug 2011,
https://en.bitcoin.it/w/index.php?title=Scalability&action=historysubmit&diff=14273&oldid=14112
 -- though I shouldn't need to point this out to you, since it was you
who subsequently erased these words from the page.)

> Since when have we "campaigned" to "ignore problems" in the mining
> ecosystem?
[...]
> Gregory, you are getting really crazy now. Stop it. The trend towards mining
> centralisation is not the fault of Gavin or myself, or anyone else.

For example, you fought vigorously to get Bitcoin Core off
Bitcoin.org, which would ensure that users were not previously
equipped with a node suitable for operating mining (which then
contributed substantially to the poor usability of solutions like
P2Pool; with 98% of it's install time spent waiting for Bitcoin Core
to sync).

You've (in my view) aggressively advocated increasing the resource
utilization of Bitcoin-- increasing the cost to participate in mining
without delegation, with no consideration (or at least disclosure) of
the ramifications on the system overall:
https://bitcointalk.org/index.php?topic=149668.0

Gavin, for example, has advocated removing mining support from Bitcoin
core on several occasions; and constantly professes ignorance on
anything mining.  His own interests are up to him, but to not be
concerned about a central part of the system for anyone working on
changing it at such a deep level is-- I think-- a bit problematic.

But I didn't intend to lay blame here, if anything I blame myself for
not being more proactive in arguing against things things in the past.

The trend towards mining centralization is a result of various forces,
many of which are modulated by the very things we're discussing here
(or could be modulated by things we haven't discussed).  You're the
principle advocate of increasing the cost of a decentralized ecosystem
around verification and driving the system towards a state where it is
only viable in a more centralized mode.  Bitcoin is an artificial
construction, not a force of nature, and when someone seeks to change
it they ought to take responsibility for what happens--- it's not
acceptable to say "oh well, it's not eh fault of anyone" when the
incentives drive it in a bad direction.

Is that your strategy on the systems resource consumption in general?
Full throttle, no action when it goes off the rails,  when the easily
foreseeable negative outcomes happen it won't be the "fault" of
anyone? If so, I don't think that is acceptable. We need to face the
areas in which the system is failing, now and in the future... and not
just pump for growth at all cost and shrug and say "oh well, we tried"
when the predictable failure happens. It's far from clear to me that
the world will get a second shot at this in the next several decades
if Bitcoin lapses into the same-old, same-old.

> And SPV
> is exactly what was always intended to be used. It's not something I
> "fixated" on, it's right there in the white paper. Satoshi even encouraged
> me to keep working on bitcoinj before he left!

The fixation comment was a specific reply to your long list of the
"only reasons" to run a full node, which seemed to be basically said
that the only reason to run one was to act as a server for SPV
clients; as it listed several points on that-- all three of the
numbered points were "serving SPV wallets"-- and buried the rest.  I'm
sorry if I read too much into it, though it's also consistent with
your prior responses that the non-scalability of Bitcoin as a whole is
irrelevant due to SPV.

I don't think there is anything fundamentally bad with SPV, it is what
it is; it's a tool and an important one. But at the moment it is far
more limited than you give it credit for both because it is only
secure under certain assumptions which have been provably violated not
just at risk of violation, and because the more complete vision of it
(e.g. with fraud proofs) has never been implemented.

> Look, it's clear you have decided that the way Bitcoin was meant to evolve
> isn't to your personal liking. That's fine. Go make an alt coin where your
> founding documents state that it's intended to always run on a 2015
> Raspberry Pi, or whatever it is you mean by "small device". Remove SPV
> capability from the protocol so everyone has to fully validate. Make sure
> that's the understanding that everyone has from day one about what your alt
> coin is for. Then when someone says, gee, it'd be nice if we had some more
> capacity, you or someone else can go point at the announcement emails and
> say "no, GregCoin is meant to always be verifiable on small devices, that's
> our social contract and it's written into the consensus rules for that
> reason".

Now that I've established the "small device" text you're railing on
here actually came from the system's creator prior to your
involvement, can I expect an admission that your own "personal liking"
doesn't have special authority over the system?  But I hope you don't
create an altcoin: I think it's possible to find ways to accommodate
people with very different preferences under one tent, and if we are
to build and support a worldwide system we _must_ find those ways
rather than fragmenting the marketplace.

From ogunden at phauna.org  Wed Jul 29 19:56:57 2015
From: ogunden at phauna.org (Owen)
Date: Wed, 29 Jul 2015 15:56:57 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn't	temporary
In-Reply-To: <CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
Message-ID: <37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>



On July 29, 2015 7:15:49 AM EDT, Mike Hearn via bitcoin-dev:
>Consider this:  the highest Bitcoin tx fees can possibly go is perhaps
>a
>little higher than what our competition charges. Too much higher than
>that,
>and people will just say, you know what .... I'll make a bank transfer.
>It's cheaper and not much slower, sometimes no slower at all.

I respectfully disagree with this analysis. The implication is that bitcoin is merely one of a number of payment technologies. It's much more than that. It's sound money, censorship resistance, personal control over money, programmable money, and more. Without these attributes it's merely a really inefficient way to do payments. 

Given these advantages, there is no reason to believe the marginal cost of a transaction can't far surpass that of a PayPal or bank transfer. I personally would pay several multiples of the competitors' fees to continue using bitcoin.

Sure, some marginal use cases will drop off with greater fees, but that's normal and expected. These will be use cases where the user doesn't care about bitcoin's advantages. We must be willing to let these use cases go anyway, because we unfortunately don't have room on chain for everything anyone might want to do.

Therefore, bitcoin tx fees can go much higher than the competition.

Remember how Satoshi referenced the banking crisis in his early work? The 2008 banking crisis was about a lot of things, but high credit card and paypal fees wasnt one of them. There's more going on here than just payments. Any speculative economic analysis would do better to include this fact.



From gmaxwell at gmail.com  Wed Jul 29 20:09:05 2015
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 29 Jul 2015 20:09:05 +0000
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
Message-ID: <CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>

On Wed, Jul 29, 2015 at 7:56 PM, Owen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On July 29, 2015 7:15:49 AM EDT, Mike Hearn via bitcoin-dev:
>>Consider this:  the highest Bitcoin tx fees can possibly go is perhaps
>>a
>>little higher than what our competition charges. Too much higher than
>>that,
>>and people will just say, you know what .... I'll make a bank transfer.
>>It's cheaper and not much slower, sometimes no slower at all.
>
> I respectfully disagree with this analysis. The implication is that bitcoin is merely one of a number of payment technologies. It's much more than that. It's sound money, censorship resistance, personal control over money, programmable money, and more. Without these attributes it's merely a really inefficient way to do payments.
>
> Given these advantages, there is no reason to believe the marginal cost of a transaction can't far surpass that of a PayPal or bank transfer. I personally would pay several multiples of the competitors' fees to continue using bitcoin.
>
> Sure, some marginal use cases will drop off with greater fees, but that's normal and expected. These will be use cases where the user doesn't care about bitcoin's advantages. We must be willing to let these use cases go anyway, because we unfortunately don't have room on chain for everything anyone might want to do.
>
> Therefore, bitcoin tx fees can go much higher than the competition.
>
> Remember how Satoshi referenced the banking crisis in his early work? The 2008 banking crisis was about a lot of things, but high credit card and paypal fees wasnt one of them. There's more going on here than just payments. Any speculative economic analysis would do better to include this fact.

Precisely.  And as "just a payment system" Bitcoin is not an
especially great one: The design requirements for decenteralization
impose considerable costs.  To the extent that the technology in
Bitcoin is useful at all for building "just another payment system"
this technology in in the process of being agressively copied by
parties with deep fiat relationships (including in partnership with
centeral banks).  If the focus for Bitcoin's competative advantage
becomes exclusively "better" payments then it will almost certinatly
fail in the market-place against competing systems which avoid the
Bitcoin currency adoption related obsticles (but also gain none of
Bitcoin's important social/political promise).

Also, critically, if Bitcoin's security properties are manintained and
enhanced then Bitcoin can be used to build secure systems which _also_
accomidate those applications and we can have both. But if Bitcoin's
security properties are not strong then then advanced tools cannot be
built for it.  E.g. atomic swaps make trustless trades with external
systems possible; but they are especially sensitive to long
reorginizations by miners... so they can only be securely used where
those reorgs are infeasable.  So while I agree that we must be willing
to tolerate not catching every conceivable use case; most of the time
all that means is addressing them via a less direct but more focused
solution rather than ignoring them completely.

From raystonn at hotmail.com  Wed Jul 29 20:23:51 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Jul 2015 13:23:51 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam
	measureisn't	temporary
In-Reply-To: <37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com><CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
Message-ID: <COL131-DS2142721BF08CD332BA7620CD8C0@phx.gbl>

All of the properties you describe are also properties of many of the 
alternative blockchains that currently exist.  In this space, Bitcoin gives 
up these advantages.  Much like anywhere else where liquidity moves within a 
system, value will move to the network of least friction.  The reality right 
now is it's very easy to move value from Bitcoin to another blockchain with 
less friction.  Because of this, there will never be a high value settlement 
network created by an artificially imposed limit on transaction rate.  The 
value will simply bleed out of Bitcoin to alternative blockchains offering 
lower fees if this is attempted.  This is basic economics.

-----Original Message----- 
From: Owen via bitcoin-dev
Sent: Wednesday, July 29, 2015 12:56 PM
To: Bitcoin Dev
Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measureisn't 
temporary



On July 29, 2015 7:15:49 AM EDT, Mike Hearn via bitcoin-dev:
>Consider this:  the highest Bitcoin tx fees can possibly go is perhaps
>a
>little higher than what our competition charges. Too much higher than
>that,
>and people will just say, you know what .... I'll make a bank transfer.
>It's cheaper and not much slower, sometimes no slower at all.

I respectfully disagree with this analysis. The implication is that bitcoin 
is merely one of a number of payment technologies. It's much more than that. 
It's sound money, censorship resistance, personal control over money, 
programmable money, and more. Without these attributes it's merely a really 
inefficient way to do payments.

Given these advantages, there is no reason to believe the marginal cost of a 
transaction can't far surpass that of a PayPal or bank transfer. I 
personally would pay several multiples of the competitors' fees to continue 
using bitcoin.

Sure, some marginal use cases will drop off with greater fees, but that's 
normal and expected. These will be use cases where the user doesn't care 
about bitcoin's advantages. We must be willing to let these use cases go 
anyway, because we unfortunately don't have room on chain for everything 
anyone might want to do.

Therefore, bitcoin tx fees can go much higher than the competition.

Remember how Satoshi referenced the banking crisis in his early work? The 
2008 banking crisis was about a lot of things, but high credit card and 
paypal fees wasnt one of them. There's more going on here than just 
payments. Any speculative economic analysis would do better to include this 
fact.


_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 


From jtimon at jtimon.cc  Wed Jul 29 20:27:29 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Wed, 29 Jul 2015 22:27:29 +0200
Subject: [bitcoin-dev] Consensus fork activation thresholds: Block.nTime vs
	median time vs block.nHeight
Message-ID: <CABm2gDoxr4yY6XPZOEG0CF_iPO+b1H3_yFoKnYa68Y4b=Tcwrw@mail.gmail.com>

When it comes to define thresholds for consensus fork activation there
are 3 options that I know of and each of them has at least a
disadvantage that the other 2 lack:

-Block.nTime: It's not monotonic
-median time: You cannot validate it without context (in contrast,
nTime is contained in the block header and nHeight in the coinbase)
-block.nHeight: You cannot know the exact time when a given height
will be reached.

I personally think that nHeight's disadvantage is the less worse, but
others will likely disagree. The point is we need to find a solid
criteria to decide.

When combining the threshold with a later miner's "voting" (upgrade
confirmation) on top of it, not being monotonic may be a real problem.
Doing that on top of height seems straight forward: check if
(prevBlockIndex.nHeight > threshold &&
IsSuperMajority(...,prevBlockIndex,...))
With median time, seems safe too: if
(prevBlockIndex.CalculateMedianTime > threshold &&
IsSuperMajority(...,prevBlockIndex,...))
Just a little bit less efficient.
It would look more like if (IsSuperMajority(...,prevBlockIndex,...) &&
GetFirstBlockUsedInVoting(prevBlockIndex).nTime > threshold)


But in some cases (say, an emergency consensus fork) you won't combine
the mining confirmation, so you may not have the prevBlockIndex
available and you may need to pass the height or medianTime down.
If the current block is not accessible from wherever the check is
being made, you would need an additional blockTime parameter as well.

Are there any example cases where a rule activation check doesn't have
the block available?

Of course, let's consider the following hardfork example:

before the hardfork: consensus_size(tx) = real_size(tx)
after the hardfork: after consensus_size(tx) = real_size(tx) +
delta_utxo_size(tx)

that would allow miners to create bigger blocks if the transactions
help reducing the size of the utxo (and penalize transactions that
make the utxo grow by considering bigger when it comes to block
inclusion).

Well, at the block validation level (the most important one), you
obviously have block.nTime available.
But what if you're checking an unconfirmed transaction?
It's size (and thus it's validity and the policy relay decisions)
depends on whether the hardfork is activated or not.
So to check an unconfirmed transaction, you would need the block.nTime
of the next block, which is unpredictable (unless you're a miner)
because miners set those.

AcceptToMemoryPool already uses the nHeight (in fact, there's nHeight
and nSpendHeight there, not sure why we need to of them yet), so this
case would be trivial to implement.
Calculating the median time there wouldn't be difficult either: even
if globals weren't so heavily-used in AcceptToMemoryPool, the
prevIndex can always be passed down as parameter.

Some people may think that I'm discussing tiny details, but I would
really like that we can chose whatever is more generic for any type of
consensus fork and always use that from now on (instead of risking of
having to use 2 of them if we find out later that the chosen option is
not general enough).

It would be also nice to have only one uniform type of threshold in
Consensus::Params, and height seems to be the choice for softforks
that have been accepted long ago via miners'
voting/upgrade_confirmation, like in :
https://github.com/bitcoin/bitcoin/pull/5966/files

That doesn't mean it needs to necessarily be height: in a rebased
version of #5966 we could replace consensus.nBIP34Height = 227931 with
consensus.nBIP34Time = <something>.
But I would really like to have a uniform threshold mechanism instead
of using the 3 options depending on the fork.

I had assumed that height was the preferred option for everyone and
that's why I used it in
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
But judging from the existing blocksize hardfork proposals (using
block.nTime, the option I like less ) I was too fast there and clearly
I need to reopen the discussion.

From eric at voskuil.org  Wed Jul 29 20:38:39 2015
From: eric at voskuil.org (Eric Voskuil)
Date: Wed, 29 Jul 2015 13:38:39 -0700
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
 Core and hard forks)
In-Reply-To: <CABm2gDok2gH2R8=x3a8PmPiM56WFg3TKzCum_WS=uV9-T1Ss3g@mail.gmail.com>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>	<55B723EA.7010700@voskuil.org>
	<CABm2gDok2gH2R8=x3a8PmPiM56WFg3TKzCum_WS=uV9-T1Ss3g@mail.gmail.com>
Message-ID: <55B939CF.1080903@voskuil.org>

On 07/28/2015 02:58 AM, Jorge Tim?n wrote:
>> I haven't looked at any of these commits, but I'll make some time to at
>> least give a cursory review.
> 
> Great. I mean, I wasn't asking about reviewing the commits themselves
> (which is also great if you do), but rather on answering the questions
> I'm making there, ie: what to expose next (ie VerifyTx or
> VerifyHeader)?

Oh, I misunderstood your ask then. I don't have a preference on
prioritizing VerifyTx vs VerifyHeader.

> would this be an acceptable way to expose
> VerifyHeader?

I'm not sure how you mean to expose it, could you clarify?

> Which of he step-checks functions is worth exposing too (Bitcoin
> Core is currently using some to prevent DoS attacks, for example)?

I don't see any reason to expose checkpoints in this library. They are
trivial to implement and are not part of consensus.

>>> Would you agree that asking people to fork an independent libconsensus
>>> project instead of having to fork the full Bitcoin-qt is much more
>>> reasonable?
>>
>> Yes, of course. We've already done it. For each release of the satoshi
>> client since we made libbitcoin-consensus I've copied the sources. It's
>> pretty much automated and easy to visually verify that the sources
>> match. That would be quite a bit more difficult if there wasn't an
>> independent build.
> 
> Well, neither libbitcoincosnensus nor libbitcoin-consensus implements
> all the consensus rules.
> That's what makes them different from future-libconsensus.
> But great, we're confirming more views that we share.

Nothing can eliminate all consensus risk, not even a common full node
implementation.

>> Useful specifications often have two reference implementations. It's the
>> idea that there can be only one legitimate implementation that's
>> problematic.
> 
> Well, this is where I fear we will never agree. I think "Bitcoin is
> different" in this reward and you disagree.
> Maybe Pieter's explanation is more convincing to you:
> https://youtu.be/PxW5D9xCIsc?t=769
> Otherwise, I think I'll stop trying convincing you.

Maybe I wasn't sufficiently explicit. It is problematic. That is the
core issue we are dealing with. That doesn't mean I disagree with the
objectives of an independent community consensus library.

The premise of the "one true library" idea is that there is *no way* to
sufficiently test for consensus bugs in any software release. That of
course means that each release of the satoshi client poses a significant
risk to the network. This risk is presently greater than that posed by
other implementations simply because of adoption. That is the basis of
the red herring argument:

https://blog.conformal.com/the-bitcoin-consensus-red-herring

The bottom line is that nobody has control over this process. There are,
and will always be, a multitude of consensus implementations that intend
to target the same coin. Presently there are multiple versions of the
satoshi client, and this has produced forks, and will continue to do so.

Isolating the satoshi consensus checks to an independent library serves
not to eliminate that risk, but can reduce it somewhat. Importantly it
will allow various implementations to overcome a perception problem,
which will improve implementation diversity and developer participation.

>>> I believe that's the only point where we fundamentally disagree, but
>>> it shouldn't be a barrier in our common goal of taking "power" away
>>> from Bitcoin Core development. If we're successful Bitcoin Core won't
>>> have any privileged position with regards to, say, libbitcoin when it
>>> comes to deciding consensus rules changes.
>>
>> I don't think we disagree on anything fundamental. My issues with the
>> library were (1) the lack of isolation, (2) the fact that the satoshi
>> client wouldn't actually use the library, and (3) backtracking to use
>> OpenSSL, which we had recently removed from libbitcoin.
> 
> 1) Working on it

For the sake of clarity, this is now a non-issue for us.

> 2) The Satoshi client has been using all along and it will use it
> forever (maybe not through the API, but I don't get what the problem
> with that is).

Again, I consider this a requirement for us to link directly to it as a
library. If the sources are isolated into an independent repo, but the
satoshi client is embedding its own copies, one must continue to diff
the client sources against the library sources. We are doing this
already, so the benefit to having the independent repo is in no longer
having to do this.

There are also differences in the build system that can affect outcome.
Comparing those differences across repos can be more challenging. For
this reason I consider it important to your objective that the satoshi
client actually use the library - as I assume it will at some point.

If the satoshi client folks are to maintain a consensus library for the
community it's also important to show a commitment to its independence.
Dogfooding is of course a software engineering best practice. But there
is also the cynical perspective - the independent library in some ways
works against an advantage of the satoshi client.

I personally don't think the committers are parochial enough to let this
become an issue. We are all after something bigger. But if there was
push-back against using the library it would be a red flag. So until
that point passes I would just maintain our independent library, cloning
the sources from the satoshi client.

> 3) There will be an announce about this soon.

Yes, I've seen this as a temporary setback.

...
>> Always willing to work with you on it, although we're all busy, and this
>> isn't my top priority presently.
> 
> Is it because "fear of consensus bugs is what keeps people on the
> satoshi client" and you want to keep things this way?

No, I see it as less significant to the adoption of libbitcoin-server
than other issues we are working on, especially given the existence of
libbitcoin-consensus. I also trust you will make progress regardless.

e



-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/f0b54988/attachment.sig>

From raystonn at hotmail.com  Wed Jul 29 21:28:43 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Jul 2015 14:28:43 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com><CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com><37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
Message-ID: <COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>

Gregory, can you please speak to the following points.  I would like a 
better understanding of your positions.

1) Do you believe that Bitcoin's future is as a high-value settlement 
network?

2) Do you believe we need an artificial limit to transaction rate, perhaps 
implemented as a maximum block size limit?  If so, why?

3) Transaction fees will fluctuate with global economic conditions and 
technology.  Those free-market fluctuations should equally affect any 
blockchain.  However, if transaction fees on the Bitcoin network are pushed 
artificially high, such as with an artificial limit to transaction rate only 
applicable to Bitcoin, this will create a condition where some other 
blockchains will have lower fees.  How do you plan to address the bleeding 
of value from Bitcoin to alternative lower-fee blockchains created by the 
artificially-high bitcoin transaction fees when users begin looking for the 
cheapest way to send value?  Modern economic study has shown that liquidity 
moves to the location of least friction.

4) If you believe it's not a problem to allow alternative blockchains to 
leech some of Bitcoin's value, then:
    a) How much value is it acceptable to lose?
    b) How do you think this will affect Bitcoin miners, whose large 
investments in hardware do not transfer to other blockchains?
    c) How do you think this will affect the investors and holders of 
bitcoin in general?


-----Original Message----- 
From: Gregory Maxwell via bitcoin-dev
Sent: Wednesday, July 29, 2015 1:09 PM
To: Owen
Cc: Bitcoin Dev
Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure 
isn'ttemporary

On Wed, Jul 29, 2015 at 7:56 PM, Owen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On July 29, 2015 7:15:49 AM EDT, Mike Hearn via bitcoin-dev:
>>Consider this:  the highest Bitcoin tx fees can possibly go is perhaps
>>a
>>little higher than what our competition charges. Too much higher than
>>that,
>>and people will just say, you know what .... I'll make a bank transfer.
>>It's cheaper and not much slower, sometimes no slower at all.
>
> I respectfully disagree with this analysis. The implication is that 
> bitcoin is merely one of a number of payment technologies. It's much more 
> than that. It's sound money, censorship resistance, personal control over 
> money, programmable money, and more. Without these attributes it's merely 
> a really inefficient way to do payments.
>
> Given these advantages, there is no reason to believe the marginal cost of 
> a transaction can't far surpass that of a PayPal or bank transfer. I 
> personally would pay several multiples of the competitors' fees to 
> continue using bitcoin.
>
> Sure, some marginal use cases will drop off with greater fees, but that's 
> normal and expected. These will be use cases where the user doesn't care 
> about bitcoin's advantages. We must be willing to let these use cases go 
> anyway, because we unfortunately don't have room on chain for everything 
> anyone might want to do.
>
> Therefore, bitcoin tx fees can go much higher than the competition.
>
> Remember how Satoshi referenced the banking crisis in his early work? The 
> 2008 banking crisis was about a lot of things, but high credit card and 
> paypal fees wasnt one of them. There's more going on here than just 
> payments. Any speculative economic analysis would do better to include 
> this fact.

Precisely.  And as "just a payment system" Bitcoin is not an
especially great one: The design requirements for decenteralization
impose considerable costs.  To the extent that the technology in
Bitcoin is useful at all for building "just another payment system"
this technology in in the process of being agressively copied by
parties with deep fiat relationships (including in partnership with
centeral banks).  If the focus for Bitcoin's competative advantage
becomes exclusively "better" payments then it will almost certinatly
fail in the market-place against competing systems which avoid the
Bitcoin currency adoption related obsticles (but also gain none of
Bitcoin's important social/political promise).

Also, critically, if Bitcoin's security properties are manintained and
enhanced then Bitcoin can be used to build secure systems which _also_
accomidate those applications and we can have both. But if Bitcoin's
security properties are not strong then then advanced tools cannot be
built for it.  E.g. atomic swaps make trustless trades with external
systems possible; but they are especially sensitive to long
reorginizations by miners... so they can only be securely used where
those reorgs are infeasable.  So while I agree that we must be willing
to tolerate not catching every conceivable use case; most of the time
all that means is addressing them via a less direct but more focused
solution rather than ignoring them completely.
_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 


From jtimon at jtimon.cc  Wed Jul 29 21:46:49 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Wed, 29 Jul 2015 23:46:49 +0200
Subject: [bitcoin-dev] Libconsensus separated repository (was Bitcoin
	Core and hard forks)
In-Reply-To: <55B939CF.1080903@voskuil.org>
References: <CABm2gDrApVuxF8DFf32V=pQhDKvvVfcDK=LeCXJ9h9o8CY+wNQ@mail.gmail.com>
	<55B723EA.7010700@voskuil.org>
	<CABm2gDok2gH2R8=x3a8PmPiM56WFg3TKzCum_WS=uV9-T1Ss3g@mail.gmail.com>
	<55B939CF.1080903@voskuil.org>
Message-ID: <CABm2gDq1wHP01Tncw3hu=SCWQHaAOMjWOVYQWdQsOZ+E7zp9Yw@mail.gmail.com>

On Wed, Jul 29, 2015 at 10:38 PM, Eric Voskuil <eric at voskuil.org> wrote:
> On 07/28/2015 02:58 AM, Jorge Tim?n wrote:
> Oh, I misunderstood your ask then. I don't have a preference on
> prioritizing VerifyTx vs VerifyHeader.

Ok, let's assume we want to expose verifyHeader first (which I think
will be easier).

>> would this be an acceptable way to expose
>> VerifyHeader?
>
> I'm not sure how you mean to expose it, could you clarify?

In https://github.com/bitcoin/bitcoin/pull/5995 I had one (probably
stupid) proposal.
But it had so many preparations commits that I had to close it.
In the last commit
https://github.com/jtimon/bitcoin/commit/00b9b227afc8669a877984561329dde75d3d8942
you can see that I'm adding a new function in
script/bitcoinconsensus.cpp with the following declaration:

int bitcoinconsensus_verify_header(const unsigned char* blockHeader,
unsigned int blockHeaderLen,
 const Consensus::Params& params, int64_t nTime, CBlockIndexBase*
pindexPrev, PrevIndexGetter indexGetter,
 bitcoinconsensus_error* err)

The ugly parts that you may not like are the CBlockIndexBase struct
(or maybe it's not so unreasonable) and the function pointer
PrevIndexGetter.
To see their "ugliness" you can look at:

https://github.com/jtimon/bitcoin/commit/4528ec69617f1b6d6c8f0d73dc4091cded7c216c

The PrevIndexGetter function pointer that Bitcoin Core would use
internally would be:

const CBlockIndexBase* GetPrevIndex(const CBlockIndexBase* pindex)
{
    return ((CBlockIndex*)pindex)->pprev;
}

with an ugly casting. But, well, I guess that's only ugly for Bitcoin
Core, not necessarily for other libconsensus users, which can define
their own function pointer, provided that it's of the form:

typedef const CBlockIndexBase* (*PrevIndexGetter)(const CBlockIndexBase*);

The struct that I think needs more refinement (and I just used what I
considered easier to implement at the time) is the CBlockIndexBase
struct itself:

+struct CBlockIndexBase
+{
+ //! pointer to the hash of the block, if any. Memory is owned by
this CBlockIndexBase
+ const uint256* phashBlock;
+ //! block header
+ int32_t nVersion;
+ uint256 hashMerkleRoot;
+ uint32_t nTime;
+ uint32_t nBits;
+ uint32_t nNonce;
+ //! height of the entry in the chain. The genesis block has height 0
+ int nHeight;
+};

I don't like phashBlock being a pointer instead of just a ref or even an object
Should that struct have a CBlockIndexBase* pprev; field (moving it
down from CBlockIndex)?
That's the kind of question where your feedback seems very important
from other-implementations developers (because you won't necessarily
take into account the difficulty of the refactors required in Bitcoin
Core to expose the right interface, and "libconsensus shouldn't care"
either, all we want is the best interface).

>> Which of he step-checks functions is worth exposing too (Bitcoin
>> Core is currently using some to prevent DoS attacks, for example)?
>
> I don't see any reason to expose checkpoints in this library. They are
> trivial to implement and are not part of consensus.

Agreed, and I would say all of the checkpoint check separation has
been done already.
What I mean by step functions is...look at verfyHeader internals, for example:

https://github.com/jtimon/bitcoin/commit/11ede96f59f611ede596a1335e896b1fef4fb5b2

It internally calls Consensus::CheckBlockHeader (quite cheap with no
context required) and Consensus::ContextualCheckBlockHeader (not so
cheap).
Bitcoin Core never calls (yet) the full verifyHeader at once. It does
the cheap tests first and the expensive later. For example,

call CheckBlockHeader, then CheckBlock (also cheap), then
ContextualCheckBlockHeader and then ContextualCheckBlock.

The question is, will other implementations want access to these
not-full-but-cheap tests?
In other words, apart from exposing VerifyHeader that fully validates
all consensus rules for a header, do we also want to expose
CheckBlockHeader and ContextualCheckBlockHeader to give more
flexibility to libconsensus' users?

I think, yes, other implementations will want this for the same DoS
reasons that Bitcoin Core currently wants them. But it would be nice
to know what a second person thinks about this.

> Nothing can eliminate all consensus risk, not even a common full node
> implementation.

In fact, one thing does: never changing the code again (but the cure
would be worse than the illness).
Agreed, any software changes in the consensus code can cause consensus
forks (and that's why you don't want to touch libconsensus that much
once it's separated).


>>> Useful specifications often have two reference implementations. It's the
>>> idea that there can be only one legitimate implementation that's
>>> problematic.
>>
>> Well, this is where I fear we will never agree. I think "Bitcoin is
>> different" in this reward and you disagree.
>> Maybe Pieter's explanation is more convincing to you:
>> https://youtu.be/PxW5D9xCIsc?t=769
>> Otherwise, I think I'll stop trying convincing you.
>
> Maybe I wasn't sufficiently explicit. It is problematic. That is the
> core issue we are dealing with. That doesn't mean I disagree with the
> objectives of an independent community consensus library.
>
> The premise of the "one true library" idea is that there is *no way* to
> sufficiently test for consensus bugs in any software release. That of
> course means that each release of the satoshi client poses a significant
> risk to the network. This risk is presently greater than that posed by
> other implementations simply because of adoption. That is the basis of
> the red herring argument:

Well, the "one true library" will be much better than the current "one
true full node".
The "one true library" would be the specification of the consensus
rules, but that doesn't mean you can't fork and modify it however you
want.

> The bottom line is that nobody has control over this process. There are,
> and will always be, a multitude of consensus implementations that intend
> to target the same coin. Presently there are multiple versions of the
> satoshi client, and this has produced forks, and will continue to do so.

I get this point, even if the current satoshi client contains the
consensus rules specification (and many other things, obviously), that
doesn't mean is somehow protected from forking with itself if the
consensus code is changed in the wrong way accidentally. But the more
separated libconsensus and Bitcoin Core (satoshi client) are, the less
likely that changes in Bitcoin Core that weren't supposed to change
consensus rules actually do it by accident (like last time with the
migration out of bdb).

> Isolating the satoshi consensus checks to an independent library serves
> not to eliminate that risk, but can reduce it somewhat. Importantly it
> will allow various implementations to overcome a perception problem,
> which will improve implementation diversity and developer participation.

I think alternative implementations using a full libconsensus can
increase their adoption a lot, since they become just as vulnerable to
consensus forks as Bitcoin Core (instead of more vulnerable like now).

>>>> I believe that's the only point where we fundamentally disagree, but
>>>> it shouldn't be a barrier in our common goal of taking "power" away
>>>> from Bitcoin Core development. If we're successful Bitcoin Core won't
>>>> have any privileged position with regards to, say, libbitcoin when it
>>>> comes to deciding consensus rules changes.
>>>
>>> I don't think we disagree on anything fundamental. My issues with the
>>> library were (1) the lack of isolation, (2) the fact that the satoshi
>>> client wouldn't actually use the library, and (3) backtracking to use
>>> OpenSSL, which we had recently removed from libbitcoin.
>>
>> 1) Working on it
>
> For the sake of clarity, this is now a non-issue for us.

You mean libbitcoin's code is better organized than Bitcoin Core's?
I don't doubt it. Maybe we can create a full-libbitcoin-libconsensus
first and work on the API there.

>> 2) The Satoshi client has been using all along and it will use it
>> forever (maybe not through the API, but I don't get what the problem
>> with that is).
>
> Again, I consider this a requirement for us to link directly to it as a
> library. If the sources are isolated into an independent repo, but the
> satoshi client is embedding its own copies, one must continue to diff
> the client sources against the library sources. We are doing this
> already, so the benefit to having the independent repo is in no longer
> having to do this.

Oh, I see, you don't like that libsecp256k1 is currently a subtree of
Bitcoin Core either for the same reasons, right?
To not need to know when the changes in libconsensus are applied in
Bitcoin Core.
Mhmm, once libconsensus is complete, why would you care about it?
You just care about the libconsensus version (which doesn't have to
coincide with Bitcoin Core versions anymore).

> There are also differences in the build system that can affect outcome.
> Comparing those differences across repos can be more challenging. For
> this reason I consider it important to your objective that the satoshi
> client actually use the library - as I assume it will at some point.

For the sake of clarity, please say "use the library's API". It's
going to use the library one way or another.

> If the satoshi client folks are to maintain a consensus library for the
> community it's also important to show a commitment to its independence.
> Dogfooding is of course a software engineering best practice. But there
> is also the cynical perspective - the independent library in some ways
> works against an advantage of the satoshi client.
>
> I personally don't think the committers are parochial enough to let this
> become an issue. We are all after something bigger. But if there was
> push-back against using the library it would be a red flag. So until
> that point passes I would just maintain our independent library, cloning
> the sources from the satoshi client.

To be clear, I don't oppose to "dogfooding", it's just clear to me
that it will take even longer.
So what I don't understand is "once libbitcoin is complete and ready
for us to use, we will keep using our reimplementation of consensus
until Bitcoin Core uses the API as well. If Bitcoin core doesn't use
the API, we prefer not to use the library at all and keep having the
same consensus risk. We will do what we think it's worse for us until
Bitcoin Core uses the library through the API".

>> 3) There will be an announce about this soon.
>
> Yes, I've seen this as a temporary setback.

And we will hopefully migrate the current libconsensus from openSSL to
libsecp256k1 soon. So we will be able to enjoy libsecp256k1's
performance improvements without risking consensus. One problem less.

>>> Always willing to work with you on it, although we're all busy, and this
>>> isn't my top priority presently.
>>
>> Is it because "fear of consensus bugs is what keeps people on the
>> satoshi client" and you want to keep things this way?
>
> No, I see it as less significant to the adoption of libbitcoin-server
> than other issues we are working on, especially given the existence of
> libbitcoin-consensus. I also trust you will make progress regardless.

This was just a joke because you said something similar earlier.
Don't take it seriously.

From venzen at mail.bihthai.net  Wed Jul 29 22:11:57 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Thu, 30 Jul 2015 05:11:57 +0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com><CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com><37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
Message-ID: <55B94FAD.7040205@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Raystonn, I'm aware that you're addressing your question to Greg
Maxwell, however a point you keep stating as fact calls for reference:

On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
[snip]
> How do you plan to address the bleeding of value from Bitcoin to 
> alternative lower-fee blockchains created by the artificially-high 
> bitcoin transaction fees when users begin looking for the cheapest 
> way to send value?
Cheapest way to send value? Is this what Bitcoin is trying to do? So
all of the smart contract, programmable money, consensus coding and
tremendous developer effort is bent to the consumer demand for cheaper
fees. Surely thou jests!

> Modern economic study has shown that liquidity moves to the 
> location of least friction.
Modern economic study? Can you please provide a link or reference to
the study you are referring to.

"liquidity moves to the location of least friction"

This sounds like "econo-speak" and makes no sense. The definition of
Liquidity is the degree to which an asset/security can be bought or
sold in the market without affecting the price.

That is why bitcoin is said to have low liquidity: buying or selling
only 100 BTC visibly affects the exchange price. You probably mean
"people like cheap fees", which is true, but as others have said,
because of Bitcoin's powerful features, they are willing to pay higher
fees and wait longer for transactions to execute.

As for your public cross-examination of Greg Maxwell, your case seems
to  be made on the assumption that limiting the size of the blockchain
is an attempt to artificially raise tx fees, but it is not the case
(as you and others repeatedly argue) that reluctance to concede
blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
explained in this thread that the protocol's current state of
development relies on  blocksize for security and, ultimately, as a
means of protecting its degree of decentralization.

Surely, this is an obvious concern even for those who are campaigning
for the hare-brained ideal of making Bitcoin a "faster, cheaper
alternative" to visa or paypal? If we lose decentralization, we lose
the whole thing, right? Incorrect or correct?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
=lQvy
-----END PGP SIGNATURE-----

From s7r at sky-ip.org  Wed Jul 29 22:54:26 2015
From: s7r at sky-ip.org (s7r)
Date: Thu, 30 Jul 2015 01:54:26 +0300
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
Message-ID: <55B959A2.9020402@sky-ip.org>

We could care less about you selling your bitcoins or moving to
something else.

What we care more is keeping bitcoin a successful project which offers
clear benefits to the world. I agree a fee market is good and needed,
and transactions shouldn't be free ever, but users should also be able
to transact fast and relatively cheap, as opposite to the competition,
or at least with the same costs, so people won't move to something else.

The more people use bitcoin, the more demand we have on the market for
BTC, the higher BTC/FIAT rate will be, more people will become
interested in mining and so on. Bitcoin is not a rich-only-private-club,
it's an open, global, decentralized payment network. The less people use
it... I guess you figured it out.

So we could care less that you will go away in case the fee market won't
become absurd or too expensive to use for most users. Having some
offchain solution for small transactions would be a good idea, but this
doesn't mean we should make small transactions impossible due to absurd
fees.

On 7/29/2015 8:47 PM, Raystonn . via bitcoin-dev wrote:
>> When a category of users would get priced out because of the fee
> market, they would be free to use any altcoin they want.
>  
> I believe that pretty well sums up where we?re headed if transaction
> rate is artificially limited, whether that be by maximum block size
> limit or something else.  A fee market will necessarily include more
> than just Bitcoin.  The reality is it?s very easy to trade value across
> different blockchains, and thus a fee market will bleed value from
> Bitcoin and give it to alternative blockchains.  If Bitcoin?s blocks are
> at maximum capacity, people will exchange for something that allows them
> to transact with a lesser fee, then make the desired payment.  This adds
> value to the alternative blockchain and removes it from Bitcoin.
>  
> Anyone thinking the fee market can be restrained to Bitcoin alone is
> mistaken.
> 
>  
> *From:* Vali Zero via bitcoin-dev
> <mailto:bitcoin-dev at lists.linuxfoundation.org>
> *Sent:* Wednesday, July 29, 2015 7:09 AM
> *To:* bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>
> *Subject:* [bitcoin-dev] R?spuns: Personal opinion on the fee market
> from a worried local trader
>  
> I am disappointed that you did not understand my point of view. Let me
> rephrase it for you,
>  
> People tipping, buying 0.99$ products and gamblers that need Bitcoin
> transactions *more* than the rest of the people will afford the fees
> that establish the equilibrium between demand and supply of Bitcoin
> transactions. The people are free to use they money for whatever they
> like, but you should understand that Bitcoin transactions are not free.
>  
> I was merely attempting to point out that spammers and gamblers would be
> the first ones that would go away. They would be free to spam or gamble,
> but they would have to pay for it.
>  
> When a category of users would get priced out because of the fee market,
> they would be free to use any altcoin they want.
>  
> Please understand that not everyone will leave. The more important
> players will remain, those that need it the most. The other players are
> free to use whatever altcoin they wish.
>  
>  
> ?n Miercuri, 29 Iulie 2015 16:47:57, Angel Leon <gubatron at gmail.com> a
> scris:
> 
> 
> "the gamblers and perhaps people transacting very low amounts. The
> people that actually need Bitcoin would remain."
> 
> so people tipping, buying $0.99 products, and gamblers actually don't
> need Bitcoin.
> Who are you to say what people need to use money for?
> This statement goes against the freedom of decentralization and
> financial freedom Bitcoin should be able to provide.
> 
> It's an open network and it will be used as most users see fit, and that
> requires a blocksize increase wether you like it or not, it's simple
> physics, other time wait times will become unbearable for those not
> willing to pay the high fees, if people leave, then it only mean
> bitcoins isn't useful, and if bitcoin isn't useful, it's worthless.
> 
> 
>  
> http://twitter.com/gubatron
>  
> On Wed, Jul 29, 2015 at 9:27 AM, Vali Zero via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
>     Hello,
> 
>     I have been reading an argument saying that paying higher fees would
>     scare Bitcoin users and they would stop using it, preferring bank
>     transfers or other payment methods. This does not make sense for me.
>     If some users leave, then demand for bitcoin transactions goes down
>     and so do the fees. The others remain.
> 
>     Fee market means that an equilibrium is found between the demand for
>     bitcoin transactions and the available supply (given by the block
>     size). The fee is the price that finds this equilibrium.
> 
>     If a fee market starts to exist, the first ones to leave are the
>     spammers, probably followed by the gamblers and perhaps people
>     transacting very low amounts. The people that actually need Bitcoin
>     would remain.
> 
>     Please allow this fee market to form...
> 
>     In the absence of a functioning fee market, I will refuse to run
>     Bitcoin code that increases the block size and will do my best to
>     tell everyone I know not to upgrade towards running such code. If
>     Bitcoin succombs to the free stuff army, I will sell all the coins
>     and leave. Nothing is for free.
> 
>     I apologize for any exagerations, but I just felt strongly towards
>     expressing my opinion here. I'm only a local Bitcoin trader,
>     computer engineer, with a reasonable understanding of free markets.
>     And I'm running only one full node.
> 
>     Kind regards,
>     Valentin
> 
> 
>     _______________________________________________
>     bitcoin-dev mailing list
>     bitcoin-dev at lists.linuxfoundation.org
>     <mailto:bitcoin-dev at lists.linuxfoundation.org>
>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 

From raystonn at hotmail.com  Wed Jul 29 23:10:56 2015
From: raystonn at hotmail.com (Raystonn .)
Date: Wed, 29 Jul 2015 16:10:56 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <55B94FAD.7040205@mail.bihthai.net>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com><CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com><37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
Message-ID: <COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>

> Cheapest way to send value? Is this what Bitcoin is trying to do? So
> all of the smart contract, programmable money, consensus coding and
> tremendous developer effort is bent to the consumer demand for cheaper
> fees. Surely thou jests!

These other features can be replicated into any alternative blockchain, 
including those with lower fees.  In the open-source world of 
cryptocurrency, no feature will remain a value-add for very long after it 
has been identified to be such.  Anything adding value will quickly be 
absorbed into competing alternative blockchains.  That will leave economic 
policy as the distinguishing factor.

> ... it is not the case ... that reluctance to concede
> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
> explained in this thread that the protocol's current state of
> development relies on  blocksize for security and, ultimately, as a
> means of protecting its degree of decentralization.

A slow or lack of increase to maximum transaction rate will cause pressure 
on fees.  Whether this is the desired goal is not relevant.  Everyone has 
agreed this will be the outcome.  As to a smaller block size being needed 
for additional decentralization, one must simply ask how much we are all 
willing to pay for that additional decentralization.  It is likely that the 
benefit thereto will have to be demonstrated by some power attacking and 
destroying a less decentralized currency before the benefit of this feature 
is given monetary value by the market.  Until then, value will bleed to the 
network with the least friction, because it will have the greatest ability 
to grow its network effect.  That means the blockchain with adequate 
features and cheapest fees will eventually have the largest market share.


-----Original Message----- 
From: Venzen Khaosan
Sent: Wednesday, July 29, 2015 3:11 PM
To: Raystonn .
Cc: bitcoin-dev at lists.linuxfoundation.org
Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure 
isn'ttemporary

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Raystonn, I'm aware that you're addressing your question to Greg
Maxwell, however a point you keep stating as fact calls for reference:

On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
[snip]
> How do you plan to address the bleeding of value from Bitcoin to
> alternative lower-fee blockchains created by the artificially-high
> bitcoin transaction fees when users begin looking for the cheapest
> way to send value?
Cheapest way to send value? Is this what Bitcoin is trying to do? So
all of the smart contract, programmable money, consensus coding and
tremendous developer effort is bent to the consumer demand for cheaper
fees. Surely thou jests!

> Modern economic study has shown that liquidity moves to the
> location of least friction.
Modern economic study? Can you please provide a link or reference to
the study you are referring to.

"liquidity moves to the location of least friction"

This sounds like "econo-speak" and makes no sense. The definition of
Liquidity is the degree to which an asset/security can be bought or
sold in the market without affecting the price.

That is why bitcoin is said to have low liquidity: buying or selling
only 100 BTC visibly affects the exchange price. You probably mean
"people like cheap fees", which is true, but as others have said,
because of Bitcoin's powerful features, they are willing to pay higher
fees and wait longer for transactions to execute.

As for your public cross-examination of Greg Maxwell, your case seems
to  be made on the assumption that limiting the size of the blockchain
is an attempt to artificially raise tx fees, but it is not the case
(as you and others repeatedly argue) that reluctance to concede
blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
explained in this thread that the protocol's current state of
development relies on  blocksize for security and, ultimately, as a
means of protecting its degree of decentralization.

Surely, this is an obvious concern even for those who are campaigning
for the hare-brained ideal of making Bitcoin a "faster, cheaper
alternative" to visa or paypal? If we lose decentralization, we lose
the whole thing, right? Incorrect or correct?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
=lQvy
-----END PGP SIGNATURE----- 


From rryananizer at gmail.com  Thu Jul 30 03:41:44 2015
From: rryananizer at gmail.com (Ryan Butler)
Date: Wed, 29 Jul 2015 22:41:44 -0500
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <55B959A2.9020402@sky-ip.org>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
Message-ID: <CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>

Does an unlimited blocksize imply the lack of a fee market?  Isn't every
miner able to set their minimum accepted fee or transaction acceptance
algorithm?
On Jul 29, 2015 5:54 PM, "s7r via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> We could care less about you selling your bitcoins or moving to
> something else.
>
> What we care more is keeping bitcoin a successful project which offers
> clear benefits to the world. I agree a fee market is good and needed,
> and transactions shouldn't be free ever, but users should also be able
> to transact fast and relatively cheap, as opposite to the competition,
> or at least with the same costs, so people won't move to something else.
>
> The more people use bitcoin, the more demand we have on the market for
> BTC, the higher BTC/FIAT rate will be, more people will become
> interested in mining and so on. Bitcoin is not a rich-only-private-club,
> it's an open, global, decentralized payment network. The less people use
> it... I guess you figured it out.
>
> So we could care less that you will go away in case the fee market won't
> become absurd or too expensive to use for most users. Having some
> offchain solution for small transactions would be a good idea, but this
> doesn't mean we should make small transactions impossible due to absurd
> fees.
>
> On 7/29/2015 8:47 PM, Raystonn . via bitcoin-dev wrote:
> >> When a category of users would get priced out because of the fee
> > market, they would be free to use any altcoin they want.
> >
> > I believe that pretty well sums up where we?re headed if transaction
> > rate is artificially limited, whether that be by maximum block size
> > limit or something else.  A fee market will necessarily include more
> > than just Bitcoin.  The reality is it?s very easy to trade value across
> > different blockchains, and thus a fee market will bleed value from
> > Bitcoin and give it to alternative blockchains.  If Bitcoin?s blocks are
> > at maximum capacity, people will exchange for something that allows them
> > to transact with a lesser fee, then make the desired payment.  This adds
> > value to the alternative blockchain and removes it from Bitcoin.
> >
> > Anyone thinking the fee market can be restrained to Bitcoin alone is
> > mistaken.
> >
> >
> > *From:* Vali Zero via bitcoin-dev
> > <mailto:bitcoin-dev at lists.linuxfoundation.org>
> > *Sent:* Wednesday, July 29, 2015 7:09 AM
> > *To:* bitcoin-dev at lists.linuxfoundation.org
> > <mailto:bitcoin-dev at lists.linuxfoundation.org>
> > *Subject:* [bitcoin-dev] R?spuns: Personal opinion on the fee market
> > from a worried local trader
> >
> > I am disappointed that you did not understand my point of view. Let me
> > rephrase it for you,
> >
> > People tipping, buying 0.99$ products and gamblers that need Bitcoin
> > transactions *more* than the rest of the people will afford the fees
> > that establish the equilibrium between demand and supply of Bitcoin
> > transactions. The people are free to use they money for whatever they
> > like, but you should understand that Bitcoin transactions are not free.
> >
> > I was merely attempting to point out that spammers and gamblers would be
> > the first ones that would go away. They would be free to spam or gamble,
> > but they would have to pay for it.
> >
> > When a category of users would get priced out because of the fee market,
> > they would be free to use any altcoin they want.
> >
> > Please understand that not everyone will leave. The more important
> > players will remain, those that need it the most. The other players are
> > free to use whatever altcoin they wish.
> >
> >
> > ?n Miercuri, 29 Iulie 2015 16:47:57, Angel Leon <gubatron at gmail.com> a
> > scris:
> >
> >
> > "the gamblers and perhaps people transacting very low amounts. The
> > people that actually need Bitcoin would remain."
> >
> > so people tipping, buying $0.99 products, and gamblers actually don't
> > need Bitcoin.
> > Who are you to say what people need to use money for?
> > This statement goes against the freedom of decentralization and
> > financial freedom Bitcoin should be able to provide.
> >
> > It's an open network and it will be used as most users see fit, and that
> > requires a blocksize increase wether you like it or not, it's simple
> > physics, other time wait times will become unbearable for those not
> > willing to pay the high fees, if people leave, then it only mean
> > bitcoins isn't useful, and if bitcoin isn't useful, it's worthless.
> >
> >
> >
> > http://twitter.com/gubatron
> >
> > On Wed, Jul 29, 2015 at 9:27 AM, Vali Zero via bitcoin-dev
> > <bitcoin-dev at lists.linuxfoundation.org
> > <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> >
> >     Hello,
> >
> >     I have been reading an argument saying that paying higher fees would
> >     scare Bitcoin users and they would stop using it, preferring bank
> >     transfers or other payment methods. This does not make sense for me.
> >     If some users leave, then demand for bitcoin transactions goes down
> >     and so do the fees. The others remain.
> >
> >     Fee market means that an equilibrium is found between the demand for
> >     bitcoin transactions and the available supply (given by the block
> >     size). The fee is the price that finds this equilibrium.
> >
> >     If a fee market starts to exist, the first ones to leave are the
> >     spammers, probably followed by the gamblers and perhaps people
> >     transacting very low amounts. The people that actually need Bitcoin
> >     would remain.
> >
> >     Please allow this fee market to form...
> >
> >     In the absence of a functioning fee market, I will refuse to run
> >     Bitcoin code that increases the block size and will do my best to
> >     tell everyone I know not to upgrade towards running such code. If
> >     Bitcoin succombs to the free stuff army, I will sell all the coins
> >     and leave. Nothing is for free.
> >
> >     I apologize for any exagerations, but I just felt strongly towards
> >     expressing my opinion here. I'm only a local Bitcoin trader,
> >     computer engineer, with a reasonable understanding of free markets.
> >     And I'm running only one full node.
> >
> >     Kind regards,
> >     Valentin
> >
> >
> >     _______________________________________________
> >     bitcoin-dev mailing list
> >     bitcoin-dev at lists.linuxfoundation.org
> >     <mailto:bitcoin-dev at lists.linuxfoundation.org>
> >     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/5460df74/attachment-0001.html>

From adam at cypherspace.org  Thu Jul 30 03:49:08 2015
From: adam at cypherspace.org (Adam Back)
Date: Wed, 29 Jul 2015 20:49:08 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
Message-ID: <CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>

I dont think people consider other blockchains as a competitive
threat.  A PoW-blockchain is a largely singleton data structure for
security reasons (single highest hashrate), it is hard for an
alternative chain to bootstrap or provide meaningful security.
Secondly the world largely lacks expertise to maintain a blockchain to
bitcoin's security level, perhaps you can see a hint of this in the
recently disclosed security vulnerability by Pieter Wuille and Gregory
Maxwell.  Calls to this as an argument are not resonating and probably
not helping your argument.  Bitcoin has security properties, and a
competing system cant achieve better properties by bypassing security,
any blockchain faces the same fundamental security / decentralisation
limitations.

Secondly Bitcoin can obviously compete with itself with different
parameters and defacto *does* today.  I think it is a safe estimate
that > 99% of Bitcoin transactions right now are happening in Bitcoin
related systems with various degrees of audit, reconciliation,
provable reserves etc.  I think we can expect this to continue and
become more secure via more reconciliation, and longer term via
lightning or Bitcoin sidechains with different parameters.  It is a
different story to have a single central system (Bitcoin with
parameters changed to the point of centralisation failure) vs having
multiple choices, because some transactions can more easily use
relatively centralised systems (eg micropayments), and more
interestingly the combination of a secure and decentralised layer 1
plus choices of less decentralised layer 2 options, can be interesting
because the layer 2 is provided cover from attack.  There is less to
be gained by attacking relatively centralised layer 2 because any
payments at risk of policy abuse (which is typically a small subset)
can easily switch to layer 1.  That in itself makes layer 2
transactions also less susceptible to policy abuse.  Further lightning
it appears from work so far should add significant scale while
retaining trustlessness and a good degree of decentralisation.

Finally you seem to be focusing on "artificial" limits where that is
not the issue under consideration.  The limits are technical and
relating to decentralisation and security.  I wont go over them again
as this topic has been covered many times in recent months.  Any chain
that tried to go to extreme parameters (very low block intervals, or
very large blocksizes) would have the same decentralisation problems
as Bitcoin would if it did the same thing.  There are a number of alt
coins that have failed as a result of poor parameter choices, there
are inherent security limits.

Adam

ps Etiquette note for yourself and others: please dont be repetitive
or attempt to be forceful.  Many people have spent many years
understanding this very complex system, from my own experience it is
rare indeed to think of an entirely new concept or analysis, that
hasnt' been long considered and put to bed 3 or 4 years ago.
Thoughtful polite and constructive comments are welcome but I
recommend to not start from an assumption that you have a clear and
better insight than the entire technical community, because I have to
say from my own experience that is very rarely the case.  It can be
useful to test theories on #bitcoin IRC channel to find out what has
been already concluded, find the references and avoid having to have
that hashed out on this list which is trying to be focussed on
technical solutions.


On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Cheapest way to send value? Is this what Bitcoin is trying to do? So
>> all of the smart contract, programmable money, consensus coding and
>> tremendous developer effort is bent to the consumer demand for cheaper
>> fees. Surely thou jests!
>
>
> These other features can be replicated into any alternative blockchain,
> including those with lower fees.  In the open-source world of
> cryptocurrency, no feature will remain a value-add for very long after it
> has been identified to be such.  Anything adding value will quickly be
> absorbed into competing alternative blockchains.  That will leave economic
> policy as the distinguishing factor.
>
>> ... it is not the case ... that reluctance to concede
>> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
>> explained in this thread that the protocol's current state of
>> development relies on  blocksize for security and, ultimately, as a
>> means of protecting its degree of decentralization.
>
>
> A slow or lack of increase to maximum transaction rate will cause pressure
> on fees.  Whether this is the desired goal is not relevant.  Everyone has
> agreed this will be the outcome.  As to a smaller block size being needed
> for additional decentralization, one must simply ask how much we are all
> willing to pay for that additional decentralization.  It is likely that the
> benefit thereto will have to be demonstrated by some power attacking and
> destroying a less decentralized currency before the benefit of this feature
> is given monetary value by the market.  Until then, value will bleed to the
> network with the least friction, because it will have the greatest ability
> to grow its network effect.  That means the blockchain with adequate
> features and cheapest fees will eventually have the largest market share.
>
>
> -----Original Message----- From: Venzen Khaosan
> Sent: Wednesday, July 29, 2015 3:11 PM
> To: Raystonn .
> Cc: bitcoin-dev at lists.linuxfoundation.org
> Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
> isn'ttemporary
>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Raystonn, I'm aware that you're addressing your question to Greg
> Maxwell, however a point you keep stating as fact calls for reference:
>
> On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
> [snip]
>>
>> How do you plan to address the bleeding of value from Bitcoin to
>> alternative lower-fee blockchains created by the artificially-high
>> bitcoin transaction fees when users begin looking for the cheapest
>> way to send value?
>
> Cheapest way to send value? Is this what Bitcoin is trying to do? So
> all of the smart contract, programmable money, consensus coding and
> tremendous developer effort is bent to the consumer demand for cheaper
> fees. Surely thou jests!
>
>> Modern economic study has shown that liquidity moves to the
>> location of least friction.
>
> Modern economic study? Can you please provide a link or reference to
> the study you are referring to.
>
> "liquidity moves to the location of least friction"
>
> This sounds like "econo-speak" and makes no sense. The definition of
> Liquidity is the degree to which an asset/security can be bought or
> sold in the market without affecting the price.
>
> That is why bitcoin is said to have low liquidity: buying or selling
> only 100 BTC visibly affects the exchange price. You probably mean
> "people like cheap fees", which is true, but as others have said,
> because of Bitcoin's powerful features, they are willing to pay higher
> fees and wait longer for transactions to execute.
>
> As for your public cross-examination of Greg Maxwell, your case seems
> to  be made on the assumption that limiting the size of the blockchain
> is an attempt to artificially raise tx fees, but it is not the case
> (as you and others repeatedly argue) that reluctance to concede
> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
> explained in this thread that the protocol's current state of
> development relies on  blocksize for security and, ultimately, as a
> means of protecting its degree of decentralization.
>
> Surely, this is an obvious concern even for those who are campaigning
> for the hare-brained ideal of making Bitcoin a "faster, cheaper
> alternative" to visa or paypal? If we lose decentralization, we lose
> the whole thing, right? Incorrect or correct?
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
> RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
> h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
> Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
> YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
> BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
> =lQvy
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

From adam at cypherspace.org  Thu Jul 30 04:00:42 2015
From: adam at cypherspace.org (Adam Back)
Date: Wed, 29 Jul 2015 21:00:42 -0700
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
Message-ID: <CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>

On 29 July 2015 at 20:41, Ryan Butler via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Does an unlimited blocksize imply the lack of a fee market?  Isn't every
> miner able to set their minimum accepted fee or transaction acceptance
> algorithm?

The assumption is that wont work because any miner can break ranks and
do so profitably, so to expect otherwise is to expect oligopoly
behaviour which is the sort of antithesis of a decentralised mining
system.  It's in fact a similar argument as to why decentralisation of
mining provides policy neutrality: some miner somewhere with some
hashrate will process your transaction even if some other miners are
by policy deciding not to mine it.  It is also similar reason why free
transactions are processed today - policies vary and this is good for
ensuring many types of transaction get processed.

Adam

From adam at cypherspace.org  Thu Jul 30 04:05:35 2015
From: adam at cypherspace.org (Adam Back)
Date: Wed, 29 Jul 2015 21:05:35 -0700
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
Message-ID: <CALqxMTGqJDX7KHb0yE+b+PLx4qoEEu31520KXxjSYRvYqBYRYg@mail.gmail.com>

btw the fact that mining is (or can be) anonymous also makes oligopoly
or cartel behaviour likely unstable.  Miners can break ranks and
process transactions others wish to block, or with lower fees than a
cartel would like to charge, without detection.

Anonymous mining is a feature and helps ensure policy neutrality.

This is all overlaid by the 51% attack - if a coherent cartel arose
that could maintain 51% and had enough mutual self-interest to make
that stable, they could attack miners bypassing their cartel policies,
by orphaning their blocks.  This is partly why mining decentralisation
is important.  Also that is an overt act which is very detectable and
could lead to technical counter-measures by the users, who are in
ultimately in control of the protocol.  So there is some game theory
suggesting it would be inadvisable for miners to be overt in cartel
attacks.  Non overt attacks cant prevent anonymous under cutting of
cartel desired fee minimums.

Adam

On 29 July 2015 at 21:00, Adam Back <adam at cypherspace.org> wrote:
> On 29 July 2015 at 20:41, Ryan Butler via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Does an unlimited blocksize imply the lack of a fee market?  Isn't every
>> miner able to set their minimum accepted fee or transaction acceptance
>> algorithm?
>
> The assumption is that wont work because any miner can break ranks and
> do so profitably, so to expect otherwise is to expect oligopoly
> behaviour which is the sort of antithesis of a decentralised mining
> system.  It's in fact a similar argument as to why decentralisation of
> mining provides policy neutrality: some miner somewhere with some
> hashrate will process your transaction even if some other miners are
> by policy deciding not to mine it.  It is also similar reason why free
> transactions are processed today - policies vary and this is good for
> ensuring many types of transaction get processed.
>
> Adam

From jeanpaulkogelman at me.com  Thu Jul 30 04:07:33 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Wed, 29 Jul 2015 21:07:33 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
Message-ID: <A03FDB78-074B-4334-B56A-71593F4D7985@me.com>



> On Jul 29, 2015, at 8:41 PM, Ryan Butler via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Does an unlimited blocksize imply the lack of a fee market?  Isn't every miner able to set their minimum accepted fee or transaction acceptance algorithm?
> 

Yes, miners can set this, and giving them more fine grained control over this (with sane defaults) will have a far bigger impact on establishing a proper fee market than depending on capacity (that nobody has any control over). 

Allowing miners to set up some sort of tiered offering that delays transactions and maybe even have their tiers tie into the exchange rate to keep the costs constant over time.

I'm sure something like this has probably already been discussed before and I'm curious what the objections are to such a thing?

jp
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/cb662375/attachment.html>

From rryananizer at gmail.com  Thu Jul 30 04:48:33 2015
From: rryananizer at gmail.com (Ryan Butler)
Date: Wed, 29 Jul 2015 23:48:33 -0500
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
Message-ID: <CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>

I shouldn't have said unlimited, i should have said a greater blocksize
limit such as 8mb.

Anyways, why is that the assumption?  If a miner can do so, and do so
profitably, isn't that just competition?  Isn't that what we want?  If a
miner can mine low transaction fees at a profit then don't they deserve to
have their spot?  Surely if they do so unprofitably they quickly find
themselves out of business?  Besides, if a miner mines low fee transactions
by breaking rank, how does this affect another miner EXCEPT for the
additional blocksize load.  I would maintain this is just competition
amongst miners gentlemen.  And it's a good thing.

Right now things are distorted because most income comes from the coinbase,
but as transaction fees start to constitute the majority of income this
idea seems to have more importance.
On Jul 29, 2015 11:00 PM, "Adam Back" <adam at cypherspace.org> wrote:

> On 29 July 2015 at 20:41, Ryan Butler via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Does an unlimited blocksize imply the lack of a fee market?  Isn't every
> > miner able to set their minimum accepted fee or transaction acceptance
> > algorithm?
>
> The assumption is that wont work because any miner can break ranks and
> do so profitably, so to expect otherwise is to expect oligopoly
> behaviour which is the sort of antithesis of a decentralised mining
> system.  It's in fact a similar argument as to why decentralisation of
> mining provides policy neutrality: some miner somewhere with some
> hashrate will process your transaction even if some other miners are
> by policy deciding not to mine it.  It is also similar reason why free
> transactions are processed today - policies vary and this is good for
> ensuring many types of transaction get processed.
>
> Adam
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150729/f665c813/attachment-0001.html>

From andrewlecody at gmail.com  Thu Jul 30 04:51:50 2015
From: andrewlecody at gmail.com (Andrew LeCody)
Date: Thu, 30 Jul 2015 04:51:50 +0000
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
Message-ID: <CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>

tl;dr
$100 worth of hardware and $1/mo of expenses, should be able to run a full
Bitcoin node until 2020 with BIP101-size blocks.

----

I got into Bitcoin in the summer of 2010. I'm not a cryptographer, up until
recently my profession has been as a server administrator or systems
engineer.

I'd like to take a second to address the concern that larger blocks would
make it harder to run a full node on limited hardware and would therefore
hurt decentralization. I run two nodes today, one on server-grade hardware
at a datacenter and another on a mini-ITX Atom (dual core) system at my
home.

I detailed the operational costs of my home node today on reddit:
https://www.reddit.com/r/Bitcoin/comments/3f0h8e/mike_h_shuts_down_eric_ls_attempt_to_rewrite/ctkigpr

If I was a new user, wanting to run a full node. The most cost effective
way would likely be with a Raspberry Pi 2 and a 2TB external HDD. Total
cost about $100, including charger, microSD card, etc. That is less than
the cost of a TREZOR hardware wallet. As far as home projects go, not
terribly expensive.

Next, it will need power. According to the Wikipedia article, the rpi 2
model B uses 3.5 watts of power max. The 2TB external drive will draw about
5 watts at max. That's a total of 8.5 watts or 6.205 Kwh per month. In my
area (North Texas) power is about $0.10/Kwh, which means my little node
costs $0.62 per month in power.

Last, lets look at bandwidth. It's difficult to quantify bandwidth cost in
the same way because this is a home connection, mainly because I don't know
how to price in the loss of enjoyment if the system impacts my Internet
usage to a noticeable degree. Luckily, I have some real world data from my
existing home node. Here is the last month:
http://imgur.com/YmJwQpN

This system averages 120 Kbps in and 544 Kbps out. Note, this data is
somewhat skewed, because the system is also used for seeding torrents of
various open source projects. The Bitcoin node itself is typically
connected to about 20 peers at any given time (maxconnections=20).

Subjectively, my wife and I have never noticed any degradation of
performance due to my home server using too much bandwidth. I think it's
safe to say that I can treat the bandwidth is uses as effectively free,
since it's piggybacking on a connection I would be paying for even if I was
not running a Bitcoin node. The bandwidth usage of this Bitcoin node could
increase significantly, without any noticeable impact. If it did, I could
always lower maxconnections back to 8.

The only real constraint seems to be hard drive space, as the full
blockchain and indexes take up about 50GB of space currently. If BIP101 is
implemented, 2TB of storage should be enough for me to continue running my
hypothetical $100 node until about 2020.

It seems to me that at least for the next 5 years, the "small devices" of
today can easily run Bitcoin nodes with BIP101-size blocks, with very
little operational cost.

If anyone would like more detailed data on my existing nodes, please let me
know and I'll attempt to provide it (so long as it doesn't impact my
privacy of course).

On Wed, Jul 29, 2015 at 10:49 PM Adam Back via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I dont think people consider other blockchains as a competitive
> threat.  A PoW-blockchain is a largely singleton data structure for
> security reasons (single highest hashrate), it is hard for an
> alternative chain to bootstrap or provide meaningful security.
> Secondly the world largely lacks expertise to maintain a blockchain to
> bitcoin's security level, perhaps you can see a hint of this in the
> recently disclosed security vulnerability by Pieter Wuille and Gregory
> Maxwell.  Calls to this as an argument are not resonating and probably
> not helping your argument.  Bitcoin has security properties, and a
> competing system cant achieve better properties by bypassing security,
> any blockchain faces the same fundamental security / decentralisation
> limitations.
>
> Secondly Bitcoin can obviously compete with itself with different
> parameters and defacto *does* today.  I think it is a safe estimate
> that > 99% of Bitcoin transactions right now are happening in Bitcoin
> related systems with various degrees of audit, reconciliation,
> provable reserves etc.  I think we can expect this to continue and
> become more secure via more reconciliation, and longer term via
> lightning or Bitcoin sidechains with different parameters.  It is a
> different story to have a single central system (Bitcoin with
> parameters changed to the point of centralisation failure) vs having
> multiple choices, because some transactions can more easily use
> relatively centralised systems (eg micropayments), and more
> interestingly the combination of a secure and decentralised layer 1
> plus choices of less decentralised layer 2 options, can be interesting
> because the layer 2 is provided cover from attack.  There is less to
> be gained by attacking relatively centralised layer 2 because any
> payments at risk of policy abuse (which is typically a small subset)
> can easily switch to layer 1.  That in itself makes layer 2
> transactions also less susceptible to policy abuse.  Further lightning
> it appears from work so far should add significant scale while
> retaining trustlessness and a good degree of decentralisation.
>
> Finally you seem to be focusing on "artificial" limits where that is
> not the issue under consideration.  The limits are technical and
> relating to decentralisation and security.  I wont go over them again
> as this topic has been covered many times in recent months.  Any chain
> that tried to go to extreme parameters (very low block intervals, or
> very large blocksizes) would have the same decentralisation problems
> as Bitcoin would if it did the same thing.  There are a number of alt
> coins that have failed as a result of poor parameter choices, there
> are inherent security limits.
>
> Adam
>
> ps Etiquette note for yourself and others: please dont be repetitive
> or attempt to be forceful.  Many people have spent many years
> understanding this very complex system, from my own experience it is
> rare indeed to think of an entirely new concept or analysis, that
> hasnt' been long considered and put to bed 3 or 4 years ago.
> Thoughtful polite and constructive comments are welcome but I
> recommend to not start from an assumption that you have a clear and
> better insight than the entire technical community, because I have to
> say from my own experience that is very rarely the case.  It can be
> useful to test theories on #bitcoin IRC channel to find out what has
> been already concluded, find the references and avoid having to have
> that hashed out on this list which is trying to be focussed on
> technical solutions.
>
>
> On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >> Cheapest way to send value? Is this what Bitcoin is trying to do? So
> >> all of the smart contract, programmable money, consensus coding and
> >> tremendous developer effort is bent to the consumer demand for cheaper
> >> fees. Surely thou jests!
> >
> >
> > These other features can be replicated into any alternative blockchain,
> > including those with lower fees.  In the open-source world of
> > cryptocurrency, no feature will remain a value-add for very long after it
> > has been identified to be such.  Anything adding value will quickly be
> > absorbed into competing alternative blockchains.  That will leave
> economic
> > policy as the distinguishing factor.
> >
> >> ... it is not the case ... that reluctance to concede
> >> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
> >> explained in this thread that the protocol's current state of
> >> development relies on  blocksize for security and, ultimately, as a
> >> means of protecting its degree of decentralization.
> >
> >
> > A slow or lack of increase to maximum transaction rate will cause
> pressure
> > on fees.  Whether this is the desired goal is not relevant.  Everyone has
> > agreed this will be the outcome.  As to a smaller block size being needed
> > for additional decentralization, one must simply ask how much we are all
> > willing to pay for that additional decentralization.  It is likely that
> the
> > benefit thereto will have to be demonstrated by some power attacking and
> > destroying a less decentralized currency before the benefit of this
> feature
> > is given monetary value by the market.  Until then, value will bleed to
> the
> > network with the least friction, because it will have the greatest
> ability
> > to grow its network effect.  That means the blockchain with adequate
> > features and cheapest fees will eventually have the largest market share.
> >
> >
> > -----Original Message----- From: Venzen Khaosan
> > Sent: Wednesday, July 29, 2015 3:11 PM
> > To: Raystonn .
> > Cc: bitcoin-dev at lists.linuxfoundation.org
> > Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
> > isn'ttemporary
> >
> > -----BEGIN PGP SIGNED MESSAGE-----
> > Hash: SHA1
> >
> > Raystonn, I'm aware that you're addressing your question to Greg
> > Maxwell, however a point you keep stating as fact calls for reference:
> >
> > On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
> > [snip]
> >>
> >> How do you plan to address the bleeding of value from Bitcoin to
> >> alternative lower-fee blockchains created by the artificially-high
> >> bitcoin transaction fees when users begin looking for the cheapest
> >> way to send value?
> >
> > Cheapest way to send value? Is this what Bitcoin is trying to do? So
> > all of the smart contract, programmable money, consensus coding and
> > tremendous developer effort is bent to the consumer demand for cheaper
> > fees. Surely thou jests!
> >
> >> Modern economic study has shown that liquidity moves to the
> >> location of least friction.
> >
> > Modern economic study? Can you please provide a link or reference to
> > the study you are referring to.
> >
> > "liquidity moves to the location of least friction"
> >
> > This sounds like "econo-speak" and makes no sense. The definition of
> > Liquidity is the degree to which an asset/security can be bought or
> > sold in the market without affecting the price.
> >
> > That is why bitcoin is said to have low liquidity: buying or selling
> > only 100 BTC visibly affects the exchange price. You probably mean
> > "people like cheap fees", which is true, but as others have said,
> > because of Bitcoin's powerful features, they are willing to pay higher
> > fees and wait longer for transactions to execute.
> >
> > As for your public cross-examination of Greg Maxwell, your case seems
> > to  be made on the assumption that limiting the size of the blockchain
> > is an attempt to artificially raise tx fees, but it is not the case
> > (as you and others repeatedly argue) that reluctance to concede
> > blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
> > explained in this thread that the protocol's current state of
> > development relies on  blocksize for security and, ultimately, as a
> > means of protecting its degree of decentralization.
> >
> > Surely, this is an obvious concern even for those who are campaigning
> > for the hare-brained ideal of making Bitcoin a "faster, cheaper
> > alternative" to visa or paypal? If we lose decentralization, we lose
> > the whole thing, right? Incorrect or correct?
> > -----BEGIN PGP SIGNATURE-----
> > Version: GnuPG v1
> >
> > iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
> > RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
> > h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
> > Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
> > YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
> > BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
> > =lQvy
> > -----END PGP SIGNATURE-----
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/54c3c041/attachment-0001.html>

From karra.etc at gmail.com  Thu Jul 30 06:28:22 2015
From: karra.etc at gmail.com (Sriram Karra)
Date: Thu, 30 Jul 2015 11:58:22 +0530
Subject: [bitcoin-dev] Data / Evidence regd "penalties" for not validating
 blocks (Was: Why Satoshi's temporary anti-spam measure isn't temporary)
Message-ID: <CAFkt3UN9iEMnBhTP3J=wM2cu5M0-4hxyOG72GANJpGO9hJS-yA@mail.gmail.com>

On Wed, Jul 29, 2015 at 10:23 PM, Gregory Maxwell via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

On Wed, Jul 29, 2015 at 9:59 AM, Mike Hearn via bitcoin-dev
>
>
> > Miners who don't validate have a habit of bleeding money:   that's the
> > system working as designed.
>
> The information I have currently is that the parties engaging in that
> activity found it to be tremendously profitable, even including losses
> from issues.


This got buried in another thread. Putting it out in case anyone has any
insight.

Does anyone have any data on which of the above two viewpoints is actually
correct? Measuring / publishing these effects will go a long way in either
(a) establishing credibility of the 'system design' or (b) trigger a
conversation on what needs fixing.

If there is no such known data, and someone new to Bitcoin would like to do
that, where would be a good place to start, if it is at all possible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/974f1ee3/attachment.html>

From thomas at thomaszander.se  Thu Jul 30 07:08:17 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 09:08:17 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CABm2gDqdN9o0SrpSRA3WPAaMGhbBY3EvXcE-KHa0q2qQgxaQ3Q@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CABm2gDqdN9o0SrpSRA3WPAaMGhbBY3EvXcE-KHa0q2qQgxaQ3Q@mail.gmail.com>
Message-ID: <3401611.LLDRchGhEL@coldstorage>

On Wednesday 29. July 2015 20.00.10 Jorge Tim?n via bitcoin-dev wrote:
> And, of course, short term convenience for users is much more
> important than figuring out the long term viability of the system once
> the seigniorage (spent on the miner's subsidy) goes away.

There are various decades spanned in that sentence.  Your idea of "short term" 
is vastly different from mine.
-- 
Thomas Zander

From elombrozo at gmail.com  Thu Jul 30 08:21:02 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 30 Jul 2015 01:21:02 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
Message-ID: <74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>

I usually avoid troll-infested Dunning-Kruger-gone-wild fests like reddit, so I?ll leave that to others.

But I do want to clarify a couple things here, though, Andrew.

First of all, the issue is not about whether it is affordable for a highly motivated, technically skilled person to continue running a node even if we increase block size by a factor of X. This misses the point for at least a couple reasons:

- Regardless of what that X is, it isn?t really going to be what makes this technology accessible to the masses. We would likely need the X to be in the thousands before we start to really take on players like Visa. Despite what people might have thought in 2009, it turns out Bitcoin is probably pretty ill-suited as a database in which to store the entire transaction history of the entire world. It?s looking to be more of a censorship-resistant dispute resolution mechanism that provides very well-defined settlement guarantees with the potential for encoding complex rules. It?s possible to build higher level tiers on top of it that DO support high volume transaction processing WITHOUT costing thousands of times more, and these approaches are looking quite promising. However, it doesn?t seem very many people in this space quite grasp this paradigm shift yet.

- What matters is not how a relatively small number of well-intentioned people in the network behave. What matters is how the network behaves as a whole?and a number of the people most intimately familiar with the inner workings of the system (some of whom are in this thread) think that given what we now today about the Bitcoin network, increasing block size externalizes costs in dangerous ways. Remember that total cost includes not just equipment costs but also things like block propagation latency and specifically identified security risks. Some of these security risks were only appreciated relatively recently and were completely unknown in 2009.


> On Jul 29, 2015, at 9:51 PM, Andrew LeCody via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> tl;dr
> $100 worth of hardware and $1/mo of expenses, should be able to run a full
> Bitcoin node until 2020 with BIP101-size blocks.
> 
> ----
> 
> I got into Bitcoin in the summer of 2010. I'm not a cryptographer, up until
> recently my profession has been as a server administrator or systems
> engineer.
> 
> I'd like to take a second to address the concern that larger blocks would
> make it harder to run a full node on limited hardware and would therefore
> hurt decentralization. I run two nodes today, one on server-grade hardware
> at a datacenter and another on a mini-ITX Atom (dual core) system at my
> home.
> 
> I detailed the operational costs of my home node today on reddit:
> https://www.reddit.com/r/Bitcoin/comments/3f0h8e/mike_h_shuts_down_eric_ls_attempt_to_rewrite/ctkigpr
> 
> If I was a new user, wanting to run a full node. The most cost effective
> way would likely be with a Raspberry Pi 2 and a 2TB external HDD. Total
> cost about $100, including charger, microSD card, etc. That is less than
> the cost of a TREZOR hardware wallet. As far as home projects go, not
> terribly expensive.
> 
> Next, it will need power. According to the Wikipedia article, the rpi 2
> model B uses 3.5 watts of power max. The 2TB external drive will draw about
> 5 watts at max. That's a total of 8.5 watts or 6.205 Kwh per month. In my
> area (North Texas) power is about $0.10/Kwh, which means my little node
> costs $0.62 per month in power.
> 
> Last, lets look at bandwidth. It's difficult to quantify bandwidth cost in
> the same way because this is a home connection, mainly because I don't know
> how to price in the loss of enjoyment if the system impacts my Internet
> usage to a noticeable degree. Luckily, I have some real world data from my
> existing home node. Here is the last month:
> http://imgur.com/YmJwQpN
> 
> This system averages 120 Kbps in and 544 Kbps out. Note, this data is
> somewhat skewed, because the system is also used for seeding torrents of
> various open source projects. The Bitcoin node itself is typically
> connected to about 20 peers at any given time (maxconnections=20).
> 
> Subjectively, my wife and I have never noticed any degradation of
> performance due to my home server using too much bandwidth. I think it's
> safe to say that I can treat the bandwidth is uses as effectively free,
> since it's piggybacking on a connection I would be paying for even if I was
> not running a Bitcoin node. The bandwidth usage of this Bitcoin node could
> increase significantly, without any noticeable impact. If it did, I could
> always lower maxconnections back to 8.
> 
> The only real constraint seems to be hard drive space, as the full
> blockchain and indexes take up about 50GB of space currently. If BIP101 is
> implemented, 2TB of storage should be enough for me to continue running my
> hypothetical $100 node until about 2020.
> 
> It seems to me that at least for the next 5 years, the "small devices" of
> today can easily run Bitcoin nodes with BIP101-size blocks, with very
> little operational cost.
> 
> If anyone would like more detailed data on my existing nodes, please let me
> know and I'll attempt to provide it (so long as it doesn't impact my
> privacy of course).
> 
> On Wed, Jul 29, 2015 at 10:49 PM Adam Back via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
>> I dont think people consider other blockchains as a competitive
>> threat.  A PoW-blockchain is a largely singleton data structure for
>> security reasons (single highest hashrate), it is hard for an
>> alternative chain to bootstrap or provide meaningful security.
>> Secondly the world largely lacks expertise to maintain a blockchain to
>> bitcoin's security level, perhaps you can see a hint of this in the
>> recently disclosed security vulnerability by Pieter Wuille and Gregory
>> Maxwell.  Calls to this as an argument are not resonating and probably
>> not helping your argument.  Bitcoin has security properties, and a
>> competing system cant achieve better properties by bypassing security,
>> any blockchain faces the same fundamental security / decentralisation
>> limitations.
>> 
>> Secondly Bitcoin can obviously compete with itself with different
>> parameters and defacto *does* today.  I think it is a safe estimate
>> that > 99% of Bitcoin transactions right now are happening in Bitcoin
>> related systems with various degrees of audit, reconciliation,
>> provable reserves etc.  I think we can expect this to continue and
>> become more secure via more reconciliation, and longer term via
>> lightning or Bitcoin sidechains with different parameters.  It is a
>> different story to have a single central system (Bitcoin with
>> parameters changed to the point of centralisation failure) vs having
>> multiple choices, because some transactions can more easily use
>> relatively centralised systems (eg micropayments), and more
>> interestingly the combination of a secure and decentralised layer 1
>> plus choices of less decentralised layer 2 options, can be interesting
>> because the layer 2 is provided cover from attack.  There is less to
>> be gained by attacking relatively centralised layer 2 because any
>> payments at risk of policy abuse (which is typically a small subset)
>> can easily switch to layer 1.  That in itself makes layer 2
>> transactions also less susceptible to policy abuse.  Further lightning
>> it appears from work so far should add significant scale while
>> retaining trustlessness and a good degree of decentralisation.
>> 
>> Finally you seem to be focusing on "artificial" limits where that is
>> not the issue under consideration.  The limits are technical and
>> relating to decentralisation and security.  I wont go over them again
>> as this topic has been covered many times in recent months.  Any chain
>> that tried to go to extreme parameters (very low block intervals, or
>> very large blocksizes) would have the same decentralisation problems
>> as Bitcoin would if it did the same thing.  There are a number of alt
>> coins that have failed as a result of poor parameter choices, there
>> are inherent security limits.
>> 
>> Adam
>> 
>> ps Etiquette note for yourself and others: please dont be repetitive
>> or attempt to be forceful.  Many people have spent many years
>> understanding this very complex system, from my own experience it is
>> rare indeed to think of an entirely new concept or analysis, that
>> hasnt' been long considered and put to bed 3 or 4 years ago.
>> Thoughtful polite and constructive comments are welcome but I
>> recommend to not start from an assumption that you have a clear and
>> better insight than the entire technical community, because I have to
>> say from my own experience that is very rarely the case.  It can be
>> useful to test theories on #bitcoin IRC channel to find out what has
>> been already concluded, find the references and avoid having to have
>> that hashed out on this list which is trying to be focussed on
>> technical solutions.
>> 
>> 
>> On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>> Cheapest way to send value? Is this what Bitcoin is trying to do? So
>>>> all of the smart contract, programmable money, consensus coding and
>>>> tremendous developer effort is bent to the consumer demand for cheaper
>>>> fees. Surely thou jests!
>>> 
>>> 
>>> These other features can be replicated into any alternative blockchain,
>>> including those with lower fees.  In the open-source world of
>>> cryptocurrency, no feature will remain a value-add for very long after it
>>> has been identified to be such.  Anything adding value will quickly be
>>> absorbed into competing alternative blockchains.  That will leave
>> economic
>>> policy as the distinguishing factor.
>>> 
>>>> ... it is not the case ... that reluctance to concede
>>>> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
>>>> explained in this thread that the protocol's current state of
>>>> development relies on  blocksize for security and, ultimately, as a
>>>> means of protecting its degree of decentralization.
>>> 
>>> 
>>> A slow or lack of increase to maximum transaction rate will cause
>> pressure
>>> on fees.  Whether this is the desired goal is not relevant.  Everyone has
>>> agreed this will be the outcome.  As to a smaller block size being needed
>>> for additional decentralization, one must simply ask how much we are all
>>> willing to pay for that additional decentralization.  It is likely that
>> the
>>> benefit thereto will have to be demonstrated by some power attacking and
>>> destroying a less decentralized currency before the benefit of this
>> feature
>>> is given monetary value by the market.  Until then, value will bleed to
>> the
>>> network with the least friction, because it will have the greatest
>> ability
>>> to grow its network effect.  That means the blockchain with adequate
>>> features and cheapest fees will eventually have the largest market share.
>>> 
>>> 
>>> -----Original Message----- From: Venzen Khaosan
>>> Sent: Wednesday, July 29, 2015 3:11 PM
>>> To: Raystonn .
>>> Cc: bitcoin-dev at lists.linuxfoundation.org
>>> Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
>>> isn'ttemporary
>>> 
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>> 
>>> Raystonn, I'm aware that you're addressing your question to Greg
>>> Maxwell, however a point you keep stating as fact calls for reference:
>>> 
>>> On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
>>> [snip]
>>>> 
>>>> How do you plan to address the bleeding of value from Bitcoin to
>>>> alternative lower-fee blockchains created by the artificially-high
>>>> bitcoin transaction fees when users begin looking for the cheapest
>>>> way to send value?
>>> 
>>> Cheapest way to send value? Is this what Bitcoin is trying to do? So
>>> all of the smart contract, programmable money, consensus coding and
>>> tremendous developer effort is bent to the consumer demand for cheaper
>>> fees. Surely thou jests!
>>> 
>>>> Modern economic study has shown that liquidity moves to the
>>>> location of least friction.
>>> 
>>> Modern economic study? Can you please provide a link or reference to
>>> the study you are referring to.
>>> 
>>> "liquidity moves to the location of least friction"
>>> 
>>> This sounds like "econo-speak" and makes no sense. The definition of
>>> Liquidity is the degree to which an asset/security can be bought or
>>> sold in the market without affecting the price.
>>> 
>>> That is why bitcoin is said to have low liquidity: buying or selling
>>> only 100 BTC visibly affects the exchange price. You probably mean
>>> "people like cheap fees", which is true, but as others have said,
>>> because of Bitcoin's powerful features, they are willing to pay higher
>>> fees and wait longer for transactions to execute.
>>> 
>>> As for your public cross-examination of Greg Maxwell, your case seems
>>> to  be made on the assumption that limiting the size of the blockchain
>>> is an attempt to artificially raise tx fees, but it is not the case
>>> (as you and others repeatedly argue) that reluctance to concede
>>> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
>>> explained in this thread that the protocol's current state of
>>> development relies on  blocksize for security and, ultimately, as a
>>> means of protecting its degree of decentralization.
>>> 
>>> Surely, this is an obvious concern even for those who are campaigning
>>> for the hare-brained ideal of making Bitcoin a "faster, cheaper
>>> alternative" to visa or paypal? If we lose decentralization, we lose
>>> the whole thing, right? Incorrect or correct?
>>> -----BEGIN PGP SIGNATURE-----
>>> Version: GnuPG v1
>>> 
>>> iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
>>> RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
>>> h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
>>> Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
>>> YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
>>> BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
>>> =lQvy
>>> -----END PGP SIGNATURE-----
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/e5b0540c/attachment.sig>

From odinn.cyberguerrilla at riseup.net  Thu Jul 30 09:05:23 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 30 Jul 2015 02:05:23 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
 temporary
In-Reply-To: <CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>	<CAAS2fgSP7hBVx0GR=rA+nOzopip3ne47WmHJLD-+yViN+wRm4A@mail.gmail.com>
	<CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>
Message-ID: <55B9E8D3.9010204@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mike, tone it down, please, when I read your stuff it's like you are
drinking too much Red bull or something.

On 07/29/2015 11:03 AM, Mike Hearn via bitcoin-dev wrote:
> It was _well_ .... understood that the users of Bitcoin would wish 
> to protect its decenteralization by limiting the size of the chain 
> to keep it verifyable on small devices.
> 
> 
> No it wasn't. That is something you invented yourself much later.
> "Small devices" isn't even defined anywhere, so there can't have
> been any such understanding.
> 
> The actual understanding was the opposite. Satoshi's words:
> 
> "At first, most users would run network nodes, but as the network
> grows beyond a certain point, it would be left more and more to
> specialists with server farms of specialized hardware."
> 
> That is from 2008:
> 
> 
> http://satoshi.nakamotoinstitute.org/emails/cryptography/2/#selection-
75.16-83.14
> 
> 
> Then he went on to talk about Moore's law and streaming HD videos
> and the like. At no point did he ever talk about limiting the
> system for "small devices".
> 
> I have been both working on and using Bitcoin for longer than you
> have been around, Gregory. Please don't attempt to bullshit me
> about what the plan was. And stop obscuring what this is about.
> It's not some personality cult - the reason I keep beating you over
> the head with Satoshi's words is because it's that founding vision
> of the project that brought everyone together, and gave us all a
> shared goal.
> 
> If Satoshi had said from the start,
> 
> "Bitcoin cannot ever scale. So I intend it to be heavily limited
> and used only by a handful of people for rare transactions. I
> picked 1mb as an arbitrary limit to ensure it never gets popular."
> 
> ... then I'd have not bothered getting involved. I'd have said,
> huh, I don't really feel like putting effort into a system that is
> intended to NOT be popular. And so would many other people.
> 
> 
> Don't think you can claim otherwise, because doing so is flat out
> wrong.
> 
> 
> I just did claim otherwise and no, I am not wrong at all.
> 
> (Which, incidentially, is insanely toxic to any security argument
> for SPV; ---- and now we see the market failure that results from
> your and Gavin years long campaign to ignore problems in the mining
> ecosystem:
> 
> 
> Since when have we "campaigned" to "ignore problems" in the mining 
> ecosystem? What does that even mean? Was it not I who wrote this
> blog post?
> 
> 
> http://blog.bitcoinfoundation.org/mining-decentralisation-the-low-hang
ing-fruit/
>
>  Gregory, you are getting really crazy now. Stop it. The trend
> towards mining centralisation is not the fault of Gavin or myself,
> or anyone else. And SPV is exactly what was always intended to be
> used. It's not something I "fixated" on, it's right there in the
> white paper. Satoshi even encouraged me to keep working on bitcoinj
> before he left!
> 
> 
> Look, it's clear you have decided that the way Bitcoin was meant
> to evolve isn't to your personal liking. That's fine. Go make an
> alt coin where your founding documents state that it's intended to
> always run on a 2015 Raspberry Pi, or whatever it is you mean by
> "small device". Remove SPV capability from the protocol so everyone
> has to fully validate. Make sure that's the understanding that
> everyone has from day one about what your alt coin is for. Then
> when someone says, gee, it'd be nice if we had some more capacity,
> you or someone else can go point at the announcement emails and say
> "no, GregCoin is meant to always be verifiable on small devices,
> that's our social contract and it's written into the consensus
> rules for that reason".
> 
> But your attempt to convert Bitcoin into that altcoin by exploiting
> a temporary hack is desperate, and deeply upsetting to many people.
> Not many quit their jobs and created companies to build products
> only for today's tiny user base.
> 
> 
> My list of "things a full node is useful for" wasn't ordered by 
> importance, by the way.
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuejTAAoJEGxwq/inSG8CKigH+gJpevuZ/mbCy9cjhLvX6VT/
NBQjU82EPDkMkASqoQOekIBOrgODBcN8HsR1xnPHYZYh9HmMaQ/kZDZI3EUP76CU
s1vvL0AQC11b0aai+z1K5XU6xK+HxRewujBj9lKtH/JuRUHoKUrRIn/5KxT6Nb5+
OXCpoXKnynfu7T57RrVBOKCPW0Oo7jay9owjDzy+J/ATfqqPDB++7nDbPPVzyrNs
6TlHaC/CxRcq832lwBe1KwaX4A7KFiqHwWoK5/R7Ccyj5X21nHXnDOuXLqwOfGtH
1aARAQ6dqHor5Kw9/Y7yAdoNnrK3XYR80Qdr6I77f3X2B40GdnBiBOSUpoQNAB0=
=nRef
-----END PGP SIGNATURE-----

From elombrozo at gmail.com  Thu Jul 30 09:15:25 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 30 Jul 2015 02:15:25 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
Message-ID: <4452AA7F-020C-4457-AAA0-0F6871C22458@gmail.com>

> On Jul 30, 2015, at 1:21 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:
> 
> I usually avoid troll-infested Dunning-Kruger-gone-wild fests like reddit, so I?ll leave that to others.
> 
> But I do want to clarify a couple things here, though, Andrew.
> 
> First of all, the issue is not about whether it is affordable for a highly motivated, technically skilled person to continue running a node even if we increase block size by a factor of X. This misses the point for at least a couple reasons:
> 
> - Regardless of what that X is, it isn?t really going to be what makes this technology accessible to the masses. We would likely need the X to be in the thousands before we start to really take on players like Visa. Despite what people might have thought in 2009, it turns out Bitcoin is probably pretty ill-suited as a database in which to store the entire transaction history of the entire world. It?s looking to be more of a censorship-resistant dispute resolution mechanism that provides very well-defined settlement guarantees with the potential for encoding complex rules. It?s possible to build higher level tiers on top of it that DO support high volume transaction processing WITHOUT costing thousands of times more, and these approaches are looking quite promising. However, it doesn?t seem very many people in this space quite grasp this paradigm shift yet.
> 
> - What matters is not how a relatively small number of well-intentioned people in the network behave. What matters is how the network behaves as a whole?and a number of the people most intimately familiar with the inner workings of the system (some of whom are in this thread) think that given what we now today about the Bitcoin network, increasing block size externalizes costs in dangerous ways. Remember that total cost includes not just equipment costs but also things like block propagation latency and specifically identified security risks. Some of these security risks were only appreciated relatively recently and were completely unknown in 2009.
> 

Secondly, there are a few well-identified problems with the protocol design that might be possible to fix that would perhaps allow us to remove the block size limit entirely without sacrificing security. I listed the ones that come to my mind at the beginning of this thread. I EMPHATICALLY state that in no way am I fundamentally opposed to raising or even getting rid of the block size limit. But I believe these problems should be addressed first. And it?s easier to address them and tackle them if we don?t have to worry about potential security risks and higher costs that come from insisting on bigger blocks right now.

- Eric


>> On Jul 29, 2015, at 9:51 PM, Andrew LeCody via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>> tl;dr
>> $100 worth of hardware and $1/mo of expenses, should be able to run a full
>> Bitcoin node until 2020 with BIP101-size blocks.
>> 
>> ----
>> 
>> I got into Bitcoin in the summer of 2010. I'm not a cryptographer, up until
>> recently my profession has been as a server administrator or systems
>> engineer.
>> 
>> I'd like to take a second to address the concern that larger blocks would
>> make it harder to run a full node on limited hardware and would therefore
>> hurt decentralization. I run two nodes today, one on server-grade hardware
>> at a datacenter and another on a mini-ITX Atom (dual core) system at my
>> home.
>> 
>> I detailed the operational costs of my home node today on reddit:
>> https://www.reddit.com/r/Bitcoin/comments/3f0h8e/mike_h_shuts_down_eric_ls_attempt_to_rewrite/ctkigpr
>> 
>> If I was a new user, wanting to run a full node. The most cost effective
>> way would likely be with a Raspberry Pi 2 and a 2TB external HDD. Total
>> cost about $100, including charger, microSD card, etc. That is less than
>> the cost of a TREZOR hardware wallet. As far as home projects go, not
>> terribly expensive.
>> 
>> Next, it will need power. According to the Wikipedia article, the rpi 2
>> model B uses 3.5 watts of power max. The 2TB external drive will draw about
>> 5 watts at max. That's a total of 8.5 watts or 6.205 Kwh per month. In my
>> area (North Texas) power is about $0.10/Kwh, which means my little node
>> costs $0.62 per month in power.
>> 
>> Last, lets look at bandwidth. It's difficult to quantify bandwidth cost in
>> the same way because this is a home connection, mainly because I don't know
>> how to price in the loss of enjoyment if the system impacts my Internet
>> usage to a noticeable degree. Luckily, I have some real world data from my
>> existing home node. Here is the last month:
>> http://imgur.com/YmJwQpN
>> 
>> This system averages 120 Kbps in and 544 Kbps out. Note, this data is
>> somewhat skewed, because the system is also used for seeding torrents of
>> various open source projects. The Bitcoin node itself is typically
>> connected to about 20 peers at any given time (maxconnections=20).
>> 
>> Subjectively, my wife and I have never noticed any degradation of
>> performance due to my home server using too much bandwidth. I think it's
>> safe to say that I can treat the bandwidth is uses as effectively free,
>> since it's piggybacking on a connection I would be paying for even if I was
>> not running a Bitcoin node. The bandwidth usage of this Bitcoin node could
>> increase significantly, without any noticeable impact. If it did, I could
>> always lower maxconnections back to 8.
>> 
>> The only real constraint seems to be hard drive space, as the full
>> blockchain and indexes take up about 50GB of space currently. If BIP101 is
>> implemented, 2TB of storage should be enough for me to continue running my
>> hypothetical $100 node until about 2020.
>> 
>> It seems to me that at least for the next 5 years, the "small devices" of
>> today can easily run Bitcoin nodes with BIP101-size blocks, with very
>> little operational cost.
>> 
>> If anyone would like more detailed data on my existing nodes, please let me
>> know and I'll attempt to provide it (so long as it doesn't impact my
>> privacy of course).
>> 
>> On Wed, Jul 29, 2015 at 10:49 PM Adam Back via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
>>> I dont think people consider other blockchains as a competitive
>>> threat.  A PoW-blockchain is a largely singleton data structure for
>>> security reasons (single highest hashrate), it is hard for an
>>> alternative chain to bootstrap or provide meaningful security.
>>> Secondly the world largely lacks expertise to maintain a blockchain to
>>> bitcoin's security level, perhaps you can see a hint of this in the
>>> recently disclosed security vulnerability by Pieter Wuille and Gregory
>>> Maxwell.  Calls to this as an argument are not resonating and probably
>>> not helping your argument.  Bitcoin has security properties, and a
>>> competing system cant achieve better properties by bypassing security,
>>> any blockchain faces the same fundamental security / decentralisation
>>> limitations.
>>> 
>>> Secondly Bitcoin can obviously compete with itself with different
>>> parameters and defacto *does* today.  I think it is a safe estimate
>>> that > 99% of Bitcoin transactions right now are happening in Bitcoin
>>> related systems with various degrees of audit, reconciliation,
>>> provable reserves etc.  I think we can expect this to continue and
>>> become more secure via more reconciliation, and longer term via
>>> lightning or Bitcoin sidechains with different parameters.  It is a
>>> different story to have a single central system (Bitcoin with
>>> parameters changed to the point of centralisation failure) vs having
>>> multiple choices, because some transactions can more easily use
>>> relatively centralised systems (eg micropayments), and more
>>> interestingly the combination of a secure and decentralised layer 1
>>> plus choices of less decentralised layer 2 options, can be interesting
>>> because the layer 2 is provided cover from attack.  There is less to
>>> be gained by attacking relatively centralised layer 2 because any
>>> payments at risk of policy abuse (which is typically a small subset)
>>> can easily switch to layer 1.  That in itself makes layer 2
>>> transactions also less susceptible to policy abuse.  Further lightning
>>> it appears from work so far should add significant scale while
>>> retaining trustlessness and a good degree of decentralisation.
>>> 
>>> Finally you seem to be focusing on "artificial" limits where that is
>>> not the issue under consideration.  The limits are technical and
>>> relating to decentralisation and security.  I wont go over them again
>>> as this topic has been covered many times in recent months.  Any chain
>>> that tried to go to extreme parameters (very low block intervals, or
>>> very large blocksizes) would have the same decentralisation problems
>>> as Bitcoin would if it did the same thing.  There are a number of alt
>>> coins that have failed as a result of poor parameter choices, there
>>> are inherent security limits.
>>> 
>>> Adam
>>> 
>>> ps Etiquette note for yourself and others: please dont be repetitive
>>> or attempt to be forceful.  Many people have spent many years
>>> understanding this very complex system, from my own experience it is
>>> rare indeed to think of an entirely new concept or analysis, that
>>> hasnt' been long considered and put to bed 3 or 4 years ago.
>>> Thoughtful polite and constructive comments are welcome but I
>>> recommend to not start from an assumption that you have a clear and
>>> better insight than the entire technical community, because I have to
>>> say from my own experience that is very rarely the case.  It can be
>>> useful to test theories on #bitcoin IRC channel to find out what has
>>> been already concluded, find the references and avoid having to have
>>> that hashed out on this list which is trying to be focussed on
>>> technical solutions.
>>> 
>>> 
>>> On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev
>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>>> Cheapest way to send value? Is this what Bitcoin is trying to do? So
>>>>> all of the smart contract, programmable money, consensus coding and
>>>>> tremendous developer effort is bent to the consumer demand for cheaper
>>>>> fees. Surely thou jests!
>>>> 
>>>> 
>>>> These other features can be replicated into any alternative blockchain,
>>>> including those with lower fees.  In the open-source world of
>>>> cryptocurrency, no feature will remain a value-add for very long after it
>>>> has been identified to be such.  Anything adding value will quickly be
>>>> absorbed into competing alternative blockchains.  That will leave
>>> economic
>>>> policy as the distinguishing factor.
>>>> 
>>>>> ... it is not the case ... that reluctance to concede
>>>>> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
>>>>> explained in this thread that the protocol's current state of
>>>>> development relies on  blocksize for security and, ultimately, as a
>>>>> means of protecting its degree of decentralization.
>>>> 
>>>> 
>>>> A slow or lack of increase to maximum transaction rate will cause
>>> pressure
>>>> on fees.  Whether this is the desired goal is not relevant.  Everyone has
>>>> agreed this will be the outcome.  As to a smaller block size being needed
>>>> for additional decentralization, one must simply ask how much we are all
>>>> willing to pay for that additional decentralization.  It is likely that
>>> the
>>>> benefit thereto will have to be demonstrated by some power attacking and
>>>> destroying a less decentralized currency before the benefit of this
>>> feature
>>>> is given monetary value by the market.  Until then, value will bleed to
>>> the
>>>> network with the least friction, because it will have the greatest
>>> ability
>>>> to grow its network effect.  That means the blockchain with adequate
>>>> features and cheapest fees will eventually have the largest market share.
>>>> 
>>>> 
>>>> -----Original Message----- From: Venzen Khaosan
>>>> Sent: Wednesday, July 29, 2015 3:11 PM
>>>> To: Raystonn .
>>>> Cc: bitcoin-dev at lists.linuxfoundation.org
>>>> Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
>>>> isn'ttemporary
>>>> 
>>>> -----BEGIN PGP SIGNED MESSAGE-----
>>>> Hash: SHA1
>>>> 
>>>> Raystonn, I'm aware that you're addressing your question to Greg
>>>> Maxwell, however a point you keep stating as fact calls for reference:
>>>> 
>>>> On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote:
>>>> [snip]
>>>>> 
>>>>> How do you plan to address the bleeding of value from Bitcoin to
>>>>> alternative lower-fee blockchains created by the artificially-high
>>>>> bitcoin transaction fees when users begin looking for the cheapest
>>>>> way to send value?
>>>> 
>>>> Cheapest way to send value? Is this what Bitcoin is trying to do? So
>>>> all of the smart contract, programmable money, consensus coding and
>>>> tremendous developer effort is bent to the consumer demand for cheaper
>>>> fees. Surely thou jests!
>>>> 
>>>>> Modern economic study has shown that liquidity moves to the
>>>>> location of least friction.
>>>> 
>>>> Modern economic study? Can you please provide a link or reference to
>>>> the study you are referring to.
>>>> 
>>>> "liquidity moves to the location of least friction"
>>>> 
>>>> This sounds like "econo-speak" and makes no sense. The definition of
>>>> Liquidity is the degree to which an asset/security can be bought or
>>>> sold in the market without affecting the price.
>>>> 
>>>> That is why bitcoin is said to have low liquidity: buying or selling
>>>> only 100 BTC visibly affects the exchange price. You probably mean
>>>> "people like cheap fees", which is true, but as others have said,
>>>> because of Bitcoin's powerful features, they are willing to pay higher
>>>> fees and wait longer for transactions to execute.
>>>> 
>>>> As for your public cross-examination of Greg Maxwell, your case seems
>>>> to  be made on the assumption that limiting the size of the blockchain
>>>> is an attempt to artificially raise tx fees, but it is not the case
>>>> (as you and others repeatedly argue) that reluctance to concede
>>>> blocksize is an attempt to constrain capacity. Greg Maxwell thoroughly
>>>> explained in this thread that the protocol's current state of
>>>> development relies on  blocksize for security and, ultimately, as a
>>>> means of protecting its degree of decentralization.
>>>> 
>>>> Surely, this is an obvious concern even for those who are campaigning
>>>> for the hare-brained ideal of making Bitcoin a "faster, cheaper
>>>> alternative" to visa or paypal? If we lose decentralization, we lose
>>>> the whole thing, right? Incorrect or correct?
>>>> -----BEGIN PGP SIGNATURE-----
>>>> Version: GnuPG v1
>>>> 
>>>> iQEcBAEBAgAGBQJVuU+rAAoJEGwAhlQc8H1m9nkH/00xXJ53H4qvHjPrdNRniwvB
>>>> RXi96QjbnVj/fxU2J2TBPYF1LxJ13avyL58bbaJF7GKqcpoYNZArCKLQyGaZGCTp
>>>> h7Oe/0S+b1QCrvxcVK8Ikeb7a1h9wnhAPf1FvAWoJ1cFGx/qGHetKqx1dQTWkVWz
>>>> Mp17vjaofmp2OhBzh0Smj+wV9hXn9w9giZKc6UGvC0Qc7Rf3GL/YVJzM2CZNvlLS
>>>> YhQSqnnqduugYztqLV/NvNExF41zC2IMyNmA41q46v/nh8stNSIcJleD39csNMfx
>>>> BXjrlnPfZ+JI4RhiH3I0qjOYWPtBH9od788DY509EOn3MT4vU+EVcQaxyuFqZyw=
>>>> =lQvy
>>>> -----END PGP SIGNATURE-----
>>>> _______________________________________________
>>>> bitcoin-dev mailing list
>>>> bitcoin-dev at lists.linuxfoundation.org
>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> _______________________________________________
>>> bitcoin-dev mailing list
>>> bitcoin-dev at lists.linuxfoundation.org
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>> 
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/52d2c365/attachment.sig>

From venzen at mail.bihthai.net  Thu Jul 30 09:16:24 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Thu, 30 Jul 2015 16:16:24 +0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>	<55B94FAD.7040205@mail.bihthai.net>	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
Message-ID: <55B9EB68.9020703@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Adam,

- From your explanation it is evident that fast, cheap bitcoin
transactions are possible. It is encouraging that Bitcoin _can_ indeed
compete with Visa, Paypal, et al. via Layer 2 protocols such as Lightning.

The youtube interview with you and Greg re: Lightning requires some
concentration and I'll have to watch it another couple of times to
better grasp everything that is explained about the protocol and its
interaction with Bitcoin.

Thank you for your considered and informative response, else Raystonn
and I might have gotten in an unnecessary scrap about fees, economics
and what not.

regards,
Venzen Khaosan



On 07/30/2015 10:49 AM, Adam Back wrote:
> I dont think people consider other blockchains as a competitive 
> threat.  A PoW-blockchain is a largely singleton data structure
> for security reasons (single highest hashrate), it is hard for an 
> alternative chain to bootstrap or provide meaningful security. 
> Secondly the world largely lacks expertise to maintain a blockchain
> to bitcoin's security level, perhaps you can see a hint of this in
> the recently disclosed security vulnerability by Pieter Wuille and
> Gregory Maxwell.  Calls to this as an argument are not resonating
> and probably not helping your argument.  Bitcoin has security
> properties, and a competing system cant achieve better properties
> by bypassing security, any blockchain faces the same fundamental
> security / decentralisation limitations.
> 
> Secondly Bitcoin can obviously compete with itself with different 
> parameters and defacto *does* today.  I think it is a safe
> estimate that > 99% of Bitcoin transactions right now are happening
> in Bitcoin related systems with various degrees of audit,
> reconciliation, provable reserves etc.  I think we can expect this
> to continue and become more secure via more reconciliation, and
> longer term via lightning or Bitcoin sidechains with different
> parameters.  It is a different story to have a single central
> system (Bitcoin with parameters changed to the point of
> centralisation failure) vs having multiple choices, because some
> transactions can more easily use relatively centralised systems (eg
> micropayments), and more interestingly the combination of a secure
> and decentralised layer 1 plus choices of less decentralised layer
> 2 options, can be interesting because the layer 2 is provided cover
> from attack.  There is less to be gained by attacking relatively
> centralised layer 2 because any payments at risk of policy abuse
> (which is typically a small subset) can easily switch to layer 1.
> That in itself makes layer 2 transactions also less susceptible to
> policy abuse.  Further lightning it appears from work so far should
> add significant scale while retaining trustlessness and a good
> degree of decentralisation.
> 
> Finally you seem to be focusing on "artificial" limits where that
> is not the issue under consideration.  The limits are technical
> and relating to decentralisation and security.  I wont go over them
> again as this topic has been covered many times in recent months.
> Any chain that tried to go to extreme parameters (very low block
> intervals, or very large blocksizes) would have the same
> decentralisation problems as Bitcoin would if it did the same
> thing.  There are a number of alt coins that have failed as a
> result of poor parameter choices, there are inherent security
> limits.
> 
> Adam
> 
> ps Etiquette note for yourself and others: please dont be
> repetitive or attempt to be forceful.  Many people have spent many
> years understanding this very complex system, from my own
> experience it is rare indeed to think of an entirely new concept or
> analysis, that hasnt' been long considered and put to bed 3 or 4
> years ago. Thoughtful polite and constructive comments are welcome
> but I recommend to not start from an assumption that you have a
> clear and better insight than the entire technical community,
> because I have to say from my own experience that is very rarely
> the case.  It can be useful to test theories on #bitcoin IRC
> channel to find out what has been already concluded, find the
> references and avoid having to have that hashed out on this list
> which is trying to be focussed on technical solutions.
> 
> 
> On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> Cheapest way to send value? Is this what Bitcoin is trying to
>>> do? So all of the smart contract, programmable money, consensus
>>> coding and tremendous developer effort is bent to the consumer
>>> demand for cheaper fees. Surely thou jests!
>> 
>> 
>> These other features can be replicated into any alternative
>> blockchain, including those with lower fees.  In the open-source
>> world of cryptocurrency, no feature will remain a value-add for
>> very long after it has been identified to be such.  Anything
>> adding value will quickly be absorbed into competing alternative
>> blockchains.  That will leave economic policy as the
>> distinguishing factor.
>> 
>>> ... it is not the case ... that reluctance to concede blocksize
>>> is an attempt to constrain capacity. Greg Maxwell thoroughly 
>>> explained in this thread that the protocol's current state of 
>>> development relies on  blocksize for security and, ultimately,
>>> as a means of protecting its degree of decentralization.
>> 
>> 
>> A slow or lack of increase to maximum transaction rate will cause
>> pressure on fees.  Whether this is the desired goal is not
>> relevant.  Everyone has agreed this will be the outcome.  As to a
>> smaller block size being needed for additional decentralization,
>> one must simply ask how much we are all willing to pay for that
>> additional decentralization.  It is likely that the benefit
>> thereto will have to be demonstrated by some power attacking and 
>> destroying a less decentralized currency before the benefit of
>> this feature is given monetary value by the market.  Until then,
>> value will bleed to the network with the least friction, because
>> it will have the greatest ability to grow its network effect.
>> That means the blockchain with adequate features and cheapest
>> fees will eventually have the largest market share.
>> 
>> 
>> -----Original Message----- From: Venzen Khaosan Sent: Wednesday,
>> July 29, 2015 3:11 PM To: Raystonn . Cc:
>> bitcoin-dev at lists.linuxfoundation.org Subject: Re: [bitcoin-dev]
>> Why Satoshi's temporary anti-spam measure isn'ttemporary
>> 
> Raystonn, I'm aware that you're addressing your question to Greg 
> Maxwell, however a point you keep stating as fact calls for
> reference:
> 
> On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote: [snip]
>>>> 
>>>> How do you plan to address the bleeding of value from Bitcoin
>>>> to alternative lower-fee blockchains created by the
>>>> artificially-high bitcoin transaction fees when users begin
>>>> looking for the cheapest way to send value?
> 
> Cheapest way to send value? Is this what Bitcoin is trying to do?
> So all of the smart contract, programmable money, consensus coding
> and tremendous developer effort is bent to the consumer demand for
> cheaper fees. Surely thou jests!
> 
>>>> Modern economic study has shown that liquidity moves to the 
>>>> location of least friction.
> 
> Modern economic study? Can you please provide a link or reference
> to the study you are referring to.
> 
> "liquidity moves to the location of least friction"
> 
> This sounds like "econo-speak" and makes no sense. The definition
> of Liquidity is the degree to which an asset/security can be bought
> or sold in the market without affecting the price.
> 
> That is why bitcoin is said to have low liquidity: buying or
> selling only 100 BTC visibly affects the exchange price. You
> probably mean "people like cheap fees", which is true, but as
> others have said, because of Bitcoin's powerful features, they are
> willing to pay higher fees and wait longer for transactions to
> execute.
> 
> As for your public cross-examination of Greg Maxwell, your case
> seems to  be made on the assumption that limiting the size of the
> blockchain is an attempt to artificially raise tx fees, but it is
> not the case (as you and others repeatedly argue) that reluctance
> to concede blocksize is an attempt to constrain capacity. Greg
> Maxwell thoroughly explained in this thread that the protocol's
> current state of development relies on  blocksize for security and,
> ultimately, as a means of protecting its degree of
> decentralization.
> 
> Surely, this is an obvious concern even for those who are
> campaigning for the hare-brained ideal of making Bitcoin a "faster,
> cheaper alternative" to visa or paypal? If we lose
> decentralization, we lose the whole thing, right? Incorrect or
> correct?
>> _______________________________________________ bitcoin-dev
>> mailing list bitcoin-dev at lists.linuxfoundation.org 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuetlAAoJEGwAhlQc8H1m2TkH/jKx7V9vCZbOjbxAlfjnR0ai
+QDxMm0K0sL/MlsLVm0FAHwGiKhYJnEeXiZJlXu0eiUz35JALDMtSQiVbQzcHAc2
GvyW3tWUh6+uSfYhsnImQXxlDgCUKIgZvtTM900OWcGXZeLU3W5UdUK5+ietHK0/
1HbZgcljqke+nSsH2aCagd/iNdwCIUcfapsUgB6iPWtZQfLg6SHi8CjbG/Th5Na7
fpA5yJlO4N+Q2JpOVId/LfC7loDCEZtPtYA5NZAsDcEcSIXUycCoGL8LNMIFGJNe
Ko2RNqGeIkb/x8T2USxlkrNUZx/CCF201MMClPLC/LXX1bEMDvO8F0m1TBR1ptg=
=106o
-----END PGP SIGNATURE-----

From jtimon at jtimon.cc  Thu Jul 30 09:38:00 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 11:38:00 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <55B9EB68.9020703@mail.bihthai.net>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
Message-ID: <CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>

It is important ro note that even if lightning was never developed, the
block size remains at 1 MB forever and fees rise to 10 usd per transaction,
such "high fees" are still extremely competitive with non-decentralized
payment systems that have proportional fees. For example, 10 usd is still
lower than 1% when you are moving more than 1000 usd. I know, this doesn't
work for micro-transactions, but I don't think Bitcoin can be useful for
micro-transactions in the long term unless something like lightning payment
channels is deployed. Until we accept the second fact, it will be very hard
to discuss any projection of future usage. I think that believing that all
the transactions of the entire world population can be made in-chain while
keeping bitcoin decentralized is incredibly naive. Not even nasdaq has that
capacity (and if full node's require nasdaq's capacity, I don't think we
can talk about a decentralized system anymore).
On Jul 30, 2015 11:16 AM, "Venzen Khaosan via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Adam,
>
> - From your explanation it is evident that fast, cheap bitcoin
> transactions are possible. It is encouraging that Bitcoin _can_ indeed
> compete with Visa, Paypal, et al. via Layer 2 protocols such as Lightning.
>
> The youtube interview with you and Greg re: Lightning requires some
> concentration and I'll have to watch it another couple of times to
> better grasp everything that is explained about the protocol and its
> interaction with Bitcoin.
>
> Thank you for your considered and informative response, else Raystonn
> and I might have gotten in an unnecessary scrap about fees, economics
> and what not.
>
> regards,
> Venzen Khaosan
>
>
>
> On 07/30/2015 10:49 AM, Adam Back wrote:
> > I dont think people consider other blockchains as a competitive
> > threat.  A PoW-blockchain is a largely singleton data structure
> > for security reasons (single highest hashrate), it is hard for an
> > alternative chain to bootstrap or provide meaningful security.
> > Secondly the world largely lacks expertise to maintain a blockchain
> > to bitcoin's security level, perhaps you can see a hint of this in
> > the recently disclosed security vulnerability by Pieter Wuille and
> > Gregory Maxwell.  Calls to this as an argument are not resonating
> > and probably not helping your argument.  Bitcoin has security
> > properties, and a competing system cant achieve better properties
> > by bypassing security, any blockchain faces the same fundamental
> > security / decentralisation limitations.
> >
> > Secondly Bitcoin can obviously compete with itself with different
> > parameters and defacto *does* today.  I think it is a safe
> > estimate that > 99% of Bitcoin transactions right now are happening
> > in Bitcoin related systems with various degrees of audit,
> > reconciliation, provable reserves etc.  I think we can expect this
> > to continue and become more secure via more reconciliation, and
> > longer term via lightning or Bitcoin sidechains with different
> > parameters.  It is a different story to have a single central
> > system (Bitcoin with parameters changed to the point of
> > centralisation failure) vs having multiple choices, because some
> > transactions can more easily use relatively centralised systems (eg
> > micropayments), and more interestingly the combination of a secure
> > and decentralised layer 1 plus choices of less decentralised layer
> > 2 options, can be interesting because the layer 2 is provided cover
> > from attack.  There is less to be gained by attacking relatively
> > centralised layer 2 because any payments at risk of policy abuse
> > (which is typically a small subset) can easily switch to layer 1.
> > That in itself makes layer 2 transactions also less susceptible to
> > policy abuse.  Further lightning it appears from work so far should
> > add significant scale while retaining trustlessness and a good
> > degree of decentralisation.
> >
> > Finally you seem to be focusing on "artificial" limits where that
> > is not the issue under consideration.  The limits are technical
> > and relating to decentralisation and security.  I wont go over them
> > again as this topic has been covered many times in recent months.
> > Any chain that tried to go to extreme parameters (very low block
> > intervals, or very large blocksizes) would have the same
> > decentralisation problems as Bitcoin would if it did the same
> > thing.  There are a number of alt coins that have failed as a
> > result of poor parameter choices, there are inherent security
> > limits.
> >
> > Adam
> >
> > ps Etiquette note for yourself and others: please dont be
> > repetitive or attempt to be forceful.  Many people have spent many
> > years understanding this very complex system, from my own
> > experience it is rare indeed to think of an entirely new concept or
> > analysis, that hasnt' been long considered and put to bed 3 or 4
> > years ago. Thoughtful polite and constructive comments are welcome
> > but I recommend to not start from an assumption that you have a
> > clear and better insight than the entire technical community,
> > because I have to say from my own experience that is very rarely
> > the case.  It can be useful to test theories on #bitcoin IRC
> > channel to find out what has been already concluded, find the
> > references and avoid having to have that hashed out on this list
> > which is trying to be focussed on technical solutions.
> >
> >
> > On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev
> > <bitcoin-dev at lists.linuxfoundation.org> wrote:
> >>> Cheapest way to send value? Is this what Bitcoin is trying to
> >>> do? So all of the smart contract, programmable money, consensus
> >>> coding and tremendous developer effort is bent to the consumer
> >>> demand for cheaper fees. Surely thou jests!
> >>
> >>
> >> These other features can be replicated into any alternative
> >> blockchain, including those with lower fees.  In the open-source
> >> world of cryptocurrency, no feature will remain a value-add for
> >> very long after it has been identified to be such.  Anything
> >> adding value will quickly be absorbed into competing alternative
> >> blockchains.  That will leave economic policy as the
> >> distinguishing factor.
> >>
> >>> ... it is not the case ... that reluctance to concede blocksize
> >>> is an attempt to constrain capacity. Greg Maxwell thoroughly
> >>> explained in this thread that the protocol's current state of
> >>> development relies on  blocksize for security and, ultimately,
> >>> as a means of protecting its degree of decentralization.
> >>
> >>
> >> A slow or lack of increase to maximum transaction rate will cause
> >> pressure on fees.  Whether this is the desired goal is not
> >> relevant.  Everyone has agreed this will be the outcome.  As to a
> >> smaller block size being needed for additional decentralization,
> >> one must simply ask how much we are all willing to pay for that
> >> additional decentralization.  It is likely that the benefit
> >> thereto will have to be demonstrated by some power attacking and
> >> destroying a less decentralized currency before the benefit of
> >> this feature is given monetary value by the market.  Until then,
> >> value will bleed to the network with the least friction, because
> >> it will have the greatest ability to grow its network effect.
> >> That means the blockchain with adequate features and cheapest
> >> fees will eventually have the largest market share.
> >>
> >>
> >> -----Original Message----- From: Venzen Khaosan Sent: Wednesday,
> >> July 29, 2015 3:11 PM To: Raystonn . Cc:
> >> bitcoin-dev at lists.linuxfoundation.org Subject: Re: [bitcoin-dev]
> >> Why Satoshi's temporary anti-spam measure isn'ttemporary
> >>
> > Raystonn, I'm aware that you're addressing your question to Greg
> > Maxwell, however a point you keep stating as fact calls for
> > reference:
> >
> > On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote: [snip]
> >>>>
> >>>> How do you plan to address the bleeding of value from Bitcoin
> >>>> to alternative lower-fee blockchains created by the
> >>>> artificially-high bitcoin transaction fees when users begin
> >>>> looking for the cheapest way to send value?
> >
> > Cheapest way to send value? Is this what Bitcoin is trying to do?
> > So all of the smart contract, programmable money, consensus coding
> > and tremendous developer effort is bent to the consumer demand for
> > cheaper fees. Surely thou jests!
> >
> >>>> Modern economic study has shown that liquidity moves to the
> >>>> location of least friction.
> >
> > Modern economic study? Can you please provide a link or reference
> > to the study you are referring to.
> >
> > "liquidity moves to the location of least friction"
> >
> > This sounds like "econo-speak" and makes no sense. The definition
> > of Liquidity is the degree to which an asset/security can be bought
> > or sold in the market without affecting the price.
> >
> > That is why bitcoin is said to have low liquidity: buying or
> > selling only 100 BTC visibly affects the exchange price. You
> > probably mean "people like cheap fees", which is true, but as
> > others have said, because of Bitcoin's powerful features, they are
> > willing to pay higher fees and wait longer for transactions to
> > execute.
> >
> > As for your public cross-examination of Greg Maxwell, your case
> > seems to  be made on the assumption that limiting the size of the
> > blockchain is an attempt to artificially raise tx fees, but it is
> > not the case (as you and others repeatedly argue) that reluctance
> > to concede blocksize is an attempt to constrain capacity. Greg
> > Maxwell thoroughly explained in this thread that the protocol's
> > current state of development relies on  blocksize for security and,
> > ultimately, as a means of protecting its degree of
> > decentralization.
> >
> > Surely, this is an obvious concern even for those who are
> > campaigning for the hare-brained ideal of making Bitcoin a "faster,
> > cheaper alternative" to visa or paypal? If we lose
> > decentralization, we lose the whole thing, right? Incorrect or
> > correct?
> >> _______________________________________________ bitcoin-dev
> >> mailing list bitcoin-dev at lists.linuxfoundation.org
> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1
>
> iQEcBAEBAgAGBQJVuetlAAoJEGwAhlQc8H1m2TkH/jKx7V9vCZbOjbxAlfjnR0ai
> +QDxMm0K0sL/MlsLVm0FAHwGiKhYJnEeXiZJlXu0eiUz35JALDMtSQiVbQzcHAc2
> GvyW3tWUh6+uSfYhsnImQXxlDgCUKIgZvtTM900OWcGXZeLU3W5UdUK5+ietHK0/
> 1HbZgcljqke+nSsH2aCagd/iNdwCIUcfapsUgB6iPWtZQfLg6SHi8CjbG/Th5Na7
> fpA5yJlO4N+Q2JpOVId/LfC7loDCEZtPtYA5NZAsDcEcSIXUycCoGL8LNMIFGJNe
> Ko2RNqGeIkb/x8T2USxlkrNUZx/CCF201MMClPLC/LXX1bEMDvO8F0m1TBR1ptg=
> =106o
> -----END PGP SIGNATURE-----
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/de8c1fca/attachment.html>

From odinn.cyberguerrilla at riseup.net  Thu Jul 30 09:44:23 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 30 Jul 2015 02:44:23 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com><CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com><D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com><CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com><37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
Message-ID: <55B9F1F7.7000408@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I will jump in just because I feel like it because the questions are
fun and so on.  (Of course I am not Gregory)

On 07/29/2015 02:28 PM, Raystonn . via bitcoin-dev wrote:
> Gregory, can you please speak to the following points.  I would
> like a better understanding of your positions.
> 

Note that I am not Gregory, so with that caveat...

> 1) Do you believe that Bitcoin's future is as a high-value
> settlement network?

No, it will have multiple and diverse purposes into which it can be
used for and can evolve, it would not be sufficient to state that it
has "a future" merely as a high-value settlement network.

> 
> 2) Do you believe we need an artificial limit to transaction rate, 
> perhaps implemented as a maximum block size limit?  If so, why?

If you have a proposal on this, please submit it in the formal way as
a BIP draft.   Enough time has been burnt on the subject, imho.

> 
> 3) Transaction fees will fluctuate with global economic conditions
> and technology.  Those free-market fluctuations should equally
> affect any blockchain.  However, if transaction fees on the Bitcoin
> network are pushed artificially high, such as with an artificial
> limit to transaction rate only applicable to Bitcoin, this will
> create a condition where some other blockchains will have lower
> fees.  How do you plan to address the bleeding of value from
> Bitcoin to alternative lower-fee blockchains created by the
> artificially-high bitcoin transaction fees when users begin looking
> for the cheapest way to send value?  Modern economic study has
> shown that liquidity moves to the location of least friction.

It is the market.  What will happen will happen.  If bitcoin
development pushes fees upward as an overall trend and the overall
cost to transact continues to increase, billions of people around the
world will as a result be forced out from most use cases of bitcoin
and the "bleeding out" will occur naturally to alts (to the extent
that persons already possessed bitcoin first and need to transact).
As stated above, liquidity moves to location of least friction.
Bitcoin bagholders can whine all they want, but value will distribute
into the alts gradually.

> 
> 4) If you believe it's not a problem to allow alternative
> blockchains to leech some of Bitcoin's value,

"allow" is not a relevant term here, as it is not up to anyone what
people are going to do with their crypto of any kind.  Unless, of
course, you are fool enough to be using Coinbase and Bitpay or
something like that.  They own "your" coin, and they will decide, or
allow, what you do with it or whether you can even access it.
As has been stated before here, I hope you are not using such services.
On the other hand, the following are very interesting:
https://gear.mycelium.com/ - a Payment processor
http://openbazaar.org a decentralized Market
https://bitsquare.io/ a decentralized Exchange
https://electrum.org/ a light wallet that you manage

 then:
> a) How much value is it acceptable to lose?

Irrelevant.  Better question is, How much should one give? The more
you can give, the better off you will be.

> b) How do you think this will affect Bitcoin miners, whose large 
> investments in hardware do not transfer to other blockchains?

Too much attention is paid to the miners.  Miners should not be
butthurt when people say that we should not put them up on a pedestal.
 Think ahead, to when there will no longer be bitcoin mining such as
there is today.

> c) How do you think this will affect the investors and holders of 
> bitcoin in general?

People will continue to buy and sell.  Some major changes are in
store, however.  If you would like, see my reflections on what the
months ahead will hold, here:
http://www.twitlonger.com/show/n_1sn3lqs

> 
> 
> -----Original Message----- From: Gregory Maxwell via bitcoin-dev 
> Sent: Wednesday, July 29, 2015 1:09 PM To: Owen Cc: Bitcoin Dev 
> Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam
> measure isn'ttemporary
> 
> On Wed, Jul 29, 2015 at 7:56 PM, Owen via bitcoin-dev 
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> On July 29, 2015 7:15:49 AM EDT, Mike Hearn via bitcoin-dev:
>>> Consider this:  the highest Bitcoin tx fees can possibly go is
>>> perhaps a little higher than what our competition charges. Too
>>> much higher than that, and people will just say, you know what
>>> .... I'll make a bank transfer. It's cheaper and not much
>>> slower, sometimes no slower at all.
>> 
>> I respectfully disagree with this analysis. The implication is
>> that bitcoin is merely one of a number of payment technologies.
>> It's much more than that. It's sound money, censorship
>> resistance, personal control over money, programmable money, and
>> more. Without these attributes it's merely a really inefficient
>> way to do payments.
>> 
>> Given these advantages, there is no reason to believe the
>> marginal cost of a transaction can't far surpass that of a PayPal
>> or bank transfer. I personally would pay several multiples of the
>> competitors' fees to continue using bitcoin.
>> 
>> Sure, some marginal use cases will drop off with greater fees,
>> but that's normal and expected. These will be use cases where the
>> user doesn't care about bitcoin's advantages. We must be willing
>> to let these use cases go anyway, because we unfortunately don't
>> have room on chain for everything anyone might want to do.
>> 
>> Therefore, bitcoin tx fees can go much higher than the
>> competition.
>> 
>> Remember how Satoshi referenced the banking crisis in his early
>> work? The 2008 banking crisis was about a lot of things, but high
>> credit card and paypal fees wasnt one of them. There's more going
>> on here than just payments. Any speculative economic analysis
>> would do better to include this fact.
> 
> Precisely.  And as "just a payment system" Bitcoin is not an 
> especially great one: The design requirements for
> decenteralization impose considerable costs.  To the extent that
> the technology in Bitcoin is useful at all for building "just
> another payment system" this technology in in the process of being
> agressively copied by parties with deep fiat relationships
> (including in partnership with centeral banks).  If the focus for
> Bitcoin's competative advantage becomes exclusively "better"
> payments then it will almost certinatly fail in the market-place
> against competing systems which avoid the Bitcoin currency adoption
> related obsticles (but also gain none of Bitcoin's important
> social/political promise).
> 
> Also, critically, if Bitcoin's security properties are manintained
> and enhanced then Bitcoin can be used to build secure systems which
> _also_ accomidate those applications and we can have both. But if
> Bitcoin's security properties are not strong then then advanced
> tools cannot be built for it.  E.g. atomic swaps make trustless
> trades with external systems possible; but they are especially
> sensitive to long reorginizations by miners... so they can only be
> securely used where those reorgs are infeasable.  So while I agree
> that we must be willing to tolerate not catching every conceivable
> use case; most of the time all that means is addressing them via a
> less direct but more focused solution rather than ignoring them
> completely. _______________________________________________ 
> bitcoin-dev mailing list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVufH2AAoJEGxwq/inSG8C1mgH/3poEpk8pDDgZ7YQlGmAZjiO
MDBempLkfm1BFFoNAzjMn9mwtmL9wDfpn/sd/YbuIriJjQR2WSl6zy/sLx/uIYxd
qRuSRwOzN6wN7NfAuG7Lt3NtawOjAgl87n5YhRVB/d/MAK5HAvx3L9ME1Px//qsF
Czg5r0XG4ZiQnT8J30caMtooSVU9toradAmMleVbMVOi9KViyuW2IvXz5mM1jYHh
h+CB+CVHlhuKubXWpnnxYtOLLRQM5QSyfQiMPimVG0QPSOC5UkXJNo5gK6YMtBkT
0FevJyoMF+0LVTTPVGms+jolxu2PX3RW59nhNKEAuxOWfeHdMFFGtPP04XbpqSo=
=R3aj
-----END PGP SIGNATURE-----

From odinn.cyberguerrilla at riseup.net  Thu Jul 30 09:52:05 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 30 Jul 2015 02:52:05 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <55B959A2.9020402@sky-ip.org>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
Message-ID: <55B9F3C5.7060302@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Some additional points....

On 07/29/2015 03:54 PM, s7r via bitcoin-dev wrote:
> (...)
> 
> The more people use bitcoin, the more demand we have on the market
> for BTC, the higher BTC/FIAT rate will be, more people will become 
> interested in mining and so on. Bitcoin is not a
> rich-only-private-club, it's an open, global, decentralized payment
> network. The less people use it... I guess you figured it out.

Yes.

(...) Having some
> offchain solution for small transactions would be a good idea, but
> this doesn't mean we should make small transactions impossible due
> to absurd fees.

This is correct also.

> 
> On 7/29/2015 8:47 PM, Raystonn . via bitcoin-dev wrote:
>>> When a category of users would get priced out because of the
>>> fee
>> market, they would be free to use any altcoin they want.
>> 
>> I believe that pretty well sums up where we?re headed if
>> transaction rate is artificially limited, whether that be by
>> maximum block size limit or something else.  A fee market will
>> necessarily include more than just Bitcoin.  The reality is it?s
>> very easy to trade value across different blockchains, and thus a
>> fee market will bleed value from Bitcoin and give it to
>> alternative blockchains.  If Bitcoin?s blocks are at maximum
>> capacity, people will exchange for something that allows them to
>> transact with a lesser fee, then make the desired payment.  This
>> adds value to the alternative blockchain and removes it from
>> Bitcoin.
>> 
>> Anyone thinking the fee market can be restrained to Bitcoin alone
>> is mistaken.
>> 
>> 
>> *From:* Vali Zero via bitcoin-dev 
>> <mailto:bitcoin-dev at lists.linuxfoundation.org> *Sent:* Wednesday,
>> July 29, 2015 7:09 AM *To:*
>> bitcoin-dev at lists.linuxfoundation.org 
>> <mailto:bitcoin-dev at lists.linuxfoundation.org> *Subject:*
>> [bitcoin-dev] R?spuns: Personal opinion on the fee market from a
>> worried local trader
>> 
>> I am disappointed that you did not understand my point of view.
>> Let me rephrase it for you,
>> 
>> People tipping, buying 0.99$ products and gamblers that need
>> Bitcoin transactions *more* than the rest of the people will
>> afford the fees that establish the equilibrium between demand and
>> supply of Bitcoin transactions. The people are free to use they
>> money for whatever they like, but you should understand that
>> Bitcoin transactions are not free.
>> 
>> I was merely attempting to point out that spammers and gamblers
>> would be the first ones that would go away. They would be free to
>> spam or gamble, but they would have to pay for it.
>> 
>> When a category of users would get priced out because of the fee
>> market, they would be free to use any altcoin they want.
>> 
>> Please understand that not everyone will leave. The more
>> important players will remain, those that need it the most. The
>> other players are free to use whatever altcoin they wish.
>> 
>> 
>> ?n Miercuri, 29 Iulie 2015 16:47:57, Angel Leon
>> <gubatron at gmail.com> a scris:
>> 
>> 
>> "the gamblers and perhaps people transacting very low amounts.
>> The people that actually need Bitcoin would remain."
>> 
>> so people tipping, buying $0.99 products, and gamblers actually
>> don't need Bitcoin. Who are you to say what people need to use
>> money for? This statement goes against the freedom of
>> decentralization and financial freedom Bitcoin should be able to
>> provide.
>> 
>> It's an open network and it will be used as most users see fit,
>> and that requires a blocksize increase wether you like it or not,
>> it's simple physics, other time wait times will become unbearable
>> for those not willing to pay the high fees, if people leave, then
>> it only mean bitcoins isn't useful, and if bitcoin isn't useful,
>> it's worthless.
>> 
>> 
>> 
>> http://twitter.com/gubatron
>> 
>> On Wed, Jul 29, 2015 at 9:27 AM, Vali Zero via bitcoin-dev 
>> <bitcoin-dev at lists.linuxfoundation.org 
>> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>> 
>> Hello,
>> 
>> I have been reading an argument saying that paying higher fees
>> would scare Bitcoin users and they would stop using it,
>> preferring bank transfers or other payment methods. This does not
>> make sense for me. If some users leave, then demand for bitcoin
>> transactions goes down and so do the fees. The others remain.
>> 
>> Fee market means that an equilibrium is found between the demand
>> for bitcoin transactions and the available supply (given by the
>> block size). The fee is the price that finds this equilibrium.
>> 
>> If a fee market starts to exist, the first ones to leave are the 
>> spammers, probably followed by the gamblers and perhaps people 
>> transacting very low amounts. The people that actually need
>> Bitcoin would remain.
>> 
>> Please allow this fee market to form...
>> 
>> In the absence of a functioning fee market, I will refuse to run 
>> Bitcoin code that increases the block size and will do my best
>> to tell everyone I know not to upgrade towards running such code.
>> If Bitcoin succombs to the free stuff army, I will sell all the
>> coins and leave. Nothing is for free.
>> 
>> I apologize for any exagerations, but I just felt strongly
>> towards expressing my opinion here. I'm only a local Bitcoin
>> trader, computer engineer, with a reasonable understanding of
>> free markets. And I'm running only one full node.
>> 
>> Kind regards, Valentin
>> 
>> 
>> _______________________________________________ bitcoin-dev
>> mailing list bitcoin-dev at lists.linuxfoundation.org 
>> <mailto:bitcoin-dev at lists.linuxfoundation.org> 
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>> 
>> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVufPFAAoJEGxwq/inSG8CBHUIAKZQaTvJToxGmEXSTckHZ2fX
NEVJNbw0oebdpQU6mvYR1hjK4LE/pY+cyfTh98RxQtsIHGJqVghU/kgzP6PSyS9J
NYB3HO3iz2l9rBRQCe197wfg1GlY1QhepNFofYj1k1MDIB2QCMUXhUwz7e7wncuc
TESDEHH/mUqPOnWBKeEbru7gr0aLn8ltmEHXwDQdlPP9iyXGpt9oGWoP1fBYTRwg
r29vW8wCYhKzbS44ovPRilGWnWhxyB/2N5Qb94JkdzWCdr98bBIZQ8eL+w64lEhv
9A8Umiu9B8c6Ch9C1d4c/ircA4MJKSroTfLh8SgkjYtdAnECAJmQ3ZcUGgyGerw=
=gCvd
-----END PGP SIGNATURE-----

From gavinandresen at gmail.com  Thu Jul 30 12:29:49 2015
From: gavinandresen at gmail.com (Gavin)
Date: Thu, 30 Jul 2015 08:29:49 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
Message-ID: <F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>



> On Jul 30, 2015, at 4:21 AM, Eric Lombrozo wrote:
> 
> and a number of the people most intimately familiar with the inner workings of the system (some of whom are in this thread) think that given what we now today about the Bitcoin network, increasing block size externalizes costs in dangerous ways. Remember that total cost includes not just equipment costs but also things like block propagation latency and specifically identified security risks. Some of these security risks were only appreciated relatively recently and were completely unknown in 2009.

I would like (and have been asking) those people to take the time to quantify those costs and write up those risks in a careful way.

I believe the costs and risks of 8MB blocks are minimal, and that the benefits of supporting more transaction FAR outweigh those costs and risks, but it is hard to have a rational conversation about that when even simple questions like 'what is s reasonable cost to run a full node' are met with silence.

From ibrightly at gmail.com  Thu Jul 30 12:45:16 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Thu, 30 Jul 2015 08:45:16 -0400
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
Message-ID: <CAAre=yTfiQhprMx2zmhZHVPuNmazxBLNX5CkVjZzpC-41tgvow@mail.gmail.com>

One thing that the below assumption doesn't appear to take into account is
user demand for quick confirmations. I haven't fully thought out the game
theory on this but here goes:

Example: if 75% of hashing power accepts 'medium' fee transactions while
25% is willing to accept low (or any) fee transactions, then a user paying
a lower fee wishing to get their transaction included in the next block
runs a ~75% chance that their transaction won't be included.

Users desiring the most reliably fast confirmations are better off by
paying the minimum fee that a majority of miners will accept. Miners
breaking ranks and accepting lower fees only affects users who aren't
sufficiently interested in quicker confirmations. As long as a majority of
miners 'collude', they will likely be able to keep the average fees higher
than miners with the lower costs of operations might be willing to accept.

On Thu, Jul 30, 2015 at 12:00 AM, Adam Back via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On 29 July 2015 at 20:41, Ryan Butler via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Does an unlimited blocksize imply the lack of a fee market?  Isn't every
> > miner able to set their minimum accepted fee or transaction acceptance
> > algorithm?
>
> The assumption is that wont work because any miner can break ranks and
> do so profitably, so to expect otherwise is to expect oligopoly
> behaviour which is the sort of antithesis of a decentralised mining
> system.  It's in fact a similar argument as to why decentralisation of
> mining provides policy neutrality: some miner somewhere with some
> hashrate will process your transaction even if some other miners are
> by policy deciding not to mine it.  It is also similar reason why free
> transactions are processed today - policies vary and this is good for
> ensuring many types of transaction get processed.
>
> Adam
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/78d19cbb/attachment.html>

From pieter.wuille at gmail.com  Thu Jul 30 12:50:46 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 30 Jul 2015 14:50:46 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
Message-ID: <CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 2:29 PM, Gavin via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

>
> > On Jul 30, 2015, at 4:21 AM, Eric Lombrozo wrote:
> >
> > and a number of the people most intimately familiar with the inner
> workings of the system (some of whom are in this thread) think that given
> what we now today about the Bitcoin network, increasing block size
> externalizes costs in dangerous ways. Remember that total cost includes not
> just equipment costs but also things like block propagation latency and
> specifically identified security risks. Some of these security risks were
> only appreciated relatively recently and were completely unknown in 2009.
>
> I would like (and have been asking) those people to take the time to
> quantify those costs and write up those risks in a careful way.
>
> I believe the costs and risks of 8MB blocks are minimal, and that the
> benefits of supporting more transaction FAR outweigh those costs and risks,
> but it is hard to have a rational conversation about that when even simple
> questions like 'what is s reasonable cost to run a full node' are met with
> silence.
>

I think the benefit of an 8 MB over a 1 MB in terms of utility is marginal
(even assuming miners actually produce 8 MB blocks). There are very few use
cases that Bitcoin on-chain can support with a small extra factor. I think
the market will grow to adapt to whatever is offered anyway.

Bitcoin's advantage over other systems does not lie in scalability.
Well-designed centralized systems can trivially compete with Bitcoin's
on-chain transactions in terms of cost, speed, reliability, convenience,
and scale. Its power lies in transparency, lack of need for trust in
network peers, miners, and those who influence or control the system.
Wanting to increase the scale of the system is in conflict with all of
those. Attempting to buy time with a fast increase is not wanting to face
that reality, and treating the system as something whose scale trumps all
other concerns. A long term scalability plan should aim on decreasing the
need for trust required in off-chain systems, rather than increasing the
need for trust in Bitcoin.

Making controversial changes to the network, and not wanting to face the
reality that block chain space is a finite resource - whether enforced by a
consensus rule or by miner's capacity to process transactions - is a huge
treat to Bitcoin's usefulness in the long term.

I think the risks of trying to make a controversial change to the network
FAR outweighs the benefits of a small constant factor that "kicks the can
down the road".

Let's scale the block size gradually over time, according to technological
growth.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/fcd26023/attachment.html>

From tomh at thinlink.com  Thu Jul 30 13:14:17 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Jul 2015 06:14:17 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
Message-ID: <55BA2329.1080700@thinlink.com>

On 7/29/2015 9:48 PM, Ryan Butler via bitcoin-dev wrote:
>
> I shouldn't have said unlimited, i should have said a greater
> blocksize limit such as 8mb. 
>
> Anyways, why is that the assumption?  If a miner can do so, and do so
> profitably, isn't that just competition?  Isn't that what we want?  If
> a miner can mine low transaction fees at a profit then don't they
> deserve to have their spot?  Surely if they do so unprofitably they
> quickly find themselves out of business?  Besides, if a miner mines
> low fee transactions by breaking rank, how does this affect another
> miner EXCEPT for the additional blocksize load.  I would maintain this
> is just competition amongst miners gentlemen.  And it's a good thing.
>
> Right now things are distorted because most income comes from the
> coinbase, but as transaction fees start to constitute the majority of
> income this idea seems to have more importance.
>

You're completely correct Ryan.

There has been a well functioning fee market since 2011.  Average fees
have never been zero, despite low-fee transactions being mined, and
despite no block size pressure until September 2014.

Another empirical fact also needs explaining.  Why have average fees *as
measured in BTC* risen during the times of highest public interest in
bitcoin?  This happened without block size pressure, and it is not an
exchange rate effect -- these are raw BTC fees:

https://blockchain.info/charts/transaction-fees?timespan=all&daysAverageString=7

... more evidence that conclusively refutes the conjecture that a
production quota is necessary for a "functioning fee market."  A
production quota merely pushes up fees.  We have a functioning market,
and so far, it shows that wider bitcoin usage is even more effective
than a quota at pushing up fees.


> On Jul 29, 2015 11:00 PM, "Adam Back" <adam at cypherspace.org
> <mailto:adam at cypherspace.org>> wrote:
>
>
>     The assumption is that wont work because any miner can break ranks and
>     do so profitably, so to expect otherwise is to expect oligopoly
>     behaviour which is the sort of antithesis of a decentralised mining
>     system.  It's in fact a similar argument as to why decentralisation of
>     mining provides policy neutrality: some miner somewhere with some
>     hashrate will process your transaction even if some other miners are
>     by policy deciding not to mine it.  It is also similar reason why free
>     transactions are processed today - policies vary and this is good for
>     ensuring many types of transaction get processed.
>


From venzen at mail.bihthai.net  Thu Jul 30 13:33:09 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Thu, 30 Jul 2015 20:33:09 +0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>	<55B94FAD.7040205@mail.bihthai.net>	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
Message-ID: <55BA2795.70805@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jorge,

You know, it is always insightful to get the perspective of active
participants and Core developers like yourself. As Adam pointed out
earlier, the developers have done mileage in this space and have
already considered most of the conceptual issues and technical
challenges that must resurface in waves as new interested parties join
the list. Allow me, in this response to your message, to make a
proposal to those who may be interested:


Bitcoin's protocol functions and the implications of this innovation
for the future are difficult to grasp, even for the smartest among us.
Then there are also the words of Niels Bohr:

"Prediction is difficult, especially about the future."

They say a lot of time and energy is wasted because we don't know what
we don't know. Years of discussion among those in the list has
established certain axioms that determine the options for Bitcoin
going forward. According to my comprehension, the following are some
of the most relevant for the present discussion (please correct me
where I'm off the mark):

1. A high degree of decentralization is prima optima.

2.  Bitcoin is much more than a payment network. A lot of the
non-payment features are, arguably, what gives Bitcoin most of its
value. Yet, the payment functionality is a major design feature and
all agree that it should scale - subject to axiom 1.

3. The Bitcoin payment network ("Layer 1"), due to technical
constraints imposed by its p2p design, cannot compete with Visa and
other centralized transmission channels for speed or transaction
volume. Nor can it handle the transaction requirements of the world's
population - the scaling required would necessarily render Bitcoin
centralized, insecure and, therefore, worthless.

4. The addition of "layer 2" protocols (such as Lightning and other
sidechains) will allow fast, low-fee (and with virtually instant
confirmation) bitcoin transactions within two years, according to the
developers active in that:
http://www.youtube.com/watch?v=jE_elgnIw3M
http://www.youtube.com/watch?v=fBS_ieDwQ9k

5. This "layering of protocols" simplifies the scaling (blocksize)
debate because it separates
 A) the primary concern for security and fidelity via
decentralization, and
 B) the ideal of universal accessibility via fast, low-fee transactions.
Discussion about scalability can therefore proceed with the knowledge
that Lightning and other "layer 2" sidechains will make Bitcoin
accessible to the global majority - and be fast like Bruce Lee - while
the Bitcoin developers can focus on making Bitcoin Core protocol
(layer 1) the world heavyweight champion - Muhammad Ali.

Since I've maintained your interest up to the final sentence, I say:
as an insurance against a capacity crisis before layer 2 is deployed,
why not implement bip100's 2MB blocksize proposals in a testnet?



On 07/30/2015 04:38 PM, Jorge Tim?n wrote:
> It is important ro note that even if lightning was never developed,
> the block size remains at 1 MB forever and fees rise to 10 usd per 
> transaction, such "high fees" are still extremely competitive with 
> non-decentralized payment systems that have proportional fees. For 
> example, 10 usd is still lower than 1% when you are moving more
> than 1000 usd. I know, this doesn't work for micro-transactions,
> but I don't think Bitcoin can be useful for micro-transactions in
> the long term unless something like lightning payment channels is
> deployed. Until we accept the second fact, it will be very hard to
> discuss any projection of future usage. I think that believing that
> all the transactions of the entire world population can be made
> in-chain while keeping bitcoin decentralized is incredibly naive.
> Not even nasdaq has that capacity (and if full node's require
> nasdaq's capacity, I don't think we can talk about a decentralized
> system anymore).
> 
> On Jul 30, 2015 11:16 AM, "Venzen Khaosan via bitcoin-dev" 
> <bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
> Adam,
> 
> - From your explanation it is evident that fast, cheap bitcoin 
> transactions are possible. It is encouraging that Bitcoin _can_
> indeed compete with Visa, Paypal, et al. via Layer 2 protocols such
> as Lightning.
> 
> The youtube interview with you and Greg re: Lightning requires
> some concentration and I'll have to watch it another couple of
> times to better grasp everything that is explained about the
> protocol and its interaction with Bitcoin.
> 
> Thank you for your considered and informative response, else
> Raystonn and I might have gotten in an unnecessary scrap about
> fees, economics and what not.
> 
> regards, Venzen Khaosan
> 
> 
> 
> On 07/30/2015 10:49 AM, Adam Back wrote:
>> I dont think people consider other blockchains as a competitive 
>> threat.  A PoW-blockchain is a largely singleton data structure 
>> for security reasons (single highest hashrate), it is hard for
>> an alternative chain to bootstrap or provide meaningful
>> security. Secondly the world largely lacks expertise to maintain
>> a blockchain to bitcoin's security level, perhaps you can see a
>> hint of this in the recently disclosed security vulnerability by
>> Pieter Wuille and Gregory Maxwell.  Calls to this as an argument
>> are not resonating and probably not helping your argument.
>> Bitcoin has security properties, and a competing system cant
>> achieve better properties by bypassing security, any blockchain
>> faces the same fundamental security / decentralisation
>> limitations.
> 
>> Secondly Bitcoin can obviously compete with itself with
>> different parameters and defacto *does* today.  I think it is a
>> safe estimate that > 99% of Bitcoin transactions right now are
>> happening in Bitcoin related systems with various degrees of
>> audit, reconciliation, provable reserves etc.  I think we can
>> expect this to continue and become more secure via more
>> reconciliation, and longer term via lightning or Bitcoin
>> sidechains with different parameters.  It is a different story to
>> have a single central system (Bitcoin with parameters changed to
>> the point of centralisation failure) vs having multiple choices,
>> because some transactions can more easily use relatively
>> centralised systems (eg micropayments), and more interestingly
>> the combination of a secure and decentralised layer 1 plus
>> choices of less decentralised layer 2 options, can be interesting
>> because the layer 2 is provided cover from attack.  There is less
>> to be gained by attacking relatively centralised layer 2 because
>> any payments at risk of policy abuse (which is typically a small
>> subset) can easily switch to layer 1. That in itself makes layer
>> 2 transactions also less susceptible to policy abuse.  Further
>> lightning it appears from work so far should add significant
>> scale while retaining trustlessness and a good degree of
>> decentralisation.
> 
>> Finally you seem to be focusing on "artificial" limits where
>> that is not the issue under consideration.  The limits are
>> technical and relating to decentralisation and security.  I wont
>> go over them again as this topic has been covered many times in
>> recent months. Any chain that tried to go to extreme parameters
>> (very low block intervals, or very large blocksizes) would have
>> the same decentralisation problems as Bitcoin would if it did the
>> same thing.  There are a number of alt coins that have failed as
>> a result of poor parameter choices, there are inherent security 
>> limits.
> 
>> Adam
> 
>> ps Etiquette note for yourself and others: please dont be 
>> repetitive or attempt to be forceful.  Many people have spent
>> many years understanding this very complex system, from my own 
>> experience it is rare indeed to think of an entirely new concept
>> or analysis, that hasnt' been long considered and put to bed 3 or
>> 4 years ago. Thoughtful polite and constructive comments are
>> welcome but I recommend to not start from an assumption that you
>> have a clear and better insight than the entire technical
>> community, because I have to say from my own experience that is
>> very rarely the case.  It can be useful to test theories on
>> #bitcoin IRC channel to find out what has been already concluded,
>> find the references and avoid having to have that hashed out on
>> this list which is trying to be focussed on technical solutions.
> 
> 
>> On 29 July 2015 at 16:10, Raystonn . via bitcoin-dev 
>> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>>>> Cheapest way to send value? Is this what Bitcoin is trying
>>>> to do? So all of the smart contract, programmable money,
>>>> consensus coding and tremendous developer effort is bent to
>>>> the consumer demand for cheaper fees. Surely thou jests!
>>> 
>>> 
>>> These other features can be replicated into any alternative 
>>> blockchain, including those with lower fees.  In the
>>> open-source world of cryptocurrency, no feature will remain a
>>> value-add for very long after it has been identified to be
>>> such.  Anything adding value will quickly be absorbed into
>>> competing alternative blockchains.  That will leave economic
>>> policy as the distinguishing factor.
>>> 
>>>> ... it is not the case ... that reluctance to concede
>>>> blocksize is an attempt to constrain capacity. Greg Maxwell
>>>> thoroughly explained in this thread that the protocol's
>>>> current state of development relies on  blocksize for
>>>> security and, ultimately, as a means of protecting its degree
>>>> of decentralization.
>>> 
>>> 
>>> A slow or lack of increase to maximum transaction rate will
>>> cause pressure on fees.  Whether this is the desired goal is
>>> not relevant.  Everyone has agreed this will be the outcome.
>>> As to a smaller block size being needed for additional
>>> decentralization, one must simply ask how much we are all
>>> willing to pay for that additional decentralization.  It is
>>> likely that the benefit thereto will have to be demonstrated by
>>> some power attacking and destroying a less decentralized
>>> currency before the benefit of this feature is given monetary
>>> value by the market.  Until then, value will bleed to the
>>> network with the least friction, because it will have the
>>> greatest ability to grow its network effect. That means the
>>> blockchain with adequate features and cheapest fees will
>>> eventually have the largest market share.
>>> 
>>> 
>>> -----Original Message----- From: Venzen Khaosan Sent:
>>> Wednesday, July 29, 2015 3:11 PM To: Raystonn . Cc: 
>>> bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org> Subject: Re: 
> [bitcoin-dev]
>>> Why Satoshi's temporary anti-spam measure isn'ttemporary
>>> 
>> Raystonn, I'm aware that you're addressing your question to Greg 
>> Maxwell, however a point you keep stating as fact calls for 
>> reference:
> 
>> On 07/30/2015 04:28 AM, Raystonn . via bitcoin-dev wrote: [snip]
>>>>> 
>>>>> How do you plan to address the bleeding of value from
>>>>> Bitcoin to alternative lower-fee blockchains created by
>>>>> the artificially-high bitcoin transaction fees when users
>>>>> begin looking for the cheapest way to send value?
> 
>> Cheapest way to send value? Is this what Bitcoin is trying to
>> do? So all of the smart contract, programmable money, consensus
>> coding and tremendous developer effort is bent to the consumer
>> demand for cheaper fees. Surely thou jests!
> 
>>>>> Modern economic study has shown that liquidity moves to
>>>>> the location of least friction.
> 
>> Modern economic study? Can you please provide a link or
>> reference to the study you are referring to.
> 
>> "liquidity moves to the location of least friction"
> 
>> This sounds like "econo-speak" and makes no sense. The
>> definition of Liquidity is the degree to which an asset/security
>> can be bought or sold in the market without affecting the price.
> 
>> That is why bitcoin is said to have low liquidity: buying or 
>> selling only 100 BTC visibly affects the exchange price. You 
>> probably mean "people like cheap fees", which is true, but as 
>> others have said, because of Bitcoin's powerful features, they
>> are willing to pay higher fees and wait longer for transactions
>> to execute.
> 
>> As for your public cross-examination of Greg Maxwell, your case 
>> seems to  be made on the assumption that limiting the size of
>> the blockchain is an attempt to artificially raise tx fees, but
>> it is not the case (as you and others repeatedly argue) that
>> reluctance to concede blocksize is an attempt to constrain
>> capacity. Greg Maxwell thoroughly explained in this thread that
>> the protocol's current state of development relies on  blocksize
>> for security and, ultimately, as a means of protecting its degree
>> of decentralization.
> 
>> Surely, this is an obvious concern even for those who are 
>> campaigning for the hare-brained ideal of making Bitcoin a
>> "faster, cheaper alternative" to visa or paypal? If we lose 
>> decentralization, we lose the whole thing, right? Incorrect or 
>> correct?
>>> _______________________________________________ bitcoin-dev 
>>> mailing list bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>
>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> <mailto:bitcoin-dev at lists.linuxfoundation.org> 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuieTAAoJEGwAhlQc8H1meAIH/RHUV72bbMItZOT7rvhEU56r
lqEcvwXBSCYgsh1ieVeTdC/ydJnRSzWsdZxM3D7PEOzutlG+VaJQVSJREItGb2GW
PYiZ3uwSwF64nRq5bZ7aS2pT/Zo1a1yAf4H5rbeyxxoWC+zkmSsmcf73MgmslIuU
7XXHNztCX3glfOctr+J61WEKBw0ItQCTsp9J08yVlj/gvKTi3U2jDcYV5mf/3D0j
pvXl244DG4b+nYetRyyonYbZelSUYfCghNBJhUYZApVmcgfKDRPeX1uWfkl0HuUd
Kc+uZtrhJaUXdRlqc50nOsRSCAK+d4PGClF8JFlzI65+SG7VzkVqc8SkSDfNXfY=
=r4SA
-----END PGP SIGNATURE-----

From thomas at thomaszander.se  Thu Jul 30 14:03:02 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 16:03:02 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
Message-ID: <2430713.bhgWPHaTGR@coldstorage>

On Thursday 30. July 2015 14.50.46 Pieter Wuille via bitcoin-dev wrote:
> > I believe the costs and risks of 8MB blocks are minimal, and that the
> > benefits of supporting more transaction FAR outweigh those costs and
> > risks,
> > but it is hard to have a rational conversation about that when even simple
> > questions like 'what is s reasonable cost to run a full node' are met with
> > silence.
> 
> I think the benefit of an 8 MB over a 1 MB in terms of utility is marginal

Like 640kb should be enough for everyone...  Unfortunately the world doesn't 
like things that can be bigger not getting bigger. ;)


> Bitcoin's advantage over other systems does not lie in scalability.
> Well-designed centralized systems can trivially compete with Bitcoin's
> on-chain transactions in terms of cost, speed, reliability, convenience,
> and scale. Its power lies in transparency, lack of need for trust in
> network peers, miners, and those who influence or control the system.

The real advantage of Bitcoin is simpler; its the first system that is not 
owned and possible to subvert that actually works.
All existing attempts before Bitcoin are companies that try to benefit from 
being in the middle, to the exclusion of everyone else and to the exclusion of 
innovation.

> Wanting to increase the scale of the system is in conflict with all of
> those. 

Thats circular arguing.  This didn't actually add anything to the 
conversation.

The insight you skip over is that that Bitcoin's advantage, and the concept of 
distributed computing in general, has is one of ownership and control.

If you want to keep Bitcoin small at 1Mb, do you still reach your goal of 
being free from ownership and control? With our excellent growth trends; 
transactions have to go somewhere, they will not use Bitcoin if we don't have 
space. And that means we loose decentralization, we lose avoidance of 
ownership of the network and we introduce control.

All your rhetoric is missing this basic point; is holding Bitcoin at 1Mb 
advancing it, or hurting that basic goal of avoiding ownership?
-- 
Thomas Zander

From gavinandresen at gmail.com  Thu Jul 30 14:05:34 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 30 Jul 2015 10:05:34 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
Message-ID: <CABsx9T1Wgf8u-ZKXmiRhQwdJNkDJg9RL_o2j2cWxP-6nKmxS2Q@mail.gmail.com>

On Thu, Jul 30, 2015 at 8:50 AM, Pieter Wuille <pieter.wuille at gmail.com>
wrote:

> Let's scale the block size gradually over time, according to technological
> growth.


Yes, lets do that-- that is EXACTLY what BIP101 intends to do.

With the added belt&suspenders reality check of miners, who won't produce
blocks too big for whatever technology they're using.

-------

So what do you think the scalability road map should look like? Should we
wait to hard fork until Blockstream Elements is ready for deploying on the
main network, and then have One Grand Hardfork that introduces all the
scalability work you guys have been working on (like Segregated Witness and
Lightning)?

Or is the plan to avoid controversy by people voluntarily moving their
bitcoin to a sidechain where all this scaling-up innovation happens?

No plan for how to scale up is the worst of all possible worlds, and the
lack of a direction or plan(s) is my main objection to the current status
quo.

And any plan that requires inventing brand-new technology is going to be
riskier than scaling up what we already have and understand, which is why I
think it is worthwhile to scale up what we have IN ADDITION TO working on
great projects like Segregated Witness and Lightning.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/d7fc3a50/attachment.html>

From jtimon at jtimon.cc  Thu Jul 30 14:10:46 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 16:10:46 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <55BA2795.70805@mail.bihthai.net>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
	<55BA2795.70805@mail.bihthai.net>
Message-ID: <CABm2gDqPCuAOaPXf5XQ=BQBBMSuRB+OQvN3DUHkRZYk4kvTdqQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 2:29 PM, Gavin via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I would like (and have been asking) those people to take the time to quantify those costs and write up those risks in a careful way.

I agree that having a "minimal hardware requirements" specification
would greatly help with this discussions.

> I believe the costs and risks of 8MB blocks are minimal, and that the benefits of supporting more transaction FAR outweigh those costs and risks, but it is hard to have a rational conversation about that when even simple questions like 'what is s reasonable cost to run a full node' are met with silence.

These tests by Rusty (strong advocate of IBLT and working on it) seem
to indicate otherwise: http://rusty.ozlabs.org/?p=509

On Thu, Jul 30, 2015 at 2:50 PM, Pieter Wuille via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I think the risks of trying to make a controversial change to the network
> FAR outweighs the benefits of a small constant factor that "kicks the can
> down the road".

I think the risks of a controversial deployment in consensus rules
changes, outweigh by far potential benefits of ANY consensus forks, no
matter how amazing the potential benefits may seem. Bitcoin may not
survive a controversial hardfork or go 3 years back in adoption,
nobody knows.

> Let's scale the block size gradually over time, according to technological
> growth.

I agree. Unfortunately, technological and economic growth is very hard
to predict.


On Thu, Jul 30, 2015 at 3:33 PM, Venzen Khaosan <venzen at mail.bihthai.net> wrote:
> 2.  Bitcoin is much more than a payment network. A lot of the
> non-payment features are, arguably, what gives Bitcoin most of its
> value. Yet, the payment functionality is a major design feature and
> all agree that it should scale - subject to axiom 1.

I just explained why I disagree with this point. Bitcoin fees depend
on transaction sizes rather than amounts moved. Even ignoring
script-based signatures and all the other advantages in Bitcoin, that
fact alone makes it extremely competitive with "traditional systems"
for many use cases (say, sending 1000 usd from the US to M?xico).
I agree overall with your other points.
Extremely cheap and instant transactions can be provided by lightning,
but cannot be provided by Bitcoin in-chain alone in the long term (it
can't even provide instant irreversible transactions).

> Since I've maintained your interest up to the final sentence, I say:
> as an insurance against a capacity crisis before layer 2 is deployed,
> why not implement bip100's 2MB blocksize proposals in a testnet?

Of all blocksize proposals, bip102 (the one with the single doubling
to 2MB) is the one I dislike less because it doesn't make any
assumptions about future technological or economic growth (I loved
your Bohr cite).
But it still has something that I dislike from all proposals: the
numbers just seem pulled out of a hat.

But I already created that testnet you propose (and
std::numeric_limits<uint64_t>::max() -1 more testnets for other sizes)
in https://github.com/bitcoin/bitcoin/pull/6382

You can run it with the following runtime options: -chain=sizetest
-blocksize=2000000

Unfortunately, nobody seems interested in running some tests for
several sizes before proposing a concrete size.
As far as I know, nobody has used that branch to test different sizes.

From thomas at thomaszander.se  Thu Jul 30 14:15:01 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 16:15:01 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAAS2fgSh0XGmV+PREpCW6rN_z=xnnnchQGZ=dX68qBfwpWwjJQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKQoCy-MC3dTsXc=hvnBLxz_R5LJ3RTV81Az=wTbyELmjQ@mail.gmail.com>
	<CAAS2fgSh0XGmV+PREpCW6rN_z=xnnnchQGZ=dX68qBfwpWwjJQ@mail.gmail.com>
Message-ID: <3110561.I4CKJCzncK@coldstorage>

I have just been around for 2 years or so, and its interesting to see you two 
argue and give links to the past conversations.

But do realize that if you argue in public about content that is easy to read 
by anyone that you have to double check your memory fits the facts.
And I feel you skipped that this time...

On Wednesday 29. July 2015 19.53.02 Gregory Maxwell via bitcoin-dev wrote:
> (The same message also mentions that smart contracts can be used to
> create trustless trade with off-chain systems; 

> As well, later in that
> thread: "it will be much easier if you can freely use all the space
> you need without worrying about paying fees for expensive space in
> Bitcoin's chain.")

Hmm... A DNS record is much much bigger than a single bitcoin transaction has 
space for.
I don't think you can take his quote out of context. The thread shows that 
having a full domain-registry DB on chain is what he was explaining doesn't fit 
with Bitcoin.
So Satoshi just explains that a rich database shouldn't live on the 
blockchain. Similarly with the quote you made before;
  "Piling every proof-of-work quorum system in the world into one
  dataset doesn't scale."
It just fights the stupid idea of sharing the blockchain space with tons of 
global databases.

Please re-read the whole thread as it really doesn't support your view that 
Satoshi argued that somehow decentralization would be protected by limiting 
the size of the chain.

-- 
Thomas Zander

From pieter.wuille at gmail.com  Thu Jul 30 14:25:02 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 30 Jul 2015 16:25:02 +0200
Subject: [bitcoin-dev] Block size following technological growth
Message-ID: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>

Hello all,

here is a proposal for long-term scalability I've been working on:
https://gist.github.com/sipa/c65665fc360ca7a176a6

Some things are not included yet, such as a testnet whose size runs ahead
of the main chain, and the inclusion of Gavin's more accurate sigop
checking after the hard fork.

Comments?

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/99e5886b/attachment.html>

From dave at hashingit.com  Thu Jul 30 14:25:43 2015
From: dave at hashingit.com (Dave Hudson)
Date: Thu, 30 Jul 2015 07:25:43 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <55BA2329.1080700@thinlink.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
Message-ID: <58D8CEFE-2763-452E-B731-DDF7AFD77677@hashingit.com>


> On 30 Jul 2015, at 06:14, Tom Harding via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> Another empirical fact also needs explaining.  Why have average fees *as
> measured in BTC* risen during the times of highest public interest in
> bitcoin?  This happened without block size pressure, and it is not an
> exchange rate effect -- these are raw BTC fees:
> 
> https://blockchain.info/charts/transaction-fees?timespan=all&daysAverageString=7 <https://blockchain.info/charts/transaction-fees?timespan=all&daysAverageString=7>

I've not published any new figures for about 8 months (will try to do that this weekend), but the thing that that chart doesn't show is what's actually happening to fees per transaction. Here's a chart that does: http://hashingit.com/analysis/35-the-future-of-bitcoin-transaction-fees <http://hashingit.com/analysis/35-the-future-of-bitcoin-transaction-fees>

The data is also taken from blockchain.info so it's apples-for-apples. It shows that far from a fees going up they spent 3 years dropping. I just ran a new chart and the decline in fees continued until about 8 weeks when the "stress tests" first occurred. Even so, they're still below the level from the end of 2013. By comparison the total transaction volume is up about 2.4x to 2.5x (don't have the exact number).

> ... more evidence that conclusively refutes the conjecture that a
> production quota is necessary for a "functioning fee market."  A
> production quota merely pushes up fees.  We have a functioning market,
> and so far, it shows that wider bitcoin usage is even more effective
> than a quota at pushing up fees.

I think it's equally easy to argue (from the same data) that wider adoption has actually caused wallet users to become much more effective at fee selection. Miners (as expected, assuming that they hadn't formed a cartel) have continued to accept whatever fees are available, no matter how small. Only where there has been an element of scarcity have we actually seen miners do anything but take whatever is offered.

Clearly history is not an accurate indicator of what might happen in the future, but it seems difficult to argue that there has been any sort of fee market emerge to date (other than as a result of scarcity during the stress tests).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/aaba0a9a/attachment-0001.html>

From pieter.wuille at gmail.com  Thu Jul 30 14:28:29 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 30 Jul 2015 16:28:29 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CABsx9T1Wgf8u-ZKXmiRhQwdJNkDJg9RL_o2j2cWxP-6nKmxS2Q@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
	<CABsx9T1Wgf8u-ZKXmiRhQwdJNkDJg9RL_o2j2cWxP-6nKmxS2Q@mail.gmail.com>
Message-ID: <CAPg+sBhRiiAAnmUc0HzW3=eXSNnYdAPAdi4eKN=+bdzGuo_X2w@mail.gmail.com>

On Thu, Jul 30, 2015 at 4:05 PM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Thu, Jul 30, 2015 at 8:50 AM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>
>> Let's scale the block size gradually over time, according to
>> technological growth.
>
>
> Yes, lets do that-- that is EXACTLY what BIP101 intends to do.
>

Oh come on. Immediately increasing to 8 MB while miners currently don't
even seem to bother validating blocks?

With the added belt&suspenders reality check of miners, who won't produce
> blocks too big for whatever technology they're using.
>

Or a future where miners are even more centralized than now, which avoids
all problems relay and propagation speed has?


> So what do you think the scalability road map should look like? Should we
> wait to hard fork until Blockstream Elements is ready for deploying on the
> main network, and then have One Grand Hardfork that introduces all the
> scalability work you guys have been working on (like Segregated Witness and
> Lightning)?
>

Lightning does not require a hard fork, except that larger blocks would be
very useful for its bulk settlements.

Or is the plan to avoid controversy by people voluntarily moving their
> bitcoin to a sidechain where all this scaling-up innovation happens?
>

As I have said a dozen times now: sidechains are a mechanism for
experimentation. Maybe through them we will discover technology that allows
better on-chain and/or off-chain scalability, but people moving their coins
to a sidechain has far worse security tradeoffs than just increasing the
Bitcoin blockchain.

No plan for how to scale up is the worst of all possible worlds, and the
> lack of a direction or plan(s) is my main objection to the current status
> quo.
>

Ok, here is a proposal I was working on. I'd like to have had more time,
but I agree a direction/plan are needed to align expectations for the
future:  https://gist.github.com/sipa/c65665fc360ca7a176a6.


> And any plan that requires inventing brand-new technology is going to be
> riskier than scaling up what we already have and understand, which is why I
> think it is worthwhile to scale up what we have IN ADDITION TO working on
> great projects like Segregated Witness and Lightning.
>

And I think that the reason that so many people care about this suddenly is
because of a fear that somehow the current block size "won't be enough".
Bitcoin has utility at any block size, and perhaps more at some values for
it than others. Talking about "not enough" is acknowledging that we really
believe the block size should scale to demand, while it is the other way
around.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/db66bf01/attachment.html>

From thomas at thomaszander.se  Thu Jul 30 14:52:40 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 16:52:40 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
Message-ID: <2905605.OvbZMWuhGy@coldstorage>

On Thursday 30. July 2015 11.38.00 Jorge Tim?n via bitcoin-dev wrote:
> It is important ro note that even if lightning was never developed, the
> block size remains at 1 MB forever and fees rise to 10 usd per transaction,
> such "high fees" are still extremely competitive with non-decentralized
> payment systems that have proportional fees.


What makes you think that when there is such a low availability of transaction 
space that paying to be included costs you $10, that Bitcoin is not going to 
be outcompeted and replaced or otherwise regarded as worthless?
-- 
Thomas Zander

From tomh at thinlink.com  Thu Jul 30 14:57:27 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Jul 2015 07:57:27 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <58D8CEFE-2763-452E-B731-DDF7AFD77677@hashingit.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
	<58D8CEFE-2763-452E-B731-DDF7AFD77677@hashingit.com>
Message-ID: <55BA3B57.2060101@thinlink.com>


Yes.  So far, the transaction count factor has completely dominated the
per-tx fee factor.  This fact should be of great interest to miners.


On 7/30/2015 7:25 AM, Dave Hudson wrote:
>
>> On 30 Jul 2015, at 06:14, Tom Harding via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org
>> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
>>
>> Another empirical fact also needs explaining.  Why have average fees *as
>> measured in BTC* risen during the times of highest public interest in
>> bitcoin?  This happened without block size pressure, and it is not an
>> exchange rate effect -- these are raw BTC fees:
>>
>> https://blockchain.info/charts/transaction-fees?timespan=all&daysAverageString=7
>
> I've not published any new figures for about 8 months (will try to do
> that this weekend), but the thing that that chart doesn't show is
> what's actually happening to fees per transaction. Here's a chart that
> does: http://hashingit.com/analysis/35-the-future-of-bitcoin-transaction-fees
>
> The data is also taken from blockchain.info so it's apples-for-apples.
> It shows that far from a fees going up they spent 3 years dropping. I
> just ran a new chart and the decline in fees continued until about 8
> weeks when the "stress tests" first occurred. Even so, they're still
> below the level from the end of 2013. By comparison the total
> transaction volume is up about 2.4x to 2.5x (don't have the exact number).
>
>> ... more evidence that conclusively refutes the conjecture that a
>> production quota is necessary for a "functioning fee market."  A
>> production quota merely pushes up fees.  We have a functioning market,
>> and so far, it shows that wider bitcoin usage is even more effective
>> than a quota at pushing up fees.
>
> I think it's equally easy to argue (from the same data) that wider
> adoption has actually caused wallet users to become much more
> effective at fee selection. Miners (as expected, assuming that they
> hadn't formed a cartel) have continued to accept whatever fees are
> available, no matter how small. Only where there has been an element
> of scarcity have we actually seen miners do anything but take whatever
> is offered.
>
> Clearly history is not an accurate indicator of what might happen in
> the future, but it seems difficult to argue that there has been any
> sort of fee market emerge to date (other than as a result of scarcity
> during the stress tests).
>


From bozhko.maksim at gmail.com  Thu Jul 30 15:03:25 2015
From: bozhko.maksim at gmail.com (=?UTF-8?B?0JzQsNC60YHQuNC8INCR0L7QttC60L4=?=)
Date: Thu, 30 Jul 2015 18:03:25 +0300
Subject: [bitcoin-dev] Another block size limit solution - dynamic block
	size limit.
Message-ID: <CABK8tmUd+RqTP=vteoX0UEwbzG-X=N3GWvUkD2g5q2suQNpx2w@mail.gmail.com>

I propose to implement dynamic block size limit. Its short summary is here
in doc:

https://docs.google.com/document/d/1ixt0loN7LOF6M_2HXvV0D-3ZCayvcfj0rzVm-h-6ONg/edit

Comments are allowed
--
Maksim Bozhko
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/2de678bc/attachment.html>

From gsanders87 at gmail.com  Thu Jul 30 15:04:47 2015
From: gsanders87 at gmail.com (Greg Sanders)
Date: Thu, 30 Jul 2015 11:04:47 -0400
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
Message-ID: <CAB3F3DsM+08n8tfX=URa2SA0Et5GdoxD02LNd48p7HW6P5mjVw@mail.gmail.com>

What, if any, methods would be used for miners to communicate their
upgrade?

Greg

On Thu, Jul 30, 2015 at 10:25 AM, Pieter Wuille via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Hello all,
>
> here is a proposal for long-term scalability I've been working on:
> https://gist.github.com/sipa/c65665fc360ca7a176a6
>
> Some things are not included yet, such as a testnet whose size runs ahead
> of the main chain, and the inclusion of Gavin's more accurate sigop
> checking after the hard fork.
>
> Comments?
>
> --
> Pieter
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/846a30c7/attachment-0001.html>

From jtimon at jtimon.cc  Thu Jul 30 15:12:19 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 17:12:19 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
Message-ID: <CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>

1) Unlike previous blocksize hardfork proposals, this uses median time
instead of block.nTime for activation. I like that more but my
preference is still using height for everything. But that discussion
is not specific to this proposal, so it's better if we discuss that
for all of them here:
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html

2) I think uncontroversial hardforks should also take miner
confirmation into account, just like uncontroversial softforks do. We
cannot make sure other users have upgraded before activating the
chain, but we can know whether miners have upgraded or not. Having
that tool available, why not use it. Of course other hardforks may not
care about miners' upgrade state. For example "anti-miner hardforks,
see https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#asic-reset-hardfork
But again, this is common to all uncontroversial hardforks, so it
would probably better to discussed it in
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
(gmaxwell assigned to bip99 to my bip draft).

3) As commented to you privately, I don't like to make any assumptions
about technological advancements (much less on economical growth). I
don't expect many people to agree with me here (I guess I've seen too
many "peak oil" [or more generally, peak energy production] plus I've
read Nietzsche's "On the utility and liability of history for life"
[1]; so considering morals, technology or economics as "monotonic
functions" in history is simply a ridiculous notion to me), but it's
undeniable that internet connections have improved overall around the
world in the last 6 years. I think we should wait for the
technological improvements to happen and then adapt the blocksize
accordingly. I know, that's not a "definitive solution", we will need
to change it from time to time and this is somewhat ugly.
But even if I'm the only one that considers a "technological
de-growth" possible, I don't think is wise to rely on pseudo-laws like
Moore's or Nielsen?s so-called "laws".
Stealing a quote from another thread:

"Prediction is difficult, especially about the future." - Niels Bohr

So I would prefer a more limited solution like bip102 (even though I
would prefer to have some simulations leading to  a concrete value
(even if it's bigger) rather than using 2MB's arbitrary number.

Those are my 3 cents.

[1] https://philohist.files.wordpress.com/2008/01/nietzsche-uses-history.pdf

On Thu, Jul 30, 2015 at 4:25 PM, Pieter Wuille via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Hello all,
>
> here is a proposal for long-term scalability I've been working on:
> https://gist.github.com/sipa/c65665fc360ca7a176a6
>
> Some things are not included yet, such as a testnet whose size runs ahead of
> the main chain, and the inclusion of Gavin's more accurate sigop checking
> after the hard fork.
>
> Comments?
>
> --
> Pieter
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>

From kanzure at gmail.com  Thu Jul 30 15:24:07 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Thu, 30 Jul 2015 10:24:07 -0500
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <2905605.OvbZMWuhGy@coldstorage>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
	<2905605.OvbZMWuhGy@coldstorage>
Message-ID: <CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 9:52 AM, Thomas Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> What makes you think that when there is such a low availability of
> transaction
> space that paying to be included costs you $10, that Bitcoin is not going
> to
> be outcompeted and replaced or otherwise regarded as worthless?
>

Ah, well that's simple. Because any decentralized system is going to have
high transaction costs and scarcity anyway. So far the only mechanism we
know for how to do this is something like bitcoin. As a centralized system,
bitcoin is already strongly outcompeted by many, many other designs, so
that shouldn't be very surprising I think.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/96d4dabe/attachment.html>

From jtimon at jtimon.cc  Thu Jul 30 15:36:13 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 17:36:13 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CABsx9T1Wgf8u-ZKXmiRhQwdJNkDJg9RL_o2j2cWxP-6nKmxS2Q@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<CAPg+sBjsQPUZEj0LFHBWuM4E+4SsUu4C9fcb7OJX4SC4+omvPQ@mail.gmail.com>
	<CABsx9T1Wgf8u-ZKXmiRhQwdJNkDJg9RL_o2j2cWxP-6nKmxS2Q@mail.gmail.com>
Message-ID: <CABm2gDo=PjdOJtXQ+T2UNXubreSZXigEnRFRwhd-nAGvWXs+AQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 4:05 PM, Gavin Andresen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Jul 30, 2015 at 8:50 AM, Pieter Wuille <pieter.wuille at gmail.com>
> So what do you think the scalability road map should look like? Should we
> wait to hard fork until Blockstream Elements is ready for deploying on the
> main network, and then have One Grand Hardfork that introduces all the
> scalability work you guys have been working on (like Segregated Witness and
> Lightning)?

Apparently lightning doesn't require Segregated Witnesses: cltv and
rcltv may be enough (although I'm not up to date to the latest
designs). I definitely don't think we should wait to have SW ready to
be deployable in Bitcoin to have other hardforks. I think we should
have an uncontroversial hardfork as soon as possible, if anything, to
set a precedent and show the world that hardforks are possible in
Bitcoin, see https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#code

> Or is the plan to avoid controversy by people voluntarily moving their
> bitcoin to a sidechain where all this scaling-up innovation happens?

Any scaling up innovation that happens in sidechains can be adopted by
Bitcoin too.
In fact, some of those changes (like op_maturity/rcltv/scv) are needed
in Bitcoin for a fully p2p Bitcoin sidechain to be even possible.
I really think lightning should be possible in Bitcoin main (and not
just sidechains) as soon as possible.

> And any plan that requires inventing brand-new technology is going to be
> riskier than scaling up what we already have and understand, which is why I
> think it is worthwhile to scale up what we have IN ADDITION TO working on
> great projects like Segregated Witness and Lightning.

Not necessarily. How are older payment channels designs (different
from lightning) that don't even require cltv riskier than a hardfork?
In any case, yes, both things are kind of orthogonal and we can work
on both (and more) at the same time.

From jtimon at jtimon.cc  Thu Jul 30 15:41:30 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 17:41:30 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <2905605.OvbZMWuhGy@coldstorage>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
	<2905605.OvbZMWuhGy@coldstorage>
Message-ID: <CABm2gDrZvnzjs-02-E8BfTwqePWSxVAEdB+vFnByqYUNxw_W9w@mail.gmail.com>

On Thu, Jul 30, 2015 at 4:52 PM, Thomas Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thursday 30. July 2015 11.38.00 Jorge Tim?n via bitcoin-dev wrote:
>> It is important ro note that even if lightning was never developed, the
>> block size remains at 1 MB forever and fees rise to 10 usd per transaction,
>> such "high fees" are still extremely competitive with non-decentralized
>> payment systems that have proportional fees.
>
>
> What makes you think that when there is such a low availability of transaction
> space that paying to be included costs you $10, that Bitcoin is not going to
> be outcompeted and replaced or otherwise regarded as worthless?

I'm just saying that rational economic actors will prefer to pay 10
usd over 11 usd in fees.
My example was: 10 usd flat fee vs 1% fee (both numbers pulled out of a hat).
Well, 10 usd fees is cheaper than 1% fees for any transacted amount
greater than 1000 usd.
Take into account that this is just an extreme example to make my
point: hopefully fees will never rise to a value as high as 10 usd.

From gavinandresen at gmail.com  Thu Jul 30 15:55:50 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 30 Jul 2015 11:55:50 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
	<2905605.OvbZMWuhGy@coldstorage>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
Message-ID: <CABsx9T3FoErEeOtQcnK62WK=zOBREwRkxzDNLDniuvM+L5Shiw@mail.gmail.com>

On Thu, Jul 30, 2015 at 11:24 AM, Bryan Bishop via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Because any decentralized system is going to have high transaction costs
> and scarcity anyway.


This is a meme that keeps coming up that I think just isn't true.

What other decentralized systems can we look at as role models?

How decentralized are they?

And why did they succeed when "more efficient" centralized systems did not?


The Internet is the most successful decentralized system to date; what
lessons should we learn?

How decentralized is the technology of the Internet (put aside governance
and the issues of who-assigns-blocks-of-IPs-and-registers-domain-names)?
How many root DNS servers?  How many BGP routers along the backbone would
need to be compromised to disrupt traffic? Why don't we see more
disruptions, or why are people willing to tolerate the disruptions that DO
happen?

And how did the Internet out-compete more efficient centralized systems
from the big telecom companies?  (I remember some of the arguments that
unreliable, inefficient packet-switching would never replace dedicated
circuits that couldn't get congested and didn't have inefficient timeouts
and retransmissions)


What other successful or unsuccessful decentralized systems should we be
looking at?


I'm old-- I graduated from college in 1988, so I've worked in tech through
the entire rise of the Internet. The lessons I believe we should take away
is that a system doesn't have to be perfect to be successful, and we
shouldn't underestimate people's ability to innovate around what might seem
to be insurmountable problems, IF people are given the ability to innovate.

Yes, people will innovate within a 1MB (or 1MB-scaling-to-2MB by 2021) max
block size, and yes, smaller blocks have utility. But I think we'll get a
lot more innovation and utility without such small, artificial limits.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/f6a07a15/attachment-0001.html>

From thomas at thomaszander.se  Thu Jul 30 16:07:40 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 18:07:40 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<2905605.OvbZMWuhGy@coldstorage>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
Message-ID: <1689926.ZjkxyJjokn@coldstorage>

On Thursday 30. July 2015 10.24.07 Bryan Bishop wrote:
> On Thu, Jul 30, 2015 at 9:52 AM, Thomas Zander via bitcoin-dev <
> 
> bitcoin-dev at lists.linuxfoundation.org> wrote:
> > What makes you think that when there is such a low availability of
> > transaction
> > space that paying to be included costs you $10, that Bitcoin is not going
> > to
> > be outcompeted and replaced or otherwise regarded as worthless?
> 
> Ah, well that's simple. Because any decentralized system is going to have
> high transaction costs and scarcity anyway.

I've been doing system design for about 10 years and I can understand your 
initial response.

I have to disagree with you, though.  Surely decentralized adds an overhead, 
but in its place it adds replication, redundancy and very cheap expansion of 
capacity.

Remember when we went from single-core CPUs to multi-core (and 
hyperthreading)? Developers were saying it was useless because all apps were 
still single-threaded.  And now, 15 years later, there are fantastic 
frameworks to make this easy.

Same will happen with distributed. Any assumption you wrote above is not 
inherent in the technology.

-- 
Thomas Zander

From gavinandresen at gmail.com  Thu Jul 30 16:20:30 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 30 Jul 2015 12:20:30 -0400
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
Message-ID: <CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>

On Thu, Jul 30, 2015 at 10:25 AM, Pieter Wuille via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> Some things are not included yet, such as a testnet whose size runs ahead
> of the main chain, and the inclusion of Gavin's more accurate sigop
> checking after the hard fork.
>
> Comments?
>

First, THANK YOU for making a concrete proposal!

Specific comments:

So we'd get to 2MB blocks in the year 2021. I think that is much too
conservative, and the most likely effect of being that conservative is that
the main blockchain becomes a settlement network, affordable only for
large-value transactions.

I don't think your proposal strikes the right balance between
centralization of payments (a future where only people running payment
hubs, big merchants, exchanges, and wallet providers settle on the
blockchain) and centralization of mining.



I'll comment on using median time generally in Jorge's thread, but why does
monotonically increasing matter for max block size? I can't think of a
reason why a max block size of X bytes in block N followed by a max size of
X-something bytes in block N+1 would cause any problems.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/f7208138/attachment.html>

From jameson.lopp at gmail.com  Thu Jul 30 16:23:17 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Thu, 30 Jul 2015 12:23:17 -0400
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
Message-ID: <CADL_X_f5nVFCmwNTAtJ6xTdB62wKc+FJdWCHVza9ran2NzaTmw@mail.gmail.com>

I find it to be an admirable goal to try to keep node operation costs low
and accessible to the average user. On the other hand, if we are able to
keep the resource requirements of nodes at the level of, say, whatever the
latest Raspberry Pi model on a residential Internet connection can handle,
I'm not sure how helpful it will be if the demand for inclusion in blocks
results in transaction fees prices out more users. Stated differently, if
the cost or contention of using the network rises to the point of excluding
the average user from making transactions, then they probably aren't going
to care that they can run a node at trivial cost.

If we're approaching the block size from a resource usage standpoint, it
seems to me that someone is going to be excluded one way or another. Not
raising the block size will exclude some users from sending transactions
while raising the block size will exclude some users from running nodes.
The latter seems preferable to me because more users will grow the
ecosystem, which should increase the value of the ecosystem, which should
increase the cost that entities are willing to pay to run nodes.

I see two primary points of view / objectives clashing in this debate:

1) Decentralization and stability even if it retards growth of the ecosystem
2) Push the system's load as far as we are comfortable in order to
accommodate the growth it is experiencing

It's clear to me that Core developers have a responsibility to maintain a
stable platform for the ecosystem. I think it's less clear that they have a
responsibility to grow it or ask node operators to expend more resources in
order to support more users. As an operator of several nodes, I can
anecdotally state that I find their resource usage to be trivial and I
welcome more load.

- Jameson

On Thu, Jul 30, 2015 at 11:12 AM, Jorge Tim?n <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> 1) Unlike previous blocksize hardfork proposals, this uses median time
> instead of block.nTime for activation. I like that more but my
> preference is still using height for everything. But that discussion
> is not specific to this proposal, so it's better if we discuss that
> for all of them here:
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html
>
> 2) I think uncontroversial hardforks should also take miner
> confirmation into account, just like uncontroversial softforks do. We
> cannot make sure other users have upgraded before activating the
> chain, but we can know whether miners have upgraded or not. Having
> that tool available, why not use it. Of course other hardforks may not
> care about miners' upgrade state. For example "anti-miner hardforks,
> see
> https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#asic-reset-hardfork
> But again, this is common to all uncontroversial hardforks, so it
> would probably better to discussed it in
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html
> (gmaxwell assigned to bip99 to my bip draft).
>
> 3) As commented to you privately, I don't like to make any assumptions
> about technological advancements (much less on economical growth). I
> don't expect many people to agree with me here (I guess I've seen too
> many "peak oil" [or more generally, peak energy production] plus I've
> read Nietzsche's "On the utility and liability of history for life"
> [1]; so considering morals, technology or economics as "monotonic
> functions" in history is simply a ridiculous notion to me), but it's
> undeniable that internet connections have improved overall around the
> world in the last 6 years. I think we should wait for the
> technological improvements to happen and then adapt the blocksize
> accordingly. I know, that's not a "definitive solution", we will need
> to change it from time to time and this is somewhat ugly.
> But even if I'm the only one that considers a "technological
> de-growth" possible, I don't think is wise to rely on pseudo-laws like
> Moore's or Nielsen?s so-called "laws".
> Stealing a quote from another thread:
>
> "Prediction is difficult, especially about the future." - Niels Bohr
>
> So I would prefer a more limited solution like bip102 (even though I
> would prefer to have some simulations leading to  a concrete value
> (even if it's bigger) rather than using 2MB's arbitrary number.
>
> Those are my 3 cents.
>
> [1]
> https://philohist.files.wordpress.com/2008/01/nietzsche-uses-history.pdf
>
> On Thu, Jul 30, 2015 at 4:25 PM, Pieter Wuille via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > Hello all,
> >
> > here is a proposal for long-term scalability I've been working on:
> > https://gist.github.com/sipa/c65665fc360ca7a176a6
> >
> > Some things are not included yet, such as a testnet whose size runs
> ahead of
> > the main chain, and the inclusion of Gavin's more accurate sigop checking
> > after the hard fork.
> >
> > Comments?
> >
> > --
> > Pieter
> >
> >
> > _______________________________________________
> > bitcoin-dev mailing list
> > bitcoin-dev at lists.linuxfoundation.org
> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> >
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/f352666f/attachment.html>

From venzen at mail.bihthai.net  Thu Jul 30 16:36:19 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Thu, 30 Jul 2015 23:36:19 +0700
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
Message-ID: <55BA5283.2000405@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



On 07/30/2015 10:12 PM, Jorge Tim?n via bitcoin-dev wrote:
[snip]
> But even if I'm the only one that considers a "technological 
> de-growth" possible, I don't think is wise to rely on pseudo-laws
> like Moore's or Nielsen?s so-called "laws". Stealing a quote from
> another thread:

You raise a good point: "de-growth"

Assuming linear (or exponential) growth without sympathetic
contraction at some time in the future would make our future selves
look back and smile at the youthful exuberance.

The pseudo-laws you mention (Moore's etc) do not cater for contraction
and, you're right, scaling UP plans should also wisely make provision
for scaling DOWN, for when the need arises.
> 
> So I would prefer a more limited solution like bip102 (even though
> I would prefer to have some simulations leading to  a concrete
> value (even if it's bigger) rather than using 2MB's arbitrary
> number.

I just had a look your existing Size N testnet code
https://github.com/bitcoin/bitcoin/pull/6382
and i'll set up a node over the weekend and post its address in that
PR's conversation. Do you or anyone else already have a node running?
what blocksize?
> 
> Those are my 3 cents.
> 
> [1]
> https://philohist.files.wordpress.com/2008/01/nietzsche-uses-history.pdf

Thanks,
> 
will broaden my horizon soon!
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVulKBAAoJEGwAhlQc8H1mUSAH/Rmlek3uitGyIritwyDO4Kf7
BfynlztWmPbnWl7aFYQCS+aIPgS+BvQWIiA0dTI633yj071DWEvcGDzhtcVrk0KT
//Ty8bp8yqsJRdd+SWgnqUzSmB6TI31F3ssxjDfSZhKiy8YF4+pKqjerQmBqlgLY
sKts3md8N8qWV5Onjd7ea+7SoFjhJ6GOm2UFgxO27LCeDH5Ax5fG4MsolNg3MBTT
5y7Hfo1YeFXRwRRSy5uCSSR0afBb8Wauqi/EnSYDuMe5HBcLztc7icXa6oLTlvBC
sfYswasmLRbvHLs4Vy51g75+k60QBjgFKtVlPXJXGN2trbcedF0UbDmenxGqJaI=
=rJPX
-----END PGP SIGNATURE-----

From kanzure at gmail.com  Thu Jul 30 16:36:29 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Thu, 30 Jul 2015 11:36:29 -0500
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CADL_X_f5nVFCmwNTAtJ6xTdB62wKc+FJdWCHVza9ran2NzaTmw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
	<CADL_X_f5nVFCmwNTAtJ6xTdB62wKc+FJdWCHVza9ran2NzaTmw@mail.gmail.com>
Message-ID: <CABaSBayrjD+GWj6yJR6Xsbd7QTBECBKemX89sFw2_xQOkH=p-Q@mail.gmail.com>

On Thu, Jul 30, 2015 at 11:23 AM, Jameson Lopp via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Stated differently, if the cost or contention of using the network rises
> to the point of excluding the average user from making transactions, then
> they probably aren't going to care that they can run a node at trivial cost.


That's an interesting claim; so suppose you're living in a future where
transactions are summarizing millions or billions of other daily
transactions, possibly with merkle hashes. You think that because a user
can't individually broadcast his own personal transaction, that the user
would not be interested in verifying the presence of a summarizing
transaction in the blockchain? I'm just curious if you could elaborate on
this effect. Why would I need to see my individual transactions on the
network, but not see aggregate transactions that include my own?

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/d842494e/attachment.html>

From sdaftuar at gmail.com  Thu Jul 30 16:41:55 2015
From: sdaftuar at gmail.com (Suhas Daftuar)
Date: Thu, 30 Jul 2015 12:41:55 -0400
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
Message-ID: <CAFp6fsExyinUm8uUiOY_xEDkYKcq09XZU3uy+YAcCyTEdeE6rA@mail.gmail.com>

On Thu, Jul 30, 2015 at 12:20 PM, Gavin Andresen via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> So we'd get to 2MB blocks in the year 2021. I think that is much too
> conservative, and the most likely effect of being that conservative is that
> the main blockchain becomes a settlement network, affordable only for
> large-value transactions.
>

While that may be true I think that's okay -- if it turns out that this is
too conservative, and we succeed in scaling the system so that it's
non-controversial to increase these limits later via another hard fork, we
would still be free to do so.

It seems to me that everyone who has been arguing recently to increase the
block size limit ought to find this proposal to be a strict improvement
over where we are now, and this proposal seems like it's reasonably likely
to be non-controversial enough to be worth proposing as a hard fork in
Bitcoin Core -- thank you Pieter for putting this together.

For my part, I'd give this a concept ACK, pending hearing further thoughts
from others.

Suhas Daftuar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/ddb717c7/attachment.html>

From jameson.lopp at gmail.com  Thu Jul 30 16:43:56 2015
From: jameson.lopp at gmail.com (Jameson Lopp)
Date: Thu, 30 Jul 2015 12:43:56 -0400
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABaSBayrjD+GWj6yJR6Xsbd7QTBECBKemX89sFw2_xQOkH=p-Q@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
	<CADL_X_f5nVFCmwNTAtJ6xTdB62wKc+FJdWCHVza9ran2NzaTmw@mail.gmail.com>
	<CABaSBayrjD+GWj6yJR6Xsbd7QTBECBKemX89sFw2_xQOkH=p-Q@mail.gmail.com>
Message-ID: <CADL_X_cB_vDAHpmp_Fm1R5U-CzOCHn0cgD4n=ZUzjyDR8gYRDQ@mail.gmail.com>

I fully expect that new layers will someday allow us to facilitate higher
transaction volumes, though I'm concerned about the current state of the
network and the fact that there are no concrete timelines for the rollout
of aforementioned high volume networks.

As for reasoning behind why users will still need to settle on-chain even
with the existence of high volume networks, see these posts:

http://sourceforge.net/p/bitcoin/mailman/message/34119233/

http://sourceforge.net/p/bitcoin/mailman/message/34113067/

Point being, the scalability proposals that are currently being developed
are not magic bullets and still require the occasional on-chain settlement.
Larger blocks will be necessary with or without the actual scalability
enhancements.

- Jameson

On Thu, Jul 30, 2015 at 12:36 PM, Bryan Bishop <kanzure at gmail.com> wrote:

> On Thu, Jul 30, 2015 at 11:23 AM, Jameson Lopp via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Stated differently, if the cost or contention of using the network rises
>> to the point of excluding the average user from making transactions, then
>> they probably aren't going to care that they can run a node at trivial cost.
>
>
> That's an interesting claim; so suppose you're living in a future where
> transactions are summarizing millions or billions of other daily
> transactions, possibly with merkle hashes. You think that because a user
> can't individually broadcast his own personal transaction, that the user
> would not be interested in verifying the presence of a summarizing
> transaction in the blockchain? I'm just curious if you could elaborate on
> this effect. Why would I need to see my individual transactions on the
> network, but not see aggregate transactions that include my own?
>
> - Bryan
> http://heybryan.org/
> 1 512 203 0507
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/b38ccb0a/attachment.html>

From adam at cypherspace.org  Thu Jul 30 16:48:18 2015
From: adam at cypherspace.org (Adam Back)
Date: Thu, 30 Jul 2015 18:48:18 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
Message-ID: <CALqxMTEWAfwtipkbzaDgsV4C9WjEW2-SE+vuZgiTjeSNxvXEBQ@mail.gmail.com>

That's what is nice about proposals, they are constructive and help
move the conversation forward!

On 30 July 2015 at 18:20, Gavin Andresen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Specific comments:
>
> So we'd get to 2MB blocks in the year 2021. I think that is much too
> conservative, and the most likely effect of being that conservative is that
> the main blockchain becomes a settlement network, affordable only for
> large-value transactions.

But, if we agree that 17%/year is consistent with network
improvements, by arguing this is too conservative, does that not mean
you are actually going beyond suggesting throughput increases to
benefit from bandwidth improvements, and explicitly arguing to
borrowing from Bitcoin's already very weak decentralisation to create
more throughput?  (Or arguing to subsidise transaction fees if
borrowing so deeply that excess capacity pushes beyond demand).

I think the logical implication of this would be that we should be
first focussing on improving decentralisation, to make security room
to reclaim extra throughput.

(To be clear there are concrete things that can be done and actually
are being done to improve decentralisation via ecosystem education and
mining protocol improvements, but it's safer to wait a few months and
see if those things take effect well).

Secondly in this assumption are you considering that lightning will
likely be online for many years by 2021 and the situation will be
hugely different?

I think an incremental and conservative approach is safer.  People can
probably get a lightning prototype running about as fast as a
hard-fork could be safely rolled out.

I do think it is normal to be conservative with security and with $4b
of other peoples money.  It's no longer an experimental system to
consider fail fast experiments on.

> I don't think your proposal strikes the right balance between centralization
> of payments (a future where only people running payment hubs, big merchants,
> exchanges, and wallet providers settle on the blockchain) and centralization
> of mining.

What criteria should we be using in your opinion to balance?  I think
throughput increases trading off decentralisation would be more
reasonable if decentralisation wasnt in very bad shape.

Adam

From pieter.wuille at gmail.com  Thu Jul 30 16:49:52 2015
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Thu, 30 Jul 2015 18:49:52 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
Message-ID: <CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>

On Jul 30, 2015 6:20 PM, "Gavin Andresen" <gavinandresen at gmail.com> wrote:
>
> On Thu, Jul 30, 2015 at 10:25 AM, Pieter Wuille via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> Some things are not included yet, such as a testnet whose size runs
ahead of the main chain, and the inclusion of Gavin's more accurate sigop
checking after the hard fork.
>>
>> Comments?
>
>
> First, THANK YOU for making a concrete proposal!

You're welcome.

> Specific comments:
>
> So we'd get to 2MB blocks in the year 2021. I think that is much too
conservative, and the most likely effect of being that conservative is that
the main blockchain becomes a settlement network, affordable only for
large-value transactions.

If there is demand for high-value settlements in Bitcoin, and this results
in a functioning economy where fees support the security of a transparent
network, I think that would be a much better outcome than what we have now.

> I don't think your proposal strikes the right balance between
centralization of payments (a future where only people running payment
hubs, big merchants, exchanges, and wallet providers settle on the
blockchain) and centralization of mining.

Well, centralization of mining is already terrible. I see no reason why we
should encourage making it worse. On the other hand, sure, not every
transaction fits on the blockchain. That is already the case, and will
remain the case with 2 MB or 8 MB or 100 MB blocks. Some use cases fit, and
others won't. We need to accept that, and all previous proposals I've seen
don't seem to do that.

Maybe the only ones that will fit are large settlements between layer-2
services, and maybe it will be something entirely different. But at least
we don't need to compromise the security of the main layer, or promise the
ecosystem unrealistic growth of space for on-chain transactions.

If Bitcoin needs to support a large scale, it already failed.

> I'll comment on using median time generally in Jorge's thread, but why
does monotonically increasing matter for max block size? I can't think of a
reason why a max block size of X bytes in block N followed by a max size of
X-something bytes in block N+1 would cause any problems.

I don't think it matters much, but it offers slightly easier transition for
the mempool (something Jorge convinced me of), and validation can benefit
from a single variable that can be set in a chain to indicate a switchover
happened, without needing to recalculate it every time.

I assume you're asking this because using raw nTime means you can check
what limits a p2p message should obey to by looking at just the first
bytes. I don't think this matters: your p2p protocol should deal with
whatever limits the system requires anyway. An attacker can take a valid
message of far in the chain, change a few bytes, and spam you with it at
zero extra effort anyway.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/fb2a6d86/attachment-0001.html>

From flyingkiwiguy at gmail.com  Thu Jul 30 16:56:23 2015
From: flyingkiwiguy at gmail.com (Gary Mulder)
Date: Thu, 30 Jul 2015 17:56:23 +0100
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
Message-ID: <CAKy9zTA1j6311Y8uo-c_z2JQr8gEwf_gH+HH56rRgZac9fqh9Q@mail.gmail.com>

On 30 July 2015 at 16:12, Jorge Tim?n <bitcoin-dev at lists.linuxfoundation.org
> wrote:

> 1) Unlike previous blocksize hardfork proposals, this uses median time
> instead of block.nTime for activation. I like that more but my
> preference is still using height for everything. But that discussion
> is not specific to this proposal, so it's better if we discuss that
> for all of them here:
>
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html


Note that a "median" is a special case of a 50% percentile. If you desire
to apply a more stringent criteria you can use the 75th or even 90th
percentile.

https://en.wikipedia.org/wiki/Percentile

Perhaps if a statistician (i.e. not me) could be found to offer her
services, she could become a resource for helping selecting the most
appropriate statistical algorithms on request (and implemented Integer math
as per Gavin, from memory), considering the consequences of learning
post-fork that a "bad statistical model" was chosen.

e.g. an exponentially weighted moving average is usually much less volatile
and harder to manipulate than a simple moving average, but still can
"respond" to short term drivers.

Regards,
Gary
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/b6d539f7/attachment.html>

From mark at friedenbach.org  Thu Jul 30 17:13:13 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 30 Jul 2015 10:13:13 -0700
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAKy9zTA1j6311Y8uo-c_z2JQr8gEwf_gH+HH56rRgZac9fqh9Q@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
	<CAKy9zTA1j6311Y8uo-c_z2JQr8gEwf_gH+HH56rRgZac9fqh9Q@mail.gmail.com>
Message-ID: <CAOG=w-v7sudzc91P32pw7VG=OMNigaj9-dbLLYz_2NYZheW4cQ@mail.gmail.com>

The median is used here because that is the consensus rule -- a block
cannot have a timestamp older than the median time of the last 11 blocks.
By linking the changeover to this rule we avoid perverse incentives about
miners lying in their timestamps, or the threshold being crossed, then
reverted, then crossed again, etc.

Maybe a different percentile would have been a better choice, but that ship
sailed in 2009. The rule is what it is right now, and we benefit the most
from using the same rule as consensus for the threshold.
On Jul 30, 2015 9:57 AM, "Gary Mulder via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On 30 July 2015 at 16:12, Jorge Tim?n <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> 1) Unlike previous blocksize hardfork proposals, this uses median time
>> instead of block.nTime for activation. I like that more but my
>> preference is still using height for everything. But that discussion
>> is not specific to this proposal, so it's better if we discuss that
>> for all of them here:
>>
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html
>
>
> Note that a "median" is a special case of a 50% percentile. If you desire
> to apply a more stringent criteria you can use the 75th or even 90th
> percentile.
>
> https://en.wikipedia.org/wiki/Percentile
>
> Perhaps if a statistician (i.e. not me) could be found to offer her
> services, she could become a resource for helping selecting the most
> appropriate statistical algorithms on request (and implemented Integer math
> as per Gavin, from memory), considering the consequences of learning
> post-fork that a "bad statistical model" was chosen.
>
> e.g. an exponentially weighted moving average is usually much less
> volatile and harder to manipulate than a simple moving average, but still
> can "respond" to short term drivers.
>
> Regards,
> Gary
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/39d7af41/attachment.html>

From thomas at thomaszander.se  Thu Jul 30 17:24:35 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 19:24:35 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABsx9T3FoErEeOtQcnK62WK=zOBREwRkxzDNLDniuvM+L5Shiw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
	<CABsx9T3FoErEeOtQcnK62WK=zOBREwRkxzDNLDniuvM+L5Shiw@mail.gmail.com>
Message-ID: <29376390.L5XbfB8KJC@coldstorage>

On Thursday 30. July 2015 11.55.50 Gavin Andresen wrote:
> What other successful or unsuccessful decentralized systems should we be
> looking at?

Parallel compiling systems (distcc, icecream, teambuilder).

Git vs subversion (or perforce).

Not a joke; googles search. Not from a user perspective, naturally. But their 
filesystem and internal databases.
Wait, let me get a link; https://en.wikipedia.org/wiki/Google_File_System

and since I'm on wikipedia.

https://en.wikipedia.org/wiki/Parallel_rendering

Thinking about it; one inherent trait of successful distributed systems is 
that they are fractal-like. Not one huge mesh, but islands that connect.
Bitcoin core does something similar, but it doesn't really. The 'ping' score 
for connections is unreliable and its not really used to propagate smartly...

-- 
Thomas Zander

From thomas at thomaszander.se  Thu Jul 30 17:42:53 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 19:42:53 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <1689926.ZjkxyJjokn@coldstorage>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
	<1689926.ZjkxyJjokn@coldstorage>
Message-ID: <4330019.CpFTjXpmfm@coldstorage>

On Thursday 30. July 2015 18.07.40 Thomas Zander via bitcoin-dev wrote:
> Remember when we went from single-core CPUs to multi-core (and 
> hyperthreading)? Developers were saying it was useless because all apps
> were  still single-threaded.  And now, 15 years later, there are fantastic
> frameworks to make this easy.
> 
> Same will happen with distributed. Any assumption you wrote above is not 
> inherent in the technology.

My brain went a bit to fast (dinner was being served, she made me close the 
laptop...) and wrote distributed above while the topic is decentralized.
Its not entirely wrong, even; Libraries or approaches that do distributed will 
be useful for decentralized systems.  ;)

-- 
Thomas Zander

From jtimon at jtimon.cc  Thu Jul 30 17:46:30 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 19:46:30 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
Message-ID: <CABm2gDqC=-fvxSxCOd0s_3+iuatW54oWUPMHqW4EJ3fng-gOMw@mail.gmail.com>

On Thu, Jul 30, 2015 at 6:20 PM, Gavin Andresen via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Jul 30, 2015 at 10:25 AM, Pieter Wuille via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> So we'd get to 2MB blocks in the year 2021. I think that is much too
> conservative

When considering "too conservative" options, let's not forget that,
say, scheduling 2MB for 2020 doesn't preclude us from deciding that
was too conservative and schedule, say 4MB for 2018 later. The first
hardfork would be "useless", but it would set a "minimum increase"
that would have been useful if the second one never happened.

> I'll comment on using median time generally in Jorge's thread, but why does
> monotonically increasing matter for max block size? I can't think of a
> reason why a max block size of X bytes in block N followed by a max size of
> X-something bytes in block N+1 would cause any problems.

To be clear, for this concrete case block.nTime would just work just
fine. I just want us to decide on one of the options and uniformly
recommend that options for all cases in BIP99 [just renamed the file,
https://github.com/jtimon/bips/blob/bip-forks/bip-0099.org ].
But, yes, please, let's discuss this in the other thread.

From jtimon at jtimon.cc  Thu Jul 30 17:51:12 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 19:51:12 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <55BA5283.2000405@mail.bihthai.net>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
	<55BA5283.2000405@mail.bihthai.net>
Message-ID: <CABm2gDqGqPEpJYVmZpnwSS3WOmZat8w5xAONLED+C9+VBuQ8_w@mail.gmail.com>

On Thu, Jul 30, 2015 at 6:36 PM, Venzen Khaosan <venzen at mail.bihthai.net> wrote:
> I just had a look your existing Size N testnet code
> https://github.com/bitcoin/bitcoin/pull/6382
> and i'll set up a node over the weekend and post its address in that
> PR's conversation. Do you or anyone else already have a node running?
> what blocksize?

Great! No, I'm not running any node right now at any size.
Take into account that it's not a regular testnet (ie like testnet3),
it's a regtest-like testnet to make mining and simulations cheap.
That also means that anybody can trivially create reorgs, so it is
expected to be used in a controlled environment (you can control which
node creates a new block and when).

From jtimon at jtimon.cc  Thu Jul 30 18:00:21 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 20:00:21 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDqGqPEpJYVmZpnwSS3WOmZat8w5xAONLED+C9+VBuQ8_w@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABm2gDrHjfkC+whh3Vh2LZNdSR1WSAXpNitR-jEdxtbKj7J25g@mail.gmail.com>
	<55BA5283.2000405@mail.bihthai.net>
	<CABm2gDqGqPEpJYVmZpnwSS3WOmZat8w5xAONLED+C9+VBuQ8_w@mail.gmail.com>
Message-ID: <CABm2gDr8A6dM_OK-CmMLqN7jUBAcm1UFEpQ7KybcXEbdi6Xpdw@mail.gmail.com>

Gavin, Pieter, Mark, Gary, can we move the median time discussion to
its own thread?
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html

I really don't want to fill this thread with that discussion.

On Thu, Jul 30, 2015 at 7:51 PM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> On Thu, Jul 30, 2015 at 6:36 PM, Venzen Khaosan <venzen at mail.bihthai.net> wrote:
>> I just had a look your existing Size N testnet code
>> https://github.com/bitcoin/bitcoin/pull/6382
>> and i'll set up a node over the weekend and post its address in that
>> PR's conversation. Do you or anyone else already have a node running?
>> what blocksize?
>
> Great! No, I'm not running any node right now at any size.
> Take into account that it's not a regular testnet (ie like testnet3),
> it's a regtest-like testnet to make mining and simulations cheap.
> That also means that anybody can trivially create reorgs, so it is
> expected to be used in a controlled environment (you can control which
> node creates a new block and when).

From mark at friedenbach.org  Thu Jul 30 18:02:43 2015
From: mark at friedenbach.org (Mark Friedenbach)
Date: Thu, 30 Jul 2015 11:02:43 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <4330019.CpFTjXpmfm@coldstorage>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
	<1689926.ZjkxyJjokn@coldstorage> <4330019.CpFTjXpmfm@coldstorage>
Message-ID: <CAOG=w-vZ+5fBxpZ2bVgg_H9VD4cmSDhtkaOu4_UH3gvw-QfkEw@mail.gmail.com>

They aren't really so closely related as you are implying, since bitcoin is
a trustlessly decentralized system. At present every participant needs to
be able to validate the entire chain in order to be certain that their copy
of the ledger state is correct, and miners need to be able to incrementally
validate blocks in particularly short timeframes or else.

It is possible for a decentralized system like bitcoin to scale via
distribution in a way that introduces minimal trust, for example by
probabilistic validation and distribution of fraud proofs. However changes
to bitcoin consensus rules (mostly soft-forks) are required in order to
make this possible.

I don't want to discourage thinking about scaling bitcoin in such ways, as
it is a viable medium term proposal. However right now with the bitcoin
that exists today parallel distribution and decentralization are at odds
with each other.

On Thu, Jul 30, 2015 at 10:42 AM, Thomas Zander via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Thursday 30. July 2015 18.07.40 Thomas Zander via bitcoin-dev wrote:
> > Remember when we went from single-core CPUs to multi-core (and
> > hyperthreading)? Developers were saying it was useless because all apps
> > were  still single-threaded.  And now, 15 years later, there are
> fantastic
> > frameworks to make this easy.
> >
> > Same will happen with distributed. Any assumption you wrote above is not
> > inherent in the technology.
>
> My brain went a bit to fast (dinner was being served, she made me close the
> laptop...) and wrote distributed above while the topic is decentralized.
> Its not entirely wrong, even; Libraries or approaches that do distributed
> will
> be useful for decentralized systems.  ;)
>
> --
> Thomas Zander
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/c46d59a4/attachment.html>

From jtimon at jtimon.cc  Thu Jul 30 18:14:47 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 20:14:47 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <55BA2329.1080700@thinlink.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
Message-ID: <CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 3:14 PM, Tom Harding via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On 7/29/2015 9:48 PM, Ryan Butler via bitcoin-dev wrote:
> ... more evidence that conclusively refutes the conjecture that a
> production quota is necessary for a "functioning fee market."  A
> production quota merely pushes up fees.  We have a functioning market,
> and so far, it shows that wider bitcoin usage is even more effective
> than a quota at pushing up fees.

The blocksize limit (your "production quota") is necessary for
decentralization, not for having a functioning fee market.
But I have the hope that hitting the limit would help with getting rid
of all that special-case or at least would encourage miners to
implement their own policies.
If we can agree that hitting the limit will JUST cause higher fees and
not bitcoin to fail, puppies to die or the sky to turn purple I think
that's a great step forward in this debate.
>From that perspective, hitting the limit is not something terribly bad
(as said, I think it can even have positive consequences; for example,
higher fees may be just what is needed for more scalable solutions
[like payment channels] to be adopted by bitcoin companies). Hitting
the limit may produce a more healthy market, but it is true that a
market for fast confirmations already exists.

Unless we want to completely get rid of the blocksize limit (which I
would consider another debate entirely), we will eventually hit the
limit anyway. Why not now so that we can make sure the software is
completely compatible with having a limit?
Why we can hit the limit eventually but not now?

(As said, unless you think the limit should be completely removed forever).

From jl2012 at xbt.hk  Thu Jul 30 18:14:50 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Thu, 30 Jul 2015 18:14:50 +0000
Subject: [bitcoin-dev] A summary of block size hardfork proposals
Message-ID: <20150730181450.Horde.mXJp1wMjXROJvXZ_Vhv2RQ2@server47.web-hosting.com>

Currently, there are 4 block size BIP by Bitcoin developers:

BIP100 by Jeff:  
http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
BIP101 by Gavin:  
https://github.com/bitcoin/bips/blob/master/bip-0101.mediawiki
BIP102 by Jeff: https://github.com/bitcoin/bips/pull/173/files
BIP??? by Pieter (called "BIP103" below):  
https://gist.github.com/sipa/c65665fc360ca7a176a6

To facilitate further discussion, I'd like to summarize these  
proposals by a series of questions. Please correct me if I'm wrong.  
Something like sigop limit are less controversial and are not shown.

Should we use a BIP34-like voting mechanism to initiate the hardfork?
BIP100, 102, 103: No
BIP101: Yes

When should we initiate the hardfork?
BIP100: 2016-01-11
BIP101: 2 weeks after 75% miner support, but not before 2016-01-11
BIP102: 2015-11-11
BIP103: 2017-01-01

What should be the block size at initiation?
BIP100: 1MB
BIP101: 8MB
BIP102: 2MB
BIP103: 1MB

Should we allow further increase / decrease?
BIP100: By miner voting, 0.5x - 2x every 12000 blocks (~3 months)
BIP101: Double every 2 years, with interpolations in between (41.4% p.a.)
BIP102: No
BIP103: +4.4% every 97 days (double every 4.3 years, or 17.7% p.a.)

The earliest date for a >=2MB block?
BIP100: 2016-04-03 (assuming 10 minutes block)
BIP101: 2016-01-11
BIP102: 2015-11-11
BIP103: 2020-12-27

What should be the final block size?
BIP100: 32MB is the max, but it is possible to reduce by miner voting
BIP101: 8192MB
BIP102: 2MB
BIP103: 2048MB

When should we have the final block size?
BIP100: Decided by miners
BIP101: 30 years after initiation
BIP102: 2015-11-11
BIP103: 2063-07-09




From jtimon at jtimon.cc  Thu Jul 30 18:16:03 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Thu, 30 Jul 2015 20:16:03 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
	<CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
Message-ID: <CABm2gDrrqoAHgYehRUwyZWx79_8uM7iifdkiFxMYdJ_dQJPrPQ@mail.gmail.com>

s/all that special-case/s/all that special-case policy code for free
transactions/

From gavinandresen at gmail.com  Thu Jul 30 18:16:22 2015
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 30 Jul 2015 14:16:22 -0400
Subject: [bitcoin-dev] Consensus fork activation thresholds: Block.nTime
 vs median time vs block.nHeight
In-Reply-To: <CABm2gDoxr4yY6XPZOEG0CF_iPO+b1H3_yFoKnYa68Y4b=Tcwrw@mail.gmail.com>
References: <CABm2gDoxr4yY6XPZOEG0CF_iPO+b1H3_yFoKnYa68Y4b=Tcwrw@mail.gmail.com>
Message-ID: <CABsx9T0c10SDHCBy5=iPKVvsNPmKr2ejUxLp0rJPZmPRPQpfig@mail.gmail.com>

I still think using the version and timestamp fields in the block header
are simplest and best.

Advantages:
  Available to SPV nodes with no change to the network protocol
  Available after headers downloaded, before full block data is available
  Once well past a fork, allows all block validation except validation
against the UTXO to happen in parallel, out-of-order, independent of any
other block.

Disadvantages:
  Not monotonically increasing


I think discussion about transactions in the memory pool are just a
distraction: no matter what criteria is used (timestamp, height, median
time), a blockchain re-organization could mean the validity of transactions
you've accepted into the memory pool (if you're accepting transactions that
switch from valid to invalid at the consensus change -- Core tries hard not
to do that via IsStandard policy) must be re-evaluated.

I don't strongly care if median time or block timestamp is used, I think
either will work. I don't like height, there are too many cases where the
time is known but the block height isn't (see, for example, the
max-outputs-in-a-transaction sanity check computation at line 190 of
bitcoin-tx.cpp -- bitcoin-tx.cpp has no idea what the current block height
is).


-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/bc20c023/attachment-0001.html>

From thomas at thomaszander.se  Thu Jul 30 20:20:43 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Thu, 30 Jul 2015 22:20:43 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
Message-ID: <25710699.lX8S1tS4UG@coldstorage>

On Thursday 30. July 2015 16.25.02 Pieter Wuille via bitcoin-dev wrote:
> Hello all,
> 
> here is a proposal for long-term scalability I've been working on:
> https://gist.github.com/sipa/c65665fc360ca7a176a6
> 
> Some things are not included yet, such as a testnet whose size runs ahead
> of the main chain, and the inclusion of Gavin's more accurate sigop
> checking after the hard fork.
> 
> Comments?


Maybe this part could use a bit more rationale, it looks like its a sudden and 
unexplained.

>  No hard forking change that relaxes the block size limit can be guaranteed
>  to provide enough space for every possible demand - or even any particular
>  demand - unless strong centralization of the mining ecosystem is expected.
-- 
Thomas Zander

From odinn.cyberguerrilla at riseup.net  Thu Jul 30 20:32:11 2015
From: odinn.cyberguerrilla at riseup.net (odinn)
Date: Thu, 30 Jul 2015 13:32:11 -0700
Subject: [bitcoin-dev] A summary of block size hardfork proposals (and a
 softforking one)
In-Reply-To: <20150730181450.Horde.mXJp1wMjXROJvXZ_Vhv2RQ2@server47.web-hosting.com>
References: <20150730181450.Horde.mXJp1wMjXROJvXZ_Vhv2RQ2@server47.web-hosting.com>
Message-ID: <55BA89CB.5080806@riseup.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Great summary, thanks.  Helpful to get general grasp of the main
things out there.

On 07/30/2015 11:14 AM, jl2012 via bitcoin-dev wrote:
> Currently, there are 4 block size BIP by Bitcoin developers:
> 
> BIP100 by Jeff: 
> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf 
> BIP101 by Gavin: 
> https://github.com/bitcoin/bips/blob/master/bip-0101.mediawiki 
> BIP102 by Jeff: https://github.com/bitcoin/bips/pull/173/files 
> BIP??? by Pieter (called "BIP103" below): 
> https://gist.github.com/sipa/c65665fc360ca7a176a6
> 
> To facilitate further discussion, I'd like to summarize these
> proposals by a series of questions. Please correct me if I'm wrong.
> Something like sigop limit are less controversial and are not
> shown.
> 
> Should we use a BIP34-like voting mechanism to initiate the
> hardfork? BIP100, 102, 103: No BIP101: Yes
> 
> When should we initiate the hardfork? BIP100: 2016-01-11 BIP101: 2
> weeks after 75% miner support, but not before 2016-01-11 BIP102:
> 2015-11-11 BIP103: 2017-01-01
> 
> What should be the block size at initiation? BIP100: 1MB BIP101:
> 8MB BIP102: 2MB BIP103: 1MB
> 
> Should we allow further increase / decrease? BIP100: By miner
> voting, 0.5x - 2x every 12000 blocks (~3 months) BIP101: Double
> every 2 years, with interpolations in between (41.4% p.a.) BIP102:
> No BIP103: +4.4% every 97 days (double every 4.3 years, or 17.7%
> p.a.)
> 
> The earliest date for a >=2MB block? BIP100: 2016-04-03 (assuming
> 10 minutes block) BIP101: 2016-01-11 BIP102: 2015-11-11 BIP103:
> 2020-12-27
> 
> What should be the final block size? BIP100: 32MB is the max, but
> it is possible to reduce by miner voting BIP101: 8192MB BIP102:
> 2MB BIP103: 2048MB
> 
> When should we have the final block size? BIP100: Decided by
> miners BIP101: 30 years after initiation BIP102: 2015-11-11 BIP103:
> 2063-07-09
> 
> 
> 
> _______________________________________________ bitcoin-dev mailing
> list bitcoin-dev at lists.linuxfoundation.org 
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 

I'd like to add to this some remarks that are from an earlier discussion

Cameron Garnham added into a thread, at
http://bitcoin-development.narkive.com/iHmMh6bZ/bitcoin-development-prop
osed-alternatives-to-the-20mb-step-function#post65
"First off, I am glad that the idea of dynamic block size adjustment is
gaining some attention, in particular the model that I proposed.

I wanted to take some time and explain some of the philosophy of how,
and why, I proposed this this particular model.

When Bitcoin was first made, there was a 32MB block size limit; this
was quickly found to be open to spam (and potentially DOS, as the code
was not-at-all optimized to support large blocks), and was reduced to
1MB, this was a quick fix that was never intended to last; at some
point the network should come to an understanding, a consensus if you
will, of what (and how much) belongs in a block.
The core point of this is that miners have always, and will always;
hold the power, to decide what goes into blocks; this implicitly,
obviously, includes how large blocks are. Miners are able to come any
sort of agreement they wish, providing the bitcoin clients accept
their blocks as valid."
(...)
"the proposal introducing a consensus protocol for block sizes;
instead of just having a hard limit (enforced by everyone), instead,
we have a constant factor above the average block size over a fixed
intervals that is soft-forked by only the miners. (The next simplest
mathematical construct).
This proposal is entirely a soft-fork and may be implemented without
changing any client code what so ever. In-fact, it could be
implemented by only a simple 51% majority of miners, with-or-without
gaining the wider community consensus."


- -- 
http://abis.io ~
"a protocol concept to enable decentralization
and expansion of a giving economy, and a new social good"
https://keybase.io/odinn
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVuonLAAoJEGxwq/inSG8CensH/29IwToehXVgEA44RZmUsIdn
5d2OCGZHOsinJKS9Uqtd5SfIDycXVVTV832KrxIUH1oC685iwVzBuA4hJQc2Z49A
hNKs97N97iS2s3W6X/llbYz/3i3H6TQaCJGfK+XurFi6pxdC+4LgoUovtGaIsc8x
z7iTD5F7FEhPmKU6uxw9GRRvKHJwyy0xWWNgBAJjdS7F5y7DR1VC9RhPehpU75Wt
MGHrrogM41r+cNVDpNpnT42q0rAKC0IXjvY43ZoA/EFUoWkpaXI6jwKXtjqDjCP7
P8StjQ7eoeIkZWu1PwbfKStbF4Ob3Q7Xi+hQxCwciKdtfsLRFkdamzvpl/qh9wg=
=Itr1
-----END PGP SIGNATURE-----

From ian at coincadence.com  Thu Jul 30 20:43:05 2015
From: ian at coincadence.com (Ian Treibick)
Date: Thu, 30 Jul 2015 16:43:05 -0400
Subject: [bitcoin-dev] LockUnspent not working, bug?
In-Reply-To: <mailman.3587.1438280185.1480.bitcoin-dev@lists.linuxfoundation.org>
References: <mailman.3587.1438280185.1480.bitcoin-dev@lists.linuxfoundation.org>
Message-ID: <6DA19C0F-EFBD-4C38-B2FD-1DD0A40F11D4@coincadence.com>

My first post to the list, not sure this is the right place, let me know if it is better to open an issue on GitHub.

This is occurring on OS X with Satoshi 0.11.0, the TXID and vout belong to the wallet:

command: lockunspent true "[ { \"txid\": \"fd697746c67f68a206bb7377fd40f35d146cc5821883e4c4b6cbf82b48e62a13\", \"vout\": 1 } ]"
output: true
command: listlockunspent
Output:?
[
]

Additionally after locking the TX with lockunspent I am able to spend it from the wallet.

Cheers,

Ian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/e9e196b1/attachment.sig>

From tomh at thinlink.com  Thu Jul 30 20:53:36 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Jul 2015 13:53:36 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
	<CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
Message-ID: <55BA8ED0.4080600@thinlink.com>

On 7/30/2015 11:14 AM, Jorge Tim?n wrote:
> The blocksize limit (your "production quota") is necessary for
> decentralization, not for having a functioning fee market.

> If we can agree that hitting the limit will JUST cause higher fees and
> not bitcoin to fail, puppies to die or the sky to turn purple I think
> that's a great step forward in this debate.

It's interesting how people see things differently.  I think your first
statement above represents a great step forward in the debate.  Unlike
Adam Back, you state that a block size limit is not necessary to create
a functioning fee market.

As to your second statement, unfortunately for immediate harmonious
relations, I was merely separating out the elevated fee market concern,
not at all saying it is the only or even the biggest concern with
limited capacity.  Alan Reiner, Ryan X. Charles and others have
eloquently explained how restrictive a 1MB limit is, even with "layer 2".

What's missing from the decentralization dialog is a quantitative
measure of decentralization.

Why not slam users with higher fees now, if we accept that they may be
necessary someday? For the same reasons you don't ask a child, age 5, to
work in a factory.


From michabailey at gmail.com  Thu Jul 30 23:00:59 2015
From: michabailey at gmail.com (Micha Bailey)
Date: Fri, 31 Jul 2015 02:00:59 +0300
Subject: [bitcoin-dev] LockUnspent not working, bug?
In-Reply-To: <6DA19C0F-EFBD-4C38-B2FD-1DD0A40F11D4@coincadence.com>
References: <mailman.3587.1438280185.1480.bitcoin-dev@lists.linuxfoundation.org>
	<6DA19C0F-EFBD-4C38-B2FD-1DD0A40F11D4@coincadence.com>
Message-ID: <CAAmoQf2mZrytwT7ptpSG-vK-yqEXrZGUb6TRrTYPADmk5Q9nGg@mail.gmail.com>

RTFM: `help lockunspent`. The boolean parameter is whether or not the UTXO
should be available.

On Thu, Jul 30, 2015 at 11:43 PM, Ian Treibick via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> My first post to the list, not sure this is the right place, let me know
> if it is better to open an issue on GitHub.
>
> This is occurring on OS X with Satoshi 0.11.0, the TXID and vout belong to
> the wallet:
>
> command: lockunspent true "[ { \"txid\":
> \"fd697746c67f68a206bb7377fd40f35d146cc5821883e4c4b6cbf82b48e62a13\",
> \"vout\": 1 } ]"
> output: true
> command: listlockunspent
> Output:?
> [
> ]
>
> Additionally after locking the TX with lockunspent I am able to spend it
> from the wallet.
>
> Cheers,
>
> Ian
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/cf902c48/attachment.html>

From elombrozo at gmail.com  Thu Jul 30 23:33:16 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 30 Jul 2015 16:33:16 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
Message-ID: <25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>


> On Jul 30, 2015, at 5:29 AM, Gavin <gavinandresen at gmail.com> wrote:
> 
> it is hard to have a rational conversation about that when even simple questions like 'what is s reasonable cost to run a full node' are met with silence.

Some of the risks are pretty hard to quantify. But I think this misses the bigger point - it very well *might* be possible to safely raise this limit or even get rid of it by first fixing some serious issues with the protocol. But over six years into the project and these issues continue to be all-but-ignored by most of the community (including at least a few core developers). I don?t think it?s really a matter of whether we agree on whether it?s good to raise the block size limit, Gavin. I think it?s a matter of a difference in priorities.

- Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/0873af30/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/0873af30/attachment-0001.sig>

From milly at bitcoins.info  Fri Jul 31 00:15:19 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 30 Jul 2015 20:15:19 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
 temporary
In-Reply-To: <25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
Message-ID: <55BABE17.7050900@bitcoins.info>

These are the types of things I have been discussing in relation to a 
process:

-A list of metrics
-A Risk analysis of the baseline system.  Bitcoin as it is now.
-Mitigation strategies for each risk.
-A set of goals.
-A Road map for each goal that lists the changes or possible avenues to 
achieve that goal.

Proposed changes would be measured against the same metrics and a risk 
analysis done so it can be compared with the baseline.

For example, the block size debate would be discussed in the context of 
a road map related to a goal of increase scaling.  One of the metrics 
would be a decentralization metric.  (A framework for a decentralization 
metric is at 
http://www.hks.harvard.edu/fs/pnorris/Acrobat/stm103%20articles/Schneider_Decentralization.pdf). 
  Cost would be one aspect of the decentralization metric.

Russ




On 7/30/2015 7:33 PM, Eric Lombrozo via bitcoin-dev wrote:
>
>> On Jul 30, 2015, at 5:29 AM, Gavin <gavinandresen at gmail.com
>> <mailto:gavinandresen at gmail.com>> wrote:
>>
>> it is hard to have a rational conversation about that when even simple
>> questions like 'what is s reasonable cost to run a full node' are met
>> with silence.
>
> Some of the risks are pretty hard to quantify. But I think this misses
> the bigger point - it very well *might* be possible to safely raise this
> limit or even get rid of it by first fixing some serious issues with the
> protocol. But over six years into the project and these issues continue
> to be all-but-ignored by most of the community (including at least a few
> core developers). I don?t think it?s really a matter of whether we agree
> on whether it?s good to raise the block size limit, Gavin. I think it?s
> a matter of a difference in priorities.
>
> - Eric
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



From elombrozo at gmail.com  Fri Jul 31 00:22:11 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Thu, 30 Jul 2015 17:22:11 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CAOG=w-vZ+5fBxpZ2bVgg_H9VD4cmSDhtkaOu4_UH3gvw-QfkEw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
	<1689926.ZjkxyJjokn@coldstorage> <4330019.CpFTjXpmfm@coldstorage>
	<CAOG=w-vZ+5fBxpZ2bVgg_H9VD4cmSDhtkaOu4_UH3gvw-QfkEw@mail.gmail.com>
Message-ID: <61A9E7F8-17F7-42AE-89E3-3E37BC77C3A1@gmail.com>


> On Jul 30, 2015, at 11:02 AM, Mark Friedenbach via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> It is possible for a decentralized system like bitcoin to scale via distribution in a way that introduces minimal trust, for example by probabilistic validation and distribution of fraud proofs. However changes to bitcoin consensus rules (mostly soft-forks) are required in order to make this possible.

Please, Mark, let?s make this happen.

You can count on my full support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/2d0cb791/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/2d0cb791/attachment.sig>

From jtimon at jtimon.cc  Fri Jul 31 01:21:07 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 03:21:07 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <55BA8ED0.4080600@thinlink.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
	<CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
	<55BA8ED0.4080600@thinlink.com>
Message-ID: <CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>

On Thu, Jul 30, 2015 at 10:53 PM, Tom Harding <tomh at thinlink.com> wrote:
> On 7/30/2015 11:14 AM, Jorge Tim?n wrote:
>> The blocksize limit (your "production quota") is necessary for
>> decentralization, not for having a functioning fee market.
>
>> If we can agree that hitting the limit will JUST cause higher fees and
>> not bitcoin to fail, puppies to die or the sky to turn purple I think
>> that's a great step forward in this debate.
>
> It's interesting how people see things differently.  I think your first
> statement above represents a great step forward in the debate.  Unlike
> Adam Back, you state that a block size limit is not necessary to create
> a functioning fee market.

Yes, Adam Back and I some times see things differently, and that's fine.
Many times, we realize later that we're saying the same thing with
different words and we're just discussing about terminology. That's
not an exclusive problem we have, it's a universal communication
problem. That's why math (which is nothing but a language) was
invented: to never discuss about terminology, to force any used
concept to be defined beforehand.
Sorry for the distraction, but I think this is one of those times.
Whether "hitting the limit" is "necessary" (I bet he never said
"strictly necessary") or just "helpful" is not very relevant. I think
Adam and I agree that hitting the limit wouldn't be bad, but actually
good for an young and immature market like bitcoin fees.
Apart from the dubious time-preference premium (dubious because in
most cases is just wallet's defaults and not users in a hurry),
transactions are basically free if you are willing to wait (and
apparently not that much).

If I was a miner and you want me to include your transaction for free,
you're asking me to give you money, which I would prefer to do
directly if you are a friend or a non-profit organization that I like
or whatever rather than giving you money through bitcoin fee
discounts.
By including your transaction, I'm increasing the probability of my
mined block being orphaned and you're not willing to give me even a
single satoshi in exchange.
Today, in practice, one satoshi fee and no fee at all are treated
exactly the same by most (maybe all?) miners, which if you ask me, I
find very ~~unfair~~ economically absurd.

Are all miners just stupid?
Not necessarily, they just don't care about fees or transactions at all.
Who is to blame? Certainly not the value chosen for the block size
limit, it's clearly the subsidy's fault: subsidy is all miners care
about (by the way, that's also the illness behind the SPV-mining
symptom). I am very worried about excessive mining subsidies (if you
knew how worried the freicoin community was [and still is] about this
problem, even if freicoin probably has one of the lowest mining
subsidies out there [currently and perpetually annual 5% of the
monetary base]...).
And I think that "hitting the limit" is not a catastrophe at all, but
rather an opportunity to motivate miners to start caring more about
transactions and fees (in proportion to what they care about).
And if the limit is increased later and fees fall again, that's fine,
because miners' will already be more prepared for the next time we
"hit the limit".
Anyway, maybe that hope is irrelevant, but what I'm convinced about is
that rising non-fast-confirmation mining fees above zero is not a bad
thing.

> As to your second statement, unfortunately for immediate harmonious
> relations, I was merely separating out the elevated fee market concern,
> not at all saying it is the only or even the biggest concern with
> limited capacity.  Alan Reiner, Ryan X. Charles and others have
> eloquently explained how restrictive a 1MB limit is, even with "layer 2".

To be honest, I've only followed those were assuming the worse case
for optimization: bitcoin global monetary monopoly.
If I remember correctly, they were aiming for something around 170 MB,
but in any case, any value for the constant is completely arbitrary to
me at this point, including 1 MB. I'm deeply offended when I feel
included in the "1MBers group" because I don't feel like that at all.
To be honest, I have no idea what the correct value should be, all I
know it's a trade-off in a monotonic function:

f(blocksize) = decentralization

> What's missing from the decentralization dialog is a quantitative
> measure of decentralization.

You are completely right: there's no defined measurable unit for
"decentralization" ("p2pness", whatever bitcoin has that wasn't
possible before pow-based distributed consensus).
And I'm afraid we will never have such a measurable unit. Maybe the
best definition of the property we're trying to capture is just "the
opposite of centralization", assuming centralization is easier to
define.
The best we have now are pool percentages, number of nodes,
subsidy/fee ratio (as said, this influences things like SPV mining)
How all that gets to...?

g(many unrelated matrics) = centralization

I don't really think anybody knows, but no matter what your
interpretation of some Japanese-named dude on the internet's words
(aka bitcoin sacred history) are, if you think 3 validating nodes is
enough for a "p2p" monetary network.
It is very possible that decentralization(blocksize) =
decentralization(blocksize+1) for many values of blocksize, but I
think the burden of the proof that decentralization(current_blocksize)
~= decentralization(current_blocksize+1) is on those who propose
++current_blocksize.
But I think ANY metric for centralization would be welcomed right now.
In fact, it doesn't need to be a function of blocksize, it can be a
function of maxBlockSigops or maybe even maxBlockInputs or
maxBlockOuputs.
But if we don't want to have any consensus limit to centralization
bitcoin has already fail (and doesn't need expensive proof of work).

> Why not slam users with higher fees now, if we accept that they may be
> necessary someday? For the same reasons you don't ask a child, age 5, to
> work in a factory.

It is a certainty that fees will be necessary someday: bitcoin's
seigniorage is limited to 21 M to subsidize mining, and we know that
won't last forever. Expensive proof of work (that centralized systems
lack) must be paid for somehow.
Who's child am I asking to work in a factory? I feel I'm missing
something there.

From raystonn at hotmail.com  Fri Jul 31 01:25:28 2015
From: raystonn at hotmail.com (Raystonn)
Date: Thu, 30 Jul 2015 18:25:28 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
 temporary
Message-ID: <COL402-EAS14365E0523B8DA89730142FCD8A0@phx.gbl>

An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150730/ac587502/attachment.html>

From jtimon at jtimon.cc  Fri Jul 31 01:29:21 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 03:29:21 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<543015348.4948849.1438178962054.JavaMail.yahoo@mail.yahoo.com>
	<COL131-DS3F7339BCCA36BEFD1755ACD8C0@phx.gbl>
	<55B959A2.9020402@sky-ip.org>
	<CAF_2MyVAXg9788gatEQ-t4=8rJxXdkf9DA45uF5_gksDUM6b=A@mail.gmail.com>
	<CALqxMTHEknuwPW-uG3W9Fv1sQC54ud3zk4aLQaFGTTjAt7ghfA@mail.gmail.com>
	<CAF_2MyXhhZyHSekOR0uTKndt8onEHqTJGnZwWFXoHw6xngidPA@mail.gmail.com>
	<55BA2329.1080700@thinlink.com>
	<CABm2gDoh69a0335uLhwVndwwLiYtZEVdCvNsrCtHiRAVrSqkaQ@mail.gmail.com>
	<55BA8ED0.4080600@thinlink.com>
	<CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
Message-ID: <CABm2gDopoEgMOPWfqH1Jqk4HktodkhWhYZYmqb2edgi9N7+mXA@mail.gmail.com>

I'm re-reading and I have many spelling errors, sorry.

On Fri, Jul 31, 2015 at 3:21 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
> On Thu, Jul 30, 2015 at 10:53 PM, Tom Harding <tomh at thinlink.com> wrote:
>> On 7/30/2015 11:14 AM, Jorge Tim?n wrote:
>>> The blocksize limit (your "production quota") is necessary for
>>> decentralization, not for having a functioning fee market.
>>
>>> If we can agree that hitting the limit will JUST cause higher fees and
>>> not bitcoin to fail, puppies to die or the sky to turn purple I think
>>> that's a great step forward in this debate.
>>
>> It's interesting how people see things differently.  I think your first
>> statement above represents a great step forward in the debate.  Unlike
>> Adam Back, you state that a block size limit is not necessary to create
>> a functioning fee market.
>
> Yes, Adam Back and I some times see things differently, and that's fine.
> Many times, we realize later that we're saying the same thing with
> different words and we're just discussing about terminology. That's
> not an exclusive problem we have, it's a universal communication
> problem. That's why math (which is nothing but a language) was
> invented: to never discuss about terminology, to force any used
> concept to be defined beforehand.
> Sorry for the distraction, but I think this is one of those times.
> Whether "hitting the limit" is "necessary" (I bet he never said
> "strictly necessary") or just "helpful" is not very relevant. I think
> Adam and I agree that hitting the limit wouldn't be bad, but actually
> good for an young and immature market like bitcoin fees.
> Apart from the dubious time-preference premium (dubious because in
> most cases is just wallet's defaults and not users in a hurry),
> transactions are basically free if you are willing to wait (and
> apparently not that much).
>
> If I was a miner and you want me to include your transaction for free,
> you're asking me to give you money, which I would prefer to do
> directly if you are a friend or a non-profit organization that I like
> or whatever rather than giving you money through bitcoin fee
> discounts.
> By including your transaction, I'm increasing the probability of my
> mined block being orphaned and you're not willing to give me even a
> single satoshi in exchange.
> Today, in practice, one satoshi fee and no fee at all are treated
> exactly the same by most (maybe all?) miners, which if you ask me, I
> find very ~~unfair~~ economically absurd.
>
> Are all miners just stupid?
> Not necessarily, they just don't care about fees or transactions at all.
> Who is to blame? Certainly not the value chosen for the block size
> limit, it's clearly the subsidy's fault: subsidy is all miners care
> about (by the way, that's also the illness behind the SPV-mining
> symptom). I am very worried about excessive mining subsidies (if you
> knew how worried the freicoin community was [and still is] about this
> problem, even if freicoin probably has one of the lowest mining
> subsidies out there [currently and perpetually annual 5% of the
> monetary base]...).
> And I think that "hitting the limit" is not a catastrophe at all, but
> rather an opportunity to motivate miners to start caring more about
> transactions and fees (in proportion to what they care about).
> And if the limit is increased later and fees fall again, that's fine,
> because miners' will already be more prepared for the next time we
> "hit the limit".
> Anyway, maybe that hope is irrelevant, but what I'm convinced about is
> that rising non-fast-confirmation mining fees above zero is not a bad
> thing.
>
>> As to your second statement, unfortunately for immediate harmonious
>> relations, I was merely separating out the elevated fee market concern,
>> not at all saying it is the only or even the biggest concern with
>> limited capacity.  Alan Reiner, Ryan X. Charles and others have
>> eloquently explained how restrictive a 1MB limit is, even with "layer 2".
>
> To be honest, I've only followed those were assuming the worse case
> for optimization: bitcoin global monetary monopoly.
> If I remember correctly, they were aiming for something around 170 MB,
> but in any case, any value for the constant is completely arbitrary to
> me at this point, including 1 MB. I'm deeply offended when I feel
> included in the "1MBers group" because I don't feel like that at all.
> To be honest, I have no idea what the correct value should be, all I
> know it's a trade-off in a monotonic function:
>
> f(blocksize) = decentralization
>
>> What's missing from the decentralization dialog is a quantitative
>> measure of decentralization.
>
> You are completely right: there's no defined measurable unit for
> "decentralization" ("p2pness", whatever bitcoin has that wasn't
> possible before pow-based distributed consensus).
> And I'm afraid we will never have such a measurable unit. Maybe the
> best definition of the property we're trying to capture is just "the
> opposite of centralization", assuming centralization is easier to
> define.
> The best we have now are pool percentages, number of nodes,
> subsidy/fee ratio (as said, this influences things like SPV mining)
> How all that gets to...?
>
> g(many unrelated matrics) = centralization
>
> I don't really think anybody knows, but no matter what your
> interpretation of some Japanese-named dude on the internet's words
> (aka bitcoin sacred history) are, if you think 3 validating nodes is
> enough for a "p2p" monetary network.
> It is very possible that decentralization(blocksize) =
> decentralization(blocksize+1) for many values of blocksize, but I
> think the burden of the proof that decentralization(current_blocksize)
> ~= decentralization(current_blocksize+1) is on those who propose
> ++current_blocksize.
> But I think ANY metric for centralization would be welcomed right now.
> In fact, it doesn't need to be a function of blocksize, it can be a
> function of maxBlockSigops or maybe even maxBlockInputs or
> maxBlockOuputs.
> But if we don't want to have any consensus limit to centralization
> bitcoin has already fail (and doesn't need expensive proof of work).
>
>> Why not slam users with higher fees now, if we accept that they may be
>> necessary someday? For the same reasons you don't ask a child, age 5, to
>> work in a factory.
>
> It is a certainty that fees will be necessary someday: bitcoin's
> seigniorage is limited to 21 M to subsidize mining, and we know that
> won't last forever. Expensive proof of work (that centralized systems
> lack) must be paid for somehow.
> Who's child am I asking to work in a factory? I feel I'm missing
> something there.

From tomh at thinlink.com  Fri Jul 31 02:02:14 2015
From: tomh at thinlink.com (Tom Harding)
Date: Thu, 30 Jul 2015 19:02:14 -0700
Subject: [bitcoin-dev] Another block size limit solution - dynamic block
 size limit.
In-Reply-To: <CABK8tmUd+RqTP=vteoX0UEwbzG-X=N3GWvUkD2g5q2suQNpx2w@mail.gmail.com>
References: <CABK8tmUd+RqTP=vteoX0UEwbzG-X=N3GWvUkD2g5q2suQNpx2w@mail.gmail.com>
Message-ID: <55BAD726.8070200@thinlink.com>

On 7/30/2015 8:03 AM, ?????? ????? via bitcoin-dev wrote:
> I propose to implement dynamic block size limit. Its short summary is
> here in doc:
>
> https://docs.google.com/document/d/1ixt0loN7LOF6M_2HXvV0D-3ZCayvcfj0rzVm-h-6ONg/edit
>
>

A dynamic limit based on recent block sizes has been discussed, but with
all the traffic on the list, finding the discussions is bound to be
difficult.

I think the main reason this kind of thing hasn't gotten traction is
that it would allow miners alone to chart the course of block sizes. 
Miners are likely to have more powerful equipment than everybody else,
and with the current network design, that could reduce the population of
nodes able to keep up, with no limit in the loss of decentralization.


From jl2012 at xbt.hk  Fri Jul 31 03:10:34 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Fri, 31 Jul 2015 03:10:34 +0000
Subject: [bitcoin-dev] CORRECTIONS: A summary of block size hardfork
 proposals
In-Reply-To: <20150730181450.Horde.mXJp1wMjXROJvXZ_Vhv2RQ2@server47.web-hosting.com>
References: <20150730181450.Horde.mXJp1wMjXROJvXZ_Vhv2RQ2@server47.web-hosting.com>
Message-ID: <20150731031034.Horde.pF0_RVukjyAUe06VAuvqaA1@server47.web-hosting.com>

I am making some corrections to my previous summary

Currently, there are 4 block size BIP by Bitcoin developers:

BIP100 by Jeff:  
http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf
BIP101 by Gavin:  
https://github.com/bitcoin/bips/blob/master/bip-0101.mediawiki
BIP102 by Jeff: https://github.com/bitcoin/bips/pull/173/files
BIP??? by Pieter (called "BIP103" below):  
https://gist.github.com/sipa/c65665fc360ca7a176a6

To facilitate further discussion, I'd like to summarize these  
proposals by a series of questions. Please correct me if I'm wrong.  
Something like sigop limit are less controversial and are not shown.

Should we use a miner voting mechanism to initiate the hardfork?
BIP100: Yes, support with 10800 out of last 12000 blocks (90%)
BIP101: Yes, support with 750 out of last 1000 blocks (75%)
BIP102: No
BIP103: No

When should we initiate the hardfork?
BIP100: 2016-01-11#
BIP101: 2 weeks after 75% miner support, but not before 2016-01-11
BIP102: 2015-11-11
BIP103: 2017-01-01

# The network does not actually fork until having 90% miner support

What should be the block size at initiation?
BIP100: 1MB
BIP101: 8MB*
BIP102: 2MB
BIP103: 1MB

* It depends on the exact time of initiation, e.g. 8MB if initiated on  
2016-01-11, 16MB if initiated on 2018-01-10.

Should we allow further increase / decrease?
BIP100: By miner voting, 0.5x - 2x every 12000 blocks (~3 months)
BIP101: Double every 2 years, with linear interpolations in between  
(41.4% p.a.)
BIP102: No
BIP103: +4.4% every 97 days (double every 4.3 years, or 17.7% p.a.)

The earliest date for a >=2MB block?
BIP100: 2016-04-03^
BIP101: 2016-01-11
BIP102: 2015-11-11
BIP103: 2020-12-27

^ Assuming 10 minutes blocks and votes cast before 2016-01-11 are not counted

What should be the final block size?
BIP100: 32MB is the max, but it is possible to reduce by miner voting
BIP101: 8192MB
BIP102: 2MB
BIP103: 2048MB

When should we have the final block size?
BIP100: Decided by miners
BIP101: 2036-01-06
BIP102: 2015-11-11
BIP103: 2063-07-09




From milly at bitcoins.info  Fri Jul 31 03:18:15 2015
From: milly at bitcoins.info (Milly Bitcoin)
Date: Thu, 30 Jul 2015 23:18:15 -0400
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
 temporary
In-Reply-To: <COL402-EAS14365E0523B8DA89730142FCD8A0@phx.gbl>
References: <COL402-EAS14365E0523B8DA89730142FCD8A0@phx.gbl>
Message-ID: <55BAE8F7.3090105@bitcoins.info>

I have been looking up ways to measure decentralization at the moment. 
There are some good discussions as they relate to Bitcoin but they are 
scattered in different places.  I just took over BitcoinStandards.com so 
i thought about using that site to post stuff.

Russ


On 7/30/2015 9:25 PM, Raystonn wrote:
> Russ, do you have time to get started on your list?  It would add value.
>
> On 30 Jul 2015 5:15 pm, Milly Bitcoin via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>     These are the types of things I have been discussing in relation to a
>     process:
>
>     -A list of metrics
>     -A Risk analysis of the baseline system.  Bitcoin as it is now.
>     -Mitigation strategies for each risk.
>     -A set of goals.
>     -A Road map for each goal that lists the changes or possible avenues to
>     achieve that goal.
>
>     Proposed changes would be measured against the same metrics and a risk
>     analysis done so it can be compared with the baseline.
>
>     For example, the block size debate would be discussed in the context of
>     a road map related to a goal of increase scaling.  One of the metrics
>     would be a decentralization metric.  (A framework for a
>     decentralization
>     metric is at
>     http://www.hks.harvard.edu/fs/pnorris/Acrobat/stm103%20articles/Schneider_Decentralization.pdf).
>
>        Cost would be one aspect of the decentralization metric.
>
>     Russ



From thomas at thomaszander.se  Fri Jul 31 06:42:46 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Fri, 31 Jul 2015 08:42:46 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
Message-ID: <4608887.aSM42bDkNk@coldstorage>

On Thursday 30. July 2015 16.33.16 Eric Lombrozo via bitcoin-dev wrote:
>  I don?t think it?s really a matter of whether we agree on whether it?s good
> to raise the block size limit, Gavin. I think it?s a matter of a difference
> in priorities.

Having different priorities is fine, using your time to block peoples attempts 
to increase block size is not showing different priorities, it shows conflicting 
priorities.
Different priorities means you can trust someone else to do things they care 
about while you do things you care about.
-- 
Thomas Zander

From thomas at thomaszander.se  Fri Jul 31 08:06:37 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Fri, 31 Jul 2015 10:06:37 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CAOG=w-vZ+5fBxpZ2bVgg_H9VD4cmSDhtkaOu4_UH3gvw-QfkEw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<4330019.CpFTjXpmfm@coldstorage>
	<CAOG=w-vZ+5fBxpZ2bVgg_H9VD4cmSDhtkaOu4_UH3gvw-QfkEw@mail.gmail.com>
Message-ID: <1550277.3yUysHbRPT@coldstorage>

On Thursday 30. July 2015 11.02.43 Mark Friedenbach wrote:
> It is possible for a decentralized system like bitcoin to scale via
> distribution in a way that introduces minimal trust, for example by
> probabilistic validation and distribution of fraud proofs. However changes
> to bitcoin consensus rules (mostly soft-forks) are required in order to
> make this possible.

Sounds overly complicated...

What about a much simpler solution where the miner has a CPU in a well 
connected data center. Say, Amsterdam.
He runs bitcoind on there and he, in China or such, connects to it over RPC 
(and ssl) to get a "block 000f00" accepted signal. Which would be 100 bytes or 
so.

The miner continues to use his current setup, but with actual validation of 
the blocks to completely eliminate the risk of mining on orphaned blocks and 
at the same time remove most of the cost of larger-than-average bandwidth in 
his country.

A slightly more complicated solution is needed to allow the miner to only send 
the headers to the bitcoind instance. So he only sends a couple of kb and his 
datacenter machine does the actual propagation.

If the risk of duplication becomes an issue, setup multiple propagating nodes 
on different sides of the world.

Bottom line for me is that most of the innovation for making stuff better for 
miners should be done in miners-specific software. Not in end-user software 
like bitcoin-core.

-- 
Thomas Zander

From jl2012 at xbt.hk  Fri Jul 31 08:39:43 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Fri, 31 Jul 2015 08:39:43 +0000
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
Message-ID: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>

There is a summary of the proposals in my previous mail at  
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009808.html

I think there could be a compromise between Gavin's BIP101 and  
Pieter's proposal (called "BIP103" here). Below I'm trying to play  
with the parameters, which reasons:

1. Initiation: BIP34 style voting, with support of 750 out of the last  
1000 blocks. The "hardfork bit" mechanism might be used:  
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009576.html

Rationale: This follows BIP101, to make sure the new chain is secure.  
Also, no miner would like to be the first one to mine a large block if  
they don't know how many others would accept it.

2. Starting date: 30 days after 75% miner support, but not before  
2016-01-12 00:00 UTC

Rationale: A 30-day grace period is given to make sure everyone has  
enough time to follow. This is a compromise between 14 day in BIP101  
and 1 year in BIP103. I tend to agree with BIP101. Even 1 year is  
given, people will just do it on the 364th day if they opt to  
procrastinate.

2016-01-12 00:00 UTC is Monday evening in US and Tuesday morning in  
China. Most pool operators and devs should be back from new year  
holiday and not sleeping. (If the initiation is delayed, we may  
require that it must be UTC Tuesday midnight)

3. The block size at 2016-01-12 will be 1,414,213 bytes, and  
multiplied by 1.414213 by every 2^23 seconds (97 days) until exactly  
8MB is reached on 2017-05-11.

Rationale: Instead of jumping to 8MB, I suggest to increase it  
gradually to 8MB in 16 months. 8MB should not be particularly painful  
to run even with current equipment (you may see my earlier post on  
bitctointalk: https://bitcointalk.org/index.php?topic=1054482.0). 8MB  
is also agreed by Chinese miners, who control >60% of the network.

4. After 8MB is reached, the block size will be increased by 6.714%  
every 97 days, which is equivalent to exactly octuple (8x) every 8.5  
years, or double every 2.9 years, or +27.67% per year. Stop growth at  
4096MB on 2042-11-17.

Rationale: This is a compromise between 17.7% p.a. of BIP103 and 41.4%  
p.a. of BIP101. This will take us almost 8 years from now just to go  
back to the original 32MB size (4 years for BIP101 and 22 years for  
BIP103)

SSD price is expected to drop by >50%/year in the coming years. In  
2020, we will only need to pay 2% of current price for SSD. 98% price  
reduction is enough for 40 years of 27.67% growth.
Source: http://wikibon.org/wiki/v/Evolution_of_All-Flash_Array_Architectures

Global bandwidth is expected to grow by 37%/year until 2021 so 27.67%  
should be safe at least for the coming 10 years.
Source:  
https://www.telegeography.com/research-services/global-bandwidth-forecast-service/

The final cap is a compromise between 8192MB at 2036 of BIP101 and  
2048MB at 2063 of BIP103


-----------------------------------

Generally speaking, I think we need to have a faster growth in the  
beginning, just to normalize the block size to a more reasonable one.  
After all, the 1MB cap was introduced when Bitcoin was practically  
worthless and with inefficient design. We need to decide a new  
"optimal" size based on current adoption and technology.

About "fee market": I do agree we need a fee market, but the fee  
pressure must not be too high at this moment when block reward is  
still miner's main income source. We already have a fee market: miners  
will avoid building big blocks with low fee because that will increase  
the orphan risk for nothing.

About "secondary layer": I respect everyone building secondary layer  
over the blockchain. However, while the SWIFT settlement network is  
processing 300tps, Bitcoin's current 7tps is just nothing more than an  
experiment. If the underlying settlement system does not have enough  
capacity, any secondary layer built on it will also fall apart. For  
example, people may DoS attack a Lightening network by provoking a  
huge amount of settlement request which some may not be confirmed on  
time. Ultimately, this will increase the risk of running a LN service  
and increase the tx fee inside LN. After all, the value of secondary  
layer primarily comes from instant confirmation, not scarcity of the  
block space.


From thomas at thomaszander.se  Fri Jul 31 09:56:48 2015
From: thomas at thomaszander.se (Thomas Zander)
Date: Fri, 31 Jul 2015 11:56:48 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<55BA8ED0.4080600@thinlink.com>
	<CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
Message-ID: <1706574.Be1RBGpNr6@coldstorage>

On Friday 31. July 2015 03.21.07 Jorge Tim?n via bitcoin-dev wrote:
> If I was a miner and you want me to include your transaction for free,
> you're asking me to give you money

What?

Ask yourself; why do miners include transactions at all? What it the incentive 
if there really is only less than 0.8% of income to be derived from fees?

Miners don't get payed by fees.  They won't need to get payed by fees for 
decades to come. Maybe you want to re-do your math, it seems off.
-- 
Thomas Zander

From adam at cypherspace.org  Fri Jul 31 10:16:15 2015
From: adam at cypherspace.org (Adam Back)
Date: Fri, 31 Jul 2015 12:16:15 +0200
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
Message-ID: <CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>

I think trust the data-center logic obviously fails, and I was talking
about this scenario in the post you are replying to.  You are trusting the
data-center operator period.  If one could trust data-centers to run
verified code, to not get hacked, filter traffic, respond to court orders
without notifying you etc that would be great but that's unfortunately not
what happens.

Data-center operators are bound to follow laws, including NSLs and gag
orders.  They also get hacked, employ humans who can be corrupt,
blackmailed, and themselves centralisation points for policy attack.
Snowden related disclosures and keeping aware of security show this is very
real.

This isn't much about bitcoin even, its just security reality for hosting
anything intended to be secure via decentralisation, or just hosting in
general while at risk of political or policy attack.

Adam
On Jul 31, 2015 10:39, "jl2012 via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> There is a summary of the proposals in my previous mail at
> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009808.html
>
> I think there could be a compromise between Gavin's BIP101 and Pieter's
> proposal (called "BIP103" here). Below I'm trying to play with the
> parameters, which reasons:
>
> 1. Initiation: BIP34 style voting, with support of 750 out of the last
> 1000 blocks. The "hardfork bit" mechanism might be used:
> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009576.html
>
> Rationale: This follows BIP101, to make sure the new chain is secure.
> Also, no miner would like to be the first one to mine a large block if they
> don't know how many others would accept it.
>
> 2. Starting date: 30 days after 75% miner support, but not before
> 2016-01-12 00:00 UTC
>
> Rationale: A 30-day grace period is given to make sure everyone has enough
> time to follow. This is a compromise between 14 day in BIP101 and 1 year in
> BIP103. I tend to agree with BIP101. Even 1 year is given, people will just
> do it on the 364th day if they opt to procrastinate.
>
> 2016-01-12 00:00 UTC is Monday evening in US and Tuesday morning in China.
> Most pool operators and devs should be back from new year holiday and not
> sleeping. (If the initiation is delayed, we may require that it must be UTC
> Tuesday midnight)
>
> 3. The block size at 2016-01-12 will be 1,414,213 bytes, and multiplied by
> 1.414213 by every 2^23 seconds (97 days) until exactly 8MB is reached on
> 2017-05-11.
>
> Rationale: Instead of jumping to 8MB, I suggest to increase it gradually
> to 8MB in 16 months. 8MB should not be particularly painful to run even
> with current equipment (you may see my earlier post on bitctointalk:
> https://bitcointalk.org/index.php?topic=1054482.0). 8MB is also agreed by
> Chinese miners, who control >60% of the network.
>
> 4. After 8MB is reached, the block size will be increased by 6.714% every
> 97 days, which is equivalent to exactly octuple (8x) every 8.5 years, or
> double every 2.9 years, or +27.67% per year. Stop growth at 4096MB on
> 2042-11-17.
>
> Rationale: This is a compromise between 17.7% p.a. of BIP103 and 41.4%
> p.a. of BIP101. This will take us almost 8 years from now just to go back
> to the original 32MB size (4 years for BIP101 and 22 years for BIP103)
>
> SSD price is expected to drop by >50%/year in the coming years. In 2020,
> we will only need to pay 2% of current price for SSD. 98% price reduction
> is enough for 40 years of 27.67% growth.
> Source:
> http://wikibon.org/wiki/v/Evolution_of_All-Flash_Array_Architectures
>
> Global bandwidth is expected to grow by 37%/year until 2021 so 27.67%
> should be safe at least for the coming 10 years.
> Source:
> https://www.telegeography.com/research-services/global-bandwidth-forecast-service/
>
> The final cap is a compromise between 8192MB at 2036 of BIP101 and
> 2048MB at 2063 of BIP103
>
>
> -----------------------------------
>
> Generally speaking, I think we need to have a faster growth in the
> beginning, just to normalize the block size to a more reasonable one. After
> all, the 1MB cap was introduced when Bitcoin was practically worthless and
> with inefficient design. We need to decide a new "optimal" size based on
> current adoption and technology.
>
> About "fee market": I do agree we need a fee market, but the fee pressure
> must not be too high at this moment when block reward is still miner's main
> income source. We already have a fee market: miners will avoid building big
> blocks with low fee because that will increase the orphan risk for nothing.
>
> About "secondary layer": I respect everyone building secondary layer over
> the blockchain. However, while the SWIFT settlement network is processing
> 300tps, Bitcoin's current 7tps is just nothing more than an experiment. If
> the underlying settlement system does not have enough capacity, any
> secondary layer built on it will also fall apart. For example, people may
> DoS attack a Lightening network by provoking a huge amount of settlement
> request which some may not be confirmed on time. Ultimately, this will
> increase the risk of running a LN service and increase the tx fee inside
> LN. After all, the value of secondary layer primarily comes from instant
> confirmation, not scarcity of the block space.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/24ee99ef/attachment.html>

From hearn at vinumeris.com  Fri Jul 31 10:16:46 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Fri, 31 Jul 2015 12:16:46 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
Message-ID: <CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>

I agree with Gavin - whilst it's great that a Blockstream employee has
finally made a realistic proposal (i.e. not "let's all use Lightning") -
this BIP is virtually the same as keeping the 1mb cap.

> Well, centralization of mining is already terrible. I see no reason why we
> should encourage making it worse.
>
Centralization of mining has been a continual gripe since Slush first
invented pooled mining. There has never been a time after that when people
weren't talking about the centralisation of mining, and back then blocks
were ~10kb.

I see constant assertions that node count, mining centralisation,
developers not using Bitcoin Core in their own businesses etc is all to do
with block sizes. But nobody has shown that. Nobody has even laid the
groundwork for that. Verifying blocks takes milliseconds and downloading
them takes seconds everywhere except, apparently, China: this resource
usage is trivial.

Yet developers, miners and users even outside of China routinely delegate
validation to others. Often for quite understandable technical reasons that
have nothing to do with block sizes.

So I see no reason why arbitrarily capping the block size will move the
needle on these metrics. Trying to arrest the growth of Bitcoin for
everyone won't suddenly make Bitcoin-Qt a competitive wallet, or make
service devs migrate away from chain.com, or make merchants stop using
BitPay.

We need to accept that, and all previous proposals I've seen don't seem to
> do that.
>
I think that's a bit unfair: BIP 101 keeps a cap. Even with 8mb+growth
you're right, some use cases will be priced out. I initiated the
micropayment channels project (along with Matt, tip of the hat)
specifically to optimise a certain class of transactions. Even with 8mb+
blocks, there will still be a need for micropayment channels, centralised
exchange platforms and other forms of off chain transaction.

If Bitcoin needs to support a large scale, it already failed.
>
It hasn't even been tried.

The desperately sad thing about all of this is that there's going to be a
fork, and yet I think most of us agree on most things.  But we don't agree
on this.

Bitcoin can support a large scale and it must, for all sorts of reasons.
Amongst others:

   1. Currencies have network effects. A currency that has few users is
   simply not competitive with currencies that have many. There's no such
   thing as a settlement currency for high value transactions only, as
   evidenced by the ever-dropping importance of gold.


   2. A decentralised currency that the vast majority can't use doesn't
   change the amount of centralisation in the world. Most people will still
   end up using banks, with all the normal problems. You cannot solve a
   problem by creating a theoretically pure solution that's out of reach of
   ordinary people: just ask academic cryptographers!


   3. Growth is a part of the social contract. It always has been.

   The best quote Gregory can find to suggest Satoshi wanted small blocks
   is a one sentence hypothetical example about what *might* happen if
   Bitcoin users became "tyrannical" as a result of non-financial transactions
   being stuffed in the block chain. That position makes sense because his
   scaling arguments assuming payment-network-sized traffic and throwing DNS
   systems or whatever into the mix could invalidate those arguments, in the
   absence of merged mining. But Satoshi did invent merged mining, and so
   there's no need for Bitcoin users to get "tyrannical": his original
   arguments still hold.


   4. All the plans for some kind of ultra-throttled Bitcoin network used
   for infrequent transactions neglect to ask where the infrastructure for
   that will come from. The network of exchanges, payment processors and
   startups that are paying people to build infrastructure are all based on
   the assumption that the market will grow significantly. It's a gamble at
   best because Bitcoin's success is not guaranteed, but if the block chain
   cannot grow it's a gamble that is guaranteed to be lost.

   So why should anyone go through the massive hassle of setting up
   exchanges, without the lure of large future profits?


   5. Bitcoin needs users, lots of them, for its political survival. There
   are many people out there who would like to see digital cash disappear, or
   be regulated out of existence. They will argue for that in front of
   governments and courts .... some already are. And if they're going to lose
   those arguments, the political and economic damage of getting rid of
   Bitcoin must be large enough to make people think twice. That means it
   needs supporters, it needs innovative services, it needs companies, and it
   needs legal users making legal payments: as many of them as possible.

   If Bitcoin is a tiny, obscure currency used by drug dealers and a
   handful of crypto-at-any-cost geeks, the cost of simply banning it outright
   will seem trivial and the hammer will drop. There won't be a large scale
   payment network OR a high-value settlement network. And then the world is
   really screwed, because nobody will get a second chance for a very long
   time.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/426fe26f/attachment-0001.html>

From venzen at mail.bihthai.net  Fri Jul 31 11:43:58 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Fri, 31 Jul 2015 18:43:58 +0700
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
Message-ID: <55BB5F7E.2020604@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mike Hearn, I might be a nobody to you, but you know i talk with
skill,  so let me tell this Friday...


On 07/31/2015 05:16 PM, Mike Hearn via bitcoin-dev wrote:
> I agree with Gavin
You would, of course.

> Bitcoin can support a large scale and it must, for all sorts of 
> reasons. Amongst others:
> 
> 1. Currencies have network effects. A currency that has few users 
> is simply not competitive with currencies that have many. There's 
> no such thing as a settlement currency for high value transactions 
> only, as evidenced by the ever-dropping importance of gold.

References are imperative if you want to appeal to intelligence in
this list. Studies. Impirical evidence. The above sounds like a a
mainstream precis of how money works - an over-simplistic precis. It's
more complex than that. Besides, all we know for a fact is that
currencies come and go. That's not me being down on Bitcoin - that is
the historical record.

> 
> 2. A decentralised currency that the vast majority can't use 
> doesn't change the amount of centralisation in the world. Most 
> people will still end up using banks, with all the normal
> problems. You cannot solve a problem by creating a theoretically
> pure solution that's out of reach of ordinary people: just ask
> academic cryptographers!

Conjecture. And assumption. Banks might not accept most people
forever. Or banks' credibility might not survive the next credit
contraction, for example.

> 
> 3. Growth is a part of the social contract. It always has been.
> 
Half the story. Casual observation shows that growth and contraction
alternate at every level of existence. Just because the present
fiat-era credit expansion has lasted 40 years does not mean that the
economy will keep expanding forever.

> The best quote Gregory can find to suggest Satoshi wanted small 
> blocks is a one sentence hypothetical example about what /might/
[snip]

yes, anyway, Greg Maxwell was justified in bringing you down a few
notches from your "I am Satoshi's rep on earth" history revision, you
were spinning there.


> 4. All the plans for some kind of ultra-throttled Bitcoin network 
> used

[snip]

> The network of exchanges, payment processors and startups that are 
> paying people to build infrastructure are all based on _the 
> assumption_ that the market will grow significantly.
The assumption (my emphasis). You've seen that movie Pulp Fiction:
"Assume makes an "ass" of "U" and "me". Business + assumption =
gambling and potential loss of funds.

The ass-U-me cannot be laid at the doorstep of those developers who
prioritize security, decentralization and conservative, tested
progress of scaling.

> So why should anyone go through the massive hassle of setting up 
> exchanges, without the lure of large future profits?
> 
Their SWOT analysis includes risks from the banking sector, too. Plus
competition from other exchanges. A sapling 0.x Bitcoin community is
not responsible for nannying anyone's lucrative business model at the
expense of security. How would that make the developers look in
relation to their duty of custody of the protocol? To this and future
generations: Not Good.
> 
> 5. Bitcoin needs users, lots of them, for its political survival. 
> There are many people out there who would like to see digital cash 
> disappear, or be regulated out of existence.
Nonsense, and again that assumption about "how things work" you like
to high horse so. Bitcoin's political survival is guaranteed by its
censorship resistance and its array of innovative and unique utility
functions. What's more, the caliber of developer working on Bitcoin is
not just pulled out of a hat and harnessed for an arbitrary altcoin.
Sometimes the fire of moral incentive overrides monetary reward.

The Fed, Nasdaq, IBM, and every other company whose trusted authority
is being threatened by this flagship are developing blockchains in a
hurry. How is that "many people out there who would like to see
digital cash disappear"? Why would you even type such a blatant falsehood?

> If Bitcoin is a tiny, obscure currency used by drug dealers and a 
> handful of crypto-at-any-cost geeks, the cost of simply banning it 
> outright will seem trivial and the hammer will drop. There won't be
> a large scale payment network OR a high-value settlement network.
> And then the world is really screwed, because nobody will get a
> second chance for a very long time.
> 
That is a low estimation of Bitcoin. Your framing does not honor
Bitcoin or the hard work - your _own_ hard work - on this project.

If you noticed, there has been an increase in technical discussion in
this list in recent days - with the goal of comparing and testing the
various blocksize proposals.

Mike Hearn, I am sorry to say that your pronouncements sound like jazz
- - but jazz without rhythm.


"So what?" - Miles Davis
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVu199AAoJEGwAhlQc8H1mkCMH/iWnFDXAGc5GEjLi81dRLUnz
3UfciwOiby8r+7pvyDsuMYR/9RQZv2RlFoMFjUBkJxwvdUh3eXY5tsQ6F209O+gk
QleFaTKCZLVuZg5UBbwBttGfK3MmejueGWNhExYnlbm6yXpBa2jt0i5n0tr++zVw
RN+zAejOy2OEBjs7jkodgVdy7kfCXsfsn/DKGdSO7nE9m5q0ocuUFBLEf/PJErBw
NncLSDhd2SfVz3Q7L9UrGqKIgQTJT1nR9kJmSPCasIRoLWJzfNemH6RL3XcmiACn
xIQBN19FPnKLv1OY3GlFLlmIlq0mu6MeidJsPl80yyI2h4SciCp39T1Ah/tCnf4=
=2uWe
-----END PGP SIGNATURE-----

From jtimon at jtimon.cc  Fri Jul 31 11:51:04 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 13:51:04 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
Message-ID: <CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>

On Fri, Jul 31, 2015 at 12:16 PM, Mike Hearn via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>> Well, centralization of mining is already terrible. I see no reason why we
>> should encourage making it worse.
>
> I see constant assertions that node count, mining centralisation, developers
> not using Bitcoin Core in their own businesses etc is all to do with block
> sizes. But nobody has shown that. Nobody has even laid the groundwork for
> that. Verifying blocks takes milliseconds and downloading them takes seconds
> everywhere except, apparently, China: this resource usage is trivial.

He is not saying that. Whatever the reasons for centralization are, it
is obvious that increasing the size won't help.
In the best case, it will only make it slightly worse. How big of a
"slightly worse" are we willing to risk to increase the size is the
open question.

> So I see no reason why arbitrarily capping the block size will move the
> needle on these metrics. Trying to arrest the growth of Bitcoin for everyone
> won't suddenly make Bitcoin-Qt a competitive wallet, or make service devs
> migrate away from chain.com, or make merchants stop using BitPay.

As far as I know, people just want to change an arbitrary number for
another arbitrary number.
But this arbitrary cap is a cap to centralization, not a tool to make
Bitcoin-Qt more important or to attack concrete Bitcoin companies like
you seem to think.
If you don't think the blocksize cap helps limiting centralization and
you think it would be fine to completely remove it, then it would be
better for the conversation that you said that directly instead of
supporting other arbitrary caps like 8GB (bip101).

I think it would be nice to have some sort of simulation to calculate
a "centralization heuristic" for different possible blocksize values
so we can compare these arbitrary numbers somehow. Even if the first
definition of this "centralization heuristic" is stupid, it would be
better than keep rolling dices and heatedly defend one result over
another.
To reiterate, If you don't think the blocksize cap helps limiting
centralization, please, say so.
If we can't agree on what the limit is for, we will never be able to
agree on whether 1MB (current situation) or 8GB (bip101) is the most
appropriate value to have at a given point in time.

>> We need to accept that, and all previous proposals I've seen don't seem to
>> do that.
>
> I think that's a bit unfair: BIP 101 keeps a cap. Even with 8mb+growth
> you're right, some use cases will be priced out. I initiated the
> micropayment channels project (along with Matt, tip of the hat) specifically
> to optimise a certain class of transactions. Even with 8mb+ blocks, there
> will still be a need for micropayment channels, centralised exchange
> platforms and other forms of off chain transaction.

Lightning is nothing more than a better design for trustless payment
channels, but it's really good that you agree that if we want to scale
not everything can be broadcast in-chain.

>> If Bitcoin needs to support a large scale, it already failed.
>
> It hasn't even been tried.

What he means is that if Bitcoin needs to support a scale that is only
feasible with high degrees of centralization (say, supporting 1 M tx/s
right now), then it has already failed in its decentralization goals.
In fact, with only a few miners, I'm not sure regulators will still
agree Bitcoin transactions are irreversible...
But you are right, we haven't tried to destroy bitcoin by removing the
only available consensus tool to limit centralization yet.
I don't want to try, do you?

> A decentralised currency that the vast majority can't use doesn't change the
> amount of centralisation in the world. Most people will still end up using
> banks, with all the normal problems. You cannot solve a problem by creating
> a theoretically pure solution that's out of reach of ordinary people: just
> ask academic cryptographers!

Let's go to "most people use bitcoin" first and then think about "many
people ONLY use Bitcoin" later, please.
I believe everybody here thinks that the more people are able to use
Bitcoin, the better.
But that doesn't

> All the plans for some kind of ultra-throttled Bitcoin network used for
> infrequent transactions neglect to ask where the infrastructure for that
> will come from. The network of exchanges, payment processors and startups
> that are paying people to build infrastructure are all based on the
> assumption that the market will grow significantly. It's a gamble at best
> because Bitcoin's success is not guaranteed, but if the block chain cannot
> grow it's a gamble that is guaranteed to be lost.

Risking destroying Bitcoin through centralization to be able to keep
free transactions for longer it's a very risky gamble.
Doing so explicitly against the will of some of the users by promoting
schism hardfork, and thus risking to economically destroy both Bitcoin
and Bitcoin_new_size (different currencies) in the process is also a
very risky gamble.
So may want to give some example of responsibility yourself to make
these calls to responsibility more credible.
You certainly cannot know what "all the payment processors and
startups plans" are based on, and spreading conspiracy theories about
the evil secret plans of Blockstream (or any other Bitcoin company)
doesn't help in keeping this discussion civilized, contaminates
bitcoin development in general and unhealthily polarizes the whole
Bitcoin ecosystem. Also, I believe is doing a disservice to your
reputation among technical people, but since you don't seem worried
about that, why should I be?

> So why should anyone go through the massive hassle of setting up exchanges,
> without the lure of large future profits?

Are you suggesting that bitcoin consensus rules should be designed to
maximize the profits of Bitcoin exchanges?
I assume not, but I'm really having troubles trying to read the
question with another meaning.
Can you rephrase this, please?

From hearn at vinumeris.com  Fri Jul 31 12:15:04 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Fri, 31 Jul 2015 14:15:04 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
Message-ID: <CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>

Hey Jorge,

He is not saying that. Whatever the reasons for centralization are, it
> is obvious that increasing the size won't help.
>

It's not obvious. Quite possibly bigger blocks == more users == more nodes
and more miners.

To repeat: it's not obvious to me at all that everything wrong with Bitcoin
can be solved by shrinking blocks. I don't think that's going to suddenly
make everything magically more decentralised.

The 8mb cap isn't quite arbitrary. It was picked through negotiation with
different stakeholders, in particular, Chinese miners. But it should be
high enough to ensure organic growth is not constrained, which is good
enough.

I think it would be nice to have some sort of simulation to calculate
> a "centralization heuristic" for different possible blocksize values
> so we can compare these arbitrary numbers somehow.


Centralization is not a single floating point value that is controlled by
block size. It's a multi-faceted and complex problem. You cannot "destroy
Bitcoin through centralization" by adjusting a single constant in the
source code.

To say once more: block size won't make much difference to how many
merchants rely on payment processors because they aren't using them due to
block processing overheads anyway. So trying to calculate such a formula
won't work. Ditto for end users on phones, ditto for developers who want
JSON/REST access to an indexed block chain, or hosted wallet services, or
miners who want to reduce variance.

None of these factors have anything to do with traffic levels.

What people like you are Pieter are doing is making a single number a kind
of proxy for all fears and concerns about the trend towards outsourcing in
the Bitcoin community. Everything gets compressed down to one number you
feel you can control, whether it is relevant or not.

> So why should anyone go through the massive hassle of setting up
> exchanges,
> > without the lure of large future profits?
>
> Are you suggesting that bitcoin consensus rules should be designed
> to maximize the profits of Bitcoin exchanges?
>

That isn't what I said at all Jorge. Let me try again.

Setting up an exchange is a lot of risky and expensive work. The motivation
is profit, and profits are higher when there are more users to sell to.
This is business 101.

If you remove the potential for future profit, you remove the motivation to
create the services that we now enjoy and take for granted. Because if you
think Bitcoin can be useful without exchanges then let me tell you, I was
around when there were none. Bitcoin was useless.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/ec8dafa6/attachment.html>

From oleganza at gmail.com  Fri Jul 31 12:32:53 2015
From: oleganza at gmail.com (Oleg Andreev)
Date: Fri, 31 Jul 2015 14:32:53 +0200
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <1706574.Be1RBGpNr6@coldstorage>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<55BA8ED0.4080600@thinlink.com>
	<CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
	<1706574.Be1RBGpNr6@coldstorage>
Message-ID: <2B69B87D-CAF8-4817-B637-34E91E0A07FD@gmail.com>


> On 31 Jul 2015, at 11:56, Thomas Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> On Friday 31. July 2015 03.21.07 Jorge Tim?n via bitcoin-dev wrote:
>> If I was a miner and you want me to include your transaction for free,
>> you're asking me to give you money
> 
> What?
> 
> Ask yourself; why do miners include transactions at all? What it the incentive 
> if there really is only less than 0.8% of income to be derived from fees?
> 
> Miners don't get payed by fees.  They won't need to get payed by fees for 
> decades to come. Maybe you want to re-do your math, it seems off.

Fees should be compared not with the total revenue, but with the profit margin. If a miner invested/spends 24 BTC per block and earns 0.25 in fees, then his total profit is 1.25 BTC per block and fees comprise a whopping 20% of the profit. 

Today I think profit margins are quite high, so fees do not matter much. But it's not hard to imagine that in just a couple of years BTC may appreciate a lot more, attract more investors and even bigger foundries to, say, print chips and mine right at the foundry, thus driving profit margins lower. Fees will begin to matter regardless of the total subsidy. 

Just some hypothetical calculation.

Lets say in 2015 one block costs 5 BTC and fees bring 0.25 BTC. Profit is thus 20.25 BTC and fees comprise 1.2% of that amount.

Lets say in late 2016 halving happens, BTC appreciates and resulting competition drives up the cost to 6 BTC (yes, BTC itself is more expensive, but so is the profit too, so increased competition must drive down the profit margin). Now the block brings 6.75 BTC in profit. Fees, if unchanged now make 4% of the total profit.

If all goes well, in mid 2020 another halving happens (6.25 BTC/block) and even if the BTC-denominated cost stays the same miner now will earn 0.25 BTC profit from subsidy and fees now can account for 100% of that amount. 

Of course it's a very rough estimate and most likely to be far from reality, but it shows how fees can begin to matter rather quickly under pressure of separate factors: halving and growing valuation and mining competition.



From jl2012 at xbt.hk  Fri Jul 31 13:07:14 2015
From: jl2012 at xbt.hk (jl2012 at xbt.hk)
Date: Fri, 31 Jul 2015 13:07:14 +0000
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
	<CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
Message-ID: <20150731130714.Horde.PvL1IB3Kf5S6GAA73N-HOw1@server47.web-hosting.com>

Yes, data-center operators are bound to follow laws, including NSLs  
and gag orders. How about your ISP? Is it bound to follow laws,  
including NSLs and gag orders?
https://edri.org/irish_isp_introduces_blocking/

Do you think everyone should run a full node behind TOR? No way, your  
repressive government could just block TOR:
http://www.technologyreview.com/view/427413/how-china-blocks-the-tor-anonymity-network/

Or they could raid your home and seize your Raspberry Pi if they  
couldn't read your encrypted internet traffic. You will have a hard  
time proving you are not using TOR for child porn or cocaine.
https://en.wikipedia.org/wiki/Encryption_ban_proposal_in_the_United_Kingdom

If you are living in a country like this, running Bitcoin in an  
offshore VPS could be much easier. Anyway, Bitcoin shouldn't be your  
first thing to worry about. Revolution is probably your only choice.

Data-centers would get hacked. How about your Raspberry Pi?

Corrupt data-center employee is probably the only valid concern.  
However, there is nothing (except cost) to stop you from establishing  
multiple full nodes all over the world. If your Raspberry Pi at home  
could no longer fully validate the chain, it could become a  
header-only node to make sure your VPS full nodes are following the  
correct chaintip. You may even buy hourly charged cloud hosting in  
different countries to run header-only nodes at negligible cost.

There is no single point of failure in a decentralized network. Having  
multiple nodes will also save you from Sybil attack and geopolitical  
risks. Again, if all data-centres and governments in the world are  
turning against Bitcoin, it is delusional to think we could fight  
against them without using any real weapon.

By the way, I'm quite confident that my current full node at home are  
capable of running at 8MB blocks.


Quoting Adam Back <adam at cypherspace.org>:

> I think trust the data-center logic obviously fails, and I was talking
> about this scenario in the post you are replying to.  You are trusting the
> data-center operator period.  If one could trust data-centers to run
> verified code, to not get hacked, filter traffic, respond to court orders
> without notifying you etc that would be great but that's unfortunately not
> what happens.
>
> Data-center operators are bound to follow laws, including NSLs and gag
> orders.  They also get hacked, employ humans who can be corrupt,
> blackmailed, and themselves centralisation points for policy attack.
> Snowden related disclosures and keeping aware of security show this is very
> real.
>
> This isn't much about bitcoin even, its just security reality for hosting
> anything intended to be secure via decentralisation, or just hosting in
> general while at risk of political or policy attack.
>
> Adam



From marcel at jamin.net  Fri Jul 31 13:07:42 2015
From: marcel at jamin.net (Marcel Jamin)
Date: Fri, 31 Jul 2015 15:07:42 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
Message-ID: <CAAUq487KW00xWhL=4UPrd6O37aKmSAN7Jdo_h_8j41z+reUzOA@mail.gmail.com>

> Quite possibly bigger blocks == more users == more nodes and more miners.

I agree and would say that this is the only prediction of bitcoin's future
we can be absolutely sure of: more users equals more decentralization as
long as the cost of running a node is not prohibitively high.

It's incredibly cheap today and won't be too high with any of the current
proposals for the time being. If the "laws" of Nielsen & co suddenly don't
apply anymore, we can always react to that with another hardfork reducing
the rate of growth. Hardforks are way easier if the network is in danger
and the necessary change is obvious and non-controversial (e.g. "reduce
blocksize limit growth").

As long as hobbyists can participate in running the network and it's
affordable for everyone to transact on it, bitcoin will grow and its
decentralization with it, however you measure it.

2015-07-31 14:15 GMT+02:00 Mike Hearn via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org>:

> Hey Jorge,
>
> He is not saying that. Whatever the reasons for centralization are, it
>> is obvious that increasing the size won't help.
>>
>
> It's not obvious. Quite possibly bigger blocks == more users == more nodes
> and more miners.
>
> To repeat: it's not obvious to me at all that everything wrong with
> Bitcoin can be solved by shrinking blocks. I don't think that's going to
> suddenly make everything magically more decentralised.
>
> The 8mb cap isn't quite arbitrary. It was picked through negotiation with
> different stakeholders, in particular, Chinese miners. But it should be
> high enough to ensure organic growth is not constrained, which is good
> enough.
>
> I think it would be nice to have some sort of simulation to calculate
>> a "centralization heuristic" for different possible blocksize values
>> so we can compare these arbitrary numbers somehow.
>
>
> Centralization is not a single floating point value that is controlled by
> block size. It's a multi-faceted and complex problem. You cannot "destroy
> Bitcoin through centralization" by adjusting a single constant in the
> source code.
>
> To say once more: block size won't make much difference to how many
> merchants rely on payment processors because they aren't using them due to
> block processing overheads anyway. So trying to calculate such a formula
> won't work. Ditto for end users on phones, ditto for developers who want
> JSON/REST access to an indexed block chain, or hosted wallet services, or
> miners who want to reduce variance.
>
> None of these factors have anything to do with traffic levels.
>
> What people like you are Pieter are doing is making a single number a kind
> of proxy for all fears and concerns about the trend towards outsourcing in
> the Bitcoin community. Everything gets compressed down to one number you
> feel you can control, whether it is relevant or not.
>
> > So why should anyone go through the massive hassle of setting up
>> exchanges,
>> > without the lure of large future profits?
>>
>> Are you suggesting that bitcoin consensus rules should be designed
>> to maximize the profits of Bitcoin exchanges?
>>
>
> That isn't what I said at all Jorge. Let me try again.
>
> Setting up an exchange is a lot of risky and expensive work. The
> motivation is profit, and profits are higher when there are more users to
> sell to. This is business 101.
>
> If you remove the potential for future profit, you remove the motivation
> to create the services that we now enjoy and take for granted. Because if
> you think Bitcoin can be useful without exchanges then let me tell you, I
> was around when there were none. Bitcoin was useless.
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/1e4a3fc2/attachment-0001.html>

From ibrightly at gmail.com  Fri Jul 31 13:12:38 2015
From: ibrightly at gmail.com (Ivan Brightly)
Date: Fri, 31 Jul 2015 09:12:38 -0400
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
	<CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
Message-ID: <CAAre=yTLXD6AjXbpksRdM_jH4NexXxKr0dJTRa1r4rTio1WmEQ@mail.gmail.com>

   1. Data centers are not some uniform group of businesses with identical
   policies nor firms with identical laws applied. The ability to get a search
   warrant at a Swedish hosting provider will be dramatically different than a
   Singaporean business. Similar to the decentralized nature of bitcoin, these
   businesses are independent and varied - it would be difficult for
   authorities to conduct a widescale attack on nodes worldwide, especially
   given current laws. It would also be ineffective since any hacked/seized
   host can be replaced quickly with a competitor service in a different
   jurisdiction.
   2. Personal residences and non-data center businesses are not immune to
   theft, blackmail, seizure, hacking, etc. Depending upon the adversary and
   method of attack, many users would be no worse off with their nodes not
   located on premise. As alluded to above, it's a lot easier and less costly
   to spin up a new 3rd party host than it is to replace a stolen laptop.

There is nothing inherently wrong with data centers/hosting providers
playing a significant (but not central) role in decentralized services.
Users who choose to use a VPS are not contributing to bitcoin in some sort
of inferior capacity. I'll posit that 3rd party providers are not an ideal
place to hold private keys, but that is off topic.



On Fri, Jul 31, 2015 at 6:16 AM, Adam Back via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> I think trust the data-center logic obviously fails, and I was talking
> about this scenario in the post you are replying to.  You are trusting the
> data-center operator period.  If one could trust data-centers to run
> verified code, to not get hacked, filter traffic, respond to court orders
> without notifying you etc that would be great but that's unfortunately not
> what happens.
>
> Data-center operators are bound to follow laws, including NSLs and gag
> orders.  They also get hacked, employ humans who can be corrupt,
> blackmailed, and themselves centralisation points for policy attack.
> Snowden related disclosures and keeping aware of security show this is very
> real.
>
> This isn't much about bitcoin even, its just security reality for hosting
> anything intended to be secure via decentralisation, or just hosting in
> general while at risk of political or policy attack.
>
> Adam
> On Jul 31, 2015 10:39, "jl2012 via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> There is a summary of the proposals in my previous mail at
>> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009808.html
>>
>> I think there could be a compromise between Gavin's BIP101 and Pieter's
>> proposal (called "BIP103" here). Below I'm trying to play with the
>> parameters, which reasons:
>>
>> 1. Initiation: BIP34 style voting, with support of 750 out of the last
>> 1000 blocks. The "hardfork bit" mechanism might be used:
>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009576.html
>>
>> Rationale: This follows BIP101, to make sure the new chain is secure.
>> Also, no miner would like to be the first one to mine a large block if they
>> don't know how many others would accept it.
>>
>> 2. Starting date: 30 days after 75% miner support, but not before
>> 2016-01-12 00:00 UTC
>>
>> Rationale: A 30-day grace period is given to make sure everyone has
>> enough time to follow. This is a compromise between 14 day in BIP101 and 1
>> year in BIP103. I tend to agree with BIP101. Even 1 year is given, people
>> will just do it on the 364th day if they opt to procrastinate.
>>
>> 2016-01-12 00:00 UTC is Monday evening in US and Tuesday morning in
>> China. Most pool operators and devs should be back from new year holiday
>> and not sleeping. (If the initiation is delayed, we may require that it
>> must be UTC Tuesday midnight)
>>
>> 3. The block size at 2016-01-12 will be 1,414,213 bytes, and multiplied
>> by 1.414213 by every 2^23 seconds (97 days) until exactly 8MB is reached on
>> 2017-05-11.
>>
>> Rationale: Instead of jumping to 8MB, I suggest to increase it gradually
>> to 8MB in 16 months. 8MB should not be particularly painful to run even
>> with current equipment (you may see my earlier post on bitctointalk:
>> https://bitcointalk.org/index.php?topic=1054482.0). 8MB is also agreed
>> by Chinese miners, who control >60% of the network.
>>
>> 4. After 8MB is reached, the block size will be increased by 6.714% every
>> 97 days, which is equivalent to exactly octuple (8x) every 8.5 years, or
>> double every 2.9 years, or +27.67% per year. Stop growth at 4096MB on
>> 2042-11-17.
>>
>> Rationale: This is a compromise between 17.7% p.a. of BIP103 and 41.4%
>> p.a. of BIP101. This will take us almost 8 years from now just to go back
>> to the original 32MB size (4 years for BIP101 and 22 years for BIP103)
>>
>> SSD price is expected to drop by >50%/year in the coming years. In 2020,
>> we will only need to pay 2% of current price for SSD. 98% price reduction
>> is enough for 40 years of 27.67% growth.
>> Source:
>> http://wikibon.org/wiki/v/Evolution_of_All-Flash_Array_Architectures
>>
>> Global bandwidth is expected to grow by 37%/year until 2021 so 27.67%
>> should be safe at least for the coming 10 years.
>> Source:
>> https://www.telegeography.com/research-services/global-bandwidth-forecast-service/
>>
>> The final cap is a compromise between 8192MB at 2036 of BIP101 and
>> 2048MB at 2063 of BIP103
>>
>>
>> -----------------------------------
>>
>> Generally speaking, I think we need to have a faster growth in the
>> beginning, just to normalize the block size to a more reasonable one. After
>> all, the 1MB cap was introduced when Bitcoin was practically worthless and
>> with inefficient design. We need to decide a new "optimal" size based on
>> current adoption and technology.
>>
>> About "fee market": I do agree we need a fee market, but the fee pressure
>> must not be too high at this moment when block reward is still miner's main
>> income source. We already have a fee market: miners will avoid building big
>> blocks with low fee because that will increase the orphan risk for nothing.
>>
>> About "secondary layer": I respect everyone building secondary layer over
>> the blockchain. However, while the SWIFT settlement network is processing
>> 300tps, Bitcoin's current 7tps is just nothing more than an experiment. If
>> the underlying settlement system does not have enough capacity, any
>> secondary layer built on it will also fall apart. For example, people may
>> DoS attack a Lightening network by provoking a huge amount of settlement
>> request which some may not be confirmed on time. Ultimately, this will
>> increase the risk of running a LN service and increase the tx fee inside
>> LN. After all, the value of secondary layer primarily comes from instant
>> confirmation, not scarcity of the block space.
>>
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/faab5248/attachment.html>

From adam at cypherspace.org  Fri Jul 31 13:17:58 2015
From: adam at cypherspace.org (Adam Back)
Date: Fri, 31 Jul 2015 15:17:58 +0200
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <20150731130714.Horde.PvL1IB3Kf5S6GAA73N-HOw1@server47.web-hosting.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
	<CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
	<20150731130714.Horde.PvL1IB3Kf5S6GAA73N-HOw1@server47.web-hosting.com>
Message-ID: <CALqxMTHFy0F6ov1_H+MkQ+6succ2pxqOWuYJkR57HBtRMU+AGQ@mail.gmail.com>

That's all well and fine.  But the pattern of your argument I would
say is "arguing security down" ie saying something is not secure
anyway, nothing is secure, everything could be hacked, so lets forget
that and give up, so that what is left is basically no
decentralisation security.

It is not paranoid to take decentralisation security seriously, it is
necessary because it is critical to Bitcoin.  Security in depth
meaning take what security you can get from available defences.

Adam

On 31 July 2015 at 15:07,  <jl2012 at xbt.hk> wrote:
> Yes, data-center operators are bound to follow laws, including NSLs and gag
> orders. How about your ISP? Is it bound to follow laws, including NSLs and
> gag orders?
> https://edri.org/irish_isp_introduces_blocking/
>
> Do you think everyone should run a full node behind TOR? No way, your
> repressive government could just block TOR:
> http://www.technologyreview.com/view/427413/how-china-blocks-the-tor-anonymity-network/
>
> Or they could raid your home and seize your Raspberry Pi if they couldn't
> read your encrypted internet traffic. You will have a hard time proving you
> are not using TOR for child porn or cocaine.
> https://en.wikipedia.org/wiki/Encryption_ban_proposal_in_the_United_Kingdom
>
> If you are living in a country like this, running Bitcoin in an offshore VPS
> could be much easier. Anyway, Bitcoin shouldn't be your first thing to worry
> about. Revolution is probably your only choice.
>
> Data-centers would get hacked. How about your Raspberry Pi?
>
> Corrupt data-center employee is probably the only valid concern. However,
> there is nothing (except cost) to stop you from establishing multiple full
> nodes all over the world. If your Raspberry Pi at home could no longer fully
> validate the chain, it could become a header-only node to make sure your VPS
> full nodes are following the correct chaintip. You may even buy hourly
> charged cloud hosting in different countries to run header-only nodes at
> negligible cost.
>
> There is no single point of failure in a decentralized network. Having
> multiple nodes will also save you from Sybil attack and geopolitical risks.
> Again, if all data-centres and governments in the world are turning against
> Bitcoin, it is delusional to think we could fight against them without using
> any real weapon.
>
> By the way, I'm quite confident that my current full node at home are
> capable of running at 8MB blocks.
>
>
>
> Quoting Adam Back <adam at cypherspace.org>:
>
>> I think trust the data-center logic obviously fails, and I was talking
>> about this scenario in the post you are replying to.  You are trusting the
>> data-center operator period.  If one could trust data-centers to run
>> verified code, to not get hacked, filter traffic, respond to court orders
>> without notifying you etc that would be great but that's unfortunately not
>> what happens.
>>
>> Data-center operators are bound to follow laws, including NSLs and gag
>> orders.  They also get hacked, employ humans who can be corrupt,
>> blackmailed, and themselves centralisation points for policy attack.
>> Snowden related disclosures and keeping aware of security show this is
>> very
>> real.
>>
>> This isn't much about bitcoin even, its just security reality for hosting
>> anything intended to be secure via decentralisation, or just hosting in
>> general while at risk of political or policy attack.
>>
>> Adam
>
>
>

From slashdevnull at hotmail.com  Fri Jul 31 13:59:55 2015
From: slashdevnull at hotmail.com (Un Ix)
Date: Fri, 31 Jul 2015 13:59:55 +0000
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader=E2=80=8F?=
Message-ID: <BLU170-W18CE2AF1E26D65DC74401EC68A0@phx.gbl>
















+1 on the comments below by Thomas. 

"Fee market" is not a 
binary option, either on or off.  Like all markets it exists in varying 
degrees over time and with more or less influence on the process of which it is 
part of.  As it stands now, and likely for another decade at least, the 
fee per tx constitutes a very, very weak market signal for the miners since it 
makes up less than 0.5% of the rewards paid for mining a full block. This is the normal and expected scenario, aimed at driving use of Bitcoin 
as widely and cheaply as possible so that network effects will cement 
Bitcoin for the future, for all users.

As a comparison, how many people would have
 taken up using email if there had been a per-message fee and hourly 
sending limits with only the highest-fee messages being delivered? And 
how would it look if the email protocol developers imposing fees 
& hourly sending limits were pushing hard for use of another email-delivery protocol on
 top of the existing one?

> To: bitcoin-dev at lists.linuxfoundation.org
> Date: Fri, 31 Jul 2015 11:56:48 +0200
> Subject: Re: [bitcoin-dev]	R?spuns: Personal opinion on the fee market from a worried local trader
> From: bitcoin-dev at lists.linuxfoundation.org
> 
> On Friday 31. July 2015 03.21.07 Jorge Tim?n via bitcoin-dev wrote:
> > If I was a miner and you want me to include your transaction for free,
> > you're asking me to give you money
> 
> What?
> 
> Ask yourself; why do miners include transactions at all? What it the incentive 
> if there really is only less than 0.8% of income to be derived from fees?
> 
> Miners don't get payed by fees.  They won't need to get payed by fees for 
> decades to come. Maybe you want to re-do your math, it seems off.
> -- 
> Thomas Zander





 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/0aee231e/attachment-0001.html>

From dave at hashingit.com  Fri Jul 31 14:29:14 2015
From: dave at hashingit.com (Dave)
Date: Fri, 31 Jul 2015 07:29:14 -0700
Subject: [bitcoin-dev]
 =?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
 =?utf-8?q?ee_market_from_a_worried_local_trader=E2=80=8F?=
In-Reply-To: <BLU170-W18CE2AF1E26D65DC74401EC68A0@phx.gbl>
References: <BLU170-W18CE2AF1E26D65DC74401EC68A0@phx.gbl>
Message-ID: <8FAC5D92-4541-4E3A-8911-90CECA96D174@hashingit.com>


> On 31 Jul 2015, at 06:59, Un Ix via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> +1 on the comments below by Thomas. 
> 
> "Fee market" is not a binary option, either on or off.  Like all markets it exists in varying degrees over time and with more or less influence on the process of which it is part of.  As it stands now, and likely for another decade at least, the fee per tx constitutes a very, very weak market signal for the miners since it makes up less than 0.5% of the rewards paid for mining a full block. This is the normal and expected scenario, aimed at driving use of Bitcoin as widely and cheaply as possible so that network effects will cement  Bitcoin for the future, for all users.
> 
> As a comparison, how many people would have taken up using email if there had been a per-message fee and hourly sending limits with only the highest-fee messages being delivered? And how would it look if the email protocol developers imposing fees & hourly sending limits were pushing hard for use of another email-delivery protocol on top of the existing one?
> 
How would email have looked if it required 300 MW of power to support it for "free" for 10 years?

In practice email was never free- it was paid for by the payments users made to ISPs. ISPs paid for email and network infrastructure from that.

The equivalent analogy here would be to drop fees completely and pay a specific miner to mine all of your transactions as a monthly subscription (which of course doesn't work in a non-permission-based network).

Miners have real (huge) costs - they will be in a lot of pain with reward halving if a few model does not replace that. That in turn poses a huge risk of smaller miners shutting down, which in turn centralises things even more. I would argue that the lack of pool diversity and thus lack of block makers is already the single biggest risk for a decentralised system; avoiding the issue of fees just accelerates this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/47b261b8/attachment.html>

From jtimon at jtimon.cc  Fri Jul 31 14:33:14 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 16:33:14 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
Message-ID: <CABm2gDqV1NdHJZBmUWX3AxVYy6ErU7AB-wsWgGzbiTL1twdq6g@mail.gmail.com>

On Fri, Jul 31, 2015 at 2:15 PM, Mike Hearn <hearn at vinumeris.com> wrote:
> Hey Jorge,
>
>> He is not saying that. Whatever the reasons for centralization are, it
>> is obvious that increasing the size won't help.
>
>
> It's not obvious. Quite possibly bigger blocks == more users == more nodes
> and more miners.

How more users or more nodes can bring more miners, or more
importantly, improve mining decentralization?

> To repeat: it's not obvious to me at all that everything wrong with Bitcoin
> can be solved by shrinking blocks. I don't think that's going to suddenly
> make everything magically more decentralised.

I don't think anybody is defending that position so you can stop refuting it.

> The 8mb cap isn't quite arbitrary. It was picked through negotiation with
> different stakeholders, in particular, Chinese miners. But it should be high
> enough to ensure organic growth is not constrained, which is good enough.

Well, negatiations don't make the number less arbitrary. As far as I
know, the sequence of events was this:

1) Gavin proposes 20MB to 20GB
2) Some chinese miners say they can securely handle at most 8 MB.
3) Gavin proposes 8 MB to 8 GB

In any case, history is irrelevant for this point: if party 1 proposes
arbitrary value A and party 2 proposes arbitrary value B, any
"compromise" value between those 2 is still an arbitrary value. For
example, A + ((B-A)/2) is still an arbitrary value.

I'm sorry, but until there's a simulation that I can run with
different sizes' testchains (for example using #6382) to somehow
compare them, I will consider any value arbitrary. A "I run this with
blocksize=X and nothing seems to have broken" doesn't help here.
We need to compare, and a criterion to compare.

>> I think it would be nice to have some sort of simulation to calculate
>> a "centralization heuristic" for different possible blocksize values
>> so we can compare these arbitrary numbers somehow.
>
>
> Centralization is not a single floating point value that is controlled by
> block size. It's a multi-faceted and complex problem. You cannot "destroy
> Bitcoin through centralization" by adjusting a single constant in the source
> code.

Agreed on the first sentence, I'm just saying that the influence of
the blocksize in that function is monotonic: with bigger sizes, equal
or worse mining centralization.
About the second sentence, yes, I could destroy Bitcoin by changing
one single constant if I could somehow force users to adopt my version
of the software. I'm sure I can actually find several examples if
necessary. "Through centralization" is harder, but say we chose
std::numeric_limits<int64_t>::max() as the maximum block size (in
practice, entirely removing the block size limit), then the consensus
rules don't have any rule to limit mining centralization.
Sacrificing that tool, and doing so this early on could certainly turn
Bitcoin into an effectively centralized system, destroying Bitcoin (or
at least the "p2p currency" part of it, which is the most interesting
one for many Bitcoin users including me).
So, once it's clear that nobody is saying that centralization depends
ONLY on the block size, can you tell us please if you think it's
useful for limiting mining centralization or not?
If you think the blocksize consensus limit does nothing to limit
centralization then there's no tradeoff to consider and you should be
consequently advocating for full removal of the limit rather than
changes towards bigger arbitrary values.
Otherwise you may want to explain why you think 8 GB is enough of a
limit to impede further centralization.

> To say once more: block size won't make much difference to how many
> merchants rely on payment processors because they aren't using them due to
> block processing overheads anyway. So trying to calculate such a formula
> won't work. Ditto for end users on phones, ditto for developers who want
> JSON/REST access to an indexed block chain, or hosted wallet services, or
> miners who want to reduce variance.

Sorry, I don't know about Pieter, but I was mostly talking about
mining centralization, certainly not about payment services.

> What people like you are Pieter are doing is making a single number a kind
> of proxy for all fears and concerns about the trend towards outsourcing in
> the Bitcoin community. Everything gets compressed down to one number you
> feel you can control, whether it is relevant or not.

No, that's not what we are doing.
It's good that you talk about your fears but, please, let other people
talk about theirs on their own.

>> > So why should anyone go through the massive hassle of setting up
>> > exchanges,
>> > without the lure of large future profits?
>>
>> Are you suggesting that bitcoin consensus rules should be designed to
>> maximize the profits of Bitcoin exchanges?
>
>
> That isn't what I said at all Jorge. Let me try again.
>
> Setting up an exchange is a lot of risky and expensive work. The motivation
> is profit, and profits are higher when there are more users to sell to. This
> is business 101.

I can imagine a non-for-profit exchange but there's no point in
finding edge cases: no general disagreement here.

> If you remove the potential for future profit, you remove the motivation to
> create the services that we now enjoy and take for granted. Because if you
> think Bitcoin can be useful without exchanges then let me tell you, I was
> around when there were none. Bitcoin was useless.

My first post on the bitcoin forums (and vague hardfork proposal, I
started reading in December 2010) was January 21, 2011 (vs yours Dec
14th 2010, as Greg pointed out in the other thread). I bought my first
bitcoins (and also sold most of them shortly after, stupid me) using
some web that used paypal and was closed down not too long after that.
At first I couldn't participate in exchanges because I had no Liberty
Reserve account...
Look, I'm sure there's many stories about how we met Bitcoin that we
can share having a beer in a bar or something. But probably most of
the subscribers to this list don't really care, and if they care they
can ask us privately, or you can create a new thread (probably better
in bitcointalk or somewhere else than here): they are completely
irrelevant in this technical discussion.

So, back on-topic: do I agree that exchanges are extremely important
for the Bitcoin ecosystem?
Yes, of course I do.
But that doesn't mean that their "potential for future profit" should
be a primary concern when deciding consensus rules changes that affect
ALL users.
But even before that, I disagree with the premise that "not rising the
consensus blocksize as soon as possible" will ruin the exchanges or
"remove their potential for future profit".

From kanzure at gmail.com  Fri Jul 31 14:52:56 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Fri, 31 Jul 2015 09:52:56 -0500
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
Message-ID: <CABaSBaxcgHXKLRb0nR_=Et-0TpNaXZyCuwDH_8S36qHSL8Z6sQ@mail.gmail.com>

On Fri, Jul 31, 2015 at 7:15 AM, Mike Hearn via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> He is not saying that. Whatever the reasons for centralization are, it
>> is obvious that increasing the size won't help.
>>
>
> It's not obvious. Quite possibly bigger blocks == more users == more nodes
> and more miners.
>

Well, even in a centralized scheme you can have more users, more nodes and
more miners. Just having more does not mean that the system isn't
centralized, for example we can point to many centralized services such as
PayPal that have trillions of users.


> To repeat: it's not obvious to me at all that everything wrong with
> Bitcoin can be solved by shrinking blocks. I don't think that's going to
> suddenly make everything magically more decentralised.
>

Nobody claimed that moving to smaller blocks would "solve everything wrong
with Bitcoin".

You cannot "destroy Bitcoin through centralization" by adjusting a single
> constant in the source code.
>

Why not? That's exactly the sort of change that would be useful to do so,
in tandem with some forms of campaigning.


> The motivation is profit, and profits are higher when there are more users
> to sell to. This is business 101.
>

I am confused here; is that idea operating under an assumption (or rule)
like "we shouldn't count aggregate transactions as representing multiple
other transactions from other users" or something? I have seen this idea in
a few places, and it would be useful to get a fix on where it's coming
from. Does this belief extend to P2SH and multisig...?

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/65a5128a/attachment.html>

From hearn at vinumeris.com  Fri Jul 31 14:58:59 2015
From: hearn at vinumeris.com (Mike Hearn)
Date: Fri, 31 Jul 2015 16:58:59 +0200
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CABm2gDqV1NdHJZBmUWX3AxVYy6ErU7AB-wsWgGzbiTL1twdq6g@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
	<CABm2gDqV1NdHJZBmUWX3AxVYy6ErU7AB-wsWgGzbiTL1twdq6g@mail.gmail.com>
Message-ID: <CA+w+GKTLBWj6b4ppwrmnXb_gybYFcrX7haLBSdCnMaijy2An4w@mail.gmail.com>

>
> How more users or more nodes can bring more miners, or more importantly,
> improve mining decentralization?
>

Because the bigger the ecosystem is the more interest there is in taking
part?

I mean, I guess I don't know how to answer your question. When Bitcoin was
new it had almost no users and almost no miners. Now there are millions of
users and factories producing ASICs just for Bitcoin. Surely the
correlation is obvious?

I'm sorry, but until there's a simulation that I can run with different
> sizes' testchains (for example using #6382) to somehow compare them, I will
> consider any value arbitrary.
>

Gavin did run simulations. 20mb isn't arbitrary, the process behind it was
well documented here:

http://gavinandresen.ninja/does-more-transactions-necessarily-mean-more-centralized

*I chose 20MB as a reasonable block size to target because 170 gigabytes
per month comfortably fits into the typical 250-300 gigabytes per month
data cap? so you can run a full node from home on a ?pretty good? broadband
plan.*
Did you think 20mb was picked randomly?


> Agreed on the first sentence, I'm just saying that the influence of
> the blocksize in that function is monotonic: with bigger sizes, equal
> or worse mining centralization.
>

I have a hard time agreeing with this because I've seen Bitcoin go from
blocks that were often empty to blocks that are often full, and in this
time the number of miners and hash power on the network has gone up a huge
amount too.

You can argue that a miner doesn't count if they pool mine. But if a miner
mines on a pool that uses exactly the same software and settings as the
miner would have done anyway, then it makes no difference. Miners can
switch between pools to find one that works the way they like, so whilst
less pooling or more decentralised pools would be nice (e.g.
getblocktemplate), and I've written about how to push it forward before, I
still say there are many more miners than in the past.

If I had to pick between two changes to improve mining decentralisation:

1) Lower block size
2) Finishing, documenting, and making the UX really slick for a
getblocktemplate based decentralised mining pool

then I'd pick (2) in a heartbeat. I think it'd be a lot more effective.


> you should be consequently advocating for full removal of the limit rather
> than changes towards bigger arbitrary values.
>

I did toy with that idea a while ago. Of course there can not really be no
limit at all because the code assumes blocks fit into RAM/swap, and nodes
would just end up ignoring blocks they couldn't download in time anyway.
There is obviously a physical limit somewhere.

But it is easier to find common ground with others by compromising. Is 8mb
better than no limit? I don't know and I don't care much:  I think Bitcoin
adoption is a slow, hard process and we'll be lucky to increase average
usage 8x over the next couple of years. So if 8mb+ is better for others,
that's OK by me.



> Sorry, I don't know about Pieter, but I was mostly talking about
> mining centralization, certainly not about payment services.
>

OK. I write these emails for other readers too :) In the past for instance,
developers who run services without running their own nodes has come up.

Re: exchange profit. You can pick some other useful service provider if you
like. Payment processors or cold storage providers or the TREZOR
manufacturers or whoever.

My point is you can't have a tiny high-value-transactions only currency AND
all the useful infrastructure that the Bitcoin community is making. It's a
contradiction. And without the infrastructure bitcoin ceases to be
interesting even to people who are willing to pay huge sums to use it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/7730a126/attachment-0001.html>

From jtimon at jtimon.cc  Fri Jul 31 15:24:31 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 17:24:31 +0200
Subject: [bitcoin-dev]
	=?utf-8?q?R=C4=83spuns=3A_Personal_opinion_on_the_f?=
	=?utf-8?q?ee_market_from_a_worried_local_trader?=
In-Reply-To: <2B69B87D-CAF8-4817-B637-34E91E0A07FD@gmail.com>
References: <CADZB0_ZgDMhVgCUh2PTAPDL7k_W8QGt_HLYdkwv_qQ5xEMn8HA@mail.gmail.com>
	<55BA8ED0.4080600@thinlink.com>
	<CABm2gDqCdrVvEzOfUZMBTbEfw5-nfNjBpDcWS-zmNey+_n-qMQ@mail.gmail.com>
	<1706574.Be1RBGpNr6@coldstorage>
	<2B69B87D-CAF8-4817-B637-34E91E0A07FD@gmail.com>
Message-ID: <CABm2gDrvG8eCZ45TkqiGy4UsKM6tRspuzMrvN+rn68HY+9N99Q@mail.gmail.com>

On Fri, Jul 31, 2015 at 11:56 AM, Thomas Zander via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Friday 31. July 2015 03.21.07 Jorge Tim?n via bitcoin-dev wrote:
>> If I was a miner and you want me to include your transaction for free,
>> you're asking me to give you money
>
> What?
>
> Ask yourself; why do miners include transactions at all? What it the incentive
> if there really is only less than 0.8% of income to be derived from fees?

As a rhetorical exercise, I just asked myself those questions (with
other words) in the very post you are replying to.
Please, read again.
If miners have a cost in including transactions (which they have) but
there's no gain, why are miners including free transactions?
Is it because they are stupid or because they don't care enough about
fees (and thus blindly use whatever default policy that comes with
Bitcoin Core)?

On Fri, Jul 31, 2015 at 2:32 PM, Oleg Andreev via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Fees should be compared not with the total revenue, but with the profit margin.

You are completely right, this is what matters in the end. To correct
myself, what I'm worried about is how low the fees/profits ratio is,
fees/total_reward is just an easier-to-calculate approximation when
you don't know costs = total_reward - profits.

> Of course it's a very rough estimate and most likely to be far from reality, but it shows how fees can begin to matter rather quickly under pressure of separate factors: halving and growing valuation and mining competition.

Don't forget a rise in fees paid as another potential factor. That was
my whole point: higher fees may help reducing problems related to a
low fees/profits ratio.
And that's why I don't think a rise in fees is necessarily a bad thing.
Let's not forget that we're just talking about market fees for
non-urgent transfers rising above zero!
There may be a fee market for fast confirmations already, but there's
certainly none for non-urgent transfers.
In my opinion, rising from zero to anything, it's a great step
forwards. I can perfectly understand that maintaining that anything
low is good for adoption, but insisting in maintaining it at zero
doesn't seem very reasonable to me, given that we know for a fact that
is not sustainable in the long term.
We don't want business plans to fail because they're relaying on free
transactions. We don't want new users to be lied about the real
properties of the system.
And I'm sure that any ridiculously low value will be so marginally
worse for adaption when compared to a plain zero, that I'm not worried
about it at all.
Users starting to pay SOMETHING for a service they're enjoying and
that actually has quite big operational costs (energy-demanding proof
of work, currently subsidized by the finite initial seigniorage) it's,
by no means, the end of Bitcoin.
To me is really more of a start, a tiny first step towards a viable
system that doesn't depend on subsidies (with expiration date).

From kanzure at gmail.com  Fri Jul 31 15:27:45 2015
From: kanzure at gmail.com (Bryan Bishop)
Date: Fri, 31 Jul 2015 10:27:45 -0500
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn'ttemporary
In-Reply-To: <CABsx9T3FoErEeOtQcnK62WK=zOBREwRkxzDNLDniuvM+L5Shiw@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<55B9EB68.9020703@mail.bihthai.net>
	<CABm2gDpJjimF486qca=JGQ0h6k9qzike-hjVUU2NhOuCzbBkow@mail.gmail.com>
	<2905605.OvbZMWuhGy@coldstorage>
	<CABaSBaxyQja9bqDsyfWubR1R-Xf2tqmSmU-GW_z7VQTxbBagrQ@mail.gmail.com>
	<CABsx9T3FoErEeOtQcnK62WK=zOBREwRkxzDNLDniuvM+L5Shiw@mail.gmail.com>
Message-ID: <CABaSBaxEBkYPMmx5sXK7o5nNYiuxZJJ=ief_3AQ5G1hpcOkd1w@mail.gmail.com>

On Thu, Jul 30, 2015 at 10:55 AM, Gavin Andresen <gavinandresen at gmail.com>
wrote:

> On Thu, Jul 30, 2015 at 11:24 AM, Bryan Bishop via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> Because any decentralized system is going to have high transaction costs
>> and scarcity anyway.
>
>
> This is a meme that keeps coming up that I think just isn't true.
>

Specifically I was replying to the argument that went like "the bitcoin
system, in any of its futures with a bunch of non-zero transaction fees, is
going to be replaced by a decentralized system that can commit to
transactions that have lower or zero transaction fees, and which also
otherwise provides the same benefits as bitcoin". My reply was that
decentralized systems are going to have physical limitations that force
their solutions to look certain ways, which would do something like, for
example, explain why there were "$10 fees" in that original scenario in the
first place. Your reply does not seem to share this context?

Also, I don't mean to start a discussion about internet architecture, but
ISP peering agreements do not look particularly like a cryptographic,
decentralized system to me at all. I agree that the internet needs better
architecture. I would call the IETF about this but I think Greg would be
the one to answer or something :-). Would be sorta redundant, heh.

- Bryan
http://heybryan.org/
1 512 203 0507
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/de9a787c/attachment.html>

From venzen at mail.bihthai.net  Fri Jul 31 15:28:56 2015
From: venzen at mail.bihthai.net (Venzen Khaosan)
Date: Fri, 31 Jul 2015 22:28:56 +0700
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKTLBWj6b4ppwrmnXb_gybYFcrX7haLBSdCnMaijy2An4w@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>	<CABm2gDqV1NdHJZBmUWX3AxVYy6ErU7AB-wsWgGzbiTL1twdq6g@mail.gmail.com>
	<CA+w+GKTLBWj6b4ppwrmnXb_gybYFcrX7haLBSdCnMaijy2An4w@mail.gmail.com>
Message-ID: <55BB9438.3030309@mail.bihthai.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



On 07/31/2015 09:58 PM, Mike Hearn via bitcoin-dev wrote:
> How more users or more nodes can bring more miners, or more
> importantly, improve mining decentralization?
> 
> 
> Because the bigger the ecosystem is the more interest there is in
> taking part?

The logic just flows from one to the other does it? So because Islam
is the biggest religious ecosystem in the world now you and me are
just burning to take part?

By your logic, most people in Asia would horde (or want to pay using)
Chinese Yuan, only they don't. The Yuan and the Yen are the dominant
currencies of large transaction settlement in the region, but try to
use it on the street and you're met with puzzled bemusement, Mike Hearn.

Bitcoin is not suitable as a currency for pervasive dominance, and
ideals of pushing it into every heart and mind around the globe is no
different from religious zealotry.

Bitcoin has its place and we're only at the beginning of a gradual
evolution. How can I say that? Because I'm looking across the rice
paddy to where my neighbors have not adopted the innovation of the
lightbulb, and burn candles for light and cook with gas. And they're
not an anomaly around here or in Asia, Africa and South America.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJVu5QvAAoJEGwAhlQc8H1m1DQH/i54c+ZBnk9tZK+0PfC2G0rT
taLpqvmXGOHPaSqkfHOLjLOm9LxGAw3TZpFIkFSuSuiSlwDfii2VIlKsbYSCEbBe
twCaZuNqam4r+61755ADrvPziPx3Tr2GXN7Zc635prN9uGoGCu58xxc7Iy8sTsrf
vB430ZN5RhagpFG5LCqN4QmDGQlK+ceYh53jLQ5HpNP/8UsOJjGXdnZfb4V24EFW
0NPAWdmWVFVpEPxqbsmAGjzOPVdocSQuRTekOQHJ7e5XNmHaD3YGHI+hwBDKzcD+
tUuFh7v4C684172PwandfJGAtUJMeavdh+IA21fze3+trrcTOVOZMHr+HEfmWGs=
=AToN
-----END PGP SIGNATURE-----

From dscotese at litmocracy.com  Fri Jul 31 16:22:58 2015
From: dscotese at litmocracy.com (Dave Scotese)
Date: Fri, 31 Jul 2015 09:22:58 -0700
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <CALqxMTHFy0F6ov1_H+MkQ+6succ2pxqOWuYJkR57HBtRMU+AGQ@mail.gmail.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
	<CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
	<20150731130714.Horde.PvL1IB3Kf5S6GAA73N-HOw1@server47.web-hosting.com>
	<CALqxMTHFy0F6ov1_H+MkQ+6succ2pxqOWuYJkR57HBtRMU+AGQ@mail.gmail.com>
Message-ID: <CAGLBAhc4Yxhrdd07nt6pY7fo7BmXXgcxANq++w=WfSoUA5NfBA@mail.gmail.com>

Here are some books that will help more people understand why Adam's
concern is important:
Kicking the Dragon (by Larken Rose)
The State (by Franz Oppenheimer)

Like he said, it isn't much about bitcoin.  Our crypto is just one of the
defenses we've created, and understanding what it defends will help us
maintain its value.

Dave

On Fri, Jul 31, 2015 at 6:16 AM, Adam Back via bitcoin-dev <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> I think trust the data-center logic obviously fails, and I was talking
> about this scenario in the post you are replying to.  You are trusting the
> data-center operator period.  If one could trust data-centers to run
> verified code, to not get hacked, filter traffic, respond to court orders
> without notifying you etc that would be great but that's unfortunately not
> what happens.
>
> Data-center operators are bound to follow laws, including NSLs and gag
> orders.  They also get hacked, employ humans who can be corrupt,
> blackmailed, and themselves centralisation points for policy attack.
> Snowden related disclosures and keeping aware of security show this is very
> real.
>
> This isn't much about bitcoin even, its just security reality for hosting
> anything intended to be secure via decentralisation, or just hosting in
> general while at risk of political or policy attack.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/2339c6d8/attachment.html>

From thomas.kerin at gmail.com  Fri Jul 31 17:40:59 2015
From: thomas.kerin at gmail.com (Thomas Kerin)
Date: Fri, 31 Jul 2015 18:40:59 +0100
Subject: [bitcoin-dev] [Bitcoin-development] [BIP draft] Motivation and
 deployment of consensus rules changes ([soft/hard]forks)
In-Reply-To: <CABm2gDrrqubbZ7MjDppu-eFxJGcydVoSAK2SC=-s-0txYX6GRQ@mail.gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>	<CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>	<CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>	<CAE-z3OVgQFaFAWUJhDLzyMAE2AXoGHTy0NbUADDAZW9-veX8XA@mail.gmail.com>
	<CABm2gDrrqubbZ7MjDppu-eFxJGcydVoSAK2SC=-s-0txYX6GRQ@mail.gmail.com>
Message-ID: <55BBB32B.3080802@gmail.com>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

I really think there should be a document before a BIP number is assigned.


On 23/07/15 12:10, Jorge Tim?n via bitcoin-dev wrote:
> Discussions about whether to get miner's confirmation on
> uncontroversial hardforks or not, and about whether to use nHeight,
> nMedianTime or just use nTime are spreading all around. Hopefully
> getting a BIP number (even though this is still a draft) will help
> concentrating discussions about deployment of uncontroversial
> hardforks to a single place.
> Greg, can I get a BIP number for this?
>
> On Sun, Jun 21, 2015 at 12:54 PM, Tier Nolan <tier.nolan at gmail.com> wrote:
>> On Sun, Jun 21, 2015 at 11:31 AM, Jorge Tim?n <jtimon at jtimon.cc> wrote:
>>>
>>> You mean the timewarp fix can be coded as a softfork instead of a
>>> hardfork? How so?
>>
>>
>> The easiest would be a rule requiring that all blocks are within 1 day of
>> the median of the previous 11 blocks.  At the moment, you need to be
greater
>> than that value.  This would add a condition at the other end.
>>
>> It wouldn't be a total fix, but it would protect against the exploit.
>>
>> A stricter soft fork would be that the two blocks in question have to
have
>> the same timestamp.  This would force the off by 1 and the correct
value to
>> give the same result.
>>
>>> If that's the case, do you have a better candidate?
>>
>>
>> I think it is fine, since fixing it "right" does require a hard fork,
>> especially if it is only to show a non controversial hard fork.
>>
>>
------------------------------------------------------------------------------
>>
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev

- -- 
My PGP key can be found here: <https://thomaskerin.io/me.pub.asc>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCgAGBQJVu7MlAAoJEAiDZR291eTlGnkP/jG/oW2PfPwDt6t+1UJ7P1LO
/NDtpUI5wiPQ6aXBmqKSx7FxZ9QJQM1tB1SpGhFosOXXSiYLjNos0l0S6oRw7yGC
LzXmbNTL863F0vOfRU35yxQJbcUi6gOHk8E/oo2X/V+BgAoc4cweK4080C8k1vki
7kPPiSek4erMo7TVNb5vsHkOI6QXhKNV/lFuSOuRAwklRY5vL2BZi56HekOnoFdr
iHebmRrjL7R+IFzasnWtHh6KGs51tg02SOPTMXwJ/H+xDqN9LXk/DJUbp9QhEa+t
TwojQBj7D+HMWavaLRVjVQOcvxxm3PTwZHmHxzfrx3kG5nsZNWrebWElHikW8BuW
dg6Yq/6mIW59HPyNSc5HCBnNonKpZebsQU0rdzOcwWFdk0SZ1TuKrYjNu9uDVGpo
od21hIpGYa1FTxk1HQ63PMf5SKmLunvHOehWw8pmXy44k3WVkABAhi7YNIbA8Qvj
DJ+k9wtypDBraoQh1yur4r1cBbBVcbaxRwv42MBGhtTXPVzRu6CikJNwa65z1AqT
AM3av8+IIgiq9dYn1uzDh1BQGSsB5YYQZ3QDHpM1DxCvjXvmgf4RdFwC0Q0B0X3S
jnWebazQvxN9qsylHAJeTZ0+rJCsx+R3Fl2Myasz/c3a6uaYJVi9/N0j3yRm1EYt
3Py8BGrArkIe3CeXaTCV
=Yh0o
-----END PGP SIGNATURE-----


From g.andrew.stone at gmail.com  Fri Jul 31 18:04:53 2015
From: g.andrew.stone at gmail.com (G. Andrew Stone)
Date: Fri, 31 Jul 2015 14:04:53 -0400
Subject: [bitcoin-dev] A compromise between BIP101 and Pieter's proposal
In-Reply-To: <CAGLBAhc4Yxhrdd07nt6pY7fo7BmXXgcxANq++w=WfSoUA5NfBA@mail.gmail.com>
References: <20150731083943.Horde.68uT9J78H_PdIgIwQP5frA1@server47.web-hosting.com>
	<CALqxMTFhfwvcqY0dSoq489kA9G8YkQZPkzJDEU1eQHsupq-31g@mail.gmail.com>
	<20150731130714.Horde.PvL1IB3Kf5S6GAA73N-HOw1@server47.web-hosting.com>
	<CALqxMTHFy0F6ov1_H+MkQ+6succ2pxqOWuYJkR57HBtRMU+AGQ@mail.gmail.com>
	<CAGLBAhc4Yxhrdd07nt6pY7fo7BmXXgcxANq++w=WfSoUA5NfBA@mail.gmail.com>
Message-ID: <CAHUwRvuN=xg527QFs8s6MmGOhTYbUKt0u3QHf6sKw7Ywi5KDTw@mail.gmail.com>

There's a large array of solutions that are bigger than the cheapest home
broadband, but smaller then renting hardware in a data center.  Every
company with internet service to their location purchases one of these
options.  If Bitcoin full node bandwidth requirements ever exceed a
hobbyist's reach, s/he can always pool resources with other individuals to
purchase one of these solutions, and a 1-room office.

How many of you have connected to multiple ISPs and are routing internet
traffic between them?  But TCP is still permissionless.

Bitcoin node requirements will grow beyond a hobbyist reach (but not that
of the garage entrepreneur).   The truth is that as technologies grow and
mature, the hobbyists move on but anyone who has a real reason to continue
using it stays.  This fact does not destroy its decentralization.

I do not think that reasonable scaling will significantly affect full node
quantity (historical downtrends are conflated with the simultaneous
transition from hobbyist to professional).

At the same time the ability to create an independent full node is a
tremendous force keeping existing full nodes honest -- this potential is
more powerful then the fact.

Which would you choose, a 10 thousand node strong bankCoin, or a 1000 node
open source permissionless Bitcoin?


On Fri, Jul 31, 2015 at 12:22 PM, Dave Scotese via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> Here are some books that will help more people understand why Adam's
> concern is important:
> Kicking the Dragon (by Larken Rose)
> The State (by Franz Oppenheimer)
>
> Like he said, it isn't much about bitcoin.  Our crypto is just one of the
> defenses we've created, and understanding what it defends will help us
> maintain its value.
>
> Dave
>
> On Fri, Jul 31, 2015 at 6:16 AM, Adam Back via bitcoin-dev <
>> bitcoin-dev at lists.linuxfoundation.org> wrote:
>>
>> I think trust the data-center logic obviously fails, and I was talking
>> about this scenario in the post you are replying to.  You are trusting the
>> data-center operator period.  If one could trust data-centers to run
>> verified code, to not get hacked, filter traffic, respond to court orders
>> without notifying you etc that would be great but that's unfortunately not
>> what happens.
>>
>> Data-center operators are bound to follow laws, including NSLs and gag
>> orders.  They also get hacked, employ humans who can be corrupt,
>> blackmailed, and themselves centralisation points for policy attack.
>> Snowden related disclosures and keeping aware of security show this is very
>> real.
>>
>> This isn't much about bitcoin even, its just security reality for hosting
>> anything intended to be secure via decentralisation, or just hosting in
>> general while at risk of political or policy attack.
>>
>
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/8b30a557/attachment.html>

From elliot.olds at gmail.com  Fri Jul 31 20:09:58 2015
From: elliot.olds at gmail.com (Elliot Olds)
Date: Fri, 31 Jul 2015 13:09:58 -0700
Subject: [bitcoin-dev] Block size following technological growth
In-Reply-To: <CA+w+GKTLBWj6b4ppwrmnXb_gybYFcrX7haLBSdCnMaijy2An4w@mail.gmail.com>
References: <CAPg+sBj-wA1DMrwkQRWnzQoB5NR-q=2-5=WDAAUYfSpXRZSTqw@mail.gmail.com>
	<CABsx9T1NqBX9Tr8vRCtCeri76e0wrtkvRhEPyG9Advv_3Uqxng@mail.gmail.com>
	<CAPg+sBjwVxYTOn3+bwahHGSGpBh5BCh5b4OOFkw_2x97YZSFPQ@mail.gmail.com>
	<CA+w+GKS_wDDgf=HjPgD5QZ_wdTRg7i_oYUgBRmh9HpufETAP=w@mail.gmail.com>
	<CABm2gDqvpWdHdjo1OBzbw-6ivu5DEGcfvK8duc3-KAjsSeWapA@mail.gmail.com>
	<CA+w+GKRPPcgCO0pBP2PjKGU49tWuBoF1vRJzY+4fWn71HOVDPw@mail.gmail.com>
	<CABm2gDqV1NdHJZBmUWX3AxVYy6ErU7AB-wsWgGzbiTL1twdq6g@mail.gmail.com>
	<CA+w+GKTLBWj6b4ppwrmnXb_gybYFcrX7haLBSdCnMaijy2An4w@mail.gmail.com>
Message-ID: <CA+BnGuG+3q--L-iYuCN5whkYEQgZcGgsvEdwfFLiNWg+SiQYVA@mail.gmail.com>

On Fri, Jul 31, 2015 at 7:58 AM, Mike Hearn via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:
>
> But it is easier to find common ground with others by compromising. Is 8mb
> better than no limit? I don't know and I don't care much:
>

People seeing statements like this might imagine that if you knew a change
from 1MB blocks to 1GB blocks would ensure fees were 10 cents for the next
two years instead of 30 cents over the next two years, you'd want to roll
out 1GB blocks. Would you? Where is your cutoff? How large would you be
willing to make the block size in exchange for moving fees from 30 cents to
10 cents for the next two years? How about $3 to 10 cents? $30 to 10 cents?

How do you think Greg/Pieter/Wlad/Adam/Jorge would answer those questions?
I find it very hard to guess, but I think knowing how people would make
that specific tradeoff could be helpful in either starting a more
productive discussion, or at least realizing how far apart people are in
their weighing of the risks of large blocks vs. the benefits of low fees.

Obviously the assumption that we have this two year stability period is
unrealistic, but the hypothetical tells us how much of the disagreement
comes from "if we increase the block size to lower fees, the low fees won't
last" vs. "the low fees aren't worth it even if they last."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/20f72f7e/attachment.html>

From thomasv at electrum.org  Fri Jul 31 20:34:55 2015
From: thomasv at electrum.org (Thomas Voegtlin)
Date: Fri, 31 Jul 2015 22:34:55 +0200
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynxLKLTyp=+zLOt0dESKfxo2ojKmiQQT6ygZ1eQC5nZM2vA@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>	<CABqynxL5AhEPLSw8TYjn9CVTc42+OHihKPGY6X3GP5W6u6TZaQ@mail.gmail.com>	<55B0B858.8000106@electrum.org>
	<55B0E719.4030004@electrum.org>
	<CABqynxLKLTyp=+zLOt0dESKfxo2ojKmiQQT6ygZ1eQC5nZM2vA@mail.gmail.com>
Message-ID: <55BBDBEF.1020501@electrum.org>



Le 27/07/2015 23:51, Justin Newton via bitcoin-dev a ?crit :
> Thomas,
>   I think this is interesting and has some good thoughts behind it.  For
> clarity, are you recommending that the "_oa2" portion of the domain name be
> "hidden" as a way to make it easier to delegate just wallet names from a
> zone?
> 

I don't think you can completely "hide" it, because you need to know
where the _oa2 is in the name, in order to perform requests. In my
proposal it was denoted by a @ character in the alias:

x at y.z -> x._oa2.y.w


From jtimon at jtimon.cc  Fri Jul 31 20:37:43 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 22:37:43 +0200
Subject: [bitcoin-dev] [Bitcoin-development] [BIP draft] Motivation and
 deployment of consensus rules changes ([soft/hard]forks)
In-Reply-To: <55BBB32B.3080802@gmail.com>
References: <CABm2gDqPBPiDG1BUAipEsLfyE1VFyvdqdoxtYjkKvGDvBQ8qMg@mail.gmail.com>
	<CAE-z3OVM8vwjo_-FOggSoOWR78w=Rmm+GS7Xv9uSK0jdx1_zdw@mail.gmail.com>
	<CABm2gDrs6XwG5imH3pFFDB71kx2dSfhR7kjc6Pw8hvDKqGvTPQ@mail.gmail.com>
	<CAE-z3OVgQFaFAWUJhDLzyMAE2AXoGHTy0NbUADDAZW9-veX8XA@mail.gmail.com>
	<CABm2gDrrqubbZ7MjDppu-eFxJGcydVoSAK2SC=-s-0txYX6GRQ@mail.gmail.com>
	<55BBB32B.3080802@gmail.com>
Message-ID: <CABm2gDo=LKLhEh0AXBzifR8QDc2epQ8=uObBdskRyf0shShPzw@mail.gmail.com>

On Fri, Jul 31, 2015 at 7:40 PM, Thomas Kerin via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I really think there should be a document before a BIP number is assigned.

There was a document from the start, but after I got the BIP number, I
was renaming the file, moving from org-mode to mediawiki and getting
the code ready.
I'm sorry, I broke the old link to the document, here's the new one:
https://github.com/jtimon/bips/blob/bip-forks/bip-0099.mediawiki

Maybe I should create a PR already to have a permanent link, I don't know.
As said in the document, the code is now here:
https://github.com/bitcoin/bitcoin/compare/0.11...jtimon:hardfork-timewarp-0.11

Also, I should mention that one particular discussion related to this
BIP (whether we should use Block.nTime, median time or block.nHeight
for the activation thresholds) is being discussed in:
http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009731.html

The BIP is currently assuming that the preferred choice for all
non-emergency uncontroversial hardforks is defining a starting
block.nHeight after which miners start confirming their upgrade. Once
the 95% threshold is reached the hardfork takes effect.
Long after that, after that first block enforcing the new rules is
deeply buried, that check can simply replaced by re-defining the
threshold height not with the height when miners started voting, but
simply with the height in which the rules started being enforced for
the first time (see https://github.com/bitcoin/bitcoin/pull/5966/files
).

From elombrozo at gmail.com  Fri Jul 31 20:45:38 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 31 Jul 2015 13:45:38 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <4608887.aSM42bDkNk@coldstorage>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
	<4608887.aSM42bDkNk@coldstorage>
Message-ID: <CABr1YTc46x3RoKKF=cckcmVRWCaAQc0KOTrGRX+A-h5V=xYB9A@mail.gmail.com>

I would love to be able to increase block size. But I have serious doubts
about being able to do this safely at this time given what we presently
know about the Bitcoin network. And I'm pretty sure I'm not alone in this
sentiment.

Had we been working on fixing the known issues that most complicate bigger
blocks in the last six years, or even in the last three years after many
issues had already been well-identified, perhaps we'd be ready to increase
the limit. But other things have seemed more important, like specifying the
use of X.509 overlay protocols or adding complex filtering mechanisms to
the p2p protocol to make it practical to use tx merkle trees...and as a
result we're not ready for safely allowing larger blocks.

- Eric
On Jul 30, 2015 11:43 PM, "Thomas Zander via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Thursday 30. July 2015 16.33.16 Eric Lombrozo via bitcoin-dev wrote:
> >  I don?t think it?s really a matter of whether we agree on whether it?s
> good
> > to raise the block size limit, Gavin. I think it?s a matter of a
> difference
> > in priorities.
>
> Having different priorities is fine, using your time to block peoples
> attempts
> to increase block size is not showing different priorities, it shows
> conflicting
> priorities.
> Different priorities means you can trust someone else to do things they
> care
> about while you do things you care about.
> --
> Thomas Zander
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/042f9b6a/attachment-0001.html>

From elombrozo at gmail.com  Fri Jul 31 20:57:14 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 31 Jul 2015 13:57:14 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CABr1YTc46x3RoKKF=cckcmVRWCaAQc0KOTrGRX+A-h5V=xYB9A@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
	<4608887.aSM42bDkNk@coldstorage>
	<CABr1YTc46x3RoKKF=cckcmVRWCaAQc0KOTrGRX+A-h5V=xYB9A@mail.gmail.com>
Message-ID: <CABr1YTfsf8Z9tyjMTyQRpo0bDtZAG+m=-0W_vxd5pp5Qs1YnDg@mail.gmail.com>

Having said that, I must admit that the complex filtering mechanisms are
pretty clever...they almost make it practical to use SPV...now if only we
were committint to structures that can prove the validity of returned
datasets and miners actually validated stuff, it might also offer some
level of security.
On Jul 31, 2015 1:45 PM, "Eric Lombrozo" <elombrozo at gmail.com> wrote:

> I would love to be able to increase block size. But I have serious doubts
> about being able to do this safely at this time given what we presently
> know about the Bitcoin network. And I'm pretty sure I'm not alone in this
> sentiment.
>
> Had we been working on fixing the known issues that most complicate bigger
> blocks in the last six years, or even in the last three years after many
> issues had already been well-identified, perhaps we'd be ready to increase
> the limit. But other things have seemed more important, like specifying the
> use of X.509 overlay protocols or adding complex filtering mechanisms to
> the p2p protocol to make it practical to use tx merkle trees...and as a
> result we're not ready for safely allowing larger blocks.
>
> - Eric
> On Jul 30, 2015 11:43 PM, "Thomas Zander via bitcoin-dev" <
> bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>> On Thursday 30. July 2015 16.33.16 Eric Lombrozo via bitcoin-dev wrote:
>> >  I don?t think it?s really a matter of whether we agree on whether it?s
>> good
>> > to raise the block size limit, Gavin. I think it?s a matter of a
>> difference
>> > in priorities.
>>
>> Having different priorities is fine, using your time to block peoples
>> attempts
>> to increase block size is not showing different priorities, it shows
>> conflicting
>> priorities.
>> Different priorities means you can trust someone else to do things they
>> care
>> about while you do things you care about.
>> --
>> Thomas Zander
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/ed77d5ee/attachment.html>

From jtimon at jtimon.cc  Fri Jul 31 21:30:50 2015
From: jtimon at jtimon.cc (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Fri, 31 Jul 2015 23:30:50 +0200
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <55BABE17.7050900@bitcoins.info>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
	<55BABE17.7050900@bitcoins.info>
Message-ID: <CABm2gDppLdB5SSQrN1TW-EOBogARpgOXQR4F0ZY0Nn7oWGB5EQ@mail.gmail.com>

On Fri, Jul 31, 2015 at 2:15 AM, Milly Bitcoin via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> These are the types of things I have been discussing in relation to a
> process:
>
> -A list of metrics
> -A Risk analysis of the baseline system.  Bitcoin as it is now.
> -Mitigation strategies for each risk.
> -A set of goals.
> -A Road map for each goal that lists the changes or possible avenues to
> achieve that goal.
>
> Proposed changes would be measured against the same metrics and a risk
> analysis done so it can be compared with the baseline.
>
> For example, the block size debate would be discussed in the context of a
> road map related to a goal of increase scaling.  One of the metrics would be
> a decentralization metric.  (A framework for a decentralization metric is at
> http://www.hks.harvard.edu/fs/pnorris/Acrobat/stm103%20articles/Schneider_Decentralization.pdf).
> Cost would be one aspect of the decentralization metric.

All this sounds very reasonable and useful.
And if a formal organization owns this "process", that's fine as well.
I still think hardforks need to be uncontroversial (using the vague "I
will know it when I see it" defintion) and no individual or
organization can be an "ultimate decider" or otherwise Bitcoin losses
all it's p2p nature (and this seems the point where you, Milly, and I
disagree).
But metrics and data tend to help when it comes to "I will know it
when I see it" and "evidences".
So, yes, by all means, let's have an imperfect decentralization metric
rather than not having anything to compare proposals. Competing
decentralization metrics can appear later: we need a first one first.
I would add that we should have sets of simulations being used to
calculate some of those metrics, but maybe I'm just going too deep
into details.

From elombrozo at gmail.com  Fri Jul 31 21:43:43 2015
From: elombrozo at gmail.com (Eric Lombrozo)
Date: Fri, 31 Jul 2015 14:43:43 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't
	temporary
In-Reply-To: <CABm2gDppLdB5SSQrN1TW-EOBogARpgOXQR4F0ZY0Nn7oWGB5EQ@mail.gmail.com>
References: <1B7F00D3-41AE-44BF-818D-EC4EF279DC11@gmail.com>
	<CA+w+GKTfPXkVPaCC+3ZsQv=_DPMHoRwbigS40Testpyq4rZxsw@mail.gmail.com>
	<D25BD175-7099-4A6B-89BB-A35E94F555A9@gmail.com>
	<CA+w+GKTZV5sgXNU_xoBby1_X6eae=5_vhENmyKY0yxWHcBiU5g@mail.gmail.com>
	<37D282C2-EF9C-4B8B-91E8-7D613B381824@phauna.org>
	<CAAS2fgSaRqxi3X0J3F05nA-tyRRikY1whkpAOuGJJpFSAR017w@mail.gmail.com>
	<COL131-DS222F0D512C6A5B47BF62C2CD8C0@phx.gbl>
	<55B94FAD.7040205@mail.bihthai.net>
	<COL131-DS95F86B1D5B93CE1275911CD8C0@phx.gbl>
	<CALqxMTEUAtNxkYMQwA9g9xH_LiX98yYOooGjUho1T3fMY2J5jQ@mail.gmail.com>
	<CAEX2NSc6FXsDLEpRq7YOxQErpBxS7tW8Afk-T9VUyeb2qS2brQ@mail.gmail.com>
	<74767203-7F7A-4848-9923-DE1DE60A28B4@gmail.com>
	<F7601CF2-2B89-4D11-8B56-8FFF63A4063C@gmail.com>
	<25FD9AAD-99F5-4322-AF34-243F75AE82C4@gmail.com>
	<55BABE17.7050900@bitcoins.info>
	<CABm2gDppLdB5SSQrN1TW-EOBogARpgOXQR4F0ZY0Nn7oWGB5EQ@mail.gmail.com>
Message-ID: <CABr1YTfJX+fPMxC4+c-OPLM6du5NUJ6dO9zNtm5EvaGfe+65Wg@mail.gmail.com>

I generally agree with this as well. I think it is crucial we avoid
controversial hardforks. The risks greatly outweigh the benefits.

This is a good start to making it less controversial.

- Eric
On Jul 31, 2015 2:31 PM, "Jorge Tim?n" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Fri, Jul 31, 2015 at 2:15 AM, Milly Bitcoin via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
> > These are the types of things I have been discussing in relation to a
> > process:
> >
> > -A list of metrics
> > -A Risk analysis of the baseline system.  Bitcoin as it is now.
> > -Mitigation strategies for each risk.
> > -A set of goals.
> > -A Road map for each goal that lists the changes or possible avenues to
> > achieve that goal.
> >
> > Proposed changes would be measured against the same metrics and a risk
> > analysis done so it can be compared with the baseline.
> >
> > For example, the block size debate would be discussed in the context of a
> > road map related to a goal of increase scaling.  One of the metrics
> would be
> > a decentralization metric.  (A framework for a decentralization metric
> is at
> >
> http://www.hks.harvard.edu/fs/pnorris/Acrobat/stm103%20articles/Schneider_Decentralization.pdf
> ).
> > Cost would be one aspect of the decentralization metric.
>
> All this sounds very reasonable and useful.
> And if a formal organization owns this "process", that's fine as well.
> I still think hardforks need to be uncontroversial (using the vague "I
> will know it when I see it" defintion) and no individual or
> organization can be an "ultimate decider" or otherwise Bitcoin losses
> all it's p2p nature (and this seems the point where you, Milly, and I
> disagree).
> But metrics and data tend to help when it comes to "I will know it
> when I see it" and "evidences".
> So, yes, by all means, let's have an imperfect decentralization metric
> rather than not having anything to compare proposals. Competing
> decentralization metrics can appear later: we need a first one first.
> I would add that we should have sets of simulations being used to
> calculate some of those metrics, but maybe I'm just going too deep
> into details.
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/632e7277/attachment.html>

From jeanpaulkogelman at me.com  Fri Jul 31 23:05:47 2015
From: jeanpaulkogelman at me.com (Jean-Paul Kogelman)
Date: Fri, 31 Jul 2015 16:05:47 -0700
Subject: [bitcoin-dev] Why Satoshi's temporary anti-spam measure
	isn't	temporary
References: <f9e27b28-f967-45f7-bd1b-c427534ade9c@me.com>
Message-ID: <96620811-9D4E-4509-8885-42549D0B49A7@me.com>

Forgot to include the list. 


> From: Jean-Paul Kogelman <jeanpaulkogelman at me.com>
> Date: July 31, 2015 at 4:02:20 PM PDT
> To: Jorge Tim?n <jtimon at jtimon.cc>
> Cc: milly at bitcoins.info
> Subject: Re: [bitcoin-dev] Why Satoshi's temporary anti-spam measure isn't	temporary
> 
> 
> I wrote about this a earlier this month: http://www.mail-archive.com/bitcoin-dev at lists.linuxfoundation.org/msg00383.html
> 
> You basically want 3 things:
> 
> - A Minimum Specification of hardware: This is the lowest hardware configuration Bitcoin Core will run on at maximum capacity.
> - A theoretical model that takes into account all of the components in Bitcoin Core and how they affect Min Spec.
> - A benchmark tool to measure how changes affect Min Spec (and for users to see how their hardware measures up to Min Spec).
> 
> jp
> 
>> On Jul 31, 2015, at 02:31 PM, Jorge Tim?n via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
>> 
> 
>> On Fri, Jul 31, 2015 at 2:15 AM, Milly Bitcoin via bitcoin-dev
>> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>> These are the types of things I have been discussing in relation to a
>>> process:
>>> 
>>> -A list of metrics
>>> -A Risk analysis of the baseline system. Bitcoin as it is now.
>>> -Mitigation strategies for each risk.
>>> -A set of goals.
>>> -A Road map for each goal that lists the changes or possible avenues to
>>> achieve that goal.
>>> 
>>> Proposed changes would be measured against the same metrics and a risk
>>> analysis done so it can be compared with the baseline.
>>> 
>>> For example, the block size debate would be discussed in the context of a
>>> road map related to a goal of increase scaling. One of the metrics would be
>>> a decentralization metric. (A framework for a decentralization metric is at
>>> http://www.hks.harvard.edu/fs/pnorris/Acrobat/stm103%20articles/Schneider_Decentralization.pdf).
>>> Cost would be one aspect of the decentralization metric.
>> 
>> All this sounds very reasonable and useful.
>> And if a formal organization owns this "process", that's fine as well.
>> I still think hardforks need to be uncontroversial (using the vague "I
>> will know it when I see it" defintion) and no individual or
>> organization can be an "ultimate decider" or otherwise Bitcoin losses
>> all it's p2p nature (and this seems the point where you, Milly, and I
>> disagree).
>> But metrics and data tend to help when it comes to "I will know it
>> when I see it" and "evidences".
>> So, yes, by all means, let's have an imperfect decentralization metric
>> rather than not having anything to compare proposals. Competing
>> decentralization metrics can appear later: we need a first one first.
>> I would add that we should have sets of simulations being used to
>> calculate some of those metrics, but maybe I'm just going too deep
>> into details.
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150731/b2113cb4/attachment-0001.html>

From ric at spagni.net  Thu Jul 16 16:18:37 2015
From: ric at spagni.net (Riccardo Spagni)
Date: Thu, 16 Jul 2015 16:18:37 -0000
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
Message-ID: <CADhj2oSbRuSqZCEWdfaOFebnYAcYB5S7dkatyaeFtuqHdyCU_Q@mail.gmail.com>

> I appreciate the thought :)  I think where we differ is on where we
> believe the trade offs should be on perceived privacy versus censorship
> resistance and centralization.
>
>
> By having a limited number of proxies people need to go through to easily
> implement, be it the 4 you recommend, or 53, you actually have a very
> limited number of actors for an authority or hacker to go to in order to be
> able to install/force logging, or censorship.  This very centralization
> forces us back to a model where we need to trust a very small number of
> actors in order for the system to operate as designed.  This, to me,
> appears to be the opposite of the goals of the bitcoin ecosystem.  To
> ensure this point is clear, I strongly believe recommending people focus
> all lookups through 4 centralized "proxies" is a bad idea and counter to
> bitcoin's ideals.
>
>
> The fact that hackers or state actors need to corrupt only a small number
> of servers/services in order to gain global visibility into all queries, I
> believe, breaks any perceived privacy gains from using DNSCrypt.  A very
> small number of hacks or subpoenas and everyone's records are fair game in
> one place.
>

You're misstating (or not understanding) the attack surface.

State-level attackers won't compromise 50+ DNSCrypt servers, they can get
the information on lookups a lot more trivially. Censorship resistance and
protection from state-level attackers comes from the decentralised side of
OpenAlias (ie. Namecoin resolution, preferably done using a local copy of
the NMC blockchain). Since Netki supports Namecoin resolution too there is
no need to worry about protecting end users from that.

There is, however, a need to protect users from man-in-the-middle attacks
where the data is not modified en-route, but it is sniffed. Who you pay in
a financial transaction is, and should be, privileged information between
yourself and that person. By encouraging open DNS lookups you're
effectively hanging that information out for all to see.

It is true that there are only 4 DNSCrypt servers we are comfortable
recommending. It is also true that there were, at one stage, only 4
Electrum servers. There were also only 4 Bitcoin nodes. As something grows
and becomes more useful and usable the number of voluntary participants
becomes much greater, and we will provide the necessary tools to enable
these volunteers.

So in a world where tens of thousands of Bitcoiners are using an aliasing
standard (which, in and of itself, is a convenience service anyway), and
hundreds of individuals and companies are hosting DNSCrypt resolvers, is it
even a valid argument to harp on the number of "proxies"? Thus it is not
worth talking about today. It is definitely worth discussing in future if
the number of DNSCrypt resolvers doesn't increase, but that is a different
discussion for a different time.


> For the highly privacy conscious they can, today do their DNS lookups over
> a non logging VPN connection without forcing everyone else through a
> handful of centralized servers.  Or they can use DNSCrypt optionally
> themselves.  All of our tools have always been open source and folks can
> modify them for their own desired uses, or submit pull requests with their
> own ideas.
>

Everyone should be highly privacy conscious when it comes to financial
transactions, and it would be unconscionable of both you and I not to
defend end-user privacy.

We'd love to hear others thoughts on this.  While I believe that for now
> the centralization trade offs required to use DNSCrypt today (via a limited
> number of proxies) outweigh any perceived privacy benefits it provides, we
> are always open to what others in the community believe and have made
> modifications to how things work before as a result of feedback from
> industry participants.
>

It's important to remember that the "paranoid" won't use an aliasing
service, or at best will use a local Namecoin blockchain for that purpose.
This is a convenience service to provide general and broad appeal for the
non-technical, and those are the very people that need to be protected from
nosey neighbours / workmates / ISPs. Privacy is not only (or even at all)
about protecting people buying drugs on a darknet market, it is about
defending personal liberties.

I think DANE is a great idea.  We were just discussing that with Andreas
> S., and are currently looking at whether we want to add this as optional
> versus mandatory, based on how widely available DANE is for folks using
> services like Cloudflare, Akamai, etc for their DNS, which many providers
> in the space today are.
>
> Of course, the security conscious could setup DANE on the URL we use AS
> IS.  There is no need to create a special kv pair for this as is done in
> OpenAlias.  As you know, DNSSEC and HTTPS support this today out of the box.
>

Embedding the TLSA record in a KV pair just means that pinning takes one
less step.


> The CA validation, in our case, is an ADDITIONAL signature based
> validation to the DNSSEC chain, not a replacement for it.
>

Without DANE it's a weakness. It's trusting an additional CA (over and
above the domain owner), when we know that this is - and has been - an
issue in the past. Were it not an issue DANE (or certificate pinning in
general) would not have to exist.


> We looked at doing this in a single lookup as you did.  With one or two
> currencies this can be potentially more efficient.  As the number of
> supported currencies and addresses under a single name grows, however, this
> solution becomes potentially more problematic.  Please follow the use cases
> below:
>

(snipped quote for brevity)

Many currencies and colored coin addresses are supported under the same
> name, lets say 100.  When you count different currencies and colored coin
> types, it could easily be hundreds, or over a thousand.
>

Coinmarketcap lists 643 currencies and assets, of which only 131 have had
more than $500 in trade volume in the last 24 hours (and only 8 have done
over $100 000 in volume). ShapeShift only lists 44 of those. I seriously
doubt that a convenience service such as aliasing will find great use
amongst every fly-by-night scamcoin that crops up, but that is an aside.

While you may end doing "less lookups" under Open Alias, as it scales, you
> end up causing a significant amount of extra, unnecessary traffic.
>

"Scale" is a misnomer. Someone trying to collect every single active
cryptocurrency and house them all under a single sub-domain is an outlier,
not a problem to be faced at scale. I do not think we will see a large
scale movement to "collect" all the various cryptocurrency tokens, no
matter how worthless they are, and then subsequently setup aliases for them.


> In addition to the obvious impact of being orders of magnitude more
> wasteful than necessary, it also creates privacy "leakage" by returning
> someone 100 different addresses when they only asked for one.
>

I'm not sure how this is any greater leakage than 100 individual requests
for the openly accessible data, especially since it would be encrypted if
made via DNSCrypt?


> Finally, because a single packet UDP transaction for a DNS lookup can
> create possibly hundreds of packets in response, the service can
> essentially become an amplifier for DDoS attacks.  (If I spoof the source
> address of my target with a query to a lookup that issues hundreds of
> packets in response to one packet, and I can have a real impact :( )
>

Naughty naughty, you're doing that thing again where you're using a
smattering of expertise to appear knowledgeable about a subject.

So let's hypothetically say that an individual was crazy enough to have all
643 of the Coinmarketcap currencies/assets aliased on a single sub-domain.
The OpenAlias example of a Monero address (with a recipient name) is 157
bytes long, due to there being two public keys serialised in the address,
plus the ~12 bytes of overhead per RR (the DNS wire format uses label
compression, so the FQDN wouldn't be repeated for each returned record).
Let's call it 170 bytes. That makes the returned data just over 100kb.

Now let's first address a couple of things, assuming that someone would be
nuts enough to do this:

1. This is way larger than the UDP packet maximum, and this would never
come back as a "regular" ol' DNS request (512 bytes max). This may seem
bad, until you consider that DNSSEC responses are almost assured to exceed
512 bytes (eg. an NXDOMAIN with NSEC3). The size of the response is big,
but that's hardly something to write home about.

2. If the DNS server supports RFC2671 (EDNS) then it would try and send it
via UDP, and as long as the client says it can receive such a huge response
over UDP it'll come over the wire.

3. However, because RFC2671 can result in a DNS amplification attack, it's
been obsoleted by RFC6891 (EDNS0), which is pretty much ubiquitous for all
resolvers that support DNSSEC (because of the very large DNSSEC responses,
and the fact that DNSSEC resolvers want to avoid participation in an
amplification attack). EDNS0 mitigates amplification attacks.

4. In the event that an EDNS0 response fails (eg. the client says it can't
accept anything over, say, 4kb, which is quite common) then there's an
automatic and silent switch to DNS-over-TCP (RFC5966). DNS-over-TCP uses
TFO (TCP Fast Open) to do an extremely fast handshake and passing a cookie
to the client in the SYN-ACK, which can then be used for subsequent
requests, but data is still carried in the SYN. TFO mitigates amplification
attacks.

You can't both be overly concerned about amplification attacks *and* use
DNSSEC, which necessitates large records. And, at any rate, the issue with
amplification attacks *isn't* the size of the records (there are tons of
records just under 4kb, like an ANY request against isc.org, that are far
better suited to amplification attacks), it is the number of recursive open
resolvers. There is improvement in this space, though, and many open
recursive resolvers have been fixed in recent years.

It is important to note, that ICANN has "required" for some years that
> registrars and registries support DNSSEC on the domains they register.  I
> personally believe we shouldn't delay use of DNSSEC until their registries
> had come up to current required Internet standards.  (Here are ICANN's
> registrar requirements showing the DNSSEC requirement, btw:
> https://www.icann.org/resources/pages/approved-with-specs-2013-09-17-en#operation
> )
>

Doesn't really matter what they require as long as there are zones that
remain unsigned. Plus it's not like new .za / .sg / .to registrations
magically get DNSSEC, they're also out of luck.


> That said, what do others in the industry think?  We are basing our
> current standard on our believed best practices, and defaulted to "first,
> lose no money", given the irreversibility of bitcoin.
>

Oh, ok. "First, lose no money, but it's ok if your ISP / neighbour /
colleague reports you to the cops because you sent a donation somewhere you
shouldn't."


> I think "DNSSEC is hard" is a bit of a boogey man that's not really true.
> We are working on developing registrar by registrar instructions of how to
> do this, and we have typically found that if you are setting up DNS by
> yourself, adding DNSSEC doesn't take a lot of additional time, maybe an
> hour or so depending on your registrar.
>

Adding the DS record to a domain is trivial, but to use DNSSEC with Gandi
or GoDaddy (if you don't have their PremiumDNS product) you have to host
your own DNS server. Sorry, but that is a non-trivial task. Even worse: you
need to secure your private KSK and not keep it on the server, and if
Bitcoiners are anything to go by this won't happen.

Oh, and incidentally, ENOM/Namecheap doesn't have DNSSEC support yet.

You're literally layering complexity on top of a convenience service, and
to what end?

This known concern, however, is why when we launched our product (based on
> our standard record formats) that we wanted to launch it with a variety of
> options for people.
>

That's completely, 100% centralised. You're creating decentralisation
theatre by providing "options" that no ordinary person will use.

That's some interesting data, and runs counter to the research of the IETF
> DNS working group.  If you are willing to share your data, I can put you in
> touch with the appropriate folks there to share your research.  I'd also
> love to see it!
>

I doubt that very much. See:
http://stats.labs.apnic.net/dnssec/XA?c=XA&x=1&g=1&r=1&w=30

As can be seen, only ~14% of all DNS queries request DNSSEC validation.
That's very far from ubiquitous, and completely matches what Thomas and I
found in Berlin. Unsurprisingly, this stat is particularly bad given that
it also shows that ~15% of all queries are being handled by Google's Public
DNS, without which the stat would be much lower.

I'd argue that we aren't locking "huge portions" of the Internet.  You are
> correct that about 15% of TLD's are not yet signed, even though they were
> required to be by ICANN.
>

Fine, so we're just cutting Africa out, then?
http://www.internetsociety.org/deploy360/wp-content/uploads/2015/06/cctlddnssec-2015-06-19.pdf

Even beyond that, ICANN's page listing DNSSEC-capable registrars (last
updated December 2014) only lists only a handful:
https://www.icann.org/resources/pages/deployment-2012-02-25-en

As I said above, I believe the requirement to not lose money and the fact
> that other options are available for those running on TLD's that are out of
> compliance, is worth the trade off that some existing names won't work
> until their TLD's come into compliance with current Internet standards.
>

A soft fail doesn't magically let the money go. It warns users of the risk
and asks them to verify the address by site. This could even be built out
so that higher value transactions (say, anything over $1000) hard fails in
the absence of DNSSEC, and anything particularly high value (say, anything
over $50 000) refuses to use an alias at all and requires an actual
cryptocurrency address.

I'm a little confused by these closing statements.  Our system has, from
> the beginning been open in terms of the fact that anyone could both serve
> names or do lookups without ever touching our servers, talking to us, or us
> even knowing that they did it or that they even exist.  Our system has
> NEVER been one where folks were required to use us for any portion of the
> service, and from our first beta product launch our open source tools did
> all lookups against DNS records and the blockchain, never any proprietary
> servers or interfaces on our side.
>

Now you're just trolling.

https://github.com/bitpay/copay/pull/2431/files

Which has this lovely line in it:
https://github.com/wdawg33/copay/blob/be6c3e80ab7601d245b186f7802d7050992eb1f0/config.js#L98

So you provide an open standard that uses DNS...but then you wanted to
force CoPay users to use your centralised API?

I'd love to know where you got information that we were in some way a
> closed and centralized system so that we can have an opportunity to clarify
> that misconception.
>

In December 2014 your website had no "developer" section (curl -s
https://web.archive.org/web/20141221141023/https://netki.com/ | grep
"Developers")

The first time that section got scraped was the end of April:
https://web.archive.org/web/20150428231016/https://www.netki.com/partials/developers.html

Even in its current form your website makes no mention of alternatives or
options for those wishing to secure an alias. End users are undoubtedly
left with the distinct impression that they can only get one by paying you.

Riccardo

PS. your mail won't go to the list if you CC the list address, you may want
to resend it

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150716/259e73fd/attachment-0001.html>

From justin at netki.com  Fri Jul 17 00:58:10 2015
From: justin at netki.com (Justin Newton)
Date: Fri, 17 Jul 2015 00:58:10 -0000
Subject: [bitcoin-dev] Proposal: extend bip70 with OpenAlias
In-Reply-To: <CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
References: <CADhj2oT_rgaf6LFgwMawwJKaA8384v5jQ=e-7T8GNY4gGZ2udQ@mail.gmail.com>
	<CABqynxKf=xBOG_38LYqtps2jXWeOR3g4PVFm6AKbJKLndG3Tig@mail.gmail.com>
Message-ID: <CABqynx+pcmu0UTtcQ=R_C6TPmmrOn5h-FP180ODoanMaTYD--A@mail.gmail.com>

[continued]



> 3> We use a 2 tier lookup format.  The first lookup returns a list of
>> currencies or payment types supported by the Wallet Name.  The second
>> lookup goes to a record specific to that currency type to get the
>> address to go to.  We believe this to be a more scalable solution in a
>> world where someone can have both multiple digital currency types, but
>> then also multiple types of colored coins, and wants a simple way to
>> share a single name for all of those different addresses.  This allows
>> the wallet to do the work behind the scene of choosing the currency it
>> wants to send, and automatically getting back the right address to
>> send to, without the user having to do anything different.
>>
>
> We do the same thing, except in a single call. Here's an example of a
> record that has both XMR and BTC addresses:
> https://api.openalias.org/donate.getmonero.org?view=full (here are the
> DNS records for that:
> http://mxtoolbox.com/SuperTool.aspx?action=txt%3adonate.getmonero.org&run=toolpage
> )
>


We looked at doing this in a single lookup as you did.  With one or two
currencies this can be potentially more efficient.  As the number of
supported currencies and addresses under a single name grows, however, this
solution becomes potentially more problematic.  Please follow the use cases
below:

Use case 1:  Wallet Name = "bob.foo.bar" or OpenAlias = "bob.foo.bar"

The only currency supported is bitcoin, and there are no colored coin
formats supported.

OpenAlias case:

1 packet lookup to "bob.foo.bar"
1 packet response with bitcoin address

= 2 packets


Wallet Name case:

1 packet lookup to "_wallet.bob.foo.bar"
1 packet response with supported address types
1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 4 packets

Wallet Name Case 1a:

The wallet doing the lookup knows it wants bitcoin, so it skips the
supported addresses lookup

1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 2 packets

In this use case we might create more traffic, but it could also be reduced
by doing smart lookups.


Use case 2:  Wallet Name = "bob.foo.bar" or OpenAlias = "bob.foo.bar"

Many currencies and colored coin addresses are supported under the same
name, lets say 100.  When you count different currencies and colored coin
types, it could easily be hundreds, or over a thousand.


OpenAlias case:

1 packet lookup to "bob.foo.bar"
100 packet responses with various addresses

= 101 packets


Wallet Name case:

1 packet lookup to "_wallet.bob.foo.bar"
1 packet response with supported address types
1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 4 packets

Wallet Name Case 2a:

The wallet doing the lookup knows it wants bitcoin, so it skips the
supported addresses lookup

1 packet lookup to "_btc._wallet.bob.foo.bar"
1 packet response with bitcoin address

= 2 packets


While you may end doing "less lookups" under Open Alias, as it scales, you
end up causing a significant amount of extra, unnecessary traffic.

In addition to the obvious impact of being orders of magnitude more
wasteful than necessary, it also creates privacy "leakage" by returning
someone 100 different addresses when they only asked for one.

Finally, because a single packet UDP transaction for a DNS lookup can
create possibly hundreds of packets in response, the service can
essentially become an amplifier for DDoS attacks.  (If I spoof the source
address of my target with a query to a lookup that issues hundreds of
packets in response to one packet, and I can have a real impact :( )




>
>
>> 4> We mandate DNSSEC while you make it optional.  We did this because
>> we believe giving the user the option of NOT using DNSSEC is like
>> letting them order a car with no brakes.  We weren't sure how we would
>> explain to them why their money was gone when they really didn't
>> understand the risks they were taking up front. We had a lot of
>> discussion about it before coming to the decision we did, and I can
>> see why you went the other way, although I do believe we made the
>> right choice.
>>
>
> With OpenAlias a DNSSEC fail is a soft fail, and the user has to confirm
> the address. The reasons are threefold:
>
> 1. At the moment only 83.5% of the TLDs are signed [2]. The unsigned ones
> include some biggies like .sg, .za, and .to
>

I think this is a good point, and one we weighed.  When we were making our
original decisions.  Given the importance of ensuring that the lookups
return the correct value, and the known vulnerabilities in DNS without
DNSSEC, coupled with the fact that ICANN has mandated all zones and
registries move to DNSSEC, our belief was and is that it was worth the
trade off that there were cases where existing domains would not work.


It is important to note, that ICANN has "required" for some years that
registrars and registries support DNSSEC on the domains they register.  I
personally believe we shouldn't delay use of DNSSEC until their registries
had come up to current required Internet standards.  (Here are ICANN's
registrar requirements showing the DNSSEC requirement, btw:
https://www.icann.org/resources/pages/approved-with-specs-2013-09-17-en#operation
)

That said, what do others in the industry think?  We are basing our current
standard on our believed best practices, and defaulted to "first, lose no
money", given the irreversibility of bitcoin.



> 2. Even if the zone *is* signed, DNSSEC deployment is hard. Unmanaged
> DNSSEC deployment is out of scope for probably 99.9% of users, even the
> usually-technically-ok Bitcoin crowd. Managed DNSSEC is available, but is
> quite pricey. UltraDNS, Dyn, and GoDaddy (ikr?) are the three big
> providers, and of those three only GoDaddy has a consumer-affordable
> product.
>


I think "DNSSEC is hard" is a bit of a boogey man that's not really true.
We are working on developing registrar by registrar instructions of how to
do this, and we have typically found that if you are setting up DNS by
yourself, adding DNSSEC doesn't take a lot of additional time, maybe an
hour or so depending on your registrar.

This known concern, however, is why when we launched our product (based on
our standard record formats) that we wanted to launch it with a variety of
options for people.

In addition to these options there are also other hosting providers, and
certain registrars that will allow you to setup DNSSEC on their DNS
platforms.


1> One could choose the "0 click" installation process of just getting a
free Wallet Name underneath their provider's name space.  This option has
been free to end users in all cases so far, and I expect it always will be
in the future (although that is up to the partner, so some may choose to
charge).

2> If they wanted some provider independence, but someone to manage things
for them, they can register a name through us and manage everything via our
web interface.  This can cost them as little as $1.95/yr through us.

3> Finally, for the "do it yourselfer" who wants full control themselves,
they can simply follow the formats on our developer page and do the whole
thing themselves.  If they do this by registering their own ".bit" this
will cost them less than $0.25.  If they have an existing domain name, even
less.






>
> 3. ThomasV and I have done a stack of testing behind residential and
> commercial routers where DNSSEC simply fails (eg. the router runs a really
> outdated DNS server that doesn't provide RRSIGs in its response, or the ISP
> doesn't care about DNSSEC). Unsurprisingly, this can be fixed by...you
> guessed it...doing the lookup via DNSCrypt.
>

That's some interesting data, and runs counter to the research of the IETF
DNS working group.  If you are willing to share your data, I can put you in
touch with the appropriate folks there to share your research.  I'd also
love to see it!



>
> Until we are closer to the bulk of all TLDs being signed, and DNSSEC
> becomes at least a little more ubiquitous, we can't lock out huge portions
> of the Internet, because then we're not really providing a useful and
> usable solution. All we can is make it more difficult to pay an unverified
> domain.
>
> Of course, if your aim is to force people to use you as a domain
> registrar, then it makes total sense why you'd lock people out;)
>

I'd argue that we aren't locking "huge portions" of the Internet.  You are
correct that about 15% of TLD's are not yet signed, even though they were
required to be by ICANN.

As I said above, I believe the requirement to not lose money and the fact
that other options are available for those running on TLD's that are out of
compliance, is worth the trade off that some existing names won't work
until their TLD's come into compliance with current Internet standards.

And, as we covered above, we don't force anyone to use our registrar, nor
any of our services in order for Wallet Names to work for them.  We never
have.  It's just not who we are.





>
> Additionally, we just released another open source API server to help
>> with the "other half" of the lookup problem.  Its in its infancy, and
>> we are certainly taking feedback on it at this time.  It is called
>> Addressimo <https://github.com/netkicorp/addressimo> and will serve
>> unique HD Wallet addresses or Payment Requests for every lookup, thus
>> allowing a user to have a private, secure way to share a Wallet Name
>> that can be used to send them any digital currency.
>>
>
> Oh snap...https://github.com/openalias/openalias-api
>

These are actually vastly different pieces of software, at least from the
description, and a first read of the code.  My understanding is the
software you linked to here basically takes the DNS work out of lookups for
people, as we released: https://github.com/netkicorp/wns-api-server  Its
our Wallet Name Lookup server.

Addressimo, as I described above, provides a different purpose.  Its a way
for service providers, mobile wallet providers or end users to have an
online server that can serve unique wallet addresses ala HD Wallets (BIP32)
or signed Payment Requests (BIP0070).  This allows for an easy way to
increase security and privacy by serving a unique address for every
request, and/or sign the address (and other optional data) with an X509
private key to prove ownership of the address in a way independent of and
supplemental to the DNSSEC chain (also can be DANE for yet another layer of
security).  It also supports offline signing of the Payment Requests so the
server doesn't have to have access to a private key, or need to be trusted.





>
>
> In any case, I'd much rather we had one effort going forward than
>> multiples, so let's talk!
>>
>
> I agree, and you guys are in an ideal position to change to supporting the
> OpenAlias standard (and enhancing it) without skipping a beat. We would
> definitely appreciate and take your input and efforts, and that would make
> OpenAlias v2 (oa2:) a standard built out in conjunction with Netki.
>
> Not only do you get Electrum support without lifting a finger, but it will
> go a long way to repairing your relationship with the open-source community
> at large, several proponents of which have taken great umbrage at what you
> were previously pushing as a closed-source, centralised system.
>
>
I'm a little confused by these closing statements.  Our system has, from
the beginning been open in terms of the fact that anyone could both serve
names or do lookups without ever touching our servers, talking to us, or us
even knowing that they did it or that they even exist.  Our system has
NEVER been one where folks were required to use us for any portion of the
service, and from our first beta product launch our open source tools did
all lookups against DNS records and the blockchain, never any proprietary
servers or interfaces on our side.

In terms of the format itself being open, we have already made several
extensions and modifications to it as a result of conversations with
industry participants in order to ensure that what we are building meets
the needs of the community at large.  We will gladly continue to do so, it
is how we ensure we are building something everyone needs!

I'd love to know where you got information that we were in some way a
closed and centralized system so that we can have an opportunity to clarify
that misconception.


In terms of finding a common standard, as I said, I am thrilled to have the
conversations, but there are some places, highlighted above, that would
cause me to hesitate to "just implement" the Open Alias standard.  I can
also see places where bringing the formats together to one standard could
have strong benefits, for example:

I think formatting the record as a key value pair with versioning has
merit, and would love to move it in to what we are doing (and likely will).

On the other side, I think the two level lookup provides a lot of value at
scale over trying to send back a bunch of text records when only a small
portion of the data is used.

I'd love to hear thoughts from others in the community on mandating DNSSEC
and thoughts on DNSCrypt.  I have a strong opinion on both of those but
would love to engage in thoughtful dialogue around what path best suits the
need of the community.


Looking forward to the discussion!

On Thu, Jul 16, 2015 at 5:55 PM, Justin Newton <justin at netki.com> wrote:

> I am breaking this into a couple of pieces as my first response has been
> in a moderator queue for some time because it is too long.
>
>
> TL;DR version - Wallet Name Service has always been a decentralized and
> distributed service that it no way requires you to ever touch the Netki
> infrastructure.  We want to work with the community, as we have been from
> the beginning, to come up with the best standard possible.
>
> Longer answers inline below.
>
>
>
> On Tue, Jul 14, 2015 at 12:07 PM, Riccardo Spagni <ric at spagni.net> wrote:
>
>>
>>
>>> In terms of comparisons to OpenAlias, I think there are a lot of
>>> similarities, but a few differences.  First the similarities:
>>>
>>>
>>> 1> We both use DNSSEC.
>>>
>>> 2> We both have the option of storing the address directly in the DNS
>>> record.
>>>
>>>
>>> Differences:
>>>
>>> 1> We do not use DNSCrypt.  I understand why you chose to, but we were
>>> concerned about broad interoperability and easy broad distribution of
>>> hosting, so decided not to use it.  We have other ways of achieving
>>> privacy, using HD Wallets and Payment Requests.
>>>
>>
>> And this is the part where you guys look really, really incompetent (and
>> I don't mean that in a terribly demeaning way, it's just that you're in a
>> space where you want to be a domain expert, not make a series of
>> embarrassing and public faux pas).
>>
>>
>> I appreciate the thought :)  I think where we differ is on where we
> believe the trade offs should be on perceived privacy versus censorship
> resistance and centralization.
>
>
> By having a limited number of proxies people need to go through to easily
> implement, be it the 4 you recommend, or 53, you actually have a very
> limited number of actors for an authority or hacker to go to in order to be
> able to install/force logging, or censorship.  This very centralization
> forces us back to a model where we need to trust a very small number of
> actors in order for the system to operate as designed.  This, to me,
> appears to be the opposite of the goals of the bitcoin ecosystem.  To
> ensure this point is clear, I strongly believe recommending people focus
> all lookups through 4 centralized "proxies" is a bad idea and counter to
> bitcoin's ideals.
>
>
> The fact that hackers or state actors need to corrupt only a small number
> of servers/services in order to gain global visibility into all queries, I
> believe, breaks any perceived privacy gains from using DNSCrypt.  A very
> small number of hacks or subpoenas and everyone's records are fair game in
> one place.
>
>
> For the highly privacy conscious they can, today do their DNS lookups over
> a non logging VPN connection without forcing everyone else through a
> handful of centralized servers.  Or they can use DNSCrypt optionally
> themselves.  All of our tools have always been open source and folks can
> modify them for their own desired uses, or submit pull requests with their
> own ideas.
>
> We'd love to hear others thoughts on this.  While I believe that for now
> the centralization trade offs required to use DNSCrypt today (via a limited
> number of proxies) outweigh any perceived privacy benefits it provides, we
> are always open to what others in the community believe and have made
> modifications to how things work before as a result of feedback from
> industry participants.
>
>
>
>
>
>
>>
>>
>>> 2> We have the option of storing a URL rather than just a wallet
>>> address in the TXT record.  This allows a second level lookup against
>>> the URL to get back a unique HD Wallet address or Payment Request each
>>> time, further protecting user privacy and security.  Using Wallet
>>> Names with Payment Requests allows for the user experience of typing
>>> in an easy to remember name and getting back the "green lock" and who
>>> the validated recipient is.  This also provides an auto audit of the
>>> end to end DNS SEC process, in the case the path were somehow
>>> compromised, the signature on the payment request can provide an
>>> additional check.
>>>
>>
>> OpenAlias supports this as well, except it does it better by allowing the
>> KV pairs to also contain a TLSA record before the request, which
>> effectively makes it a DANE-secured interaction. Your interaction requires
>> the trusting of multiple CAs, which is an inherent weakness.
>>
>
> I think DANE is a great idea.  We were just discussing that with Andreas
> S., and are currently looking at whether we want to add this as optional
> versus mandatory, based on how widely available DANE is for folks using
> services like Cloudflare, Akamai, etc for their DNS, which many providers
> in the space today are.
>
> Of course, the security conscious could setup DANE on the URL we use AS
> IS.  There is no need to create a special kv pair for this as is done in
> OpenAlias.  As you know, DNSSEC and HTTPS support this today out of the box.
>
> The CA validation, in our case, is an ADDITIONAL signature based
> validation to the DNSSEC chain, not a replacement for it.
>
>
>  [CONTINUED]
>
>


-- 

Justin W. Newton
Founder/CEO
NetKi, Inc.

justin at netki.com
+1.818.261.4248
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/56745b7b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 10972 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150717/56745b7b/attachment.tiff>

