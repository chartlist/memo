From webmaster at recessionstories.net  Sat Mar  2 19:39:54 2013
From: webmaster at recessionstories.net (webmaster)
Date: Sat, 02 Mar 2013 11:39:54 -0800
Subject: [Bitcoin-development] Secure download
Message-ID: <5132558A.8040304@recessionstories.net>

Hi,

I am a newbie trying to get my first wallet up.  But I have a 
security/crypto background and so I know enough not to trust a http 
download.  But I don't see any other option to download bitcoin software 
from sourceforge.

I can check the SHA256 hashes, but how do I verify those?

I am familiar with gpg.  Where can I find signatures and the signing 
keys?  Hopefully, the keys are on multiple independent servers.

Or is read-only ssh/sftp/scp access possible?

Thanks in advance,

Chris



From gavinandresen at gmail.com  Sat Mar  2 21:09:38 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sat, 2 Mar 2013 16:09:38 -0500
Subject: [Bitcoin-development] Secure download
In-Reply-To: <5132558A.8040304@recessionstories.net>
References: <5132558A.8040304@recessionstories.net>
Message-ID: <CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>

My gpg key is on the bitcoin.org homepage: http://bitcoin.org/gavinandresen.asc
.... which you can access securely (and see the history of) at:
  https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc

If you're really super-duper paranoid, you could also fetch it from
the MIT pgp keyserver or look for it in the bitcointalk forums
archives.

Import it into pgp/gpg, then you can verify that the download
checksums you have are correct with:

gpg --verify SHA256SUMS.asc

All that assuming you're running Linux.  If you're Windows or OSX, the
latest downloads are code-signed and checked for integrity
automatically by Windows/OSX.

-- 
--
Gavin Andresen
-------------- next part --------------
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.9 (Darwin)

mQGiBEy8srURBADlAamWM3TkgAKyVBVftUsg5aZ3zOA5UAlg+yI/6bzfTkYLtspA
LQ6typamac9re+lqnWdDMa4qVwSmaOMxLOlGhCWWfmA38QprU+ZfuesnxWrVAMG8
TDHLT2vBCa+9iC50soo/imsDqqe6ujm7a+Pd1KSNvFR5KXgEgeEHSiyEqwCg3iAa
DH3lNWzNOgJgi8PUiszqbcsD/2mfNBYJsazYabXcbNdh8VheNnyK2KLUE8Lg1WzU
ld/Sd1gu67oPSFfTiFZ5OBjdHI/XmlFAT4r4eNy1IIf0nELJWWQ6hlzm0a0/DO4b
BUoapjUjAYWDyeeeALDHK7EQboqtwWBlRONyY/+yB9usgbvAK2khRlzBhQonGJEs
FpdQA/9bQzVgpEE1q/ZSnvLp0nOFA3E51SS9uvGGnAdQMjwDp7iGBzh7gRz4ko1k
LG3Sa5fNe21VvlKFcMTaZN9Pd5fDd7gEoDkjUDlf9lRX+YT5zf+SSoeCIGuNMVzs
f8Z2H414dYDOJPBkhYWcqFhGhz11QtWgug5n8GaewC2YOiPU8LQoR2F2aW4gQW5k
cmVzZW4gPGdhdmluYW5kcmVzZW5AZ21haWwuY29tPohmBBMRAgAmBQJMvLK1AhsD
BQku/geABgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQdYgkL74406h8rwCgyMwS
bwfJ+t3B2IRbhnDIsLo4UtAAnRqMmznLBNLe97fbWYjkcgiAkr2UiEYEEBECAAYF
Ak27fCgACgkQl4dAZyhxEe45KACfTqAoiv2rN9ldH/+raMK00+YH8dMAnjVTISQC
sKdTAx+mSRFiwwihwoddiEYEEBECAAYFAk5So7UACgkQxahj/GpMqhTOOwCgr5LT
x36zFHXpooPaoALP4Sk6j94AmgIJXMR8LBmpkomNWqEl5k3hWf3WiEYEEhECAAYF
Ak6JJUoACgkQ5/k4vslVlLLjUQCfT2t7n7wIE0V/H8ZITuyIb4/YMxkAni4uJXXq
9OMoOOVbdUpEgx0FOA6qiQEcBBABAgAGBQJOGL1xAAoJEHNq4Lhm3vtS8MEIAI0w
dw9FpjQWQ1k98+Z8gLs3HFB/b1sVH7wgeLqpY+5k8t//wCZBusQOUnzADqZsCdap
qx1xdlECfcX8LL4SmM/rwfxBye0wGTLk7ebZbNmA1uE+jGfXm0g7UZbL1S49+N1E
exh06eW4h49mv9XGaaoMt1+JzMyPcnF9/cGnKVN9+ltczzWwYaGyRe8dDdGzJ+CQ
NIqLpCNqBMkcY5ROdVJgfg2XrupqCrrf7IMcfzqtINPTwYdOQrUEv3H1CpOKTFe4
1kTfoioTuqMUQ1cLsJoEzV8tBSi+eTQ8q86s73JCCS4S7mzaV9woh8R0Pkimbpe4
SpoOD5Bad1Y7np9NUv2JARwEEAECAAYFAk7qbCwACgkQdIELASNGyabnkAgAnGec
QXTwy7HU4fo1nu61grtNk1MUSSYCk3Aq/Zg4jRTKs3TMw8HMu8x8CLBXMNv9ZxFg
zkL/SUDh9WxLONA62M+iTxm+SgOsXyVlgNM5+Ez2WZLUtaQfJpaR9R0IVLpiBrW6
cLb6KOcOInvh8hhbYNJk5NFFlmbHHkNd4C28QYtPuHRK3nPzIQ8SNtiLEqzrvT+0
C256bFJOvFlIy/TMj0YpBzNq2pf/PqGrZGxP84ZSEWKNU/foyC27M9Bx8coWX3Yd
OIM5KRHpH3yqYcklxvL/+vXCLyzWDUHcnp3Pqg/nWHkhQNhJnLdNcpELjMP/axy6
WNxrWs1QddLYhi1nb4kBIAQQAQgACgUCTq9S4QMFAXgACgkQqdCZPgQUM2LT7Af/
ZxRy+/w6Iqac/VlyGxIV8wyv03dAHsKvI4LZoCuOFtopeky4tHjp3zPaI7o6goVE
bK1l1Z9uKc7T57dbnOEwlyF+bImkfBMgecCjiA51ru2sGluzqJyQPF2vG/pMH/m8
pcoATYhDLyM51EQ7P/3d1q2GCi1PCHZschc2sfOoz6bS2Xmx0IahKO1m5Im+rX3M
2RmJ0cAgaqhwtalXiHEd7sYfbNlu3AL9g2sRsXQOgV8fgrDS9UlBHrOtgEnzl7Op
nRkbq90F99fHm8aYryUwUg1MGXHFHV1CjKmXHBMJXLi9uul4xj/UPy0i/WIFCvtP
goi7YV/dVT57JSsA4UD3dIkCHAQQAQIABgUCTeFcygAKCRAa4dNQQ+COVDJCEADI
IcTkaEqQXKNIvLgIdjloMZzzJLCk6wZac69W2imflNwdkFjikulbzGbZ28w67Fms
niksYnQPdI3fKL4u+I4jORr4bEW/JY/ZfoZ06JsmJCGnkfUtkOzGLXlBtx1KDcQ3
GVex8gNicS2sP8Kn49JsrrjNL9RC0un41ufjoMJ16quO+DurpELRyWzlqPUyepKw
mcmDPypa2VI/Yl5fO36AG0U9ICZl1dQlWR+4qvHH2ivlSbdXw5e+jhRsfZEYDM9F
MYXbEI9OWiUNhcNzSpJ51Y0bSlraxbhDo/ctHl/9O5T5L1tZO7fGYHgzt4OSxpjH
6LBpocyD77zKvcHZsOLgvVKiJ4T8sTkMEv0vnAqh9OBgVPRefcjyIx8nIyWL66M9
hi/FiK0jwkNgpWef05KSfTHeXKNHl0+Fl8UtE6/VZ+BdeI7Zc37oAmbxX8Rl/1Ou
/ko5cJVCrIjVwwB8M+NvxJsPLZ/FSJVPZGy2+epwcl0PZANcI7/oCwoS9VCJhTiO
ZAUnnP3rKkmfNcu+ODX4HM+bSCKWQvZPivAn4LrzNyZnLjHeeZrOEbPt6WkvIXmQ
ORUaYHEV/eFYJWc54S7mKS+xXOVEOmRyCK/szfB0yec37yeF8Ddn0llk8TJ1gxrw
OSizxu5ugbKmJuwnbX/O9QGqByA91tC57fBDocEkYokCHAQQAQIABgUCTevzkQAK
CRCcxbkull1pqQ1KD/0VmN/S6yHnHEZZeFJOnNIDOGS1p0UsB4OOLMuA1TLjuWuO
xNXKsTlyTBQyjFHxTmasC9IpUgt501HhLiXEblAZi/SL7U4hbJyP4eeDFCBJEG+P
jEK2KWPWVBUubmLqdAQ093d2hgik+gzBMMEtGdXSyivIV/vgFeEXemDI7zZOBrcr
tq1fDIOiliCKAYzWIZltCt/Mb5u9BY+k7Ny45Nt9olYeDDnPzerNZbqAZor4ndZM
Z3feux2IzNcW8rk1plJrP2vVeWgVt9kKCmQyY8ctcaA4B8G7T4wZC2zaryFeygVq
wKswdUqvvnsSRQqimCnCkBHHzzcJuvDEcOUFZL09pwIaIH9RZKPomLJvsYhouONr
pKyUYiaCtyV3t0jQTaQi8ASqkowY02XGPxbDw0hHsJHWsPjemNzi7HZoItqn9D9G
8L3dbpoeWRUjk3BjgZczHA+U/esET6jZO6AZYi6cbTPLSAe5ZJFuNyQYt6MWBxtK
QJaxtpOYxFayy8joY2ZSeN/1YYKF52GB59J0rjZ7vvgQd3JbmpJLpQTabJvhIrR8
WeaoWiIDYW1HUXFKEAqEPxnMMc8N3RMHnhaCz9FuZq1o/VR+3SwSdB17Jidl9/KD
jtgRiWZQHrcX18dY8LbQwf8AGyLZWrQtNhcvkUzT1/UI+YD/R3S3wo00I2oidrkC
DQRMvLK1EAgAy3S2DxBcM/QxDB6ECA/1EhukAT/C11VgsvvOGlrEf0jD9pOwZqrY
gRDgGb6vY03+P+lqGJFPvrw1IqtkHn5gp1EnzYg+03FQEDput9SoO05AkFN02WOa
8yfAwKIdg7zLmIVla9IK75SXBesdANv2KKX0dQTu0javOy6Bv2anWxYIozTXjwVx
HwxhtE9HYF5GQCrH+r/64EGFo0oDsdY5/3B+6KaLpuMchi1QxPrFN2igVMGljldY
S1B1lcIAuxcF7Pp8Vj1YrUeEYummBpRU66pfQ260IqWsmxU0bG3ZQq0hKcM+bCiv
xRN2kUqOfvl+n4+fdLjhDx7bvUQ7QXAnjwADBQf/f4Qs5fDlWREdn2sjk8AmrmG7
f9tQ/kb0Ceu2xTDIj8RIFnMrnmZqRdmeSl3Otc/JjGvN9cFDXZJHK9gUq9hRCAK5
aaMp8GBz3iss8tYYYV8Xcu7jjm4nIDzJzsfeGUbr3P8Q/CzAy20NraQGZ/kwl78B
O37yMTgp6+iSlJndhqUClZxUm30vbaN6SJp2XvDi8KBaAV0NwgVYiaOb2C1Bxx/j
oCLNvD1fvH3EFSU1EKZAzozYN3zxXfP2Bs2hOefjE6mnK+VaEkemlMHjKUQhRzW+
TxL/x7GOpuEOcqVyQTMFmWZQ7YjyZ502lj8AmSxaI98xBNlYFRkrqMVDA4rD0YhP
BBgRAgAPBQJMvLK1AhsMBQku/geAAAoJEHWIJC++ONOoMQkAn2t1BRd9TteFCpp8
riRVE4opPmAbAKC4guQeg4TduXyUSloXb4odoUFq15kCDQRO6k81ARAA0CgPXUA9
mag6L2mI8vprK5OA4UT4bsiX4YyXaqlYnpTMBSBlWgiBLd7LykH9Gk9h90fl/nbH
EN0Ez+zCQe1r+ZEHg3bK1tOWN+sqJWBh8hX/WLPsZV5307wRoR3mJCD5btG30OPK
y8ahkPXszNJPwaGLLtSrSzv/weo6KZtLaGn4rfMPn2ZRFheMwEOGGJ+D3YxcRNga
5AI6W6jOn8ivlmDTBfpBhIvyleEa46OAzX+qLlT7GHRvU16TEcHl1oLoCw/s2z5n
bCDWqKEp7pOtLhHTYK+E3KZE84yZX1FDZ0eTF2EZBG+32fvKvSDfxTgAVkddHNRO
olwl4GaclOd5XXqNC6jmJa29tcpb4mAn2gE/OxqRcwWgAFJUsbG9HH3l3YPuneRP
Y5I9b3jBCD2ylkp+YJuAZ56q+Kc29PTIG33hBHgZfeNGMBXe9iKCf38CWmp2g4n7
Nt8DHrLZw7Xh3wn05zKPTUo7cB1Piraul1q3KdvLoHKlwaixH9RnTzwbKoicYq0y
QBj/FzFcyehjvMYpnVOGto6Q8ZrpuZQgE7vVbNNCNLaaw/lQbctNNG0lIu/tbogm
o2Nee+5YT+iXvPM7pIvVOmCSQGAULXQL0Ck7LMoKE2DNACeGiR/kR/iexA48raje
liW64XConsLhVJKm+9by9t2j48JTUaiASFkAEQEAAbQ7R2F2aW4gQW5kcmVzZW4g
KENPREUgU0lHTklORyBLRVkpIDxnYXZpbmFuZHJlc2VuQGdtYWlsLmNvbT6JAjgE
EwECACIFAk7qTzUCGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJECnZ7msf
xzDBg0kP/2rbD+Vv29uKl4CYDGt/ChI1HlffIgCCv2EnFEnezM9ajBWdOxphWpaa
2CcrMtbA4YiwLPmAOQXE3Q+0b2uVMlGbpS8fqP1lxAGaTHhuxiI4DjkM10KgvKSG
q8Wxyv1sl7l07IfpeUHYHcaOGCZ8Y4ylDzdxvkmUY0QXPjzJnnvmfJmrjgKl6hg/
NmTEdg2Mx3pxLiduEhtvUfIv3rWoc3VtYVXwD07FPJkofoRCJtWHrVIh91uD3efW
eyxNqMzbUSFe5AeN9195cBg52KEOzaLMKGJo8k6opwlxS1zVo8l9R3x9uowh+Exn
9rCXf65YmhupdZvXegibpAkuiwiaBX2ojNXsEFDuqsIWWpyqUgb8uEMRfSdyf+lJ
XXVhvn9GbQot08v/CAcaHlAv2Zc7Dimu3JDYn0N0QyeOOs9Z5iKvTcbC05m/j7+y
V57lT/AzZjZIh/TumNRujFVilZLvcal5YKwE9JOQcJ6sFvvG66Bx8nZv2tIqk3tJ
B9SIJ7z6nYR3N5BwHluJcU/BDFXhyT5qAntfBKVclGEMVeITAflJHkFUT+5fixAs
tkzBvBSkXA9VzzmfZ+zTCYMUCLC/+begYVT18Rcuemek0miknSCQXYbcgV7Ogjb5
TW851EFgznxRZc61HNuyDLOjzhkiY2qsULjwwhyhbuh8cytYzas9iEYEEBEKAAYF
Ak7qVlsACgkQdYgkL74406gS6ACeIp++Yb5wnAf4SpPj2s3ArhE9+VUAoN0iL0dq
0eUvj4LiDSPUNB+UHhhpiQIxBBMBAgAbAhsDAh4BAheABQJO6lEpBQsJCAcDBRUK
CQgLAAoJECnZ7msfxzDBlHcP/0LfIH1RTd+FTz+wdiWH7KiSJJthH1iLtnBKb6F0
5iM+GXeGflJkJeSbcQUoHtcdyjVqVZdM9Af73C7HoMz1b4moBlfCFb+5lWTqZvxc
AU0eXTyum2afXOhu88PQVYdPwPJNNBEbHFNnllG/FtEn7BAm1JsAUpehkI7iNPqY
bzD6xyi+aZ/yZWfNSHbeOXLAgzxH0NFkvfxYusLijNmTwoBO0ZbzYeE7SOSMdUdU
UmEHv22lv9m4RtrrdRbslhuphPJXnG6ITaP1o9NhCMth8M2P00v1rfLWA3noS9WX
6gU6CUWd7er7u8uQYR5PKFxPWK1AL3tc4yz4+iZFW9f/3PmJRDAW2x7vH08LWqM1
XSvK3sa8Akz4mgLIXxBOAoGkyPUswpTEhICIL8vsxTYhdIjwhlLfiTZdDFnJCChC
2dLi/iDc+Edw64m4UMI5vq2DTzNF2X2HFBQMjeim/zWKwZzAB7apT5TZsDOztXJA
VD9LRwoKzgNpefGQclbAXP9PoeE/1jBNRpSZiYSx3MWdSbmoGK/KWMh+6isR+hhk
kziOGK6a1S8hN3uQBT5l9g88g0DIh0E9OA3Ns+LfydQBcqpKN2DzrjYDN5Q7YBhs
/6yuU3cM5ZinaddwKsc/LuQWHFFJeibNyj2Lta4XirORkXI2US+D3iduHQYCcZti
JuCpiQEcBBABAgAGBQJO6m08AAoJEHSBCwEjRsmmNIkH/1NzEGLPr0LoXV24VHTr
JMRFIVmRwoEIO9+URyhCa2gt9BEE4RSQ46Azx5RbWCaHYUAJ0GFucttsQUGXbwSA
qd4xaBF6pGsINqyUcTCBcFQmiY910KHZSuGJLB/Hg5K3ZTlC17+IXJRaPXXkL7Ti
jbJ6KO6uHnVGGA5CM+ss7x9ZgnXff94DrXpnyldWalIoqVhjyxPe90727rvyeuWg
X9tLn7e8BKw2Ld8n+jilT4rvGD321CeUvljz7stQrwqx1lnQaWR9/fmEc63B2fW0
HjaGMLvjPrdmGDB5aso7GQszOk2qmzYeKBm8+/6VrBG2GP+RHIVjmtJ7t5W+9UmA
Qs25Ag0ETupPNQEQAKMfFa0+dyXJFpk+uQR0E+gT62x0UlVStUy2V3BCHMerPJWF
FySgLwKTyui0+L1I9X+PaPBzuSPhadbWUZg96YogNrXxY7/xD/q1DkBIZMWEiPUX
oltI6rRRrrqTIuIVmpZN/yrSv64q03s6A0XabhCPJpXEPdTTfptNBbcm3tgRLSKi
aBUXiUAeTA/HAHmM9281e1WyDhyVD51zb24l1S6GC+e/SOLJDdgFSt1ZbhrjF7b0
oRH/AIkLS5DToAkV4PreVBpwBfYTVZpNMz3UOvPOfkG8/vFeJY+xmM+8I1YPGgsn
p5JBgtQh8ROu9OuEf8Gmkc9hZ+EA8ZGElgIbiSagZ14z8qlnAXjpKqA5DRADlW1z
VLVj0rUTmav7PtBMwe5MtaxS9e/ojbhcA6DEvjVn5CUo6akmZEZRnxfaKRd8CScm
noHUU+1MHNd6kEg4E/z/udQUPrNzxiu06Rrb443rdHSEls97q+ortpNOmOtD6Tsf
f8w2F63wAiUM0jpzD8cLDUlt9HcXkbkfW8GLxxsHyzdH6nnKYycufpQtcaDAP0Bo
TJi1q59vk3nC5IsfCu3cmI0YNwlSAliHIAPHPnNYkOrqidNSlqfQRi5YeD/42G4H
BriIBJBkq4k+JtWBWl9eyx9cSeV1jaOuiG3HPlhQFWiXTunWaeaipdYfnqOlABEB
AAGJAh8EGAECAAkFAk7qTzUCGwwACgkQKdnuax/HMMFmbw//bgskeTV+NcNMk7fl
KCWNlMOXp3bfxeA3UyIJbPjxzyYWqvf79ASXOWJRaqtlZE6458NzCE+b7V6febwv
qgq5AvDZW3gdFP1TssAbKVykGaeLkJkbitD5ZF5dkaknuOu5ogr2JIekUgBT2zrm
vOwnk7XSClFN9ozKDUwkF31EvLeb38iTXU3UxMpmlYBr/3P3dpTWzlcWBdiwEhO4
f9F/DwpnDRR9DzIwIS8ufHCDnyu24XD9ZdUGtWQ39Nwj5QylZpzn8lV4Ja3PJ6K4
PEsSdkMeY2XOpuPfmSHDUr/Pbhs5wiIg9REoRZGQtshsK6Ktba7TCjAT6KsiZi6T
XQ5H8tDyA6iY+9SFY0VEJM3VztKYWG0qTOAKVyFykI7PybfhD3kJsNxbt8xUtYwR
qWFCfF5JH5QWK7D2S7aXhEPvGOXwh3eitQrEmGqX0ntqD/nMMJHfjKfoPnu3EhRw
PDrDaaH8iWUgSyfVYH3tpIc7Ah7uUXboSCxQLndXh5OwGsD4rfGMZAYNIhRgRtey
qvkaZK8jmVdwYSN7AOtMbUsyvG0nuw+tYf9IpME8vM3FT1aw3Q+kgQdpZExUeTXi
sd2ZgJA13csMt6oV7lO5G+j4f/l0Xx1tkr9toil5FSRVIgrkmA1nhcKGXInAh1ia
80ggoWu0sSl50HlpOWEGJukmbFw=
=7mXQ
-----END PGP PUBLIC KEY BLOCK-----

From roy at gnomon.org.uk  Sun Mar  3 18:55:11 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Sun, 3 Mar 2013 18:55:11 +0000
Subject: [Bitcoin-development] Secure download
In-Reply-To: <CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
Message-ID: <20130303185446.GU68379@giles.gnomon.org.uk>

On Sat, Mar 02, 2013 at 04:09:38PM -0500, Gavin Andresen wrote:
> My gpg key is on the bitcoin.org homepage: http://bitcoin.org/gavinandresen.asc
> .... which you can access securely (and see the history of) at:
>   https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc

Would be nice to have a secure page at bitcoin.org, though, rathar
than having to go to github - certs from somewhere like Namecheap
should cost you next to nothing.  For those of us too lazy (not
paranoid enough) to bother with GPG, a (secure) page on bitoin.org
with the MD5 hashes of the binaries would be awesome...

roy



From roy at gnomon.org.uk  Sun Mar  3 18:54:46 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Sun, 3 Mar 2013 18:54:46 +0000
Subject: [Bitcoin-development] Secure download
In-Reply-To: <CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
Message-ID: <20130303185446.GU68379@giles.gnomon.org.uk>

On Sat, Mar 02, 2013 at 04:09:38PM -0500, Gavin Andresen wrote:
> My gpg key is on the bitcoin.org homepage: http://bitcoin.org/gavinandresen.asc
> .... which you can access securely (and see the history of) at:
>   https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc

Would be nice to have a secure page at bitcoin.org, though, rathar
than having to go to github - certs from somewhere like Namecheap
should cost you next to nothing.  For those of us too lazy (not
paranoid enough) to bother with GPG, a (secure) page on bitoin.org
with the MD5 hashes of the binaries would be awesome...

roy



From gmaxwell at gmail.com  Sun Mar  3 20:02:24 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sun, 3 Mar 2013 12:02:24 -0800
Subject: [Bitcoin-development] Secure download
In-Reply-To: <20130303185446.GU68379@giles.gnomon.org.uk>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
	<20130303185446.GU68379@giles.gnomon.org.uk>
Message-ID: <CAAS2fgSRYcC4e0E5UiXnLUYZHOkRkvgVdRnmOBWfqcXEKdkgFQ@mail.gmail.com>

On Sun, Mar 3, 2013 at 10:54 AM, Roy Badami <roy at gnomon.org.uk> wrote:
> Would be nice to have a secure page at bitcoin.org, though, rathar
> than having to go to github - certs from somewhere like Namecheap
> should cost you next to nothing.  For those of us too lazy (not
> paranoid enough) to bother with GPG, a (secure) page on bitoin.org
> with the MD5 hashes of the binaries would be awesome...

While I think that it's silly that we don't have a HTTPS (only!) page,
it should be noted that an HTTPS page is in no way a replacement for
GPG, sadly:  Anyone who can MITM the server to the whole internet can
trivially obtain a fraudulent cert with only moderate cost and time.

(The reason for this is that (many? most? all?) CAs verify authority
by having you place a file at some HTTP path on the domain in
question. Effectively the current CA model only prevents those from
intercepting who cannot intercept the traffic generally. Basically
only helps with the evil hotspot/tor_exit problem.)



From roy at gnomon.org.uk  Sun Mar  3 20:25:16 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Sun, 3 Mar 2013 20:25:16 +0000
Subject: [Bitcoin-development] Secure download
In-Reply-To: <CAAS2fgSRYcC4e0E5UiXnLUYZHOkRkvgVdRnmOBWfqcXEKdkgFQ@mail.gmail.com>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
	<20130303185446.GU68379@giles.gnomon.org.uk>
	<CAAS2fgSRYcC4e0E5UiXnLUYZHOkRkvgVdRnmOBWfqcXEKdkgFQ@mail.gmail.com>
Message-ID: <20130303202516.GW68379@giles.gnomon.org.uk>

> (The reason for this is that (many? most? all?) CAs verify authority
> by having you place a file at some HTTP path on the domain in
> question.

IME most CAs verify by emailing hostmaster/webaster@ or one of the
contacts in the WHOIS.  But you're right, still subject to a MitM.
Still better than nothing though.

I would have suggested an EV cert, but that's more expensive (and
still far from foolproof)

> Basically only helps with the evil hotspot/tor_exit problem.

Also helps protect against DNS spoofing attacks, but yes, you're
right.  I should be checking GPG sigs but I'm lazy :-)

roy



From roy at gnomon.org.uk  Sun Mar  3 20:25:41 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Sun, 3 Mar 2013 20:25:41 +0000
Subject: [Bitcoin-development] Secure download
In-Reply-To: <CAAS2fgSRYcC4e0E5UiXnLUYZHOkRkvgVdRnmOBWfqcXEKdkgFQ@mail.gmail.com>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
	<20130303185446.GU68379@giles.gnomon.org.uk>
	<CAAS2fgSRYcC4e0E5UiXnLUYZHOkRkvgVdRnmOBWfqcXEKdkgFQ@mail.gmail.com>
Message-ID: <20130303202516.GW68379@giles.gnomon.org.uk>

> (The reason for this is that (many? most? all?) CAs verify authority
> by having you place a file at some HTTP path on the domain in
> question.

IME most CAs verify by emailing hostmaster/webaster@ or one of the
contacts in the WHOIS.  But you're right, still subject to a MitM.
Still better than nothing though.

I would have suggested an EV cert, but that's more expensive (and
still far from foolproof)

> Basically only helps with the evil hotspot/tor_exit problem.

Also helps protect against DNS spoofing attacks, but yes, you're
right.  I should be checking GPG sigs but I'm lazy :-)

roy



From roy at gnomon.org.uk  Tue Mar  5 12:37:50 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Tue, 5 Mar 2013 12:37:50 +0000
Subject: [Bitcoin-development] Secure download
In-Reply-To: <20130303185446.GU68379@giles.gnomon.org.uk>
References: <5132558A.8040304@recessionstories.net>
	<CABsx9T2yka9vHVttyzTuAEdHtmQSCyAPnJsh1EiwBNoiC24fSg@mail.gmail.com>
	<20130303185446.GU68379@giles.gnomon.org.uk>
Message-ID: <20130305123750.GB68379@giles.gnomon.org.uk>

> Would be nice to have a secure page at bitcoin.org, though, rathar
> than having to go to github - certs from somewhere like Namecheap
> should cost you next to nothing.

And Namecheap now accept Bitcoin :-)

(Complete coincidence - I didn't know that when I posted)

roy



From pete at petertodd.org  Thu Mar  7 11:00:18 2013
From: pete at petertodd.org (Peter Todd)
Date: Thu, 7 Mar 2013 06:00:18 -0500
Subject: [Bitcoin-development] Large-blocks and censorship
Message-ID: <20130307110018.GA7491@savin>

So with UTXO merkle-sum-fee-trees and fraud notices(1) we can
effectively audit the blocks produced by miners and provide a way for
SPV nodes to reject invalid blocks without requiring the whole
blockchain data.

Next step: How do we prevent censorship? Can we at all?

Basically while UTXO-style proofs allow anyone to determine if a block
is valid, it's fundementally still miners that choose what transactions
to accept into blocks in the first place. Unfortunately the very nature
of a blockchain is that it is meant to prove that transactions are
public and that a consensus exists about what transactions are
spendable, thus any attempt to hide the bare technical details, txins
and txouts, is futile.  Even using encryption doesn't work, because
assuming you convinced a miner to accept your encrypted transaction,
that just shifts the part that makes the transaction public to the act
of revealing the key, which again must be done publicly in the
blockchain to prove consensus.

As transaction volume makes running a validating node more expensive, we
can expect the number of independent pools to decrease, or at the very
least make monitoring those pools easier as volumes grow beyond what
technologies such as Tor can effectively accomodate. This provides the
opportunity to pressure the remaining, identifiable, independent miners
into accepting restrictions on what transactions can be mined.

It's also notably that auditable off-chain transaction systems are
vulnerable. All of the trustworthy ones that don't rely on trusted
hardware require at least some of their on-chain transactions to be
publicly known, specifically so that the total amount of reserves held
by off-chain transaction providers can be audited. At best you can use
Gregory Maxwell's suggestion of maintaining a "reserve" account backed
by funds that rarely move, where new deposits go to non-public addresses
and result in the depositor receiving funds from the reserve account,
but again, if the spendability of those funds is in question, the value
of the reserve itself is also in question. Additionally miners can block
fidelity bond sacrifice transactions easily; again a critical
technologies required to implement some types of off-chain transaction
systems, as well as for many other purposes.

Of course we can just assume that the current pseudo-anonymity of
transactions is "good enough", but consider the case of stolen coins:
even if the bulk of transactions are effectively anonymous, transactions
can always be made public delibrately and miners pressured into
preventing the movement of coins declared tainted.

Finally it's possible that some kind of chaum token system could be
implemented directly in the blockchain, but this has the problem that A:
no efficient ones are yet known, let alone demonstrated, and B: unless
non-chaum token systems are prohibited by a hard-fork with wide
adoption, the censorship risk is miners deciding to not mine any chaum
token transactions. It's easy to imagine a government deciding that
while they will accept transactions that occure on the public block
chain, and are thus at best pseudo-anonymous, are acceptable any attempt
to conduct truely anonymous transactions will be forbidden.


On the other hand, with small blocks the barriers to entry to becoming a
miner remain low, and mining anonymously behind low-bandwidth
anti-censorship technologies such as Tor remains feasible. Any attempt
by a major pool to censor, IE choose not to mine, a transaction will
naturally lead to an opportunity for an anonymous miner to get a profit
mining that transaction, thus we can expect transactions to be treated
fairly equally on a fee per KB basis. In addition, the ever present
possibility of this happening, further discourages large miners from
doing so in the first place, and in turn gives those miners additional
incentive to resist attempts to restrict what transactions they are
allowed to mine.

Of course off-chain transaction systems can still practice censorship of
transactions on their own, but because the decentralized blockchain
still exists communities subject to such censorship can always create
their own auditable and secure off-chain transaction systems for their
own use. Again, the existence of such systems creates economic
incentives to find ways to move value between all off-chain transaction
systems regardless of imposed restrictions, and again the overall
ability to transfer value freely is maintained.

1) https://bitcointalk.org/index.php?topic=137933.0

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/edafec29/attachment.sig>

From pete at petertodd.org  Thu Mar  7 11:34:55 2013
From: pete at petertodd.org (Peter Todd)
Date: Thu, 7 Mar 2013 06:34:55 -0500
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <20130307110018.GA7491@savin>
References: <20130307110018.GA7491@savin>
Message-ID: <20130307113455.GA893@savin>

On Thu, Mar 07, 2013 at 06:00:18AM -0500, Peter Todd wrote:
> It's also notably that auditable off-chain transaction systems are
> vulnerable. All of the trustworthy ones that don't rely on trusted
> hardware require at least some of their on-chain transactions to be
> publicly known, specifically so that the total amount of reserves held
> by off-chain transaction providers can be audited. At best you can use
> Gregory Maxwell's suggestion of maintaining a "reserve" account backed
> by funds that rarely move, where new deposits go to non-public addresses
> and result in the depositor receiving funds from the reserve account,
> but again, if the spendability of those funds is in question, the value
> of the reserve itself is also in question. Additionally miners can block
> fidelity bond sacrifice transactions easily; again a critical
> technologies required to implement some types of off-chain transaction
> systems, as well as for many other purposes.

Oh, and it occured to me: merge-mining is also vulnerable to the exact
same censorship forces. Again, with small blocks running P2Pool is
feasible, and P2Pool does merge-mining just fine. With large blocks it's
easy for the pool to ignore shares that try to merge mine, so your
alt-chains competition is also censored.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/aa576c3d/attachment.sig>

From mike at plan99.net  Thu Mar  7 17:42:32 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 7 Mar 2013 18:42:32 +0100
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <20130307110018.GA7491@savin>
References: <20130307110018.GA7491@savin>
Message-ID: <CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>

To summarize your post - it's another go at arguing for strongly
limited block sizes, this time on the grounds that large blocks make
it easier for $AUTHORITY to censor transactions? Is that right?



From pete at petertodd.org  Thu Mar  7 18:30:35 2013
From: pete at petertodd.org (Peter Todd)
Date: Thu, 7 Mar 2013 13:30:35 -0500
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>
References: <20130307110018.GA7491@savin>
	<CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>
Message-ID: <20130307183035.GA9083@savin>

On Thu, Mar 07, 2013 at 06:42:32PM +0100, Mike Hearn wrote:
> To summarize your post - it's another go at arguing for strongly
> limited block sizes, this time on the grounds that large blocks make
> it easier for $AUTHORITY to censor transactions? Is that right?

Yes.

Now, can we solve this problem robustly with clever technology, as is
done with UTXO fraud proofs? I can't see a way - can you?

Gavin asked me to do a projection for what block sizes could be based on
technology improving, and I think that analysis should consider
carefully to what degree the current system's quite strong censorship
resistance will be impacted.

It's interesting to be talking about censorship of transactions, right
as the support for implementing technical means to block SatoshiDice
transactions is highest. If anything, I think Gregory Maxwell's findings
he has posted on IRC showing roughly three quarters of transactions in
blocks are SatoshiDice related shows how the current large number of
validating nodes makes any effort at even discouraging unwanted traffic
quite difficult. In other words, it's a strong sign the censorship
resistance of Bitcoin works as intended.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/987793d7/attachment.sig>

From mike at plan99.net  Thu Mar  7 21:19:24 2013
From: mike at plan99.net (Mike Hearn)
Date: Thu, 7 Mar 2013 22:19:24 +0100
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <20130307183035.GA9083@savin>
References: <20130307110018.GA7491@savin>
	<CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>
	<20130307183035.GA9083@savin>
Message-ID: <CANEZrP3oHropYJ1zEXCw1QdtRimK_JxeohOh1yNkPxzZohcXnA@mail.gmail.com>

As an aside, there's a paper coming out in perhaps a few months that
describes a new way to provide Chaum-style privacy integrated with
Bitcoin, but without the use of blinding and without any need for
banks. It's quite smart, I was reviewing the paper this week.
Unfortunately the technique is too slow and too complicated to
actually integrate, but you'd probably get a kick out of it. It's
based on zero knowledge proofs. You can talk to Ian Miers if you like,
perhaps he'll send you a copy for review.

Back on topic.

This idea is not new. I proposed the idea of regulating miners to
freeze certain outputs two years ago:

   https://bitcointalk.org/index.php?action=printpage;topic=5979.0

I concluded that it was not a real risk because both mining and
transactions can be done anonymously.

Your argument rests on the assumption that you can't mine large blocks
anonymously because Tor doesn't scale. Even if we go along with the
idea that Tor is the only way to escape regulation (it's not), you
should maybe take up its inability to move data sufficiently fast with
the developers. Given that they routinely push two gigabits/second
today, with an entirely volunteer run network, I think they'll be
surprised to learn that their project is doomed to never be usable by
miners.



From lidstrom83 at gmail.com  Thu Mar  7 21:31:10 2013
From: lidstrom83 at gmail.com (Daniel Lidstrom)
Date: Thu, 7 Mar 2013 14:31:10 -0700
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <CANEZrP3oHropYJ1zEXCw1QdtRimK_JxeohOh1yNkPxzZohcXnA@mail.gmail.com>
References: <20130307110018.GA7491@savin>
	<CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>
	<20130307183035.GA9083@savin>
	<CANEZrP3oHropYJ1zEXCw1QdtRimK_JxeohOh1yNkPxzZohcXnA@mail.gmail.com>
Message-ID: <CADjHg8EQbmdpFE6yxq5tvkn49WUGz2Yv3WEeWzG+LMPAMAHCww@mail.gmail.com>

My views on censorship resistance in the face of scaling:

1) I expect if I'm not careful about preserving my privacy with the way I
use Bitcoin, then I will always run the risk of being censored by miners.
This means connecting to the network anonymously, not reusing addresses,
and perhaps even mixing my coins.  The onus is on me here to avoid
censorship, but I'm optimistic that this privacy preservation can be made
pretty automatic.

2) I expect anonymity systems to scale to accommodate Bitcoin full nodes,
not Bitcoin to stay small to avoid putting pressure on anonymity systems to
scale.

3) If 2 is too tall an order, then mining in a pool is always an option.
There should always be some countries in the world free enough to allow
mining pools to operate, and miners in countries that ban Bitcoin can
simply connect to these anonymously.  If not, then Bitcoin is toast anyway,
is it not?  If these miners are really interested in avoiding censoring
transactions, then they will do their due diligence and choose a pool that
doesn't do this.  But even if they don't, censorship can be personally
avoided by following 1.

On Thu, Mar 7, 2013 at 2:19 PM, Mike Hearn <mike at plan99.net> wrote:

> As an aside, there's a paper coming out in perhaps a few months that
> describes a new way to provide Chaum-style privacy integrated with
> Bitcoin, but without the use of blinding and without any need for
> banks. It's quite smart, I was reviewing the paper this week.
> Unfortunately the technique is too slow and too complicated to
> actually integrate, but you'd probably get a kick out of it. It's
> based on zero knowledge proofs. You can talk to Ian Miers if you like,
> perhaps he'll send you a copy for review.
>
> Back on topic.
>
> This idea is not new. I proposed the idea of regulating miners to
> freeze certain outputs two years ago:
>
>    https://bitcointalk.org/index.php?action=printpage;topic=5979.0
>
> I concluded that it was not a real risk because both mining and
> transactions can be done anonymously.
>
> Your argument rests on the assumption that you can't mine large blocks
> anonymously because Tor doesn't scale. Even if we go along with the
> idea that Tor is the only way to escape regulation (it's not), you
> should maybe take up its inability to move data sufficiently fast with
> the developers. Given that they routinely push two gigabits/second
> today, with an entirely volunteer run network, I think they'll be
> surprised to learn that their project is doomed to never be usable by
> miners.
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/5873f60a/attachment.html>

From jgarzik at exmulti.com  Fri Mar  8 03:19:05 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Thu, 7 Mar 2013 22:19:05 -0500
Subject: [Bitcoin-development] python-bitcoinlib: Comprehensive bitcoin
	library for python
Message-ID: <CA+8xBpcu6dEdvWNGS+rhCQsDfHh5eOD=nFi+6BFO0Coi0toRUw@mail.gmail.com>

GitHub URL: https://github.com/jgarzik/python-bitcoinlib
Repository: git://github.com/jgarzik/python-bitcoinlib.git

The python library for pynode has matured sufficiently to have a home
of its own.  The python-bitcoinlib project attempts to present a
lightweight, modular, a la carte interface to bitcoin data structures
and network protocols.

Features:

 *   Easy object interface to all bitcoin core data structures: block,
transaction, addresses, ...
 *   Full transaction script engine
 *   Fully verifies main and testnet block chains (via pynode)
 *   ECDSA verification (OpenSSL wrapper)
 *   Object interface to all known network messages
 *   Binary encoding/decoding (serialization) for full bitcoin
protocol interoperability
 *   Passes many of the tests shipped with the bitcoin reference
client (bitcoind/Bitcoin-Qt)

Like pynode, this library is currently a developer-only release, not
recommended for highly secure production sites.

Pull requests, comments, questions and donations always welcome.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From jgarzik at exmulti.com  Fri Mar  8 17:04:56 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Fri, 8 Mar 2013 12:04:56 -0500
Subject: [Bitcoin-development] Blockchain torrent on SourceForge d/l area?
Message-ID: <CA+8xBpcECEX2FsTGXJPz8ea3-2SrNACrt9m6fYNUdk0UQxEMhA@mail.gmail.com>

Would like to upload bootstrap.dat.torrent to
sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/ or
thereabouts.

Any objections?

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From pete at petertodd.org  Sun Mar 10 04:31:55 2013
From: pete at petertodd.org (Peter Todd)
Date: Sat, 9 Mar 2013 23:31:55 -0500
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
Message-ID: <20130310043155.GA20020@savin>

As discussed endlessly data in the UTXO set is more costly, especially
in the long run, than transaction data itself. The fee system is per KB
in a block, and thus doesn't properly capture the long-term costs of
UTXO creation.

It's also been suggested multiple times to make transaction outputs with
a value less than the transaction fee non-standard, either with a fixed
constant or by some sort of measurement.

https://github.com/petertodd/bitcoin/tree/block-uneconomic-utxo-creation

The above patch that implements the latter approach, and thus will not
accept into the mempool any txout whose value is <= the fee per KB paid
by the transaction. That fee is then bounded between MIN_TX_FEE and
COIN_DUST, 0.0005BTC and 0.01BTC respectively. The former due to the
fact that the fee can be zero, and the latter so that delibrate high-fee
creation is still allowed. (provably unspendable txouts can of course be
handled specially later)

By basing the calculation on the fee per KB the transaction itself pays
the limit automatically adjustes as the market for blockchain space
changes, and the value of Bitcoins change.

Since scriptSigs greater than 500 bytes are non-standard the marginal
bytes required to spend a txout is always less than 540 bytes. For
standard transactions the marginal cost is usually just a 80+1 byte
signature, and a 33+1 byte pubkey, or 155 bytes. Thus the choice of the
fee for 1000bytes allows a margin to ensure a net positive return, even
if tx fees become more expensive. In particular I think a reasonable
margin is important to deter users from simply deleting wallets filled
with dust-spam, something which gets reported as happening frequently.
It also protects users who do not understand how Bitcoin works from
thinking that repeated small amounts of coins collected from sites
giving away small amounts will add up to an amount that they can
usefully use, and equally protects the long-term health of the network
from those services.

By basing the threshold for what is considered a too-low output value on
ensuring that spending outputs has a net positive return, rather than
trying to come up with some sort of model of UTXO cost, we make the
logic significantly easier to reason about. In particular, it means that
Bitcoin clients can use an unchanging rule based on fees paid, rather
than some constant subject to change as the economics of UTXO costs
change. Note how the total cost of maintaining the UTXO set is
determined by the number of validating nodes, and what that number will
be in the future heavily debated with a possible range spanning many
orders of magnitude.


Short-term
----------

SatoshiDice will have to change their betting system to have their
"failed bet" messages return enough coins to be economically spendable.
It's notable that Satoshidice seems to have already changed their system
to return what appear to be randomly chosen amounts, likely to get
around the users who have applied custom patches to consider 1 satoshi
output values non-standard. Because this patch does not block
SatoshiDice, nor do I expect it to result in less SatoshiDice traffic, I
expect pool operators to be open to applying it.

Other services such as CoinAd will also have to make changes to either
collect multiple payments together, or use off-chain transactions. I've
spoken with a person who runs one of these sites, CoinAd IIRC, and he
was open to opening an instawallet or easywallet account and using it to
do direct off-chain transactions for users who wanted to be paid
immediately.

Part of the patch includes code that sends change to fees if creating a
change output would produce an uneconomic txout. This will likely
occasionally generate confusion from users, especially as it will only
happen if they try to send almost all of their wallet.


Security
--------

For a non-upgraded client, accepting zero-confirmation transactions
becomes more risky as the change represents yet another way of creating
a transaction that won't be mined. Fortnately the nLockTime problem has
served to warn people yet again about those dangers.


Long-term
---------

If fees required on transactions go up in numerical value, the patch
adapts the minimum output size as required.

If fees go down numerically, the minimum output size is also adjusted as
required. If they go down sufficiently that MIN_TX_FEE requires
changing, only one constant needs to change. In particular, the
MIN_RELAY_TX_FEE blocks relaying small output values with small fees
anyway, and it's set to one fifth of MIN_TX_FEE. Additionally most
miners follow the MIN_TX_FEE default, so using that value ensures that
the logic holds true for the more likely case that fees numerically stay
stable or rise. In any case, Bitcoin will never be a good
microtransaction system.


Ouputs representing other assets; "colored coins" and "smartcoins"
------------------------------------------------------------------

The colored coin ideas being passed around on the forums often used
fixed representations of assets, that is 1 bond unit == 1 satoshi or
similar. Since proving the state of a colored coin to an SPV client
requires providing the full transaction history changing these protocols
to allow a floating numerical ratio Bitcoins to assets is always
possible by allowing for ordinary, non-marked, transaction inputs and
outputs to add or remove coins as required. This has the additional
advantage of making divisibility easy.

If the asset itself is worth less than a tx fee, moving it will still
incur a net loss. Equally if the asset is worth more than a tx fee, the
quickly the burden of requiring an additional tx fee to be locked up by
the asset becomes minor.



Testing Required
----------------

To be written after more consensus. Essentially a UI testing script, and
unittests in wallet_tests.cpp need to be written.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130309/b11db46f/attachment.sig>

From pete at petertodd.org  Sun Mar 10 08:18:57 2013
From: pete at petertodd.org (Peter Todd)
Date: Sun, 10 Mar 2013 04:18:57 -0400
Subject: [Bitcoin-development] Large-blocks and censorship
In-Reply-To: <CADjHg8EQbmdpFE6yxq5tvkn49WUGz2Yv3WEeWzG+LMPAMAHCww@mail.gmail.com>
References: <20130307110018.GA7491@savin>
	<CANEZrP0MHA_Mv37DSv=CLBWLHo_-ajRgNRd1-4EGJ2GZvTxiJQ@mail.gmail.com>
	<20130307183035.GA9083@savin>
	<CANEZrP3oHropYJ1zEXCw1QdtRimK_JxeohOh1yNkPxzZohcXnA@mail.gmail.com>
	<CADjHg8EQbmdpFE6yxq5tvkn49WUGz2Yv3WEeWzG+LMPAMAHCww@mail.gmail.com>
Message-ID: <20130310081857.GA2609@savin>

On Thu, Mar 07, 2013 at 02:31:10PM -0700, Daniel Lidstrom wrote:
> My views on censorship resistance in the face of scaling:
> 
> 1) I expect if I'm not careful about preserving my privacy with the way I
> use Bitcoin, then I will always run the risk of being censored by miners.
> This means connecting to the network anonymously, not reusing addresses,
> and perhaps even mixing my coins.  The onus is on me here to avoid
> censorship, but I'm optimistic that this privacy preservation can be made
> pretty automatic.

Yes, but keep in mind the meta risk, which is that as Bitcoin becomes
centralized one of the types of transactions that will be censored are
ones that preserve your privacy. For instance, as it costs thousands of
dollars to setup a mining pool, and hence mining pools also become quite
visible, it would be very easy for local governments to start doing
things like specifying that transactions must be accompanied with a
proof of identification. With that proof of course Bitcoin can remain
totally legal, and the pool in business.

> 2) I expect anonymity systems to scale to accommodate Bitcoin full nodes,
> not Bitcoin to stay small to avoid putting pressure on anonymity systems to
> scale.

Why do you expect that? It's always harder to hide a large amount of
bandwidth than a small one, and stenography is limited by the bandwidth
of the data it's hiding it. HD video streams aren't going to require
more bandwidth in the future.

> 3) If 2 is too tall an order, then mining in a pool is always an option.
> There should always be some countries in the world free enough to allow
> mining pools to operate, and miners in countries that ban Bitcoin can
> simply connect to these anonymously.  If not, then Bitcoin is toast anyway,
> is it not?  If these miners are really interested in avoiding censoring
> transactions, then they will do their due diligence and choose a pool that
> doesn't do this.  But even if they don't, censorship can be personally
> avoided by following 1.

Right now the thing that keeps pools honest is that setting up another
pool is pretty easy; note how most pools are run as hobbyist projects.
Similarly you can always use P2Pool, which is totally decentralized.
But if running the validating node required to run a pool costs
thousands of dollars that competition just isn't there anymore and
starting a new pool isn't an option. Remember there will be a chicken
and egg problem in that the new pool has thousands of dollars in costs,
yet no hashing power yet.

As for constantly moving countries, The Pirate Bay is in the same
position, and as well as they've done, they still wind up getting shut
down periodically. Do you really want access to your funds contingent on
some highly visible mining pools, constantly wondering if their local
government will change their mind?


Anyway, seems that my question was answered: There aren't any clever
technical ways to avoid censorship if validating nodes and mining pools
are centralized.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130310/b286a9f1/attachment.sig>

From jtimonmv at gmail.com  Mon Mar 11 11:01:09 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Mon, 11 Mar 2013 12:01:09 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <20130310043155.GA20020@savin>
References: <20130310043155.GA20020@savin>
Message-ID: <CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>

On 3/10/13, Peter Todd <pete at petertodd.org> wrote:
> It's also been suggested multiple times to make transaction outputs with
> a value less than the transaction fee non-standard, either with a fixed
> constant or by some sort of measurement.

As said on the bitcointalk thread, I think this is the wrong approach.
This way you effectively disable legitimate use cases for payments
that "are worth" less than the fees like smart property/colored coins.
While the transactions pay fees, they should not be considered spam
regardless of how little the quantities being moved are.

Then your only concern are unspent outputs and comparing fees with
values doesn't help in any way. Just activate a non-proportional
demurrage (well, I won't complain if you just turn bitcoin into
freicoin, just think that non-proportional would be more acceptable by
most bitcoiners) that incentives old transactions to be moved and
destroys unspent transactions with small amounts that don't move to
another address periodically. This has been proposed many times before
too, and I think it makes a lot more sense.



From gavinandresen at gmail.com  Mon Mar 11 15:36:08 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Mon, 11 Mar 2013 11:36:08 -0400
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
Message-ID: <CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>

> Just activate a non-proportional demurrage

demurrage of any kind will never, ever happen, just give up on that idea.

The negative publicity of "the bitcoin developers are destroying YOUR
coins!" would be devastating.

-- 
--
Gavin Andresen



From jtimonmv at gmail.com  Mon Mar 11 16:45:15 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Mon, 11 Mar 2013 17:45:15 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
Message-ID: <CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>

"The Bitcoin network will destroy your coins IF you don't move your coins"
Is pretty different. By the way, doesn't have to destroy them, can
just give them to miners.

In any case, what's wrong with my reasoning?
Smart property/colored coins are not spam transactions because they pay fees.

The problem for the network are not transactions that move less coins
than they pay fees, but old UNSPENT OUTPUTS. So why don't you focus on
that instead of a formula to check what transactions make "economic
sense"?

I even prefer the sudden "destruction" (or re-generation by miners) of
the account after the X period (killerstorm's proposal) instead of
just rejecting great potential use cases for the chain.

I mean, I still prefer a small fixed demurrage fee after those X
blocks without moving them, but since this community is demurrage
allergic and that possibility cannot even be considered (doesn't
matter what reflects better the costs for miners/the network I guess),
I'll go with the second best option IMO.

This would be just a fee for a resource that users are enjoying and
has real costs for the network. Why would constant demurrage fees
after a free storage period would be perceived so different from
transaction fees?

I haven't heard anyone complaining about "the bitcoin developers are
destroying part of YOUR coins every time you move them!!"


On 3/11/13, Gavin Andresen <gavinandresen at gmail.com> wrote:
>> Just activate a non-proportional demurrage
>
> demurrage of any kind will never, ever happen, just give up on that idea.
>
> The negative publicity of "the bitcoin developers are destroying YOUR
> coins!" would be devastating.
>
> --
> --
> Gavin Andresen
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From jtimonmv at gmail.com  Mon Mar 11 16:46:38 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Mon, 11 Mar 2013 17:46:38 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
Message-ID: <CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>

Unless of course everlasting physical "bitcoins" are much more
important than smart property and colored coins...


On 3/11/13, Jorge Tim?n <jtimonmv at gmail.com> wrote:
> "The Bitcoin network will destroy your coins IF you don't move your coins"
> Is pretty different. By the way, doesn't have to destroy them, can
> just give them to miners.
>
> In any case, what's wrong with my reasoning?
> Smart property/colored coins are not spam transactions because they pay
> fees.
>
> The problem for the network are not transactions that move less coins
> than they pay fees, but old UNSPENT OUTPUTS. So why don't you focus on
> that instead of a formula to check what transactions make "economic
> sense"?
>
> I even prefer the sudden "destruction" (or re-generation by miners) of
> the account after the X period (killerstorm's proposal) instead of
> just rejecting great potential use cases for the chain.
>
> I mean, I still prefer a small fixed demurrage fee after those X
> blocks without moving them, but since this community is demurrage
> allergic and that possibility cannot even be considered (doesn't
> matter what reflects better the costs for miners/the network I guess),
> I'll go with the second best option IMO.
>
> This would be just a fee for a resource that users are enjoying and
> has real costs for the network. Why would constant demurrage fees
> after a free storage period would be perceived so different from
> transaction fees?
>
> I haven't heard anyone complaining about "the bitcoin developers are
> destroying part of YOUR coins every time you move them!!"
>
>
> On 3/11/13, Gavin Andresen <gavinandresen at gmail.com> wrote:
>>> Just activate a non-proportional demurrage
>>
>> demurrage of any kind will never, ever happen, just give up on that idea.
>>
>> The negative publicity of "the bitcoin developers are destroying YOUR
>> coins!" would be devastating.
>>
>> --
>> --
>> Gavin Andresen
>>
>
>
> --
> Jorge Tim?n
>
> http://freico.in/
> http://archive.ripple-project.org/
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From mike at plan99.net  Mon Mar 11 16:54:51 2013
From: mike at plan99.net (Mike Hearn)
Date: Mon, 11 Mar 2013 17:54:51 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
Message-ID: <CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>

Why does demurrage even still come up? The base rules of Bitcoin will
not be changing in such a fundamental way.

With regards to trying to minimize the size of the UTXO set, this
again feels like a solution in search of a problem. Even with SD
abusing micropayments as messages, it's only a few hundred megabytes
today. That fits in RAM, let alone disk. If one day people do get
concerned about the working set size, miners can independently set
their own policies for what they confirm, for instance maybe they just
bump the priority of any transaction that has fewer outputs than
inputs. An IsStandard() rule now that tries to ban micropayments will
just risk hurting interesting applications for no real benefit. It's
like trying to anticipate and fix problems we might face in 2020.

There are lots of less invasive changes for improving scalability,
like making transaction validation multi-threaded in every case,
transmitting merkle blocks instead of full blocks, moving blocking
disk IO off the main loop so nodes don't go unresponsive when somebody
downloads the chain from them, and finishing the payment protocol work
so there's less incentive to replicate the SD "transactions as
messages" design.



From jtimonmv at gmail.com  Mon Mar 11 17:08:03 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Mon, 11 Mar 2013 18:08:03 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
Message-ID: <CABOyFfo32xMSvxJdtuWNeCF+kRxita_bR06pbaoN1=AgPHU+eg@mail.gmail.com>

Well, my initial idea was that nothing was really needed too.
But if something must be done, I dislike very much the "ban
micropayments" approach. I was just offering other solutions that I
consider much better, but if nothing is done I won't be pushing for
those alternative solutions (to a problem that we may not even have).


On 3/11/13, Mike Hearn <mike at plan99.net> wrote:
> Why does demurrage even still come up? The base rules of Bitcoin will
> not be changing in such a fundamental way.
>
> With regards to trying to minimize the size of the UTXO set, this
> again feels like a solution in search of a problem. Even with SD
> abusing micropayments as messages, it's only a few hundred megabytes
> today. That fits in RAM, let alone disk. If one day people do get
> concerned about the working set size, miners can independently set
> their own policies for what they confirm, for instance maybe they just
> bump the priority of any transaction that has fewer outputs than
> inputs. An IsStandard() rule now that tries to ban micropayments will
> just risk hurting interesting applications for no real benefit. It's
> like trying to anticipate and fix problems we might face in 2020.
>
> There are lots of less invasive changes for improving scalability,
> like making transaction validation multi-threaded in every case,
> transmitting merkle blocks instead of full blocks, moving blocking
> disk IO off the main loop so nodes don't go unresponsive when somebody
> downloads the chain from them, and finishing the payment protocol work
> so there's less incentive to replicate the SD "transactions as
> messages" design.
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From jgarzik at exmulti.com  Mon Mar 11 17:18:41 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Mon, 11 Mar 2013 13:18:41 -0400
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
Message-ID: <CA+8xBpd2hLrK4UXcxZubZHYJtLhJznq55RzXxVn0WKK18nQ-5w@mail.gmail.com>

On Mon, Mar 11, 2013 at 11:36 AM, Gavin Andresen
<gavinandresen at gmail.com> wrote:
>> Just activate a non-proportional demurrage
>
> demurrage of any kind will never, ever happen, just give up on that idea.
>
> The negative publicity of "the bitcoin developers are destroying YOUR
> coins!" would be devastating.

While 100% agreed, I do think there is space in the alt-currency world
for a well-done coin THAT IS NOT BITCOIN (i.e. merge-mined or
whatever) with a finite lifespan.  Call it "tempcoin"   For example:
any coin older than (144 * 365 * 4) blocks may be reclaimed by a
miner.

Even though, sadly, many of the alt-coins have been pre-mined scams,
the alt-coin concept in general is great for experimenting.  If the
idea can be proven in the field without modifying mainnet bitcoind,
then perhaps it should go onto the mainnet hard fork wishlist, many
years in the future.

That's the great thing about open source.  People can experiment with
these ideas, and bitcoin.git need not change at all :)

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From ben at benlabs.net  Mon Mar 11 18:17:04 2013
From: ben at benlabs.net (Benjamin Lindner)
Date: Mon, 11 Mar 2013 14:17:04 -0400
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
Message-ID: <75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>


On Mar 11, 2013, at 12:54 PM, Mike Hearn <mike at plan99.net> wrote:
> With regards to trying to minimize the size of the UTXO set, this
> again feels like a solution in search of a problem. Even with SD
> abusing micropayments as messages, it's only a few hundred megabytes
> today. That fits in RAM, let alone disk. If one day people do get

The problem of UTXO in principal scales with the block size limit. Thus it should be fixed BEFORE you consider increasing the block size limit. Otherwise you just kick the can down the road, making it bigger.

> concerned about the working set size, miners can independently set
> their own policies for what they confirm, for instance maybe they just

Problem is the skewed incentive structure. Rational miners will always include dust output with fees, because the eternal cost of UTXO is payed by the network and future miners, not the current/individual miner.

On Mar 11, 2013, at 7:01 AM, 	Jorge Tim?n <jtimonmv at gmail.com> wrote:

> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:
>> It's also been suggested multiple times to make transaction outputs with
>> a value less than the transaction fee non-standard, either with a fixed
>> constant or by some sort of measurement.
> 
> As said on the bitcointalk thread, I think this is the wrong approach.
> This way you effectively disable legitimate use cases for payments
> that "are worth" less than the fees like smart property/colored coins.

this.

> Just activate a non-proportional
> demurrage (well, I won't complain if you just turn bitcoin into
> freicoin, just think that non-proportional would be more acceptable by
> most bitcoiners) that incentives old transactions to be moved 

You could delegate the decision to the user with a rule like:

if (output<fee):
 limit lifetime of the UTXO to 10 years.
if (output>fee):
 unlimited lifetime

Then, when a user creates a transaction, he can decide whether he wants to have limited or unlimited lifetime. The rationale for limiting the lifetime for (output<fee) transactions is that they may have no inherent economic incentive to be spend.




From jtimonmv at gmail.com  Mon Mar 11 18:59:32 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Mon, 11 Mar 2013 19:59:32 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
Message-ID: <CABOyFfqqtU-M4tQv7cvNjGTC83NH6Gwds8gjDmF+GBM==+dLew@mail.gmail.com>

That solution seems good enough to me.
Smartcoin users would just need to move their assets before 10 years,
totally acceptable.
And regular users don't need to think about it since they're probably
always sending more than they pay in fees.


On 3/11/13, Benjamin Lindner <ben at benlabs.net> wrote:
>
> On Mar 11, 2013, at 12:54 PM, Mike Hearn <mike at plan99.net> wrote:
>> With regards to trying to minimize the size of the UTXO set, this
>> again feels like a solution in search of a problem. Even with SD
>> abusing micropayments as messages, it's only a few hundred megabytes
>> today. That fits in RAM, let alone disk. If one day people do get
>
> The problem of UTXO in principal scales with the block size limit. Thus it
> should be fixed BEFORE you consider increasing the block size limit.
> Otherwise you just kick the can down the road, making it bigger.
>
>> concerned about the working set size, miners can independently set
>> their own policies for what they confirm, for instance maybe they just
>
> Problem is the skewed incentive structure. Rational miners will always
> include dust output with fees, because the eternal cost of UTXO is payed by
> the network and future miners, not the current/individual miner.
>
> On Mar 11, 2013, at 7:01 AM, 	Jorge Tim?n <jtimonmv at gmail.com> wrote:
>
>> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:
>>> It's also been suggested multiple times to make transaction outputs with
>>> a value less than the transaction fee non-standard, either with a fixed
>>> constant or by some sort of measurement.
>>
>> As said on the bitcointalk thread, I think this is the wrong approach.
>> This way you effectively disable legitimate use cases for payments
>> that "are worth" less than the fees like smart property/colored coins.
>
> this.
>
>> Just activate a non-proportional
>> demurrage (well, I won't complain if you just turn bitcoin into
>> freicoin, just think that non-proportional would be more acceptable by
>> most bitcoiners) that incentives old transactions to be moved
>
> You could delegate the decision to the user with a rule like:
>
> if (output<fee):
>  limit lifetime of the UTXO to 10 years.
> if (output>fee):
>  unlimited lifetime
>
> Then, when a user creates a transaction, he can decide whether he wants to
> have limited or unlimited lifetime. The rationale for limiting the lifetime
> for (output<fee) transactions is that they may have no inherent economic
> incentive to be spend.
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From tadas.varanavicius at gmail.com  Mon Mar 11 19:08:54 2013
From: tadas.varanavicius at gmail.com (=?UTF-8?B?VGFkYXMgVmFyYW5hdmnEjWl1cw==?=)
Date: Mon, 11 Mar 2013 21:08:54 +0200
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
Message-ID: <513E2BC6.2050102@gmail.com>

On 03/11/2013 08:17 PM, Benjamin Lindner wrote:
> The problem of UTXO in principal scales with the block size limit. Thus it should be fixed BEFORE you consider increasing the block size limit. Otherwise you just kick the can down the road, making it bigger.

Let's assume bitcoin has scaled up to 2000 tx/s. We all want this, 
right? https://en.bitcoin.it/wiki/Scalability. Block size is 500 MB. 
CPU, network and archival blockchain storage seem to solvable.

Let's say SatoshiDice-like systems are doing informational transactions 
that produce unspendable outputs, because they can and users are paying 
for it anyway (proved in real life). 400 unspendable outputs per second 
would be realistic.

This would be bloating UTXO data at a speed of 52 GB/year. That's a very 
big memory leak. And this is just the unspendable outputs.

Bitcoin cannot scale up until such dust output spamming is discouraged 
at the protocol level.





From runesvend at gmail.com  Mon Mar 11 19:27:51 2013
From: runesvend at gmail.com (Rune K. Svendsen)
Date: Mon, 11 Mar 2013 20:27:51 +0100
Subject: [Bitcoin-development] =?utf-8?q?=5BPATCH=5D_Change_recommended_fe?=
	=?utf-8?q?e_to_0=2E001_BTC?=
Message-ID: <1363030071-26731-1-git-send-email-runesvend@gmail.com>

From: "Rune K. Svendsen" <runesvend at gmail.com>

On the Main tab in the Options dialog, it previously said a minimum
fee of 0.01 is recommended. This amounts to about $0.50 at today's
price. Change this to 0.001 to be more sensible. We could even go
lower, perhaps.
---
 src/qt/forms/optionsdialog.ui  |    2 +-
 src/qt/locale/bitcoin_bg.ts    |    2 +-
 src/qt/locale/bitcoin_ca_ES.ts |    2 +-
 src/qt/locale/bitcoin_cs.ts    |    4 ++--
 src/qt/locale/bitcoin_da.ts    |    4 ++--
 src/qt/locale/bitcoin_de.ts    |    4 ++--
 src/qt/locale/bitcoin_el_GR.ts |    4 ++--
 src/qt/locale/bitcoin_en.ts    |    4 ++--
 src/qt/locale/bitcoin_es.ts    |    2 +-
 src/qt/locale/bitcoin_es_CL.ts |    4 ++--
 src/qt/locale/bitcoin_et.ts    |    2 +-
 src/qt/locale/bitcoin_eu_ES.ts |    2 +-
 src/qt/locale/bitcoin_fa.ts    |    4 ++--
 src/qt/locale/bitcoin_fa_IR.ts |    2 +-
 src/qt/locale/bitcoin_fi.ts    |    4 ++--
 src/qt/locale/bitcoin_fr.ts    |    4 ++--
 src/qt/locale/bitcoin_fr_CA.ts |    2 +-
 src/qt/locale/bitcoin_gu_IN.ts |    2 +-
 src/qt/locale/bitcoin_he.ts    |    4 ++--
 src/qt/locale/bitcoin_hi_IN.ts |    2 +-
 src/qt/locale/bitcoin_hr.ts    |    4 ++--
 src/qt/locale/bitcoin_hu.ts    |    2 +-
 src/qt/locale/bitcoin_it.ts    |    2 +-
 src/qt/locale/bitcoin_ja.ts    |    2 +-
 src/qt/locale/bitcoin_lt.ts    |    2 +-
 src/qt/locale/bitcoin_nb.ts    |    4 ++--
 src/qt/locale/bitcoin_nl.ts    |    2 +-
 src/qt/locale/bitcoin_pl.ts    |    4 ++--
 src/qt/locale/bitcoin_pt_BR.ts |    4 ++--
 src/qt/locale/bitcoin_pt_PT.ts |    4 ++--
 src/qt/locale/bitcoin_ro_RO.ts |    2 +-
 src/qt/locale/bitcoin_ru.ts    |    4 ++--
 src/qt/locale/bitcoin_sk.ts    |    4 ++--
 src/qt/locale/bitcoin_sr.ts    |    2 +-
 src/qt/locale/bitcoin_sv.ts    |    4 ++--
 src/qt/locale/bitcoin_th_TH.ts |    2 +-
 src/qt/locale/bitcoin_tr.ts    |    4 ++--
 src/qt/locale/bitcoin_uk.ts    |    2 +-
 src/qt/locale/bitcoin_zh_CN.ts |    4 ++--
 src/qt/locale/bitcoin_zh_TW.ts |    4 ++--
 40 files changed, 61 insertions(+), 61 deletions(-)

diff --git a/src/qt/forms/optionsdialog.ui b/src/qt/forms/optionsdialog.ui
index 3771f9d..1d2f553 100644
--- a/src/qt/forms/optionsdialog.ui
+++ b/src/qt/forms/optionsdialog.ui
@@ -33,7 +33,7 @@
        <item>
         <widget class="QLabel" name="transactionFeeInfoLabel">
          <property name="text">
-          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</string>
+          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</string>
          </property>
          <property name="textFormat">
           <enum>Qt::PlainText</enum>
diff --git a/src/qt/locale/bitcoin_bg.ts b/src/qt/locale/bitcoin_bg.ts
index 39b41ab..163637e 100644
--- a/src/qt/locale/bitcoin_bg.ts
+++ b/src/qt/locale/bitcoin_bg.ts
@@ -820,7 +820,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>????? ?? ?????????? ?? kB. ????????? ??????????? ? ???????, ????? ??????????? ?????????? (miners). ??-?????? ???????? ?? ???????? ?? ?????? ??????????? ?? ??????????. ???????? ?????????? ?? ????? 1 kB. ?????????????? ???????? - 0.0005 BTC.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_ca_ES.ts b/src/qt/locale/bitcoin_ca_ES.ts
index e005ef2..25d3090 100644
--- a/src/qt/locale/bitcoin_ca_ES.ts
+++ b/src/qt/locale/bitcoin_ca_ES.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_cs.ts b/src/qt/locale/bitcoin_cs.ts
index c4c6c72..18f907e 100644
--- a/src/qt/locale/bitcoin_cs.ts
+++ b/src/qt/locale/bitcoin_cs.ts
@@ -824,8 +824,8 @@ Adresa: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Dobrovoln? transak?n? poplatek za ka?d? zapo?at? kB dopom?h? k rychl?mu zpracov?n? tv?ch transakc?. V?t?ina transakc? m? do 1 kB. Doporu?en? v??e poplatku je 0.01.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Dobrovoln? transak?n? poplatek za ka?d? zapo?at? kB dopom?h? k rychl?mu zpracov?n? tv?ch transakc?. V?t?ina transakc? m? do 1 kB. Doporu?en? v??e poplatku je 0.001.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_da.ts b/src/qt/locale/bitcoin_da.ts
index 01f9c8a..7038873 100644
--- a/src/qt/locale/bitcoin_da.ts
+++ b/src/qt/locale/bitcoin_da.ts
@@ -825,8 +825,8 @@ Adresse: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Valgfri transaktionsgebyr pr. kB, der hj?lper dine transaktioner med at blive behandlet hurtigt. De fleste transaktioner er p? 1 kB. Gebyr p? 0.01 anbefales.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Valgfri transaktionsgebyr pr. kB, der hj?lper dine transaktioner med at blive behandlet hurtigt. De fleste transaktioner er p? 1 kB. Gebyr p? 0.001 anbefales.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_de.ts b/src/qt/locale/bitcoin_de.ts
index 27168c8..368bf33 100644
--- a/src/qt/locale/bitcoin_de.ts
+++ b/src/qt/locale/bitcoin_de.ts
@@ -823,8 +823,8 @@ Adresse: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Optionale Transaktionsgeb?hr pro kB, die sicherstellt, dass Ihre Transaktionen schnell bearbeitet werden. Die meisten Transaktionen sind 1 kB gro?. Eine Geb?hr von 0.01 BTC wird empfohlen.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Optionale Transaktionsgeb?hr pro kB, die sicherstellt, dass Ihre Transaktionen schnell bearbeitet werden. Die meisten Transaktionen sind 1 kB gro?. Eine Geb?hr von 0.001 BTC wird empfohlen.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_el_GR.ts b/src/qt/locale/bitcoin_el_GR.ts
index ba5f0ac..470a837 100644
--- a/src/qt/locale/bitcoin_el_GR.ts
+++ b/src/qt/locale/bitcoin_el_GR.ts
@@ -819,8 +819,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>? ??????????? ?????? ??? ???? kB ?????????? ??? ??????????? ??? ?????????? ???. ?? ???????????? ?????????? ????? 1 kB. ??????????? ?????? 0.01.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>? ??????????? ?????? ??? ???? kB ?????????? ??? ??????????? ??? ?????????? ???. ?? ???????????? ?????????? ????? 1 kB. ??????????? ?????? 0.001.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_en.ts b/src/qt/locale/bitcoin_en.ts
index 39062d0..1f255b0 100644
--- a/src/qt/locale/bitcoin_en.ts
+++ b/src/qt/locale/bitcoin_en.ts
@@ -849,8 +849,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_es.ts b/src/qt/locale/bitcoin_es.ts
index a330cbf..6ab6e33 100644
--- a/src/qt/locale/bitcoin_es.ts
+++ b/src/qt/locale/bitcoin_es.ts
@@ -827,7 +827,7 @@ Direcci?n: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>Tarifa de transacci?n por KB opcional que ayuda a asegurarse de que sus transacciones se procesan r?pidamente. La mayor?a de las transacciones son de 1 KB. Tarifa de 0,01 recomendada.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_es_CL.ts b/src/qt/locale/bitcoin_es_CL.ts
index c7ce99e..39fc6b3 100644
--- a/src/qt/locale/bitcoin_es_CL.ts
+++ b/src/qt/locale/bitcoin_es_CL.ts
@@ -827,8 +827,8 @@ Direcci?n: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Comisi?n opcional por kB que ayuda a asegurar que sus transacciones son procesadas r?pidamente. La mayoria de transacciones son de 1 KB. Se recomienda comisi?n de 0.01 </translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Comisi?n opcional por kB que ayuda a asegurar que sus transacciones son procesadas r?pidamente. La mayoria de transacciones son de 1 KB. Se recomienda comisi?n de 0.001 </translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_et.ts b/src/qt/locale/bitcoin_et.ts
index b75e617..9d0a179 100644
--- a/src/qt/locale/bitcoin_et.ts
+++ b/src/qt/locale/bitcoin_et.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_eu_ES.ts b/src/qt/locale/bitcoin_eu_ES.ts
index fb13cff..f746c34 100644
--- a/src/qt/locale/bitcoin_eu_ES.ts
+++ b/src/qt/locale/bitcoin_eu_ES.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_fa.ts b/src/qt/locale/bitcoin_fa.ts
index 441710a..4371d01 100644
--- a/src/qt/locale/bitcoin_fa.ts
+++ b/src/qt/locale/bitcoin_fa.ts
@@ -820,8 +820,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>??? ??????? ?????? ?? ???????? ?? ?? ??? ??? ?????? ??????? ???? ???? ?? ????????? ?? ???? ?????? ???????. ????? ????????? ? ???????? ?????. ??? 0.01 ??????? ??????.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>??? ??????? ?????? ?? ???????? ?? ?? ??? ??? ?????? ??????? ???? ???? ?? ????????? ?? ???? ?????? ???????. ????? ????????? ? ???????? ?????. ??? 0.001 ??????? ??????.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_fa_IR.ts b/src/qt/locale/bitcoin_fa_IR.ts
index 74e1445..c1dd38c 100644
--- a/src/qt/locale/bitcoin_fa_IR.ts
+++ b/src/qt/locale/bitcoin_fa_IR.ts
@@ -824,7 +824,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_fi.ts b/src/qt/locale/bitcoin_fi.ts
index 0838c6d..83de70c 100644
--- a/src/qt/locale/bitcoin_fi.ts
+++ b/src/qt/locale/bitcoin_fi.ts
@@ -824,8 +824,8 @@ Osoite: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Vapaaehtoinen rahansiirtopalkkio per kB auttaa nopeuttamaan siirtoja. Useimmat rahansiirrot ovat 1 kB. 0.01 palkkio on suositeltava.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Vapaaehtoinen rahansiirtopalkkio per kB auttaa nopeuttamaan siirtoja. Useimmat rahansiirrot ovat 1 kB. 0.001 palkkio on suositeltava.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_fr.ts b/src/qt/locale/bitcoin_fr.ts
index 0c02062..06961b5 100644
--- a/src/qt/locale/bitcoin_fr.ts
+++ b/src/qt/locale/bitcoin_fr.ts
@@ -824,8 +824,8 @@ Adresse?: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Frais de transaction optionnels par ko qui aident ? garantir un traitement rapide des transactions. La plupart des transactions occupent 1 ko. Des frais de 0.01 sont recommand?s.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Frais de transaction optionnels par ko qui aident ? garantir un traitement rapide des transactions. La plupart des transactions occupent 1 ko. Des frais de 0.001 sont recommand?s.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_fr_CA.ts b/src/qt/locale/bitcoin_fr_CA.ts
index 6fde4d3..80adead 100644
--- a/src/qt/locale/bitcoin_fr_CA.ts
+++ b/src/qt/locale/bitcoin_fr_CA.ts
@@ -820,7 +820,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_gu_IN.ts b/src/qt/locale/bitcoin_gu_IN.ts
index 1205c86..7645131 100644
--- a/src/qt/locale/bitcoin_gu_IN.ts
+++ b/src/qt/locale/bitcoin_gu_IN.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_he.ts b/src/qt/locale/bitcoin_he.ts
index 52d7dc7..eef515b 100644
--- a/src/qt/locale/bitcoin_he.ts
+++ b/src/qt/locale/bitcoin_he.ts
@@ -823,8 +823,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>???? ????? ?????????? ??? kB ????? ??????? ??? ????? ???????. ??? ??????? ?? 1 kB. ?????? ???? ??? 0.01.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>???? ????? ?????????? ??? kB ????? ??????? ??? ????? ???????. ??? ??????? ?? 1 kB. ?????? ???? ??? 0.001.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_hi_IN.ts b/src/qt/locale/bitcoin_hi_IN.ts
index 304be77..ff601ea 100644
--- a/src/qt/locale/bitcoin_hi_IN.ts
+++ b/src/qt/locale/bitcoin_hi_IN.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_hr.ts b/src/qt/locale/bitcoin_hr.ts
index f4b47ce..587f3bc 100644
--- a/src/qt/locale/bitcoin_hr.ts
+++ b/src/qt/locale/bitcoin_hr.ts
@@ -819,8 +819,8 @@ Adresa:%4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Neobavezna naknada za transakciju po kB koja omogu?uje da se va?a transakcija obavi br?e. Ve?ina transakcija ima 1 kB.  Preporu?ena naknada je 0.01.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Neobavezna naknada za transakciju po kB koja omogu?uje da se va?a transakcija obavi br?e. Ve?ina transakcija ima 1 kB.  Preporu?ena naknada je 0.001.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_hu.ts b/src/qt/locale/bitcoin_hu.ts
index e91b5aa..1e166a6 100644
--- a/src/qt/locale/bitcoin_hu.ts
+++ b/src/qt/locale/bitcoin_hu.ts
@@ -824,7 +824,7 @@ C?m: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>Opcion?lis, kB-onk?nti tranzakci?s d?j a tranzakci?id min?l gyorsabb feldolgoz?s?nak el?seg?t?s?re.  A legt?bb tranzakci? 1 kB-os.  0,01 BTC aj?nlott.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_it.ts b/src/qt/locale/bitcoin_it.ts
index 868eb58..c98175f 100644
--- a/src/qt/locale/bitcoin_it.ts
+++ b/src/qt/locale/bitcoin_it.ts
@@ -826,7 +826,7 @@ Indirizzo: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>Commissione di transazione per kB; ? opzionale e contribuisce ad assicurare che le transazioni siano elaborate velocemente. Le transazioni sono per la maggior parte da 1 kB. Commissione raccomandata 0,01.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_ja.ts b/src/qt/locale/bitcoin_ja.ts
index f586b2c..3477468 100644
--- a/src/qt/locale/bitcoin_ja.ts
+++ b/src/qt/locale/bitcoin_ja.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_lt.ts b/src/qt/locale/bitcoin_lt.ts
index 7b0a4b4..d224a8e 100644
--- a/src/qt/locale/bitcoin_lt.ts
+++ b/src/qt/locale/bitcoin_lt.ts
@@ -822,7 +822,7 @@ Adresas: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>Neprivalomas sandorio mokestis u? KB, kuris padeda grei?iau sutvarkyti sandorius. Daugelis sandori? yra tik 1KB dyd?io. Rekomenduojamas 0,01 mokestis.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_nb.ts b/src/qt/locale/bitcoin_nb.ts
index 08cae8c..76d44f3 100644
--- a/src/qt/locale/bitcoin_nb.ts
+++ b/src/qt/locale/bitcoin_nb.ts
@@ -825,8 +825,8 @@ Adresse: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Valgfritt transaksjonsgebyr per kB som sikrer at dine transaksjoner blir raskt prosessert. De fleste transaksjoner er 1 kB. Et gebyr p? 0.01 er anbefalt.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Valgfritt transaksjonsgebyr per kB som sikrer at dine transaksjoner blir raskt prosessert. De fleste transaksjoner er 1 kB. Et gebyr p? 0.001 er anbefalt.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_nl.ts b/src/qt/locale/bitcoin_nl.ts
index 26883a8..c740caf 100644
--- a/src/qt/locale/bitcoin_nl.ts
+++ b/src/qt/locale/bitcoin_nl.ts
@@ -826,7 +826,7 @@ Adres: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>Optionele transactiekosten per kB die helpen om uw transacties snel te verwerken. De meeste transacties zijn 1 kB. Transactiekosten van 0,01 wordt aangeraden</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_pl.ts b/src/qt/locale/bitcoin_pl.ts
index 02c7c59..921863e 100644
--- a/src/qt/locale/bitcoin_pl.ts
+++ b/src/qt/locale/bitcoin_pl.ts
@@ -824,8 +824,8 @@ Adres: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Opcjonalna prowizja za transakcje za kB, wspomaga ona szybko?? przebiegu transakcji. Wi?kszo?? transakcji jest 1 kB. Zalecana prowizja 0.01 .</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Opcjonalna prowizja za transakcje za kB, wspomaga ona szybko?? przebiegu transakcji. Wi?kszo?? transakcji jest 1 kB. Zalecana prowizja 0.001 .</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_pt_BR.ts b/src/qt/locale/bitcoin_pt_BR.ts
index d13ce2c..40f5d5c 100644
--- a/src/qt/locale/bitcoin_pt_BR.ts
+++ b/src/qt/locale/bitcoin_pt_BR.ts
@@ -818,8 +818,8 @@ Endere?o: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Taxa opcional de transa??es por kB que ajuda a garantir que suas transa??es ser?o processadas rapidamente. A maior parte das transa??es ? de 1 kB. Taxa de 0.01 recomendada.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Taxa opcional de transa??es por kB que ajuda a garantir que suas transa??es ser?o processadas rapidamente. A maior parte das transa??es ? de 1 kB. Taxa de 0.001 recomendada.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_pt_PT.ts b/src/qt/locale/bitcoin_pt_PT.ts
index 72f5b4a..dca9f08 100644
--- a/src/qt/locale/bitcoin_pt_PT.ts
+++ b/src/qt/locale/bitcoin_pt_PT.ts
@@ -824,8 +824,8 @@ Endere?o: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Taxa de transa??o opcional por KB que ajuda a assegurar que as suas transa??es ser?o processadas rapidamente. A maioria das transa??es tem 1 kB. Taxa de 0.01 recomendada.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Taxa de transa??o opcional por KB que ajuda a assegurar que as suas transa??es ser?o processadas rapidamente. A maioria das transa??es tem 1 kB. Taxa de 0.001 recomendada.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_ro_RO.ts b/src/qt/locale/bitcoin_ro_RO.ts
index 3a9239e..b293d02 100644
--- a/src/qt/locale/bitcoin_ro_RO.ts
+++ b/src/qt/locale/bitcoin_ro_RO.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_ru.ts b/src/qt/locale/bitcoin_ru.ts
index bd60aba..39bb84d 100644
--- a/src/qt/locale/bitcoin_ru.ts
+++ b/src/qt/locale/bitcoin_ru.ts
@@ -824,8 +824,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>???????????? ???????? ?? ?????? ?? ??????????, ??????? ????????? ???? ?????????, ??? ???? ?????????? ????? ?????????? ??????.  ??????????? ?????????? ???????? 1??.  ????????????? ???????? 0.01.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>???????????? ???????? ?? ?????? ?? ??????????, ??????? ????????? ???? ?????????, ??? ???? ?????????? ????? ?????????? ??????.  ??????????? ?????????? ???????? 1??.  ????????????? ???????? 0.001.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_sk.ts b/src/qt/locale/bitcoin_sk.ts
index 1343b53..e5c4262 100644
--- a/src/qt/locale/bitcoin_sk.ts
+++ b/src/qt/locale/bitcoin_sk.ts
@@ -818,8 +818,8 @@ Adresa: %4</translation>
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Volite?n? transak?n? poplatok za kB ktor? pom??e r?chlemu spracovaniu transakcie. V???ina transakci? m? 1 kB. Poplatok 0.01 je odpor??an?.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Volite?n? transak?n? poplatok za kB ktor? pom??e r?chlemu spracovaniu transakcie. V???ina transakci? m? 1 kB. Poplatok 0.001 je odpor??an?.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_sr.ts b/src/qt/locale/bitcoin_sr.ts
index f12e815..8df8633 100644
--- a/src/qt/locale/bitcoin_sr.ts
+++ b/src/qt/locale/bitcoin_sr.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_sv.ts b/src/qt/locale/bitcoin_sv.ts
index 88ad923..8796998 100644
--- a/src/qt/locale/bitcoin_sv.ts
+++ b/src/qt/locale/bitcoin_sv.ts
@@ -825,8 +825,8 @@ Adress: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Valfri transaktionsavgift per kB som ser till att dina transaktioner behandlas snabbt. De flesta transaktioner ?r 1 kB. Avgift 0.01 rekommenderas.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Valfri transaktionsavgift per kB som ser till att dina transaktioner behandlas snabbt. De flesta transaktioner ?r 1 kB. Avgift 0.001 rekommenderas.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_th_TH.ts b/src/qt/locale/bitcoin_th_TH.ts
index a12eb56..f087a56 100644
--- a/src/qt/locale/bitcoin_th_TH.ts
+++ b/src/qt/locale/bitcoin_th_TH.ts
@@ -815,7 +815,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation type="unfinished"/>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_tr.ts b/src/qt/locale/bitcoin_tr.ts
index 08e94bf..bc344e9 100644
--- a/src/qt/locale/bitcoin_tr.ts
+++ b/src/qt/locale/bitcoin_tr.ts
@@ -824,8 +824,8 @@ Adres: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>Muamelelerin h?zl? i?lenmesini garantilemeye yard?m eden, se?ime dayal? kB ba?? muamele ?creti. Muamelelerin ?o?unlu?unun boyutu 1 kB&apos;dir. 0.01 ?creti tavsiye edilir.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>Muamelelerin h?zl? i?lenmesini garantilemeye yard?m eden, se?ime dayal? kB ba?? muamele ?creti. Muamelelerin ?o?unlu?unun boyutu 1 kB&apos;dir. 0.001 ?creti tavsiye edilir.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_uk.ts b/src/qt/locale/bitcoin_uk.ts
index 02b5d2e..5298094 100644
--- a/src/qt/locale/bitcoin_uk.ts
+++ b/src/qt/locale/bitcoin_uk.ts
@@ -825,7 +825,7 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
         <translation>??????????? ??????? ?? ????? ?? ????????, ??? ???????? ???? ????????? ? ????, ?? ??? ??????? ???? ????????? ??????. ?????? ????????? ????????? ????? 1 ??. ????????????? ???????: 0,01.</translation>
     </message>
     <message>
diff --git a/src/qt/locale/bitcoin_zh_CN.ts b/src/qt/locale/bitcoin_zh_CN.ts
index 640f353..c61d89e 100644
--- a/src/qt/locale/bitcoin_zh_CN.ts
+++ b/src/qt/locale/bitcoin_zh_CN.ts
@@ -825,8 +825,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>??????????????????????.  ??????????? 1 kB. ????0.01????.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>??????????????????????.  ??????????? 1 kB. ????0.001????.</translation>
     </message>
     <message>
         <location line="+15"/>
diff --git a/src/qt/locale/bitcoin_zh_TW.ts b/src/qt/locale/bitcoin_zh_TW.ts
index 2aa6d7c..b52f462 100644
--- a/src/qt/locale/bitcoin_zh_TW.ts
+++ b/src/qt/locale/bitcoin_zh_TW.ts
@@ -824,8 +824,8 @@ Address: %4
     </message>
     <message>
         <location line="+6"/>
-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>
-        <translation>?????????, ? kB ?????, ??????????????. ??????????? 1 kB. ????? 0.01 ?.</translation>
+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>
+        <translation>?????????, ? kB ?????, ??????????????. ??????????? 1 kB. ????? 0.001 ?.</translation>
     </message>
     <message>
         <location line="+15"/>
-- 
1.7.10.4




From mark at monetize.io  Mon Mar 11 18:59:14 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Mon, 11 Mar 2013 11:59:14 -0700
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
Message-ID: <CACh7GpHnAc8JBce4uvtU9Qw+1Th9R9_6ySc83ZEBGC-tX+y_9A@mail.gmail.com>

On Mon, Mar 11, 2013 at 11:17 AM, Benjamin Lindner <ben at benlabs.net> wrote:

> > Just activate a non-proportional
> > demurrage (well, I won't complain if you just turn bitcoin into
> > freicoin, just think that non-proportional would be more acceptable by
> > most bitcoiners) that incentives old transactions to be moved
>
> You could delegate the decision to the user with a rule like:
>
> if (output<fee):
>  limit lifetime of the UTXO to 10 years.
> if (output>fee):
>  unlimited lifetime
>
> Then, when a user creates a transaction, he can decide whether he wants to
> have limited or unlimited lifetime. The rationale for limiting the lifetime
> for (output<fee) transactions is that they may have no inherent economic
> incentive to be spend.
>

If you think demurrage has a bad rep, wait until you see the response to
escheatment (which is what's really being proposed here).

UTXO growth over time is worst-case linear, while computational resources
increase exponentially. Mike nailed it on the head: all of this is a
solution in search of a problem.

Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/bf5a29f5/attachment.html>

From luke at dashjr.org  Mon Mar 11 19:35:54 2013
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 11 Mar 2013 19:35:54 +0000
Subject: [Bitcoin-development] [PATCH] Change recommended fee to 0.001
	BTC
In-Reply-To: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
References: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
Message-ID: <201303111935.55767.luke@dashjr.org>

On Monday, March 11, 2013 7:27:51 PM Rune K. Svendsen wrote:
> From: "Rune K. Svendsen" <runesvend at gmail.com>
> 
> On the Main tab in the Options dialog, it previously said a minimum
> fee of 0.01 is recommended. This amounts to about $0.50 at today's
> price. Change this to 0.001 to be more sensible. We could even go
> lower, perhaps.

Please use GitHub pull requests (or at least publish a git repository) rather 
than mailing patches..

I'd suggest two commits for this:
1. Move the recommended fee outside the translatable string (bonus points to 
format it using the user's preferred unit)
2. Change the recommended fee in one place

Whether the recommended fee *should* be changed or not, I have no opinion on.
Eligius uses a lower minimum fee, but I believe most pools/miners will treat 
anything under 0.01 BTC as if it were no fee at all...

Luke



From runesvend at gmail.com  Mon Mar 11 20:08:10 2013
From: runesvend at gmail.com (=?ISO-8859-1?Q?Rune_Kj=E6r_Svendsen?=)
Date: Mon, 11 Mar 2013 21:08:10 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
Message-ID: <CAH2=CKx-SWk17v9uGFAmk=-sbFrxeuvAvCFmECSvM7FEH-C0kw@mail.gmail.com>

On Mon, Mar 11, 2013 at 12:01 PM, Jorge Tim?n <jtimonmv at gmail.com> wrote:

> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:
> > It's also been suggested multiple times to make transaction outputs with
> > a value less than the transaction fee non-standard, either with a fixed
> > constant or by some sort of measurement.
>
> As said on the bitcointalk thread, I think this is the wrong approach.
> This way you effectively disable legitimate use cases for payments
> that "are worth" less than the fees like smart property/colored coins.
> While the transactions pay fees, they should not be considered spam
> regardless of how little the quantities being moved are.
>
> Then your only concern are unspent outputs and comparing fees with
> values doesn't help in any way.




> Just activate a non-proportional
> demurrage (well, I won't complain if you just turn bitcoin into
> freicoin, just think that non-proportional would be more acceptable by
> most bitcoiners) that incentives old transactions to be moved and
> destroys unspent transactions with small amounts that don't move to
> another address periodically. This has been proposed many times before
> too, and I think it makes a lot more sense.
>

>From an economic point of view this *does* make sense, in my opinion.
Storing an unspent transaction in the block chain costs money because we
can't prune it. However, it would completely destroy confidence in Bitcoin,
as far as I can see. It makes sense economically, but it  isn't feasible if
we want to maintain people's confidence in Bitcoin.

I like Jeff's proposal of letting an alt-coin implement this. If it gets to
the point where Bitcoin can't function without this functionality, it'll be
a lot easier to make the transition, instead of now, when it's not really
needed, and the trust in Bitcoin really isn't that great.

/Rune



>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/28af919c/attachment.html>

From runesvend at gmail.com  Mon Mar 11 20:34:52 2013
From: runesvend at gmail.com (=?ISO-8859-1?Q?Rune_Kj=E6r_Svendsen?=)
Date: Mon, 11 Mar 2013 21:34:52 +0100
Subject: [Bitcoin-development] [PATCH] Change recommended fee to 0.001
	BTC
In-Reply-To: <201303111935.55767.luke@dashjr.org>
References: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
	<201303111935.55767.luke@dashjr.org>
Message-ID: <CAH2=CKyyjPoOTHS6bE7TBCE4UGXf+qnGv0xq-eSHg-iXMH2Rqw@mail.gmail.com>

Ok. I'll fork on Github. Looking at the source, and some Qt documentation,
it should be doable to do string substitution for both the value and the
unit.

The question is if we should define a new value, that we use solely to
display in this text, or if we should use MIN_TX_FEE or MIN_RELAY_TX_FEE in
some way. What are the dev's thoughts?

I'd like to get some more dev opinions on whether this should even be done
before I go ahead and write the code.

/Rune

On Mon, Mar 11, 2013 at 8:35 PM, Luke-Jr <luke at dashjr.org> wrote:

> On Monday, March 11, 2013 7:27:51 PM Rune K. Svendsen wrote:
> > From: "Rune K. Svendsen" <runesvend at gmail.com>
> >
> > On the Main tab in the Options dialog, it previously said a minimum
> > fee of 0.01 is recommended. This amounts to about $0.50 at today's
> > price. Change this to 0.001 to be more sensible. We could even go
> > lower, perhaps.
>
> Please use GitHub pull requests (or at least publish a git repository)
> rather
> than mailing patches..
>
> I'd suggest two commits for this:
> 1. Move the recommended fee outside the translatable string (bonus points
> to
> format it using the user's preferred unit)
> 2. Change the recommended fee in one place
>
> Whether the recommended fee *should* be changed or not, I have no opinion
> on.
> Eligius uses a lower minimum fee, but I believe most pools/miners will
> treat
> anything under 0.01 BTC as if it were no fee at all...
>
> Luke
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/64a72b8a/attachment.html>

From gmaxwell at gmail.com  Mon Mar 11 20:45:02 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 11 Mar 2013 13:45:02 -0700
Subject: [Bitcoin-development] [PATCH] Change recommended fee to 0.001
	BTC
In-Reply-To: <CAH2=CKyyjPoOTHS6bE7TBCE4UGXf+qnGv0xq-eSHg-iXMH2Rqw@mail.gmail.com>
References: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
	<201303111935.55767.luke@dashjr.org>
	<CAH2=CKyyjPoOTHS6bE7TBCE4UGXf+qnGv0xq-eSHg-iXMH2Rqw@mail.gmail.com>
Message-ID: <CAAS2fgQ8rGwKM6rqyMzMu-KaL_Kj5P5-bMJqaR+o=YW7ShJN9w@mail.gmail.com>

On Mon, Mar 11, 2013 at 1:34 PM, Rune Kj?r Svendsen <runesvend at gmail.com> wrote:
> The question is if we should define a new value, that we use solely to
> display in this text, or if we should use MIN_TX_FEE or MIN_RELAY_TX_FEE in
> some way. What are the dev's thoughts?

It should be a new value.



From gronager at ceptacle.com  Mon Mar 11 20:36:05 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Mon, 11 Mar 2013 21:36:05 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CAH2=CKx-SWk17v9uGFAmk=-sbFrxeuvAvCFmECSvM7FEH-C0kw@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CAH2=CKx-SWk17v9uGFAmk=-sbFrxeuvAvCFmECSvM7FEH-C0kw@mail.gmail.com>
Message-ID: <EE5395CC-46C4-4C24-AA8F-A4E22FD07693@ceptacle.com>

The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared. 

If we succeed with that then I don't see a problem in a growing set of UTXO, may that be due to abuse/misuse or just massive use. A properly designed DHT should be able to scale to this.

However, that being said, if you worry about the size of the UTXO set you should change the current coin choosing algorithm to simply get rid of dust. 

The current algorithm (ApproximateBestSubset) tend to accumulate dust as dust tend to be on an other scale than a real transactions and hence it is never included.

Regarding the demurrage/escheatment road, I agree that this is for another project. However, if users/developers like this idea, they can just implement a coin choosing algorithm donating dust as miner fee and use it on their satoshi-dice polluted wallet ;)

/M
  
On 11/03/2013, at 21:08, Rune Kj?r Svendsen <runesvend at gmail.com> wrote:

> On Mon, Mar 11, 2013 at 12:01 PM, Jorge Tim?n <jtimonmv at gmail.com> wrote:
> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:
> > It's also been suggested multiple times to make transaction outputs with
> > a value less than the transaction fee non-standard, either with a fixed
> > constant or by some sort of measurement.
> 
> As said on the bitcointalk thread, I think this is the wrong approach.
> This way you effectively disable legitimate use cases for payments
> that "are worth" less than the fees like smart property/colored coins.
> While the transactions pay fees, they should not be considered spam
> regardless of how little the quantities being moved are.
> 
> Then your only concern are unspent outputs and comparing fees with
> values doesn't help in any way.
> 
>  
> Just activate a non-proportional
> demurrage (well, I won't complain if you just turn bitcoin into
> freicoin, just think that non-proportional would be more acceptable by
> most bitcoiners) that incentives old transactions to be moved and
> destroys unspent transactions with small amounts that don't move to
> another address periodically. This has been proposed many times before
> too, and I think it makes a lot more sense.
> 
> From an economic point of view this *does* make sense, in my opinion. Storing an unspent transaction in the block chain costs money because we can't prune it. However, it would completely destroy confidence in Bitcoin, as far as I can see. It makes sense economically, but it  isn't feasible if we want to maintain people's confidence in Bitcoin.
> 
> I like Jeff's proposal of letting an alt-coin implement this. If it gets to the point where Bitcoin can't function without this functionality, it'll be a lot easier to make the transition, instead of now, when it's not really needed, and the trust in Bitcoin really isn't that great.
> 
> /Rune
> 
>  
> 
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the  
> endpoint security space. For insight on selecting the right partner to 
> tackle endpoint security challenges, access the full report. 
> http://p.sf.net/sfu/symantec-dev2dev_______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From gmaxwell at gmail.com  Mon Mar 11 21:01:20 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 11 Mar 2013 14:01:20 -0700
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <EE5395CC-46C4-4C24-AA8F-A4E22FD07693@ceptacle.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CAH2=CKx-SWk17v9uGFAmk=-sbFrxeuvAvCFmECSvM7FEH-C0kw@mail.gmail.com>
	<EE5395CC-46C4-4C24-AA8F-A4E22FD07693@ceptacle.com>
Message-ID: <CAAS2fgRJznqyFuWnhHedA151peVn4K77Bw82ACC1WhnUyCdAqw@mail.gmail.com>

On Mon, Mar 11, 2013 at 1:36 PM, Michael Gronager <gronager at ceptacle.com> wrote:
> The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared.

I believe you are confusing disjoint things.



From gronager at ceptacle.com  Mon Mar 11 21:15:23 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Mon, 11 Mar 2013 22:15:23 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CAAS2fgRJznqyFuWnhHedA151peVn4K77Bw82ACC1WhnUyCdAqw@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CAH2=CKx-SWk17v9uGFAmk=-sbFrxeuvAvCFmECSvM7FEH-C0kw@mail.gmail.com>
	<EE5395CC-46C4-4C24-AA8F-A4E22FD07693@ceptacle.com>
	<CAAS2fgRJznqyFuWnhHedA151peVn4K77Bw82ACC1WhnUyCdAqw@mail.gmail.com>
Message-ID: <D80BAE2B-4F2B-4ADF-A8C4-E57CBCEEC470@ceptacle.com>

>> The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared.
> 
> I believe you are confusing disjoint things.

Nope, ahh well, I agree that the use of UTXOs in the Satoshi client today by no means a directed towards a DHT, though it does help speeding up validation (db lookup to check if an output is indeed unspent).

However, an alternative way to bootstrap and validate transactions exist, needing only the UTXOs and not the rest of the blockchain history: An authenticated data structure storing the UTXOs in a DHT. 

/M


> 
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the  
> endpoint security space. For insight on selecting the right partner to 
> tackle endpoint security challenges, access the full report. 
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From runesvend at gmail.com  Mon Mar 11 21:17:25 2013
From: runesvend at gmail.com (=?ISO-8859-1?Q?Rune_Kj=E6r_Svendsen?=)
Date: Mon, 11 Mar 2013 22:17:25 +0100
Subject: [Bitcoin-development] [PATCH] Change recommended fee to 0.001
	BTC
In-Reply-To: <201303112046.51263.luke@dashjr.org>
References: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
	<201303111935.55767.luke@dashjr.org>
	<CAH2=CKyyjPoOTHS6bE7TBCE4UGXf+qnGv0xq-eSHg-iXMH2Rqw@mail.gmail.com>
	<201303112046.51263.luke@dashjr.org>
Message-ID: <CAH2=CKy_o0wCWAfEHF0Zg4T1WGSoZ0o6LNB+uPXWdZmLv6siSg@mail.gmail.com>

On Mon, Mar 11, 2013 at 9:46 PM, Luke-Jr <luke at dashjr.org> wrote:

> On Monday, March 11, 2013 8:34:52 PM Rune Kj?r Svendsen wrote:
> > Ok. I'll fork on Github. Looking at the source, and some Qt
> documentation,
> > it should be doable to do string substitution for both the value and the
> > unit.
>
> Side note: I imagine you'd be substituting a formatted string, and using
> some
> other function to format the string (which already exists to decide how to
> display units elsewhere).
>

I'm not entirely sure what you mean by this. I plan on using the method
described on this page http://doc.qt.digia.com/3.1/i18n.html under "Use
QString::arg() for Simple Arguments" and then just putting a %1 and %2 in
the translation strings and substituting for value and unit, respectively.
Haven't tested it yet, but that's what I plan to do.

Where do you want the constant defined? In main.h alongside MIN_TX_FEE
and MIN_RELAY_TX_FEE?


/Rune
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/3304d5ed/attachment.html>

From luke at dashjr.org  Mon Mar 11 21:29:29 2013
From: luke at dashjr.org (Luke-Jr)
Date: Mon, 11 Mar 2013 21:29:29 +0000
Subject: [Bitcoin-development] [PATCH] Change recommended fee to 0.001
	BTC
In-Reply-To: <CAH2=CKy_o0wCWAfEHF0Zg4T1WGSoZ0o6LNB+uPXWdZmLv6siSg@mail.gmail.com>
References: <1363030071-26731-1-git-send-email-runesvend@gmail.com>
	<201303112046.51263.luke@dashjr.org>
	<CAH2=CKy_o0wCWAfEHF0Zg4T1WGSoZ0o6LNB+uPXWdZmLv6siSg@mail.gmail.com>
Message-ID: <201303112129.30601.luke@dashjr.org>

On Monday, March 11, 2013 9:17:25 PM Rune Kj?r Svendsen wrote:
> On Mon, Mar 11, 2013 at 9:46 PM, Luke-Jr <luke at dashjr.org> wrote:
> > On Monday, March 11, 2013 8:34:52 PM Rune Kj?r Svendsen wrote:
> > > Ok. I'll fork on Github. Looking at the source, and some Qt
> > 
> > documentation,
> > 
> > > it should be doable to do string substitution for both the value and
> > > the unit.
> > 
> > Side note: I imagine you'd be substituting a formatted string, and using
> > some
> > other function to format the string (which already exists to decide how
> > to display units elsewhere).
> 
> I'm not entirely sure what you mean by this. I plan on using the method
> described on this page http://doc.qt.digia.com/3.1/i18n.html under "Use
> QString::arg() for Simple Arguments" and then just putting a %1 and %2 in
> the translation strings and substituting for value and unit, respectively.
> Haven't tested it yet, but that's what I plan to do.

eg, use a single %1 with
BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), amount)

> Where do you want the constant defined? In main.h alongside MIN_TX_FEE
> and MIN_RELAY_TX_FEE?

Sounds reasonable.



From mike at plan99.net  Mon Mar 11 22:19:07 2013
From: mike at plan99.net (Mike Hearn)
Date: Mon, 11 Mar 2013 23:19:07 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <513E2BC6.2050102@gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
	<513E2BC6.2050102@gmail.com>
Message-ID: <CANEZrP1tYTDf6k76=jcBL+10MpCgemV2TP=wZiRuA02vhUP78A@mail.gmail.com>

> This would be bloating UTXO data at a speed of 52 GB/year. That's a very
> big memory leak. And this is just the unspendable outputs.

Firstly, the UTXO set is a LevelDB, it's not stored in memory. Outputs
that never get spent are not in the working set by definition, after a
while they just end up in the bottom levels and hardly ever get
accessed. If need be we can always help LevelDB out a bit by moving
outputs that we suspect are unlikely to get spent into a separate
database, but I doubt it's needed.

Secondly, if an output can be proven unspendable it can be pruned
immediately. We already reached consensus on adding some standard
template using OP_RETURN that results in insta-pruning. So people who
want to create unspendable outputs can do so with the only side-effect
being long term chain storage. It would be effectively "free" to
pruning nodes.

So the issue is not really with unspendable outputs but with low-value
spendable outputs. Wallets with lots of tiny outputs end up generating
large transactions that take a long time to verify, in situations
where the network redlines those transactions would end up at the
bottom of the priority queue and might take longer to confirm. So
wallet apps already have incentives to try and find a good balance in
output sizes and defragment themselves if their average output gets
too low in value, eg, by send-to-self transactions at night.



From tadas.varanavicius at gmail.com  Mon Mar 11 22:25:50 2013
From: tadas.varanavicius at gmail.com (=?UTF-8?B?VGFkYXMgVmFyYW5hdmnEjWl1cw==?=)
Date: Tue, 12 Mar 2013 00:25:50 +0200
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CANEZrP1tYTDf6k76=jcBL+10MpCgemV2TP=wZiRuA02vhUP78A@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
	<513E2BC6.2050102@gmail.com>
	<CANEZrP1tYTDf6k76=jcBL+10MpCgemV2TP=wZiRuA02vhUP78A@mail.gmail.com>
Message-ID: <513E59EE.7070605@gmail.com>

On 03/12/2013 12:19 AM, Mike Hearn wrote:
> Firstly, the UTXO set is a LevelDB, it's not stored in memory. Outputs
> that never get spent are not in the working set by definition, after a
> while they just end up in the bottom levels and hardly ever get
> accessed. If need be we can always help LevelDB out a bit by moving
> outputs that we suspect are unlikely to get spent into a separate
> database, but I doubt it's needed.
Isn't there danger of an attack if UTXO is not stored in fast storage?



From mike at plan99.net  Mon Mar 11 22:39:17 2013
From: mike at plan99.net (Mike Hearn)
Date: Mon, 11 Mar 2013 23:39:17 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <513E59EE.7070605@gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
	<513E2BC6.2050102@gmail.com>
	<CANEZrP1tYTDf6k76=jcBL+10MpCgemV2TP=wZiRuA02vhUP78A@mail.gmail.com>
	<513E59EE.7070605@gmail.com>
Message-ID: <CANEZrP26L5Gv5kPcYCqEoSNgKFvuePdKfx6_dJyxuA3DZ5cAEA@mail.gmail.com>

> Isn't there danger of an attack if UTXO is not stored in fast storage?

RAM is used as a database cache.

But regardless, what kind of attack are you thinking of? Using up all
available disk seeks by sending a node a lot of fake transactions that
connect to unspent outputs, but have invalid transactions? You'll get
yourself disconnected and the IP banned even with todays code.

It's much easier to hose a node by just asking it to send you the
block chain. Watch your own node when something is syncing the chain
from it. Ping times go through the roof because there's only one
network thread. If you're worried about DoS attacks on Bitcoin, it'd
be better to fix that first.



From jtimonmv at gmail.com  Mon Mar 11 23:03:55 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Tue, 12 Mar 2013 00:03:55 +0100
Subject: [Bitcoin-development] Can this tx be formed?
Message-ID: <CABOyFfqKJx2RJ+urZoO2zbdQ1YNXOvA=b9HQZ4j2R-ETTR0Tbg@mail.gmail.com>

Say Alice signs and broadcasts a tx with input Ai, with SIGHASH_SINGLE
to Ao and SIGHASH_ANYONECANPAY
Bob signs and broadcasts a tx with input Bi, with SIGHASH_SINGLE to Bo
and SIGHASH_ANYONECANPAY

Can Carol complete the tx so that it is valid to be published in the chain?
It only has to make Ai + Bi + Ci + F = Ao + Bo + Co
but it all must be contained in a single transaction.



From tadas.varanavicius at gmail.com  Mon Mar 11 23:26:07 2013
From: tadas.varanavicius at gmail.com (=?UTF-8?B?VGFkYXMgVmFyYW5hdmnEjWl1cw==?=)
Date: Tue, 12 Mar 2013 01:26:07 +0200
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CANEZrP26L5Gv5kPcYCqEoSNgKFvuePdKfx6_dJyxuA3DZ5cAEA@mail.gmail.com>
References: <20130310043155.GA20020@savin>
	<CABOyFfp9Kd+y=SofWfq6TiR4+xeOhFL7VVHWjtrRn83HMsmPBA@mail.gmail.com>
	<CABsx9T1rt+7BQHz1S=NVtL_YV7kfCapQ+3MEf+xyXT7pZOfq7w@mail.gmail.com>
	<CABOyFfrO9Xpc=Pdh_6AM1yoHRCeuHxzqL02F-ALkimmsGbheiA@mail.gmail.com>
	<CABOyFfqh_VixG7SQMaQUkxU40MGY1f9JO3=OqwitHa1YoT4chQ@mail.gmail.com>
	<CANEZrP0gsrd2W3ODfQRSc2k5V7GotJ0vzEAxcAjnaMtDHZ9_JA@mail.gmail.com>
	<75F78378-7580-4D69-A5EA-E943AF7CEB0C@benlabs.net>
	<513E2BC6.2050102@gmail.com>
	<CANEZrP1tYTDf6k76=jcBL+10MpCgemV2TP=wZiRuA02vhUP78A@mail.gmail.com>
	<513E59EE.7070605@gmail.com>
	<CANEZrP26L5Gv5kPcYCqEoSNgKFvuePdKfx6_dJyxuA3DZ5cAEA@mail.gmail.com>
Message-ID: <513E680F.6000002@gmail.com>

On 03/12/2013 12:39 AM, Mike Hearn wrote:
> RAM is used as a database cache.
>
> But regardless, what kind of attack are you thinking of? Using up all
> available disk seeks by sending a node a lot of fake transactions that
> connect to unspent outputs, but have invalid transactions? You'll get
> yourself disconnected and the IP banned even with todays code.
I'm thinking that (assuming 2000 tx/s and UTXO growing 50 GB/year) a 
malicious miner could create 1 GB of unspent outputs and then spam nodes 
with valid transactions. This would not be dangerous, if UTXO were 
smaller and fit on RAM.

Thank you for reading and correcting me :)



From pieter.wuille at gmail.com  Tue Mar 12 00:18:10 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 12 Mar 2013 01:18:10 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large number
	of tx/block; fork risk
Message-ID: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>

Hello everyone,

?'ve just seen many reports of 0.7 nodes getting stuck around block 225430,
due to running out of lock entries in the BDB database. 0.8 nodes do not
seem to have a problem.

In any case, if you do not have this block:

  2013-03-12 00:00:10 SetBestChain: new
best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c
 height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11
23:49:08

you're likely stuck. Check debug.log and db.log (look for 'Lock table is
out of available lock entries').

If this is a widespread problem, it is an emergency. We risk having
(several) forked chains with smaller blocks, which are accepted by 0.7
nodes. Can people contact pool operators to see which fork they are on?
Blockexplorer and blockchain.info seem to be stuck as well.

Immediate solution is upgrading to 0.8, or manually setting the number of
lock objects higher in your database. I'll follow up with more concrete
instructions.

If you're unsure, please stop processing transactions.

-- 
Pieter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/657f5fcc/attachment.html>

From pieter.wuille at gmail.com  Tue Mar 12 01:01:35 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 12 Mar 2013 02:01:35 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
	number of tx/block; fork risk
In-Reply-To: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
Message-ID: <CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>

Hello again,

block 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023
(height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork
(at least mostly). Both chains are being mined on - the 0.8 one growing
faster.

After some emergency discussion on #bitcoin-dev, it seems best to try to
get the majority mining power back on the "old" chain, that is, the one
which 0.7 accepts
(with 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at
height 225430). That is the only chain every client out there will accept.
BTC Guild is switching to 0.7, so majority should abandon the 0.8 chain
soon.

Short advice: if you're a miner, please revert to 0.7 until we at least
understand exactly what causes this. If you're a merchant, and are on 0.8,
stop processing transactions until both sides have switched to the same
chain again. We'll see how to proceed afterwards.

-- 
Pieter



On Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> Hello everyone,
>
> ?'ve just seen many reports of 0.7 nodes getting stuck around block
> 225430, due to running out of lock entries in the BDB database. 0.8 nodes
> do not seem to have a problem.
>
> In any case, if you do not have this block:
>
>   2013-03-12 00:00:10 SetBestChain: new
> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c
>  height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11
> 23:49:08
>
> you're likely stuck. Check debug.log and db.log (look for 'Lock table is
> out of available lock entries').
>
> If this is a widespread problem, it is an emergency. We risk having
> (several) forked chains with smaller blocks, which are accepted by 0.7
> nodes. Can people contact pool operators to see which fork they are on?
> Blockexplorer and blockchain.info seem to be stuck as well.
>
> Immediate solution is upgrading to 0.8, or manually setting the number of
> lock objects higher in your database. I'll follow up with more concrete
> instructions.
>
> If you're unsure, please stop processing transactions.
>
> --
> Pieter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/9a987241/attachment.html>

From etotheipi at gmail.com  Tue Mar 12 07:03:54 2013
From: etotheipi at gmail.com (Alan Reiner)
Date: Tue, 12 Mar 2013 03:03:54 -0400
Subject: [Bitcoin-development] Some PR preparation
Message-ID: <513ED35A.8080203@gmail.com>

I'm sure it won't be long before Slashdot and a variety of sources start
reporting on this event.  Bitcoin has been in the media a lot lately, so
this story is likely to get some attention.  The blowback of this event
is mostly psychological, so I think it would be exceptionally wise to
start preparing PR comments that can be posted on articles immediately
after they go public.  This event is likely draw much more negative
attention than it deserves, and getting some positive&informed comments
posted up front will potentially make a difference in the way the story
is received. 

Undoubtedly, many articles (and especially commenters) will shape this
into "the end of Bitcoin".   I would describe it as "there was a short
and mostly-harmless lapse in the ability of the network to reach a
consensus, causing transactions to get delayed by a few hours."   It
*really* needs to be emphasized that coins are safe, and nothing anyone
has/could do will change that.  And that it would've been extremely
difficult to exploit for gain.  Transactions got delayed while a bug was
fixed.  End of story.

Hell, someone here should submit their own slashdot article about it! 
100% chance this hits slashdot -- it might as well be written by someone
who understands it.  Similarly, we could be sending sources information
to pre-empt misinformation being spread about it.  Unfortunately, I have
to go to bed, so I can't really do much.  I just wanted folks to be on
the lookout and be ready to respond to the crazy stuff that's going to
hit the media in the next 12 hours.

-Alan



From pete at petertodd.org  Tue Mar 12 07:49:45 2013
From: pete at petertodd.org (Peter Todd)
Date: Tue, 12 Mar 2013 03:49:45 -0400
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <20130310043155.GA20020@savin>
References: <20130310043155.GA20020@savin>
Message-ID: <20130312074945.GB25250@savin>

On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:
> As discussed endlessly data in the UTXO set is more costly, especially
> in the long run, than transaction data itself. The fee system is per KB
> in a block, and thus doesn't properly capture the long-term costs of
> UTXO creation.

There's been a lot of discussion about this issue, and many people have
asked that Bitcoin not arbitrarily block interesting potential uses of
provably unspendable txouts for data applications, and similarly
spendable txouts representing assets. I've changed my hardline position
and now think we should support all that stuff. However, there is one
remaining class of txout not yet talked about, unspendable but not
provably so txouts. For instance we could make the following a standard
transaction type:

scriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>
scriptSig: <data>

Of course, usually the 20 byte digest would be picked randomly, but it
might not be, and thus all validating nodes will always have a copy of
the data. With the 10KB limit on script sizes you can fit 9974 bytes of
data per transaction output with very little waste.

A good application is timestamping, with the advantage over
coinbase/merkle tree systems in that you don't have to wait until your
timestamp confirms, or even store the timestamp at all. Another
application, quite possible with large block sizes and hence cheap or
free transactions, is secure data backups. In particular such a service,
perhaps called Google Chain Storage, can offer the unique guarantee that
you can know you're data is secure by simply performing a successful
Bitcoin transaction.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/10b7fde5/attachment.sig>

From mike at plan99.net  Tue Mar 12 09:10:15 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 12 Mar 2013 10:10:15 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
Message-ID: <CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>

Just so we're all on the same page, can someone confirm my
understanding  - are any of the following statements untrue?

BDB ran out of locks.
However, only on some 0.7 nodes. Others, perhaps nodes using different
flags, managed it.
We have processed 1mb sized blocks on the testnet.
Therefore it isn't presently clear why that particular block caused
lock exhaustion when other larger blocks have not.

The reason for increasing the soft limit is still present (we have run
out of space).
Therefore transactions are likely to start stacking up in the memory
pool again very shortly, as they did last week.
There are no bounds on the memory pool size. If too many transactions
enter the pool then nodes will start to die with OOM failures.
Therefore it is possible that we have a very limited amount of time
until nodes start dying en-masse.
Even if nodes do not die, users have no way to find out what the
current highest fees/bids for block space are, nor any way to change
the fee on sent transactions.
Therefore Bitcoin will shortly start to break for the majority of
users who don't have a deep understanding of the system.


If all the above statements are true, we appear to be painted into a
corner - can't roll forward and can't roll back, with very limited
time to come up with a solution. I see only a small number of
alternatives:

1) Start aggressively trying to block or down-prioritize SatoshiDice
transactions at the network level, to buy time and try to avoid
mempool exhaustion. I don't know a good way to do this, although it
appears that virtually all their traffic is actually coming via
blockchain.infos My Wallet service. During their last outage block
sizes seemed to drop to around 50kb. Alternatively, ask SD to
temporarily suspend their service (this seems like a long shot).

2) Perform a crash hard fork as soon as possible, probably with no
changes in it except a new block size limit. Question - try to lift
the 1mb limit at the same time, or not?




On Tue, Mar 12, 2013 at 2:01 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> Hello again,
>
> block 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023
> (height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork (at
> least mostly). Both chains are being mined on - the 0.8 one growing faster.
>
> After some emergency discussion on #bitcoin-dev, it seems best to try to get
> the majority mining power back on the "old" chain, that is, the one which
> 0.7 accepts (with
> 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at height
> 225430). That is the only chain every client out there will accept. BTC
> Guild is switching to 0.7, so majority should abandon the 0.8 chain soon.
>
> Short advice: if you're a miner, please revert to 0.7 until we at least
> understand exactly what causes this. If you're a merchant, and are on 0.8,
> stop processing transactions until both sides have switched to the same
> chain again. We'll see how to proceed afterwards.
>
> --
> Pieter
>
>
>
> On Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>
> wrote:
>>
>> Hello everyone,
>>
>> ?'ve just seen many reports of 0.7 nodes getting stuck around block
>> 225430, due to running out of lock entries in the BDB database. 0.8 nodes do
>> not seem to have a problem.
>>
>> In any case, if you do not have this block:
>>
>>   2013-03-12 00:00:10 SetBestChain: new
>> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c
>> height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11
>> 23:49:08
>>
>> you're likely stuck. Check debug.log and db.log (look for 'Lock table is
>> out of available lock entries').
>>
>> If this is a widespread problem, it is an emergency. We risk having
>> (several) forked chains with smaller blocks, which are accepted by 0.7
>> nodes. Can people contact pool operators to see which fork they are on?
>> Blockexplorer and blockchain.info seem to be stuck as well.
>>
>> Immediate solution is upgrading to 0.8, or manually setting the number of
>> lock objects higher in your database. I'll follow up with more concrete
>> instructions.
>>
>> If you're unsure, please stop processing transactions.
>>
>> --
>> Pieter
>
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



From pete at petertodd.org  Tue Mar 12 09:47:00 2013
From: pete at petertodd.org (Peter Todd)
Date: Tue, 12 Mar 2013 05:47:00 -0400
Subject: [Bitcoin-development] Changing the fee on already sent transactions
Message-ID: <20130312094700.GA8130@savin>

We can allow for transaction replacement for the purpose of adding fees
to existing transactions safely, and while not increasing the risk of
double-spends by taking advantage of the stubbed out replacement code.

Specifically the replacement code allows for the replacement of a
transaction if a transaction spending the tx that is being replaced is
not in the mempool. Specifically:

664     // Check for conflicts with in-memory transactions
665     CTransaction* ptxOld = NULL;
666     for (unsigned int i = 0; i < tx.vin.size(); i++)
667     {
668         COutPoint outpoint = tx.vin[i].prevout;
669         if (mapNextTx.count(outpoint)){

Followed by the actual replacement logic. We could change this logic to
instead evaluate if the candidate replacement does not remove or
decrease the value of any existing outputs. Adding outputs is ok.
Changing the set of inputs is also ok, provided that there are no
conflicts with other spent transactions. DoS attacks would be prevented
by only forwarding/accepting into the mempool replacements that increase
the fees paid by at least MIN_RELAY_TX_FEE * size - essentially the same
decision to allow the broadcast of the transaction in the first place.

Because a transaction can not be replaced if another transaction already
depends on it the change would not increse double-spend risks for
unconfirmed transactions.

Along with this change code can be added to clients to examine the
mempool and recent blocks to determine what fee would be required to get
a transaction confirmed in what time.


Of course, considering our recent "fun" last night, I'll be the first to
admit that this change needs a lot of testing and careful thought.
However the ability to increase fees on already broadcast transactions
would be very valuable to users as competition for blockchain space
increases.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/f5b5dbc0/attachment.sig>

From jtimonmv at gmail.com  Tue Mar 12 09:53:44 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Tue, 12 Mar 2013 10:53:44 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
Message-ID: <CABOyFfocMfnGe8Bhny13pH+zQF+dzoguRHdqHv6v_Y8R7Bxi+Q@mail.gmail.com>

On 3/12/13, Mike Hearn <mike at plan99.net> wrote:
> 1) Start aggressively trying to block or down-prioritize SatoshiDice
> transactions at the network level, to buy time and try to avoid
> mempool exhaustion. I don't know a good way to do this, although it
> appears that virtually all their traffic is actually coming via
> blockchain.infos My Wallet service. During their last outage block
> sizes seemed to drop to around 50kb. Alternatively, ask SD to
> temporarily suspend their service (this seems like a long shot).

They have a vested interested in bitcoin's success. Can't they be
asked to suspend their operations temporarily until the new hard-fork
is properly prepared?

I thought they have stopped them already.



From pete at petertodd.org  Tue Mar 12 09:57:49 2013
From: pete at petertodd.org (Peter Todd)
Date: Tue, 12 Mar 2013 05:57:49 -0400
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
Message-ID: <20130312095749.GB8130@savin>

On Tue, Mar 12, 2013 at 10:10:15AM +0100, Mike Hearn wrote:
> There are no bounds on the memory pool size. If too many transactions
> enter the pool then nodes will start to die with OOM failures.
> Therefore it is possible that we have a very limited amount of time
> until nodes start dying en-masse.

Note that nodes dying en-mass due to OOM failures is a relatively benign
failure mode as the point as which any particular node would die is
uncorrelated with other nodes - it won't cause a network fork.

Implementing a simple and stupid "while [ true ] do ; ./bitcoind ; done"
loop combined with ulimit to keep total memory usage to something sane
is a perfectly acceptable hack until proper mempool code with expiration
can be written. Gavin can talk more about his ideas in that regard.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/59beb2ae/attachment.sig>

From mike at plan99.net  Tue Mar 12 10:10:47 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 12 Mar 2013 11:10:47 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <20130312095749.GB8130@savin>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<20130312095749.GB8130@savin>
Message-ID: <CANEZrP3KunGQSnmKxOBcuCNH=c1aHG_Yj=Ea_-HwkR5DP1eooA@mail.gmail.com>

However, most nodes are not running in such a loop today. Probably
almost no nodes are.

I suppose you could consider mass node death to be more benign than a
hard fork, but both are pretty damn serious and warrant immediate
action. Otherwise we're going to see the number of nodes drop sharply
over the coming days as unattended nodes die and then don't get
restarted.



From gronager at ceptacle.com  Tue Mar 12 10:13:09 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Tue, 12 Mar 2013 11:13:09 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
	number of tx/block; fork risk
In-Reply-To: <CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
Message-ID: <FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>

Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.

More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:

1. if they gets to old >24hr
2. if the client is running out of space, then the oldest should probably be pruned 

clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).

Following that, increase the soft and hard limit to 1 and eg 10MB, but miners should be the last to upgrade.

/M


On 12/03/2013, at 10:10, Mike Hearn <mike at plan99.net> wrote:

> Just so we're all on the same page, can someone confirm my
> understanding  - are any of the following statements untrue?
> 
> BDB ran out of locks.
> However, only on some 0.7 nodes. Others, perhaps nodes using different
> flags, managed it.
> We have processed 1mb sized blocks on the testnet.
> Therefore it isn't presently clear why that particular block caused
> lock exhaustion when other larger blocks have not.
> 
> The reason for increasing the soft limit is still present (we have run
> out of space).
> Therefore transactions are likely to start stacking up in the memory
> pool again very shortly, as they did last week.
> There are no bounds on the memory pool size. If too many transactions
> enter the pool then nodes will start to die with OOM failures.
> Therefore it is possible that we have a very limited amount of time
> until nodes start dying en-masse.
> Even if nodes do not die, users have no way to find out what the
> current highest fees/bids for block space are, nor any way to change
> the fee on sent transactions.
> Therefore Bitcoin will shortly start to break for the majority of
> users who don't have a deep understanding of the system.
> 
> 
> If all the above statements are true, we appear to be painted into a
> corner - can't roll forward and can't roll back, with very limited
> time to come up with a solution. I see only a small number of
> alternatives:
> 
> 1) Start aggressively trying to block or down-prioritize SatoshiDice
> transactions at the network level, to buy time and try to avoid
> mempool exhaustion. I don't know a good way to do this, although it
> appears that virtually all their traffic is actually coming via
> blockchain.infos My Wallet service. During their last outage block
> sizes seemed to drop to around 50kb. Alternatively, ask SD to
> temporarily suspend their service (this seems like a long shot).
> 
> 2) Perform a crash hard fork as soon as possible, probably with no
> changes in it except a new block size limit. Question - try to lift
> the 1mb limit at the same time, or not?
> 
> 
> 
> 
> On Tue, Mar 12, 2013 at 2:01 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>> Hello again,
>> 
>> block 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023
>> (height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork (at
>> least mostly). Both chains are being mined on - the 0.8 one growing faster.
>> 
>> After some emergency discussion on #bitcoin-dev, it seems best to try to get
>> the majority mining power back on the "old" chain, that is, the one which
>> 0.7 accepts (with
>> 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at height
>> 225430). That is the only chain every client out there will accept. BTC
>> Guild is switching to 0.7, so majority should abandon the 0.8 chain soon.
>> 
>> Short advice: if you're a miner, please revert to 0.7 until we at least
>> understand exactly what causes this. If you're a merchant, and are on 0.8,
>> stop processing transactions until both sides have switched to the same
>> chain again. We'll see how to proceed afterwards.
>> 
>> --
>> Pieter
>> 
>> 
>> 
>> On Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>
>> wrote:
>>> 
>>> Hello everyone,
>>> 
>>> ?'ve just seen many reports of 0.7 nodes getting stuck around block
>>> 225430, due to running out of lock entries in the BDB database. 0.8 nodes do
>>> not seem to have a problem.
>>> 
>>> In any case, if you do not have this block:
>>> 
>>>  2013-03-12 00:00:10 SetBestChain: new
>>> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c
>>> height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11
>>> 23:49:08
>>> 
>>> you're likely stuck. Check debug.log and db.log (look for 'Lock table is
>>> out of available lock entries').
>>> 
>>> If this is a widespread problem, it is an emergency. We risk having
>>> (several) forked chains with smaller blocks, which are accepted by 0.7
>>> nodes. Can people contact pool operators to see which fork they are on?
>>> Blockexplorer and blockchain.info seem to be stuck as well.
>>> 
>>> Immediate solution is upgrading to 0.8, or manually setting the number of
>>> lock objects higher in your database. I'll follow up with more concrete
>>> instructions.
>>> 
>>> If you're unsure, please stop processing transactions.
>>> 
>>> --
>>> Pieter
>> 
>> 
>> 
>> ------------------------------------------------------------------------------
>> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
>> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
>> endpoint security space. For insight on selecting the right partner to
>> tackle endpoint security challenges, access the full report.
>> http://p.sf.net/sfu/symantec-dev2dev
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the  
> endpoint security space. For insight on selecting the right partner to 
> tackle endpoint security challenges, access the full report. 
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From pete at petertodd.org  Tue Mar 12 10:17:24 2013
From: pete at petertodd.org (Peter Todd)
Date: Tue, 12 Mar 2013 06:17:24 -0400
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CANEZrP3KunGQSnmKxOBcuCNH=c1aHG_Yj=Ea_-HwkR5DP1eooA@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<20130312095749.GB8130@savin>
	<CANEZrP3KunGQSnmKxOBcuCNH=c1aHG_Yj=Ea_-HwkR5DP1eooA@mail.gmail.com>
Message-ID: <20130312101724.GA22309@savin>

On Tue, Mar 12, 2013 at 11:10:47AM +0100, Mike Hearn wrote:
> However, most nodes are not running in such a loop today. Probably
> almost no nodes are.
> 
> I suppose you could consider mass node death to be more benign than a
> hard fork, but both are pretty damn serious and warrant immediate
> action. Otherwise we're going to see the number of nodes drop sharply
> over the coming days as unattended nodes die and then don't get
> restarted.

I'm sure if "mass node death" becomes an issue miners will have plenty
of incentive to temporarily, or permanently, setup some high-memory and
high-bandwidth nodes to accept transactions. The DNS seeds sort by
reliability so it won't be long before nodes are connecting to them.

My home machine has 16GB of ram, bigger than the whole blockchain.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/2505f7cd/attachment.sig>

From pete at petertodd.org  Tue Mar 12 10:26:27 2013
From: pete at petertodd.org (Peter Todd)
Date: Tue, 12 Mar 2013 06:26:27 -0400
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
Message-ID: <20130312102627.GB22309@savin>

On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:
> Following that, increase the soft and hard limit to 1 and eg 10MB, but miners should be the last to upgrade.

We just saw a hard-fork happen because we ran into previously unknown
scaling issues with the current codebase. Why follow that up immediately
with yet another jump into unknown scaling territory?

I suspect the PR fallout from another chain split, let alone multiple
splits, will be far damaging to Bitcoin than stories along the lines of
"Gee, actually it'd kinda expensive to do a Bitcoin transaction these
days due to all the competition. I dunno, I guess it must be really
popular and valuable or something?"

Lets let the issue rest for a while, and we can all have some time to
work on our various approaches to solving the problem. The worst that
will happen is growth temporarily slows - hardly a disaster I think.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/fab470f3/attachment.sig>

From roy at gnomon.org.uk  Tue Mar 12 10:40:00 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Tue, 12 Mar 2013 10:40:00 +0000
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
Message-ID: <20130312104000.GN96148@giles.gnomon.org.uk>

> clients are anyway keeping, and re-relaying, their own transactions
> and hence it would mean only little, and only little for clients.

Not all end-user clients are always-on though



From mike at plan99.net  Tue Mar 12 10:43:52 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 12 Mar 2013 11:43:52 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <20130312102627.GB22309@savin>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
	<20130312102627.GB22309@savin>
Message-ID: <CANEZrP1jg8gpgA3L5KsD2GfgxEV88rnM-kLCiW_YCtPznEFVFQ@mail.gmail.com>

> We just saw a hard-fork happen because we ran into previously unknown
> scaling issues with the current codebase.

Technically, it with the previous codebase ;)



From pieter.wuille at gmail.com  Tue Mar 12 11:44:28 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Tue, 12 Mar 2013 12:44:28 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
Message-ID: <20130312114426.GA3701@vps7135.xlshosting.net>

On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:
> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.

We're using "0.7" as a short moniker for all clients, but this was a limitation that all
BDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects
that was reached.

It's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the
wallet...), but now it seems it's still coming back to haunt us. I really hated telling
miners to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...

> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:
> 
> 1. if they gets to old >24hr
> 2. if the client is running out of space, then the oldest should probably be pruned 
> 
> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).

Right now, mempools are relatively small in memory usage, but with small block sizes,
it indeed risks going up. In 0.8, conflicting (=double spending) transactions in the
chain cause clearing the mempool of conflicts, so at least the mempool is bounded by
the size of the UTXO subset being spent. Dropping transactions from the memory pool
when they run out of space seems a correct solution. I'm less convinced about a
deterministic time-based rule, as that creates a double spending incentive at that
time, and a counter incentive to spam the network with your risking-to-be-cleared
transaction as well.

Regarding the block space, we've seen the pct% of one single block chain space consumer
grow simultaneously with the introduction of larger blocks, so I'm not actually convinced
there is right now a big need for larger blocks (note: right now). The competition for
block chain space is mostly an issue for client software which doesn't deal correctly
with non-confirming transactions, and misleading users. It's mostly a usability problem
now, but increasing block sizes isn't guaranteed to fix that; it may just make more
space for spam.

However, the presence of this bug, and the fact that a full solution is available (0.8),
probably helps achieving consensus fixing it (=a hardfork) is needed, and we should take
advantage of that. But please, let's not rush things...

-- 
Piter



From luke at dashjr.org  Tue Mar 12 12:10:32 2013
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 12 Mar 2013 12:10:32 +0000
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <513ED35A.8080203@gmail.com>
References: <513ED35A.8080203@gmail.com>
Message-ID: <201303121210.34515.luke@dashjr.org>

On Tuesday, March 12, 2013 7:03:54 AM Alan Reiner wrote:
> I'm sure it won't be long before Slashdot and a variety of sources start
> reporting on this event.  Bitcoin has been in the media a lot lately, so
> this story is likely to get some attention.  The blowback of this event
> is mostly psychological, so I think it would be exceptionally wise to
> start preparing PR comments that can be posted on articles immediately
> after they go public.  This event is likely draw much more negative
> attention than it deserves, and getting some positive&informed comments
> posted up front will potentially make a difference in the way the story
> is received.
> 
> Undoubtedly, many articles (and especially commenters) will shape this
> into "the end of Bitcoin".   I would describe it as "there was a short
> and mostly-harmless lapse in the ability of the network to reach a
> consensus, causing transactions to get delayed by a few hours."   It
> *really* needs to be emphasized that coins are safe, and nothing anyone
> has/could do will change that.  And that it would've been extremely
> difficult to exploit for gain.  Transactions got delayed while a bug was
> fixed.  End of story.

I think we should be careful not to downplay the reality either.
For a number of hours, transactions could have received up to N confirmations 
and then still been reversed. While we could contact the bigger payment 
processors, I saw people still trying to buy/sell on OTC, whom could have been 
scammed even by taking standard precautions.

Luke



From mike at plan99.net  Tue Mar 12 12:11:34 2013
From: mike at plan99.net (Mike Hearn)
Date: Tue, 12 Mar 2013 13:11:34 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <20130312114426.GA3701@vps7135.xlshosting.net>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
	<20130312114426.GA3701@vps7135.xlshosting.net>
Message-ID: <CANEZrP1q4SnP=xEn0FNYQw3t6ZuzuLVF48YMr_hmVuYYmsWyfw@mail.gmail.com>

I'm not even sure I'd say the upgrade "went wrong". The problem if
anything is the upgrade didn't happen fast enough. If we had run out
of block space a few months from now, or if miners/merchants/exchanges
had upgraded faster, it'd have made more sense to just roll forward
and tolerate the loss of the older clients.

This really reinforces the importance of keeping nodes up to date.

On Tue, Mar 12, 2013 at 12:44 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:
>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.
>
> We're using "0.7" as a short moniker for all clients, but this was a limitation that all
> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects
> that was reached.
>
> It's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the
> wallet...), but now it seems it's still coming back to haunt us. I really hated telling
> miners to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...
>
>> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:
>>
>> 1. if they gets to old >24hr
>> 2. if the client is running out of space, then the oldest should probably be pruned
>>
>> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).
>
> Right now, mempools are relatively small in memory usage, but with small block sizes,
> it indeed risks going up. In 0.8, conflicting (=double spending) transactions in the
> chain cause clearing the mempool of conflicts, so at least the mempool is bounded by
> the size of the UTXO subset being spent. Dropping transactions from the memory pool
> when they run out of space seems a correct solution. I'm less convinced about a
> deterministic time-based rule, as that creates a double spending incentive at that
> time, and a counter incentive to spam the network with your risking-to-be-cleared
> transaction as well.
>
> Regarding the block space, we've seen the pct% of one single block chain space consumer
> grow simultaneously with the introduction of larger blocks, so I'm not actually convinced
> there is right now a big need for larger blocks (note: right now). The competition for
> block chain space is mostly an issue for client software which doesn't deal correctly
> with non-confirming transactions, and misleading users. It's mostly a usability problem
> now, but increasing block sizes isn't guaranteed to fix that; it may just make more
> space for spam.
>
> However, the presence of this bug, and the fact that a full solution is available (0.8),
> probably helps achieving consensus fixing it (=a hardfork) is needed, and we should take
> advantage of that. But please, let's not rush things...
>
> --
> Piter



From jtimonmv at gmail.com  Tue Mar 12 12:18:21 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Tue, 12 Mar 2013 13:18:21 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <20130312114426.GA3701@vps7135.xlshosting.net>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
	<20130312114426.GA3701@vps7135.xlshosting.net>
Message-ID: <CABOyFfrVCRfJ2R8a-XGcviSbORDswe+N13G_FrVkbWtEhtoTjw@mail.gmail.com>

A related question...some people mentioned yesterday on #bitcoin-dev
that 0.5 appeared to be compatible with 0.8.
Was that only for the "fatal block" and would have forked 0.8 later
too or is it something else?
I'm having a hard time understanding this 0.5 thing, if someone can
bring some light to it I would appreciate it.

Thanks in advance

On 3/12/13, Pieter Wuille <pieter.wuille at gmail.com> wrote:
> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:
>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and
>> unknown criteria for block rejection, hence the upgrade went wrong.
>
> We're using "0.7" as a short moniker for all clients, but this was a
> limitation that all
> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock
> objects
> that was reached.
>
> It's ironic that 0.8 was supposed to solve all problems we had due to BDB
> (except the
> wallet...), but now it seems it's still coming back to haunt us. I really
> hated telling
> miners to go back to 0.7, given all efforts to make 0.8 signficantly more
> tolerable...
>
>> More space in the block is needed indeed, but the real problem you are
>> describing is actually not missing space in the block, but proper handling
>> of mem-pool transactions. They should be pruned on two criteria:
>>
>> 1. if they gets to old >24hr
>> 2. if the client is running out of space, then the oldest should probably
>> be pruned
>>
>> clients are anyway keeping, and re-relaying, their own transactions and
>> hence it would mean only little, and only little for clients. Dropping
>> free / old transaction is a much a better behavior than dying... Even a
>> scheme where the client dropped all or random mempool txes would be a
>> tolerable way of handling things (dropping all is similar to a restart,
>> except for no user intervention).
>
> Right now, mempools are relatively small in memory usage, but with small
> block sizes,
> it indeed risks going up. In 0.8, conflicting (=double spending)
> transactions in the
> chain cause clearing the mempool of conflicts, so at least the mempool is
> bounded by
> the size of the UTXO subset being spent. Dropping transactions from the
> memory pool
> when they run out of space seems a correct solution. I'm less convinced
> about a
> deterministic time-based rule, as that creates a double spending incentive
> at that
> time, and a counter incentive to spam the network with your
> risking-to-be-cleared
> transaction as well.
>
> Regarding the block space, we've seen the pct% of one single block chain
> space consumer
> grow simultaneously with the introduction of larger blocks, so I'm not
> actually convinced
> there is right now a big need for larger blocks (note: right now). The
> competition for
> block chain space is mostly an issue for client software which doesn't deal
> correctly
> with non-confirming transactions, and misleading users. It's mostly a
> usability problem
> now, but increasing block sizes isn't guaranteed to fix that; it may just
> make more
> space for spam.
>
> However, the presence of this bug, and the fact that a full solution is
> available (0.8),
> probably helps achieving consensus fixing it (=a hardfork) is needed, and we
> should take
> advantage of that. But please, let's not rush things...
>
> --
> Piter
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From gronager at ceptacle.com  Tue Mar 12 12:27:32 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Tue, 12 Mar 2013 13:27:32 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
	number of tx/block; fork risk
In-Reply-To: <CANEZrP1q4SnP=xEn0FNYQw3t6ZuzuLVF48YMr_hmVuYYmsWyfw@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
	<20130312114426.GA3701@vps7135.xlshosting.net>
	<CANEZrP1q4SnP=xEn0FNYQw3t6ZuzuLVF48YMr_hmVuYYmsWyfw@mail.gmail.com>
Message-ID: <D4AD3716-0349-4294-989D-F034A26B295A@ceptacle.com>

Well a reversed upgrade is an upgrade that went wrong ;)

Anyway, the incident makes it even more important for people to upgrade, well except, perhaps, for miners...

Forks are caused by rejection criteria, hence: 
1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.
2. If you loosen some rejection criteria miners should upgrade _last_.
3. If you keep the same criteria assume 2.

/M

On 12/03/2013, at 13:11, Mike Hearn <mike at plan99.net> wrote:

> I'm not even sure I'd say the upgrade "went wrong". The problem if
> anything is the upgrade didn't happen fast enough. If we had run out
> of block space a few months from now, or if miners/merchants/exchanges
> had upgraded faster, it'd have made more sense to just roll forward
> and tolerate the loss of the older clients.
> 
> This really reinforces the importance of keeping nodes up to date.
> 
> On Tue, Mar 12, 2013 at 12:44 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:
>> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:
>>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.
>> 
>> We're using "0.7" as a short moniker for all clients, but this was a limitation that all
>> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects
>> that was reached.
>> 
>> It's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the
>> wallet...), but now it seems it's still coming back to haunt us. I really hated telling
>> miners to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...
>> 
>>> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:
>>> 
>>> 1. if they gets to old >24hr
>>> 2. if the client is running out of space, then the oldest should probably be pruned
>>> 
>>> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).
>> 
>> Right now, mempools are relatively small in memory usage, but with small block sizes,
>> it indeed risks going up. In 0.8, conflicting (=double spending) transactions in the
>> chain cause clearing the mempool of conflicts, so at least the mempool is bounded by
>> the size of the UTXO subset being spent. Dropping transactions from the memory pool
>> when they run out of space seems a correct solution. I'm less convinced about a
>> deterministic time-based rule, as that creates a double spending incentive at that
>> time, and a counter incentive to spam the network with your risking-to-be-cleared
>> transaction as well.
>> 
>> Regarding the block space, we've seen the pct% of one single block chain space consumer
>> grow simultaneously with the introduction of larger blocks, so I'm not actually convinced
>> there is right now a big need for larger blocks (note: right now). The competition for
>> block chain space is mostly an issue for client software which doesn't deal correctly
>> with non-confirming transactions, and misleading users. It's mostly a usability problem
>> now, but increasing block sizes isn't guaranteed to fix that; it may just make more
>> space for spam.
>> 
>> However, the presence of this bug, and the fact that a full solution is available (0.8),
>> probably helps achieving consensus fixing it (=a hardfork) is needed, and we should take
>> advantage of that. But please, let's not rush things...
>> 
>> --
>> Piter
> 
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the  
> endpoint security space. For insight on selecting the right partner to 
> tackle endpoint security challenges, access the full report. 
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From gmaxwell at gmail.com  Tue Mar 12 12:38:25 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 12 Mar 2013 05:38:25 -0700
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
Message-ID: <CAAS2fgSOxon1m79gA_afgG7ypHRJfurb4ydZuCBgb_sSy1HG+w@mail.gmail.com>

On Tue, Mar 12, 2013 at 2:10 AM, Mike Hearn <mike at plan99.net> wrote:
> BDB ran out of locks.
> However, only on some 0.7 nodes. Others, perhaps nodes using different
> flags, managed it.
> We have processed 1mb sized blocks on the testnet.
> Therefore it isn't presently clear why that particular block caused
> lock exhaustion when other larger blocks have not.

Locks are only mostly related to block size, once I heard what was
happening I was unsurprised the max sized test blocks hadn't triggered
it.

> Therefore it is possible that we have a very limited amount of time
until nodes start dying en-masse.

Scaremongering much? Egads.

On Tue, Mar 12, 2013 at 5:27 AM, Michael Gronager <gronager at ceptacle.com> wrote:
> Forks are caused by rejection criteria, hence:
> 1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.
> 2. If you loosen some rejection criteria miners should upgrade _last_.
> 3. If you keep the same criteria assume 2.

And ... if you aren't aware that you're making a change ???



From jayf at outlook.com  Tue Mar 12 12:40:59 2013
From: jayf at outlook.com (Jay F)
Date: Tue, 12 Mar 2013 05:40:59 -0700
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
 number of tx/block; fork risk
In-Reply-To: <CABOyFfrVCRfJ2R8a-XGcviSbORDswe+N13G_FrVkbWtEhtoTjw@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<FB4ED2C4-8B65-438B-8B77-44234A644051@ceptacle.com>
	<20130312114426.GA3701@vps7135.xlshosting.net>
	<CABOyFfrVCRfJ2R8a-XGcviSbORDswe+N13G_FrVkbWtEhtoTjw@mail.gmail.com>
Message-ID: <BLU0-SMTP421E184DD5F1D5562F40D3FC8E20@phx.gbl>

On 3/12/2013 5:18 AM, Jorge Tim?n wrote:
> A related question...some people mentioned yesterday on #bitcoin-dev
> that 0.5 appeared to be compatible with 0.8.
> Was that only for the "fatal block" and would have forked 0.8 later
> too or is it something else?
> I'm having a hard time understanding this 0.5 thing, if someone can
> bring some light to it I would appreciate it.
>
> Thanks in advance
>
It was reported that not all 0.7 died from the BDB error either. This 
will likely take a post-mortem to determine exactly what build 
environments and versions are incompatible, by feeding each the bloated 
block (hopefully there are lots of snapshots of the bad chain being the 
best height for testing; I forgot to get one).



From gronager at ceptacle.com  Tue Mar 12 13:00:13 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Tue, 12 Mar 2013 14:00:13 +0100
Subject: [Bitcoin-development] Warning: many 0.7 nodes break on large
	number of tx/block; fork risk
In-Reply-To: <CAAS2fgSOxon1m79gA_afgG7ypHRJfurb4ydZuCBgb_sSy1HG+w@mail.gmail.com>
References: <CAPg+sBip_4Jtxhq+rm-na2=RSJ_PuoZt+akGgJyo0b_Bwbr1Dw@mail.gmail.com>
	<CAPg+sBjm+e=A+edSRHXU7JSqyfSc4hou_SRdQHF48xhKQGA4zA@mail.gmail.com>
	<CANEZrP2V9uDQ-dmyaUBbsCuj5u3Mrh+jvU9RDpYkrKQV6+t0tQ@mail.gmail.com>
	<CAAS2fgSOxon1m79gA_afgG7ypHRJfurb4ydZuCBgb_sSy1HG+w@mail.gmail.com>
Message-ID: <5F4490C7-8846-4AA7-AF9B-9A02DDEC6245@ceptacle.com>

>> Forks are caused by rejection criteria, hence:
>> 1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.
>> 2. If you loosen some rejection criteria miners should upgrade _last_.
>> 3. If you keep the same criteria assume 2.
> 
> And ... if you aren't aware that you're making a change ???

then only half should upgrade :-P

Well I thought I covered that by 3... But, question is of course if we could have been in a situation where 0.8 had been the one rejecting blocks? 

So miners could go with a filtering approach: only connect to the network through a node of a version one less than the current. That would still have caused block 225430 to be created, but it would never have been relayed and hence no harm. (and if the issue had been in 0.8 the block would not even have been accepted there in the first place). Downside is some lost seconds.

/M




From gmaxwell at gmail.com  Tue Mar 12 13:06:49 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 12 Mar 2013 06:06:49 -0700
Subject: [Bitcoin-development] Changing the fee on already sent
	transactions
In-Reply-To: <20130312094700.GA8130@savin>
References: <20130312094700.GA8130@savin>
Message-ID: <CAAS2fgRg6PXCdZdjD4dVnqAp-m4pLgkRgTULJm2S-50Rcm2HMQ@mail.gmail.com>

On Tue, Mar 12, 2013 at 2:47 AM, Peter Todd <pete at petertodd.org> wrote:
> Followed by the actual replacement logic. We could change this logic to
> instead evaluate if the candidate replacement does not remove or
> decrease the value of any existing outputs. Adding outputs is ok.
> Changing the set of inputs is also ok, provided that there are no
> conflicts with other spent transactions. DoS attacks would be prevented
> by only forwarding/accepting into the mempool replacements that increase
> the fees paid by at least MIN_RELAY_TX_FEE * size - essentially the same
> decision to allow the broadcast of the transaction in the first place.

I _strongly_  prefer this method of addressing this concern.  I think
you've hit the required requirements: pay at least all the same
inputs, increase fee by at least the min_relay_tx_fee*size.

The discussion we had on IRC where some were proposing fast expiration
would practically lower the security of Bitcoin.

While there is complexity and testing required here, getting full
branch coverage of this code would be fairly straight forward.  Doing
this correctly will be easier than child-pays-for-parent and although
it does not replace child-pays-for-parent (the two techniques are
complimentary in my view) it would reduce the urgency of getting
child-pays-for-parent included.



From luke at dashjr.org  Tue Mar 12 13:10:20 2013
From: luke at dashjr.org (Luke-Jr)
Date: Tue, 12 Mar 2013 13:10:20 +0000
Subject: [Bitcoin-development] Changing the fee on already sent
	transactions
In-Reply-To: <20130312094700.GA8130@savin>
References: <20130312094700.GA8130@savin>
Message-ID: <201303121310.21934.luke@dashjr.org>

On Tuesday, March 12, 2013 9:47:00 AM Peter Todd wrote:
> We can allow for transaction replacement for the purpose of adding fees
> to existing transactions safely, and while not increasing the risk of
> double-spends by taking advantage of the stubbed out replacement code.

Side note: Adding fees is already possible by respending change, at least for 
miners running an Eligius branch (both 0.6.0 and 0.8.0).

Luke



From etotheipi at gmail.com  Tue Mar 12 16:55:26 2013
From: etotheipi at gmail.com (Alan Reiner)
Date: Tue, 12 Mar 2013 12:55:26 -0400
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <201303121210.34515.luke@dashjr.org>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
Message-ID: <CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>

On Tue, Mar 12, 2013 at 8:10 AM, Luke-Jr <luke at dashjr.org> wrote:

>
>
> I think we should be careful not to downplay the reality either.
> For a number of hours, transactions could have received up to N
> confirmations
> and then still been reversed. While we could contact the bigger payment
> processors, I saw people still trying to buy/sell on OTC, whom could have
> been
> scammed even by taking standard precautions.
>
>
I don't want to misrepresent what happened, but how much of that was really
a risk?  The block was rejected, but the transactions were not.  Any valid
transactions to hit the network would get added to everyone's memory pool
and mined in both chains.  Thus all nodes would still reject double-spend
attempts.  As far as I understood it, you would've had to have majority
mining power on one of the chains (and both had non-negligible computing
power on them), so double-spending still required an exceptional amount of
resources -- just not the normal 50% that is normally needed.  Perhaps...
10%?   But how many people can even have 10%?  In addition to that, a
victim needs to be found that hasn't seen the alert, is willing to execute
a large transaction, and is on the wrong side of the chain.

Is this incorrect?  Yes, there was less resources needed to execute an
attack -- but it still required a very powerful attacker, way outside the
scope of "regular users."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/417265d3/attachment.html>

From peter at coinlab.com  Tue Mar 12 17:35:21 2013
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 12 Mar 2013 10:35:21 -0700
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
	<CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
Message-ID: <CAMGNxUu-beLK4ZWqQrmoSfk9RgxTTJ3D9wmphPPGyFxQiE9uXg@mail.gmail.com>

Can some enterprising soul determine if there were any double-spend
attempts?

I'm assuming no, and if that's the case, we should talk about that publicly.

Either way, I think it's generally another test well done by everyone;
people pitched in on PR, tech, communication, yay Bitcoin!



On Tue, Mar 12, 2013 at 9:55 AM, Alan Reiner <etotheipi at gmail.com> wrote:

> On Tue, Mar 12, 2013 at 8:10 AM, Luke-Jr <luke at dashjr.org> wrote:
>
>>
>>
>> I think we should be careful not to downplay the reality either.
>> For a number of hours, transactions could have received up to N
>> confirmations
>> and then still been reversed. While we could contact the bigger payment
>> processors, I saw people still trying to buy/sell on OTC, whom could have
>> been
>> scammed even by taking standard precautions.
>>
>>
> I don't want to misrepresent what happened, but how much of that was
> really a risk?  The block was rejected, but the transactions were not.  Any
> valid transactions to hit the network would get added to everyone's memory
> pool and mined in both chains.  Thus all nodes would still reject
> double-spend attempts.  As far as I understood it, you would've had to have
> majority mining power on one of the chains (and both had non-negligible
> computing power on them), so double-spending still required an exceptional
> amount of resources -- just not the normal 50% that is normally needed.
>  Perhaps... 10%?   But how many people can even have 10%?  In addition to
> that, a victim needs to be found that hasn't seen the alert, is willing to
> execute a large transaction, and is on the wrong side of the chain.
>
> Is this incorrect?  Yes, there was less resources needed to execute an
> attack -- but it still required a very powerful attacker, way outside the
> scope of "regular users."
>
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/0e69d2ec/attachment.html>

From gmaxwell at gmail.com  Tue Mar 12 18:09:06 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 12 Mar 2013 11:09:06 -0700
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
	<CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
Message-ID: <CAAS2fgSZfsAbfWqst+DVjKpaJ5dh7u934rp4p=AE8pbni_VSiw@mail.gmail.com>

On Tue, Mar 12, 2013 at 9:55 AM, Alan Reiner <etotheipi at gmail.com> wrote:
> I don't want to misrepresent what happened, but how much of that was really
> a risk?  The block was rejected, but the transactions were not.

Some but not much.  If someone flooded a bunch of duplicate
concurrently announcing both spends to as many nodes as they could
reach they would almost certainly gotten some conflicts into both
chains. Then both chains would have gotten >6 confirms. Then one chain
would pop and anyone on the popped side would see >6 confirm
transactions undo.

This attack would not require any particular resources, and only
enough technical sophistication to run something like pynode to give
raw txn to nodes at random.

The biggest barriers against it were people being uninterested in
attacking (as usual for all things) and there not being many (any?)
good targets who hadn't shut down their deposits.  They would have to
have accepted deposits with <12 confirms and let you withdraw. During
the event an attacker could have gotten  of their deposit-able funds.

On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:
> Can some enterprising soul determine if there were any double-spend attempts?
> I'm assuming no, and if that's the case, we should talk about that publicly.

There were circulating double-spends during the fork (as were visible
on blockchain.info). I don't know if any conflicts made it into the
losing chain, however. It's not too hard to check to see what inputs
were consumed in the losing fork and see if any have been consumed by
different transactions now.

I agree it would be good to confirm no one was ripped off, even though
we can't say there weren't any attempts.



From gmaxwell at gmail.com  Tue Mar 12 18:39:48 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Tue, 12 Mar 2013 11:39:48 -0700
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <CAAS2fgSZfsAbfWqst+DVjKpaJ5dh7u934rp4p=AE8pbni_VSiw@mail.gmail.com>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
	<CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
	<CAAS2fgSZfsAbfWqst+DVjKpaJ5dh7u934rp4p=AE8pbni_VSiw@mail.gmail.com>
Message-ID: <CAAS2fgQVLb1L=LZvYz_rf7Auim_oKRmVp+6NC+5AFjyD9NQe5A@mail.gmail.com>

On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:
>> Can some enterprising soul determine if there were any double-spend attempts?
>> I'm assuming no, and if that's the case, we should talk about that publicly.
[snip]
> I agree it would be good to confirm no one was ripped off, even though
> we can't say there weren't any attempts.

https://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747



From decker.christian at gmail.com  Tue Mar 12 19:53:55 2013
From: decker.christian at gmail.com (Christian Decker)
Date: Tue, 12 Mar 2013 20:53:55 +0100
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <CAAS2fgQVLb1L=LZvYz_rf7Auim_oKRmVp+6NC+5AFjyD9NQe5A@mail.gmail.com>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
	<CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
	<CAAS2fgSZfsAbfWqst+DVjKpaJ5dh7u934rp4p=AE8pbni_VSiw@mail.gmail.com>
	<CAAS2fgQVLb1L=LZvYz_rf7Auim_oKRmVp+6NC+5AFjyD9NQe5A@mail.gmail.com>
Message-ID: <CALxbBHXdPJXoGp-W8y8ynUTCsSY5L0yN1juya-UhB9KhMYpfmg@mail.gmail.com>

Just a quick and dirty check if something bad actually happened. 430
transactions that were confirmed in the alt-chain, are not confirmed
in the true blockchain. The good news is that as far as I can tell
most of them are low volume transactions destined for SD.

7 transactions were true double spends, or to be more precise
transactions in which an conflicting transaction was confirmed in the
new chain (with their respective amount):

12814b8ad57ce5654ba69eb26a52ddae1bff42093ca20cef3ad96fe7fd85d195 261 BTC
cb36ba33b3ecd4d3177d786209670c9e6cdf95eb62be54986f0b49ca292714af 0.06 BTC
7192807f952b252081d0db0aa7575c4695b945820adaf7776b7189e6b3d86f96 0.01 BTC
355d4ea51c3b780cf0b10e8099a06a31484e0060bc140b63f3d6e5fb713ace5e 0.05 BTC
b961bc0c663a46893afd3166a604e7e2639533522d9fec61fdb95eb665e86f5a 0.61 BTC
138063e4bdb76feaa511f1e7f9c681eb468ef9140c141671741c965e503b84c6 1.62 BTC
a10bd194cdbf9aa4c12eb0b120056998a081a9b0d93d70570edff24dec831f90 0.81

So the one transaction that really hurt was the one published on
BitcoinTalk. We're not yet out of the woods as some of the 423
transactions still have a chance of being doublespent, but looks like
it's not that bad after all.

Cheers,
Chris

P.S.: For a complete list of transactions see http://pastebin.com/wctJU3Ln
--
Christian Decker


On Tue, Mar 12, 2013 at 7:39 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
>> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:
>>> Can some enterprising soul determine if there were any double-spend attempts?
>>> I'm assuming no, and if that's the case, we should talk about that publicly.
> [snip]
>> I agree it would be good to confirm no one was ripped off, even though
>> we can't say there weren't any attempts.
>
> https://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



From peter at coinlab.com  Tue Mar 12 20:09:17 2013
From: peter at coinlab.com (Peter Vessenes)
Date: Tue, 12 Mar 2013 13:09:17 -0700
Subject: [Bitcoin-development] Some PR preparation
In-Reply-To: <CALxbBHXdPJXoGp-W8y8ynUTCsSY5L0yN1juya-UhB9KhMYpfmg@mail.gmail.com>
References: <513ED35A.8080203@gmail.com> <201303121210.34515.luke@dashjr.org>
	<CALf2ePwae8Y0KxYqcZxEk_KZjUcQN=jaAp=QWa20QeZtJU7UAA@mail.gmail.com>
	<CAAS2fgSZfsAbfWqst+DVjKpaJ5dh7u934rp4p=AE8pbni_VSiw@mail.gmail.com>
	<CAAS2fgQVLb1L=LZvYz_rf7Auim_oKRmVp+6NC+5AFjyD9NQe5A@mail.gmail.com>
	<CALxbBHXdPJXoGp-W8y8ynUTCsSY5L0yN1juya-UhB9KhMYpfmg@mail.gmail.com>
Message-ID: <CAMGNxUtcwO+masMDzkPN0kwzd=FTKXW39OYLF2dvB1yXKGMqhQ@mail.gmail.com>

Thanks Chris.

Yep, looks like an honest-ish user managed to accidentally get one tx into
one chain and another into the other.

I think I'd cautiously say that if OKPay gets their cash back, or freezes
his balance nobody is out BTC for last night, (instead just time and
effort).

I'm doing a little FUD-fighting right now, but will try and pick up a bit
more if necessary tonight after my flight lands. I think this is mostly
over the heads of a lot of our typical media contacts, though.

Peter


On Tue, Mar 12, 2013 at 12:53 PM, Christian Decker <
decker.christian at gmail.com> wrote:

> Just a quick and dirty check if something bad actually happened. 430
> transactions that were confirmed in the alt-chain, are not confirmed
> in the true blockchain. The good news is that as far as I can tell
> most of them are low volume transactions destined for SD.
>
> 7 transactions were true double spends, or to be more precise
> transactions in which an conflicting transaction was confirmed in the
> new chain (with their respective amount):
>
> 12814b8ad57ce5654ba69eb26a52ddae1bff42093ca20cef3ad96fe7fd85d195 261 BTC
> cb36ba33b3ecd4d3177d786209670c9e6cdf95eb62be54986f0b49ca292714af 0.06 BTC
> 7192807f952b252081d0db0aa7575c4695b945820adaf7776b7189e6b3d86f96 0.01 BTC
> 355d4ea51c3b780cf0b10e8099a06a31484e0060bc140b63f3d6e5fb713ace5e 0.05 BTC
> b961bc0c663a46893afd3166a604e7e2639533522d9fec61fdb95eb665e86f5a 0.61 BTC
> 138063e4bdb76feaa511f1e7f9c681eb468ef9140c141671741c965e503b84c6 1.62 BTC
> a10bd194cdbf9aa4c12eb0b120056998a081a9b0d93d70570edff24dec831f90 0.81
>
> So the one transaction that really hurt was the one published on
> BitcoinTalk. We're not yet out of the woods as some of the 423
> transactions still have a chance of being doublespent, but looks like
> it's not that bad after all.
>
> Cheers,
> Chris
>
> P.S.: For a complete list of transactions see http://pastebin.com/wctJU3Ln
> --
> Christian Decker
>
>
> On Tue, Mar 12, 2013 at 7:39 PM, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
> > On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com>
> wrote:
> >> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com>
> wrote:
> >>> Can some enterprising soul determine if there were any double-spend
> attempts?
> >>> I'm assuming no, and if that's the case, we should talk about that
> publicly.
> > [snip]
> >> I agree it would be good to confirm no one was ripped off, even though
> >> we can't say there weren't any attempts.
> >
> > https://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747
> >
> >
> ------------------------------------------------------------------------------
> > Everyone hates slow websites. So do we.
> > Make your web apps faster with AppDynamics
> > Download AppDynamics Lite for free today:
> > http://p.sf.net/sfu/appdyn_d2d_mar
> > _______________________________________________
> > Bitcoin-development mailing list
> > Bitcoin-development at lists.sourceforge.net
> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
------------------------------

[image: CoinLab Logo]PETER VESSENES
CEO

*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes
811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/4b6ea7e8/attachment.html>

From stephen at bitpay.com  Wed Mar 13 05:31:18 2013
From: stephen at bitpay.com (Stephen Pair)
Date: Wed, 13 Mar 2013 01:31:18 -0400
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <20130312074945.GB25250@savin>
References: <20130310043155.GA20020@savin> <20130312074945.GB25250@savin>
Message-ID: <CADb9v0JMy8_rWfU3j-g74cbh_1wAdCa5Ce+PkzGadbZL+OV4VQ@mail.gmail.com>

Instead of thinking in terms of blocking uneconomical transactions (how
would a node even determine what's economical?), what about thinking in
terms of paying for a feed of economical (i.e. profitable) transactions?
There is a market for fee bearing, profitable transactions...if there is no
one willing to pay to receive a transaction, then no one will bother
propagating it.  Such a system would make it possible to determine the
probability of confirmation in a given timeframe for a given fee.


On Tue, Mar 12, 2013 at 3:49 AM, Peter Todd <pete at petertodd.org> wrote:

> On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:
> > As discussed endlessly data in the UTXO set is more costly, especially
> > in the long run, than transaction data itself. The fee system is per KB
> > in a block, and thus doesn't properly capture the long-term costs of
> > UTXO creation.
>
> There's been a lot of discussion about this issue, and many people have
> asked that Bitcoin not arbitrarily block interesting potential uses of
> provably unspendable txouts for data applications, and similarly
> spendable txouts representing assets. I've changed my hardline position
> and now think we should support all that stuff. However, there is one
> remaining class of txout not yet talked about, unspendable but not
> provably so txouts. For instance we could make the following a standard
> transaction type:
>
> scriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>
> scriptSig: <data>
>
> Of course, usually the 20 byte digest would be picked randomly, but it
> might not be, and thus all validating nodes will always have a copy of
> the data. With the 10KB limit on script sizes you can fit 9974 bytes of
> data per transaction output with very little waste.
>
> A good application is timestamping, with the advantage over
> coinbase/merkle tree systems in that you don't have to wait until your
> timestamp confirms, or even store the timestamp at all. Another
> application, quite possible with large block sizes and hence cheap or
> free transactions, is secure data backups. In particular such a service,
> perhaps called Google Chain Storage, can offer the unique guarantee that
> you can know you're data is secure by simply performing a successful
> Bitcoin transaction.
>
> --
> 'peter'[:-1]@petertodd.org
>
>
> ------------------------------------------------------------------------------
> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
> endpoint security space. For insight on selecting the right partner to
> tackle endpoint security challenges, access the full report.
> http://p.sf.net/sfu/symantec-dev2dev
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
>


-- 
Stephen Pair, Co-Founder, CTO

Does *your* website accept cash? bitpay.com

[image: bitpay-small]

ABC6 C11B BF75 9E2B FC6A  B3E0 7B96 40B2 CAC0 C158
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/3ef0e305/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 6560 bytes
Desc: not available
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/3ef0e305/attachment.png>

From jtimonmv at gmail.com  Wed Mar 13 09:20:17 2013
From: jtimonmv at gmail.com (=?ISO-8859-1?B?CUpvcmdlIFRpbfNu?=)
Date: Wed, 13 Mar 2013 10:20:17 +0100
Subject: [Bitcoin-development] Blocking uneconomical UTXO creation
In-Reply-To: <CADb9v0JMy8_rWfU3j-g74cbh_1wAdCa5Ce+PkzGadbZL+OV4VQ@mail.gmail.com>
References: <20130310043155.GA20020@savin> <20130312074945.GB25250@savin>
	<CADb9v0JMy8_rWfU3j-g74cbh_1wAdCa5Ce+PkzGadbZL+OV4VQ@mail.gmail.com>
Message-ID: <CABOyFfrPTYeq-g5tgte2HWfvBiBcRLw_Bvyk_X2hXMWVoW3dgQ@mail.gmail.com>

I'm not sure I understand your proposal, but its sounds good.
Can you elaborate with an example?
Are you considering colored coins/smart property?


On 3/13/13, Stephen Pair <stephen at bitpay.com> wrote:
> Instead of thinking in terms of blocking uneconomical transactions (how
> would a node even determine what's economical?), what about thinking in
> terms of paying for a feed of economical (i.e. profitable) transactions?
> There is a market for fee bearing, profitable transactions...if there is no
> one willing to pay to receive a transaction, then no one will bother
> propagating it.  Such a system would make it possible to determine the
> probability of confirmation in a given timeframe for a given fee.
>
>
> On Tue, Mar 12, 2013 at 3:49 AM, Peter Todd <pete at petertodd.org> wrote:
>
>> On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:
>> > As discussed endlessly data in the UTXO set is more costly, especially
>> > in the long run, than transaction data itself. The fee system is per KB
>> > in a block, and thus doesn't properly capture the long-term costs of
>> > UTXO creation.
>>
>> There's been a lot of discussion about this issue, and many people have
>> asked that Bitcoin not arbitrarily block interesting potential uses of
>> provably unspendable txouts for data applications, and similarly
>> spendable txouts representing assets. I've changed my hardline position
>> and now think we should support all that stuff. However, there is one
>> remaining class of txout not yet talked about, unspendable but not
>> provably so txouts. For instance we could make the following a standard
>> transaction type:
>>
>> scriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>
>> scriptSig: <data>
>>
>> Of course, usually the 20 byte digest would be picked randomly, but it
>> might not be, and thus all validating nodes will always have a copy of
>> the data. With the 10KB limit on script sizes you can fit 9974 bytes of
>> data per transaction output with very little waste.
>>
>> A good application is timestamping, with the advantage over
>> coinbase/merkle tree systems in that you don't have to wait until your
>> timestamp confirms, or even store the timestamp at all. Another
>> application, quite possible with large block sizes and hence cheap or
>> free transactions, is secure data backups. In particular such a service,
>> perhaps called Google Chain Storage, can offer the unique guarantee that
>> you can know you're data is secure by simply performing a successful
>> Bitcoin transaction.
>>
>> --
>> 'peter'[:-1]@petertodd.org
>>
>>
>> ------------------------------------------------------------------------------
>> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester
>> Wave(TM): Endpoint Security, Q1 2013 and "remains a good choice" in the
>> endpoint security space. For insight on selecting the right partner to
>> tackle endpoint security challenges, access the full report.
>> http://p.sf.net/sfu/symantec-dev2dev
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>
>>
>
>
> --
> Stephen Pair, Co-Founder, CTO
>
> Does *your* website accept cash? bitpay.com
>
> [image: bitpay-small]
>
> ABC6 C11B BF75 9E2B FC6A  B3E0 7B96 40B2 CAC0 C158
>


-- 
Jorge Tim?n

http://freico.in/
http://archive.ripple-project.org/



From luke at dashjr.org  Wed Mar 13 12:56:29 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 12:56:29 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
Message-ID: <201303131256.30144.luke@dashjr.org>

Here's a simple proposal to start discussion from...

BEFORE block 262144:
- Never make a block that, combined with the previous 4 blocks, results in 
over 4500 transaction modifications.
- Reject any block that includes more than 4500 transaction modifications on 
its own (slight soft-fork)
- (these rules should make older clients safe under most circumstances)

FROM block 262144 to block 393216 (hard fork #1):
- Never make, and reject any block that includes more than 24391 transaction 
modifications on its own (this *should* be equivalent to 1 MB)
- (this rules can make older client backports safe unless a reorg is more than 
6 blocks deep)

FROM block 393216 onward (hard fork #2):
- Never make, and reject any block that includes more than 48781 transaction 
modifications on its own (this *should* be equivalent to 2 MB)
- Accept blocks up to 2 MB in data size
- Discontinue support for clients prior to 0.8.1

I intentionally set the block numbers conservatively to try to account for the 
yet-unseen ASIC upgrade.

Thoughts?



From gmaxwell at gmail.com  Wed Mar 13 13:14:00 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 06:14:00 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303131256.30144.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org>
Message-ID: <CAAS2fgRJxx3VwBoQm2Tkwr-DbAg6wQityzegZXxddXbqBSh8dQ@mail.gmail.com>

On Wed, Mar 13, 2013 at 5:56 AM, Luke-Jr <luke at dashjr.org> wrote:
> FROM block 262144 to block 393216 (hard fork #1):
> - Never make, and reject any block that includes more than 24391 transaction
> modifications on its own (this *should* be equivalent to 1 MB)
> - (this rules can make older client backports safe unless a reorg is more than
> 6 blocks deep)

I'm not a fan of the two stages, your before block 262144 part sounds
fine to me, though I thought the safe number was closer to 5000.
Perhaps 4911?
The goal here is to pick something which is _absolutely sure_ to be
less than what pre-0.8 accepts (so that its is just a soft fork), but
it need not be needlessly smaller than that.

I think we can accept some small risk of "backport" clients getting
stuck after large reorgs after there has been sufficient upgrade time.
 Performance reasons mean that its very likely no one will be mining
on those nodes by then, and so if they get stuck they'll just need to
manually unstick them. Difficulty is high enough that its unlikely
anything important will remain stuck long enough for a malicious party
to exploit them by mining blocks on the stuck fork.

By allowing that risk you halve the complexity of your change by not
requiring two hard forks.  The 'never make' half of it would probably
be fine.

As far as the size change, that should be a separate process after
we've proven the ability to make a hardforking change with something
low risk/low controversy like this, and only after someone has
actually shown that the software is stable under those conditions lest
we get another issue like we have now where the increase in block
target from 500k/250k to 1MB by a miner exposed inadequate testing.



From pete at petertodd.org  Wed Mar 13 15:05:01 2013
From: pete at petertodd.org (Peter Todd)
Date: Wed, 13 Mar 2013 11:05:01 -0400
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303131256.30144.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org>
Message-ID: <20130313150501.GA14067@savin>

On Wed, Mar 13, 2013 at 12:56:29PM +0000, Luke-Jr wrote:
> Here's a simple proposal to start discussion from...
> 
> BEFORE block 262144:
> - Never make a block that, combined with the previous 4 blocks, results in 
> over 4500 transaction modifications.
> - Reject any block that includes more than 4500 transaction modifications on 
> its own (slight soft-fork)
> - (these rules should make older clients safe under most circumstances)
> 
> FROM block 262144 to block 393216 (hard fork #1):
> - Never make, and reject any block that includes more than 24391 transaction 
> modifications on its own (this *should* be equivalent to 1 MB)
> - (this rules can make older client backports safe unless a reorg is more than 
> 6 blocks deep)
> 
> FROM block 393216 onward (hard fork #2):
> - Never make, and reject any block that includes more than 48781 transaction 
> modifications on its own (this *should* be equivalent to 2 MB)
> - Accept blocks up to 2 MB in data size

If we're going to consider doing this, at minimum we need to also
include a separate limit for how much the UTXO set can be grown by each
block, calculated as the size of the scriptPubKey + constant metadata.
(tx hash, index #, nValue, nVersion, nHeight should cover it)

A P2SH transaction txout would measure 71bytes under that model. Given
that we haven't even shown we can limit the creation of txouts that can
not be spent economically caution would dictate setting the UTXO growth
limit fairly low, say 1/4th of the block limit.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/2c3d7d5f/attachment.sig>

From gmaxwell at gmail.com  Wed Mar 13 15:18:36 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 08:18:36 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <20130313150501.GA14067@savin>
References: <201303131256.30144.luke@dashjr.org> <20130313150501.GA14067@savin>
Message-ID: <CAAS2fgT13KOu59O9u+ouQvo9BNUL-0EMeK1i2C980VpdQ41Pbw@mail.gmail.com>

On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:
> If we're going to consider doing this, at minimum we need to also

I beg people to not derail discussion about fixing things with
discussion of other controversial changes.

Luke-jr, any chance in getting you to revise your proposal to narrow
the scope to things that don't need serious debate?



From luke at dashjr.org  Wed Mar 13 15:26:14 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 15:26:14 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CAAS2fgT13KOu59O9u+ouQvo9BNUL-0EMeK1i2C980VpdQ41Pbw@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org> <20130313150501.GA14067@savin>
	<CAAS2fgT13KOu59O9u+ouQvo9BNUL-0EMeK1i2C980VpdQ41Pbw@mail.gmail.com>
Message-ID: <201303131526.16406.luke@dashjr.org>

On Wednesday, March 13, 2013 3:18:36 PM Gregory Maxwell wrote:
> On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:
> > If we're going to consider doing this, at minimum we need to also
> 
> I beg people to not derail discussion about fixing things with
> discussion of other controversial changes.

I figured 2 MB in 2-3 years was fairly uncontroversial.
If not, let's scrap that idea for now.

> Luke-jr, any chance in getting you to revise your proposal to narrow
> the scope to things that don't need serious debate?

It was a one-time "start the conversation" proposal.
I expect what we end up going with may be substantially different.

Luke



From pete at petertodd.org  Wed Mar 13 16:04:21 2013
From: pete at petertodd.org (Peter Todd)
Date: Wed, 13 Mar 2013 12:04:21 -0400
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303131526.16406.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org> <20130313150501.GA14067@savin>
	<CAAS2fgT13KOu59O9u+ouQvo9BNUL-0EMeK1i2C980VpdQ41Pbw@mail.gmail.com>
	<201303131526.16406.luke@dashjr.org>
Message-ID: <20130313160421.GA23566@savin>

On Wed, Mar 13, 2013 at 03:26:14PM +0000, Luke-Jr wrote:
> On Wednesday, March 13, 2013 3:18:36 PM Gregory Maxwell wrote:
> > On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:
> > > If we're going to consider doing this, at minimum we need to also
> > 
> > I beg people to not derail discussion about fixing things with
> > discussion of other controversial changes.
> 
> I figured 2 MB in 2-3 years was fairly uncontroversial.
> If not, let's scrap that idea for now.

The very statement that we're willing to increase the blocksize as our
solution to increased transaction volume rather go down the path of
off-chain transactions is incredibly controversial.

Fuck it, I'll make this public: I've had at least one person who went to
the trouble of finding my personal phone number just so they could leave
a few text messages saying I was going to do serious harm to Bitcoin. At
the same time I've also had a few people asking questions along the line
of had started and/or was considering starting a formal group opposing
the blocksize increase. I even got a significant anonymous donation a
few weeks ago. (rather fittingly this was done by emailing me an
easywallet URL from a throwaway account)

It's not just forum trolls who care about the issue, even if they make
the most noise about it.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/b5539f99/attachment.sig>

From gavinandresen at gmail.com  Wed Mar 13 17:01:43 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Wed, 13 Mar 2013 13:01:43 -0400
Subject: [Bitcoin-development] Blocksize and off-chain transactions
Message-ID: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>

> The very statement that we're willing to increase the blocksize as our
> solution to increased transaction volume rather go down the path of
> off-chain transactions is incredibly controversial.

I really don't understand this either/or mentality.

OF COURSE we're going to raise the block size limit. Limiting the main
blockchain to single-digit transactions-per-second is not an option,
the vision FOREVER has been to scale it up.

And OF COURSE there will be off-chain transactions-- at the very
least, we need them for "instantly confirmed" transactions.

But lets table that whole discussion until 0.8.1 is out the door.

-- 
--
Gavin Andresen



From mark at monetize.io  Wed Mar 13 17:41:29 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 13 Mar 2013 10:41:29 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303131256.30144.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org>
Message-ID: <CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>

I'm not sure I understand the need for hard forks. We can get through this
crisis by mining pool collusion to prevent forking blocks until there is
widespread adoption of patched clients.

Proposal:

1) Patch the pre-0.8 branches to support an increased lock count, whatever
number is required to make sure that this problem never shows up again at
the current block size (I defer to Luke-Jr and gmaxwell's numbers on this).

2) Patch all branches to not *generate* blocks which trigger the lock count
limit. A larger block would still be accepted as valid, however, if it is
on the longest chain.

3) Simultaneously, provide an additional non-standard patch to mining pool
operators (>>50% network hash) *rejecting* blocks that trigger the lock
count limit. This keeps miners in collusion with each other to stay on a
'compatibility fork'.

4) At some point in the future once we've crossed an acceptable adoption
threshold, the miners remove the above patch in a coordinated way.

Does that not get us past this crisis without a hard-fork?

Mark

(Aside: I'm for BOTH raising the block-size limit and off-chain
transactions, but like it or not there are political sides to that debate
and we should keep politics out of crisis management.)


On Wed, Mar 13, 2013 at 5:56 AM, Luke-Jr <luke at dashjr.org> wrote:

> Here's a simple proposal to start discussion from...
>
> BEFORE block 262144:
> - Never make a block that, combined with the previous 4 blocks, results in
> over 4500 transaction modifications.
> - Reject any block that includes more than 4500 transaction modifications
> on
> its own (slight soft-fork)
> - (these rules should make older clients safe under most circumstances)
>
> FROM block 262144 to block 393216 (hard fork #1):
> - Never make, and reject any block that includes more than 24391
> transaction
> modifications on its own (this *should* be equivalent to 1 MB)
> - (this rules can make older client backports safe unless a reorg is more
> than
> 6 blocks deep)
>
> FROM block 393216 onward (hard fork #2):
> - Never make, and reject any block that includes more than 48781
> transaction
> modifications on its own (this *should* be equivalent to 2 MB)
> - Accept blocks up to 2 MB in data size
> - Discontinue support for clients prior to 0.8.1
>
> I intentionally set the block numbers conservatively to try to account for
> the
> yet-unseen ASIC upgrade.
>
> Thoughts?
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/adae378a/attachment.html>

From pete at petertodd.org  Wed Mar 13 17:48:38 2013
From: pete at petertodd.org (Peter Todd)
Date: Wed, 13 Mar 2013 13:48:38 -0400
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
Message-ID: <20130313174838.GA22621@savin>

On Wed, Mar 13, 2013 at 01:01:43PM -0400, Gavin Andresen wrote:
> > The very statement that we're willing to increase the blocksize as our
> > solution to increased transaction volume rather go down the path of
> > off-chain transactions is incredibly controversial.
> 
> I really don't understand this either/or mentality.

You said it best yourself:

10:48 < gavinandresen> Luke-Jr: argument for another day, but I can
almost guarantee that the blocksize limit will be raised in less than 2
years, just based on pressure from the big businesses using the chain
(and no, NOT satoshidice)

Decentralization offers big businesses nothing; they're a regulation
target already by virtue of size alone.

> OF COURSE we're going to raise the block size limit. Limiting the main
> blockchain to single-digit transactions-per-second is not an option,
> the vision FOREVER has been to scale it up.
> 
> And OF COURSE there will be off-chain transactions-- at the very
> least, we need them for "instantly confirmed" transactions.
> 
> But lets table that whole discussion until 0.8.1 is out the door.
> 
> -- 
> --
> Gavin Andresen
> 

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/9b7de93c/attachment.sig>

From pieter.wuille at gmail.com  Wed Mar 13 17:58:36 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 13 Mar 2013 18:58:36 +0100
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
Message-ID: <20130313175825.GA21242@vps7135.xlshosting.net>

On Wed, Mar 13, 2013 at 10:41:29AM -0700, Mark Friedenbach wrote:
> 4) At some point in the future once we've crossed an acceptable adoption
> threshold, the miners remove the above patch in a coordinated way.
> 
> Does that not get us past this crisis without a hard-fork?

This is a hardfork: it means some nodes will have to accept blocks they formerly considered invalid.

-- 
Pieter



From gronager at ceptacle.com  Wed Mar 13 18:01:02 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Wed, 13 Mar 2013 19:01:02 +0100
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <20130313174838.GA22621@savin>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
Message-ID: <2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>

Please note that it was not 0.8 that had issues, but 0.7(and downwards).

I really think changing features in 0.8 aiming for a fluffy limit to avoid lock object errors on 0.7 is the wrong way to go, and it will never cover for a similar situations in the future.

Instead I would like to propose a setup for "considerate mining":
* Run pools either on newest or second newest version (up to you depending on which features you like as a pool admin) - say e.g. 0.8
* Connect to the rest of the bitcoin network _only_ through a node of the other version - say e.g. 0.7

This guarantees that no blocks will get into the network that will not be accepted by both 0.8 and 0.7. Those two  versions together should add up to say >90%.

Once everyone else (90%) have upgraded to the newest, (0.8), drop the 0.7 and start to introduce 0.9 instead.

/M





From luke at dashjr.org  Wed Mar 13 18:04:08 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 18:04:08 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
Message-ID: <201303131804.09339.luke@dashjr.org>

On Wednesday, March 13, 2013 5:41:29 PM you wrote:
> I'm not sure I understand the need for hard forks. We can get through this
> crisis by mining pool collusion to prevent forking blocks until there is
> widespread adoption of patched clients.

Anything requiring widespread adoption of patched clients *is by definition* a 
hard fork.

> Proposal:
> 
> 1) Patch the pre-0.8 branches to support an increased lock count, whatever
> number is required to make sure that this problem never shows up again at
> the current block size (I defer to Luke-Jr and gmaxwell's numbers on this).

This is a hard fork.

The only way to avoid a hard fork is to apply the existing lock limit to all 
clients forever. That would be fine, except that pre-0.8 clients cannot reorg 
N blocks without dividing that limit by (N * 2) + 1; that leaves us with the 
limit of around 1000 locks per block on average. Each transaction uses at 
least 3 locks on average (many times more). So about 300 transactions per 
block. This is a much smaller limit than the 1 MB we've been assuming is the 
bottleneck so far, and the need to increase it is much more urgent - as Pieter 
noted on IRC, we are probably already using more than that even ignoring DP 
spam. The only reason pre-0.8 clients have survived as well as they have thus 
far is because the blockchain has managed to avoid very deep reorgs.

Luke



From luke at dashjr.org  Wed Mar 13 18:08:17 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 18:08:17 +0000
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
	<2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
Message-ID: <201303131808.18597.luke@dashjr.org>

On Wednesday, March 13, 2013 6:01:02 PM Michael Gronager wrote:
> Please note that it was not 0.8 that had issues, but 0.7(and downwards).

While 0.7 and earlier do have issues, they also define the Bitcoin protocol. 
0.8's failure to comply with the protocol is an issue.




From mark at monetize.io  Wed Mar 13 18:27:13 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Wed, 13 Mar 2013 11:27:13 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <20130313175825.GA21242@vps7135.xlshosting.net>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
	<20130313175825.GA21242@vps7135.xlshosting.net>
Message-ID: <CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>

This may be a semantic issue. I meant that it's not a hard-fork of the
bitcoin protocol, which I'm taking to mean the way in which we all
*expected* every version of the Satoshi client to behave: the rules which
we have documented informally on the wiki, this mailing list, and in code
comments, etc. I'm just trying to prevent protocol-creep.

Luke-Jr is suggesting that we add-to/modify the bitcoin protocol rules
which all verifying implementations must adhere to. I'm suggesting that we
instead change the old codebase to do what we expected it to do all along
(what 0.8 does and what every other verifying implementation does), and
through miner collusion buy ourselves enough time for people to update
their own installations.

I know there's people here who will jump in saying that the bitcoin
protocol is the behavior of the Satoshi client, period. But which Satoshi
client? 0.7 or 0.8? How do you resolve that without being arbitrary? And
regardless, we are moving very quickly towards a multi-client future. This
problem is very clearly a *bug* in the old codebase. So let's be forward
thinking and do what we would do in any other situation: fix the bug,
responsibly notify people and give them time to react, then move on. Let's
not codify the bug in the protocol.

Mark



On Wed, Mar 13, 2013 at 10:58 AM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> On Wed, Mar 13, 2013 at 10:41:29AM -0700, Mark Friedenbach wrote:
> > 4) At some point in the future once we've crossed an acceptable adoption
> > threshold, the miners remove the above patch in a coordinated way.
> >
> > Does that not get us past this crisis without a hard-fork?
>
> This is a hardfork: it means some nodes will have to accept blocks they
> formerly considered invalid.
>
> --
> Pieter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/a05a7b10/attachment.html>

From pieter.wuille at gmail.com  Wed Mar 13 18:28:06 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 13 Mar 2013 19:28:06 +0100
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
	<2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
Message-ID: <20130313182805.GA7921@vps7135.xlshosting.net>

On Wed, Mar 13, 2013 at 07:01:02PM +0100, Michael Gronager wrote:
> Please note that it was not 0.8 that had issues, but 0.7(and downwards).
> 
> I really think changing features in 0.8 aiming for a fluffy limit to avoid lock object errors on 0.7 is the wrong way to go, and it will never cover for a similar situations in the future.

The current behaviour in 0.7 and before is indeed broken, and we cannot afford to keep
that as an implicitly-defined rule on the network. I fully agree with that, but it will
require a hardfork.

But we cannot just drop support for old nodes. It is completely unreasonable to put the
_majority_ of the network on a fork, without even as much as a discussion about it.
"Oh, you didn't get the memo? The rules implemented in your client are outdated." - that
is not how Bitcoin works: the network defines the rules.

IMHO, the way to go is first get a 0.8.1 out that mimics the old behaviour - just as a
stopgap solution. That will allow miners to safely use 0.8-based code at least. We can
also get patches for 0.7 and previous branches that fix the lock limit issue, but enforce
the same limit as 0.8.1 does, simply as band-aid for those who do not yet wish to upgrade
to 0.8.

Finally, we'll have to schedule a hard fork to drop the 0.8.1 limit. This is something
that requires widespread community consensus - far more than just miners and developers -
but as this is about fixing a bug that would otherwise prevent most evolution, I hope it
can be a very non-controversial one. To that end, I would prefer to limit this hard fork
to only direct bug fixes, and leave the block limit issue for later. By now, I think it
is clear that a hard fork will be inevitable, and by doing one, I think we can learn a
lot that can make later ones easier.

-- 
Pieter




From pieter.wuille at gmail.com  Wed Mar 13 18:38:25 2013
From: pieter.wuille at gmail.com (Pieter Wuille)
Date: Wed, 13 Mar 2013 19:38:25 +0100
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
	<20130313175825.GA21242@vps7135.xlshosting.net>
	<CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
Message-ID: <20130313183824.GB7921@vps7135.xlshosting.net>

On Wed, Mar 13, 2013 at 11:27:13AM -0700, Mark Friedenbach wrote:
> I know there's people here who will jump in saying that the bitcoin
> protocol is the behavior of the Satoshi client, period. But which Satoshi
> client? 0.7 or 0.8?

The protocol is whatever the network enforces - and that is some mix of versions of the
reference client right now, but doesn't need to remain that way.

I would very much like to have a text book of rules that is authorative, and every client
that follows it would be correct. Unfortunately, that is not how a consensus system works.
All (full) clients validate all rules, and all must independently come to the same
solution. Consensus is of utmost importance, more than some theoretical "correctness".
If we'd have a specification document, and it was discovered that a lot of
nodes on the network were doing something different than the document, those nodes would
be buggy, but it would be the specification that is wrong.

That is what happened: 0.7 and before had a bug, but 0.8 was wrong for not following the
rules of the network (which I hate to say, as I'm responsible for many changes in 0.8).

As said in another thread, the problem in the old versions needs fixing (this would even
be the case if no 0.8 existed at all, and no fork risk existed at all). But let's please
do it in a way we can all agree about, in a controlled fashion.

-- 
Pieter



From slush at centrum.cz  Wed Mar 13 18:35:11 2013
From: slush at centrum.cz (slush)
Date: Wed, 13 Mar 2013 19:35:11 +0100
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
	<20130313175825.GA21242@vps7135.xlshosting.net>
	<CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
Message-ID: <CAJna-HjufEdY77uQT13=8Z18wo4jcvLcy093BAk=mXMa7hhRSg@mail.gmail.com>

Agree. I quite like Mark's proposal. Yes, formally it is hard fork. But the
step 4) can come very far in the future, when the penetration of <0.8
clients will be mininimal.

slush

On Wed, Mar 13, 2013 at 7:27 PM, Mark Friedenbach <mark at monetize.io> wrote:

> This problem is very clearly a *bug* in the old codebase. So let's be
> forward thinking and do what we would do in any other situation: fix the
> bug, responsibly notify people and give them time to react, then move on.
> Let's not codify the bug in the protocol.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/b9c1b3c2/attachment.html>

From roy at gnomon.org.uk  Wed Mar 13 19:29:52 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 13 Mar 2013 19:29:52 +0000
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <20130313182805.GA7921@vps7135.xlshosting.net>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
	<2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
	<20130313182805.GA7921@vps7135.xlshosting.net>
Message-ID: <20130313192951.GP96148@giles.gnomon.org.uk>

On Wed, Mar 13, 2013 at 07:28:06PM +0100, Pieter Wuille wrote:

> IMHO, the way to go is first get a 0.8.1 out that mimics the old
> behaviour - just as a stopgap solution.

Presumably not emulate too precisely, at least if your initial report
that the block caused 0.7 to 'get stuck' was correct.  A network that
has a mix of 0.8.1 nodes (which will reject the block) and 0.7 nodes
(which will hang when receiving the block?) would appear to remove the
fork risk.  Is it obvious that no other serious problems remain in
such a network?

(Although I note your proposal to patch 0.7 too, so hopefully the
network wouldn't remain in that state for very long)

roy



From gmaxwell at gmail.com  Wed Mar 13 19:30:24 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 12:30:24 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
	<20130313175825.GA21242@vps7135.xlshosting.net>
	<CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
Message-ID: <CAAS2fgRh9x7qJ=SvR_v8pYqgJbymW-z=bnQMYDPHYQVo7-xxdA@mail.gmail.com>

On Wed, Mar 13, 2013 at 11:27 AM, Mark Friedenbach <mark at monetize.io> wrote:
> This may be a semantic issue. I meant that it's not a hard-fork of the
> bitcoin protocol, which I'm taking to mean the way in which we all
> *expected* every version of the Satoshi client to behave: the rules which we

In our common language a hardfork is a rule difference that can cause
irreconcilable failure in consensus; it's not some political change or
some change in the user's understanding or something fuzzy like that.
Please don't creep the definitions... but arguments over definitions
are silly.  If you really object to calling the causes consensus
failure thing something else okay, then suggest a name, but whatever
its called thats what we're talking about here.

Your proposal of having a hardfork but only on the mining nodes has
coordination problems. What happens if we don't know how to contact a
majority of the hashpower to get them to turn off their special
validation code?  This is especially a concern because it's not
unlikely that in a few months there may be solo miners with tens of
TH/s... already we have a single party with nearly a majority, though
at the moment they happen to be mining on the largest couple pools.

Far better to have this special code just triggered on a deadline,
which can be widely advertised as "you must upgrade to 0.7.4 or >0.8.1
before this time" and then all switch at once... and then we
demonstrate the viability of a general mechanism that doesn't depend
on poor miner decentralization.



From stephen at bitpay.com  Wed Mar 13 19:43:15 2013
From: stephen at bitpay.com (Stephen Pair)
Date: Wed, 13 Mar 2013 15:43:15 -0400
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <20130313182805.GA7921@vps7135.xlshosting.net>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
	<2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
	<20130313182805.GA7921@vps7135.xlshosting.net>
Message-ID: <CADb9v0L4fXw9qzhzKmRi+Xet_5qK7RoU4=gbCRpXA1BXuVaYSg@mail.gmail.com>

On Wed, Mar 13, 2013 at 2:28 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:

> But we cannot just drop support for old nodes. It is completely
> unreasonable to put the
> _majority_ of the network on a fork, without even as much as a discussion
> about it.
> "Oh, you didn't get the memo? The rules implemented in your client are
> outdated." - that
> is not how Bitcoin works: the network defines the rules.
> ...
> Finally, we'll have to schedule a hard fork to drop the 0.8.1 limit. This
> is something
> that requires widespread community consensus - far more than just miners
> and developers


The way I've started thinking about it is that there is a market for
securing a payment network.  In that market you have consumers (users of
bitcoin) and providers (miners).  It's not clear to me that if the
overwhelming majority of miners stayed on 0.8 that the 0.7 fork wouldn't
have still won out in the long run because effectively what you would have
had is a situation where the providers abandon a large portion of their
customers (0.7 users) and start providing a service that is in much less
demand.  Would everyone have upgraded to 0.8?  Maybe, but maybe not.  Maybe
many people would have made the rational decision to stay on earlier
versions and the small minority of miners that choose to service the 0.7
fork could have earned more Bitcoin on that fork...and maybe in the long
run, the majority of miners on 0.8 would realize this situation and start
to trickle back over to the 0.7 fork.  The flip side of the equation is
that the users have a pretty compelling reasons to use the services of the
most secure network (less risk of double spends).  So, the users very well
could have made the rational decision to consume the services of the most
powerful network and made the switch to 0.8.

What happened in reality is that the majority of the mining community made
the rational decision to service the largest pool of customers (0.8 as well
as 0.7 and earlier users).  It was rational because the risk of servicing
only the 0.8 users would have been much greater.

Because of this dynamic, I doubt there would ever be multiple forks of any
consequence in permanent coexistence.  I would even go so far as to say
that at this point, a successful competitor to Bitcoin would have to arise
as a fork of the UTXOs in the block chain (even if the competitor didn't
even use a block chain).  That competitor might even have to begin life in
lock step co-existence with Bitcoin, recognizing all Bitcoin transactions
for some period of time while it attempts to gain market share.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/6dcc7347/attachment.html>

From gronager at ceptacle.com  Wed Mar 13 20:14:24 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Wed, 13 Mar 2013 21:14:24 +0100
Subject: [Bitcoin-development] Blocksize and off-chain transactions
In-Reply-To: <20130313182805.GA7921@vps7135.xlshosting.net>
References: <CABsx9T0xOpNpFG4bo7wjcMV8a_xtw_jrRx_fiSutX08yfP8P7Q@mail.gmail.com>
	<20130313174838.GA22621@savin>
	<2FCCE0F7-66B0-4EBE-8448-C5F0F92A75FF@ceptacle.com>
	<20130313182805.GA7921@vps7135.xlshosting.net>
Message-ID: <BEB68029-123A-4497-A59B-6487FE99742B@ceptacle.com>

I hear consensus that at some point we need a hardfork (== creating blocks that will not be accepted by <0.7 clients).

Miners generate block, hence they are the ones who should filter themselves though some consensus. 


> But we cannot just drop support for old nodes. It is completely unreasonable to put the
> _majority_ of the network on a fork, without even as much as a discussion about it.
> "Oh, you didn't get the memo? The rules implemented in your client are outdated." - that
> is not how Bitcoin works: the network defines the rules.

Consensus was rapidly reached a day ago: To ensure the majority (all of?) the network could accept the blocks mined, and not just 0.8. This was the right decision! Too many was dependent on <=0.7

So, the question is not if, but when to do a hardfork. We need to define and monitor the % of nodes running different versions (preferably a weighted average - some nodes, like e.g. blockchain.info & mtgox serve many...). Once there was the rowit bitcoinstatus page - do we have another resource for this ?

Then the second question is how to ensure we don't create a fork again? Pieter (and others?) are of the opinion that we should mimic a 0.7 lock-object-starvation-reject-rule. I don't like this for three reasons:
1. I find it hard to ensure we have actually coined the bug precisely
2. I expect that similar issues will happen again
3. The current issue was between two versions, but in the future it could be between two implementations - then trying implement or even to coordinate strange rules becomes very unlikely.

Hence the scheme for "considerate mining" - it is the only scheme that guarantees 100% that no block are released that will not be accepted by a supermajority of the install base.

Another nice thing about it - it requires no development :)

So simply run in serial in front of all considerate miners nodes of different versions until a certain threshold of the install base is reached.

/M





From luke at dashjr.org  Wed Mar 13 20:18:23 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 20:18:23 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<20130313175825.GA21242@vps7135.xlshosting.net>
	<CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
Message-ID: <201303132018.24649.luke@dashjr.org>

On Wednesday, March 13, 2013 6:27:13 PM Mark Friedenbach wrote:
> Luke-Jr is suggesting that we add-to/modify the bitcoin protocol rules
> which all verifying implementations must adhere to. I'm suggesting that we
> instead change the old codebase to do what we expected it to do all along
> (what 0.8 does and what every other verifying implementation does), and
> through miner collusion buy ourselves enough time for people to update
> their own installations.

Curiously enough, at least MtGox's custom implementation stuck with the 
canonical blockchain despite 0.8's accidental rule change.

> I know there's people here who will jump in saying that the bitcoin
> protocol is the behavior of the Satoshi client, period. But which Satoshi
> client? 0.7 or 0.8? How do you resolve that without being arbitrary? And
> regardless, we are moving very quickly towards a multi-client future. This
> problem is very clearly a *bug* in the old codebase. So let's be forward
> thinking and do what we would do in any other situation: fix the bug,
> responsibly notify people and give them time to react, then move on. Let's
> not codify the bug in the protocol.

No, if any other client released diverged from the consensus of all 
past/existing clients, we would do the same thing: call it a formerly unknown 
protocol rule, that this new client has a bug implementing, and be done with 
it.

The only reason this particular issue needs special treatment is because the 
implications of the new rule mean that we're up against a hard limit in the 
protocol today rather than 2 years from now.

Luke



From gmaxwell at gmail.com  Wed Mar 13 20:24:50 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 13:24:50 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <16B6728E-4220-4DA6-B740-FA38A7C19CCB@thelibertyportal.com>
References: <201303131256.30144.luke@dashjr.org>
	<CACh7GpE09hqCPL6rtdC6EZzohM5QHb+0SdFoD8MzPSqf7=6hOA@mail.gmail.com>
	<20130313175825.GA21242@vps7135.xlshosting.net>
	<CACh7GpG_4uLUUiwJyZO0FtV2_UHMN-HnJsZZXWpC2jQvzb-jMQ@mail.gmail.com>
	<CAAS2fgRh9x7qJ=SvR_v8pYqgJbymW-z=bnQMYDPHYQVo7-xxdA@mail.gmail.com>
	<16B6728E-4220-4DA6-B740-FA38A7C19CCB@thelibertyportal.com>
Message-ID: <CAAS2fgR-8XC_zG1fTxyxGV+hZVDJ3DqD3LSeDm36Y3X355YQ+g@mail.gmail.com>

On Wed, Mar 13, 2013 at 1:10 PM, Matthew Mitchell
<matthewmitchell at thelibertyportal.com> wrote:
> Why would it be a difficulty in getting people to update away from 0.7 and earlier? How long would that roughly take? If people are hesitant to update, imagine if a more serious vulnerability is found. It could be disastrous.

The development community backports critical fixes which makes
updating instead of upgrading possible, but that still is not free.
Many people are carrying patches against Bitcoin which require
integration and time for testing? even if its just an update. Small
behavior changes can still break things for the users. For example, a
major mining pool lost well over 1000 BTC when upgrading to 0.8
because the reindex interacted poorly with their pool server software
and caused them to pay people 25 BTC per share, an update or upgrade
is just a risky even whos risk can be minimized if its done at your
own pace.

Sometimes when there is a vulnerability what people will do is isolate
their production nodes from the internet using upgraded nodes, so they
avoid touching the production systems. Other times the vulnerability
is only a DOS attack so they ignore it unless the attack happens, or
only applies to something else they don't care about.

Another point is that if everyone instantly upgrades in response to
developers claim that an urgent is needed (as opposed to implementing
other workarounds) then the security of the system much more obviously
reduces to the ability to compromise a developer? something no one
should want. When roll outs take time there is more time for review to
catch things, fewer nodes harmed by an introduced flaw, etc.



From andyparkins at gmail.com  Wed Mar 13 21:06:44 2013
From: andyparkins at gmail.com (Andy Parkins)
Date: Wed, 13 Mar 2013 21:06:44 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303131256.30144.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org>
Message-ID: <201303132106.45334.andyparkins@gmail.com>

On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:
> Here's a simple proposal to start discussion from...

It seems to me that the biggest failure was not the development of two 
chains, but the assurance to users (by the client) that their transactions 
were confirmed.

Is it possible to change the definition of "6 confirmations" so that it's 
something like: "six confirmations clear of any other chain".  While there 
are two competing chains, it's possible that one will go pop at any moment.  
That makes the confirmation count of any transaction on one of those chains, 
zero.

It doesn't seem impossible that clients could be made far more permissive 
about acknowledging the existence of blockchains that they wouldn't 
necessarily accept themselves (if the proof of work was valid) and warning 
the users that it's going on.



Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com



From luke at dashjr.org  Wed Mar 13 21:14:03 2013
From: luke at dashjr.org (Luke-Jr)
Date: Wed, 13 Mar 2013 21:14:03 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303132106.45334.andyparkins@gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
Message-ID: <201303132114.04596.luke@dashjr.org>

On Wednesday, March 13, 2013 9:06:44 PM Andy Parkins wrote:
> On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:
> > Here's a simple proposal to start discussion from...
> 
> It seems to me that the biggest failure was not the development of two
> chains, but the assurance to users (by the client) that their transactions
> were confirmed.

These are both the same thing.

Luke



From gmaxwell at gmail.com  Wed Mar 13 21:15:22 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 14:15:22 -0700
Subject: [Bitcoin-development] On fork awareness Was: 0.8.1 ideas
Message-ID: <CAAS2fgSxZw56TNzGEBeTpykJcc=4WKixG2LEd3EnY46z7wy1VA@mail.gmail.com>

On Wed, Mar 13, 2013 at 2:06 PM, Andy Parkins <andyparkins at gmail.com> wrote:
> On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:
>> Here's a simple proposal to start discussion from...
>
> It seems to me that the biggest failure was not the development of two
> chains, but the assurance to users (by the client) that their transactions

The development of two chains was maximally bad because the state was
irreconcilable without the manual intervention. The only reason you're
saying that it was only the false confirms that were bad is because
manual intervention resolved the worse badness. :)  A whole bunch of
people spending coins that can only exist in the different exclusive
chains would have been very bad indeed.

> Is it possible to change the definition of "6 confirmations" so that it's
> something like: "six confirmations clear of any other chain".  While there
> are two competing chains, it's possible that one will go pop at any moment.
> That makes the confirmation count of any transaction on one of those chains,
> zero.

Not reliably, you will only hear of a competing chain if some of your
peers have accepted it. If your peers were all pre-0.8 or all 0.8 you
only would have heard of one chain.

Relaying non-primary chains has some obvious and subtle challenges?
Obviously you need some way of preventing it from being a DOS vector,
but thats not a fundamental issue? you could rate limit by only
relaying chains which are close to the current best in sum difficulty?
just a software engineering one.

A more subtle issue is it that it's not in a node's self-interest to
tell peers about a chain it thinks is invalid: it wants its peers on
_its_ view of the consensus, not some other one.  Though perhaps this
could be addressed by only relaying headers for non-primary chains.



From roy at gnomon.org.uk  Wed Mar 13 21:22:43 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 13 Mar 2013 21:22:43 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <201303132114.04596.luke@dashjr.org>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
Message-ID: <20130313212243.GQ96148@giles.gnomon.org.uk>

On Wed, Mar 13, 2013 at 09:14:03PM +0000, Luke-Jr wrote:
> On Wednesday, March 13, 2013 9:06:44 PM Andy Parkins wrote:
> > On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:
> > > Here's a simple proposal to start discussion from...
> > 
> > It seems to me that the biggest failure was not the development of two
> > chains, but the assurance to users (by the client) that their transactions
> > were confirmed.
> 
> These are both the same thing.

The idea of the client detecting/warning about not-trivial forking
seems worthwhile too, though, assuming it doesn't already (AIUI it
doesn't).

I don't know if there's any automatic monitoring for forks, but if not
I would assume that the core devs and/or Bitcoin Foundation would be
planning to put some in place.  But there's no reason I can see why
end users clients should't be warning of such situations, too, when
they can (obviously they won't always be aware of the fork).

roy



From gmaxwell at gmail.com  Wed Mar 13 21:27:01 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Wed, 13 Mar 2013 14:27:01 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <20130313212243.GQ96148@giles.gnomon.org.uk>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
	<20130313212243.GQ96148@giles.gnomon.org.uk>
Message-ID: <CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>

On Wed, Mar 13, 2013 at 2:22 PM, Roy Badami <roy at gnomon.org.uk> wrote:
> The idea of the client detecting/warning about not-trivial forking
> seems worthwhile too, though, assuming it doesn't already (AIUI it
> doesn't).

It does warn? if its heard the fork and its on the lower difficulty
side. Extending that to also alert if its on the winning side and the
fork is long enough might be wise, though I have a little concern that
it'll be mistaken to be more dependable than it would be.



From roy at gnomon.org.uk  Wed Mar 13 21:36:08 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Wed, 13 Mar 2013 21:36:08 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
	<20130313212243.GQ96148@giles.gnomon.org.uk>
	<CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>
Message-ID: <20130313213608.GR96148@giles.gnomon.org.uk>

On Wed, Mar 13, 2013 at 02:27:01PM -0700, Gregory Maxwell wrote:
> On Wed, Mar 13, 2013 at 2:22 PM, Roy Badami <roy at gnomon.org.uk> wrote:
> > The idea of the client detecting/warning about not-trivial forking
> > seems worthwhile too, though, assuming it doesn't already (AIUI it
> > doesn't).
> 
> It does warn??? if its heard the fork and its on the lower difficulty
> side. Extending that to also alert if its on the winning side and the
> fork is long enough might be wise, though I have a little concern that
> it'll be mistaken to be more dependable than it would be.

Still, it would have meant that all 0.8 users would have immediatley
been told that something was wrong.  I don't know to what extent it
was luck that this was dealt with as promptly and efficiently as it
was, but to the extent that luck was involved, a slew of 0.8 users
shouting in various places "wtf is going on" couldn't but help in
reducing the element of luck if something similar were to happen again.

roy





From da2ce7 at gmail.com  Thu Mar 14 00:18:12 2013
From: da2ce7 at gmail.com (Cameron Garnham)
Date: Thu, 14 Mar 2013 11:18:12 +1100
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <20130313213608.GR96148@giles.gnomon.org.uk>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
	<20130313212243.GQ96148@giles.gnomon.org.uk>
	<CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>
	<20130313213608.GR96148@giles.gnomon.org.uk>
Message-ID: <51411744.6010908@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256


I think that the course of action is quite simple:

1.  Upgrade all the clients to implement the lock limits. (in code,
not at the DB exception layer).  A bit of research is needed to work
out exactly what these limits are so we can maximise the number of
transactions.

2. Fix the DB layer, and test that all the clients can support 1MB blocks.

3. Once we are confident that the network supports 1MB blocks, set a
date where the lock limits are removed.

For me, everyone signed up to bitcoin thinking that there was a 1MB /
block limit.  The lock limits were unexpected, and could be considered
extremely uncontroversial to remove.

The discussion of larger blocks (i.e. > 1MB ),  that I happen to
disagree with,  is not relevant to the discussion of the removal of
the lock limits.


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.19 (MingW32)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iF4EAREIAAYFAlFBF0QACgkQBJ8cMDO159aWbwEAs8Ldt8hRpzjS4HdrH3U9Jnaq
MWhifXqkJuVC0TVCz3EBAOAfSogdSS7rJvtfV8FqTIox1ek/xJxuHvZdonUnQN1K
=I5Cf
-----END PGP SIGNATURE-----



From grarpamp at gmail.com  Thu Mar 14 02:49:36 2013
From: grarpamp at gmail.com (grarpamp)
Date: Wed, 13 Mar 2013 22:49:36 -0400
Subject: [Bitcoin-development] Ok to use 0.8.x?
Message-ID: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>

Assuming a new install and first time connection to the net,
is using 0.8.x [1] safe to use, for all (or select?) purposes,
regarding the current fork issue?

If not, is there a recommended branch, tag, or commit, for
all such (or select?) purposes, until such time as an upgrade
alert is broadcasted?

Thanks.

[1] Regarding possible 0.8.x flavors...

There are only 'branch master' and 'tag v0.8.0' here:
https://github.com/bitcoin/bitcoin

There are no 0.8.x branch or tags here yet:
https://git.gitorious.org/bitcoin/bitcoind-stable



From gavinandresen at gmail.com  Thu Mar 14 04:01:46 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Thu, 14 Mar 2013 00:01:46 -0400
Subject: [Bitcoin-development] Ok to use 0.8.x?
In-Reply-To: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>
References: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>
Message-ID: <CABsx9T0VMuCwtw=LR_N4PyVPKGzAJfE3K7NzzLK719w87aqQ5g@mail.gmail.com>

Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.

So: safe for everybody except solo miners / pool operators.

-- 
--
Gavin Andresen



From gronager at ceptacle.com  Thu Mar 14 08:33:24 2013
From: gronager at ceptacle.com (Michael Gronager)
Date: Thu, 14 Mar 2013 09:33:24 +0100
Subject: [Bitcoin-development] Ok to use 0.8.x?
In-Reply-To: <CABsx9T0VMuCwtw=LR_N4PyVPKGzAJfE3K7NzzLK719w87aqQ5g@mail.gmail.com>
References: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>
	<CABsx9T0VMuCwtw=LR_N4PyVPKGzAJfE3K7NzzLK719w87aqQ5g@mail.gmail.com>
Message-ID: <17182C57-07C5-4E35-9F04-DC2B8C96A8EB@ceptacle.com>


> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.
> 
> So: safe for everybody except solo miners / pool operators.

And even solo miners / pool operators can use it if connected to the network only through a 0.7 node.






From ben at benlabs.net  Fri Mar 15 17:06:20 2013
From: ben at benlabs.net (Benjamin Lindner)
Date: Fri, 15 Mar 2013 13:06:20 -0400
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <51411744.6010908@gmail.com>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
	<20130313212243.GQ96148@giles.gnomon.org.uk>
	<CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>
	<20130313213608.GR96148@giles.gnomon.org.uk>
	<51411744.6010908@gmail.com>
Message-ID: <D0FC8006-AF19-4E92-87B4-A4FE356D4577@benlabs.net>


On Mar 13, 2013, at 8:18 PM, Cameron Garnham <da2ce7 at gmail.com> wrote:
> For me, everyone signed up to bitcoin thinking that there was a 1MB /
> block limit.  The lock limits were unexpected, and could be considered
> extremely uncontroversial to remove.

This. Software behavior which is not described by the source code should not be considered an integral part of the rule set.
Any influence of external libraries on the consensus mechanism is unacceptable.


From luke at dashjr.org  Fri Mar 15 19:23:00 2013
From: luke at dashjr.org (Luke-Jr)
Date: Fri, 15 Mar 2013 19:23:00 +0000
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <D0FC8006-AF19-4E92-87B4-A4FE356D4577@benlabs.net>
References: <201303131256.30144.luke@dashjr.org> <51411744.6010908@gmail.com>
	<D0FC8006-AF19-4E92-87B4-A4FE356D4577@benlabs.net>
Message-ID: <201303151923.02247.luke@dashjr.org>

On Friday, March 15, 2013 5:06:20 PM Benjamin Lindner wrote:
> On Mar 13, 2013, at 8:18 PM, Cameron Garnham <da2ce7 at gmail.com> wrote:
> > For me, everyone signed up to bitcoin thinking that there was a 1MB /
> > block limit.  The lock limits were unexpected, and could be considered
> > extremely uncontroversial to remove.
> 
> This. Software behavior which is not described by the source code should
> not be considered an integral part of the rule set. Any influence of
> external libraries on the consensus mechanism is unacceptable.

Note that the lock limits were explicitly set in the bitcoind source code.



From gmaxwell at gmail.com  Fri Mar 15 19:52:18 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Fri, 15 Mar 2013 12:52:18 -0700
Subject: [Bitcoin-development] 0.8.1 ideas
In-Reply-To: <D0FC8006-AF19-4E92-87B4-A4FE356D4577@benlabs.net>
References: <201303131256.30144.luke@dashjr.org>
	<201303132106.45334.andyparkins@gmail.com>
	<201303132114.04596.luke@dashjr.org>
	<20130313212243.GQ96148@giles.gnomon.org.uk>
	<CAAS2fgSLmjhMmmrxjKQ0KOX5EEM4=+Wwebuaw4NHE9LdtLSP6Q@mail.gmail.com>
	<20130313213608.GR96148@giles.gnomon.org.uk>
	<51411744.6010908@gmail.com>
	<D0FC8006-AF19-4E92-87B4-A4FE356D4577@benlabs.net>
Message-ID: <CAAS2fgQ0uD46P9FdsgMJW8jx3Yb3r9i+LEX7xnAEp4LEaoY5Kg@mail.gmail.com>

On Fri, Mar 15, 2013 at 10:06 AM, Benjamin Lindner <ben at benlabs.net> wrote:
> This. Software behavior which is not described by the source code should not be considered an integral part of the rule set.
> Any influence of external libraries on the consensus mechanism is unacceptable.

No one thinks its controversial to remove it or that it's a good thing
to have? only that its technically somewhat complicated and risky to
remove it.



From grarpamp at gmail.com  Sat Mar 16 22:04:18 2013
From: grarpamp at gmail.com (grarpamp)
Date: Sat, 16 Mar 2013 18:04:18 -0400
Subject: [Bitcoin-development] Ok to use 0.8.x?
In-Reply-To: <17182C57-07C5-4E35-9F04-DC2B8C96A8EB@ceptacle.com>
References: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>
	<CABsx9T0VMuCwtw=LR_N4PyVPKGzAJfE3K7NzzLK719w87aqQ5g@mail.gmail.com>
	<17182C57-07C5-4E35-9F04-DC2B8C96A8EB@ceptacle.com>
Message-ID: <CAD2Ti28baaYbbYvNxUgb2PNz0UjURkE5ROtmdSJ8nxvp4+fFKA@mail.gmail.com>

>> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.
>>
>> So: safe for everybody except solo miners / pool operators.
>
> And even solo miners / pool operators can use it if connected to the network only through a 0.7 node.

I'll go ahead and use 0.8.x since it will be just transactions and queries.

I'm guessing this will all be fixed in a couple weeks and that ASIC and FPGA
miners will have their softcode updated, as will the pure softminers (GPU).



From pete at petertodd.org  Sat Mar 16 22:17:09 2013
From: pete at petertodd.org (Peter Todd)
Date: Sat, 16 Mar 2013 18:17:09 -0400
Subject: [Bitcoin-development] Ok to use 0.8.x?
In-Reply-To: <CAD2Ti28baaYbbYvNxUgb2PNz0UjURkE5ROtmdSJ8nxvp4+fFKA@mail.gmail.com>
References: <CAD2Ti28XnZFDLMm+B1cxb5b+adjwk5M-DrFRs7C+VE=SLZ0hNQ@mail.gmail.com>
	<CABsx9T0VMuCwtw=LR_N4PyVPKGzAJfE3K7NzzLK719w87aqQ5g@mail.gmail.com>
	<17182C57-07C5-4E35-9F04-DC2B8C96A8EB@ceptacle.com>
	<CAD2Ti28baaYbbYvNxUgb2PNz0UjURkE5ROtmdSJ8nxvp4+fFKA@mail.gmail.com>
Message-ID: <403A5D3D-9CB1-4E35-A017-A5E0F42BFF39@petertodd.org>

Hardware mining rigs do not need updating - they all are designed to connect directly to a pool and it is the pool that makes all block related decisions. All the miner, or as I prefer to call them hasher, sees is an 80 byte block header and possibly with stratum and getblocktemplate enough other information like a partial merkle tree to roll the extranonce.

On 2013-03-16, at 18:04, grarpamp <grarpamp at gmail.com> wrote:

>>> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.
>>> 
>>> So: safe for everybody except solo miners / pool operators.
>> 
>> And even solo miners / pool operators can use it if connected to the network only through a 0.7 node.
> 
> I'll go ahead and use 0.8.x since it will be just transactions and queries.
> 
> I'm guessing this will all be fixed in a couple weeks and that ASIC and FPGA
> miners will have their softcode updated, as will the pure softminers (GPU).
> 
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
> 



From gavinandresen at gmail.com  Sun Mar 17 01:13:51 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sat, 16 Mar 2013 21:13:51 -0400
Subject: [Bitcoin-development] 0.8.1 plan
Message-ID: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>

Here's the plan for the 0.8.1 release:

A new CheckBlock() rule, in effect until 15 May, that ensure only
blocks compatible with old releases are accepted into the main chain
(only blocks that touch 4,500 or fewer distinct txids are allowed).

A limit of 500k to blocks created, also in effect until 15 May.

Alerts will be sent to pre-0.8 releases over the next two months,
telling people to either upgrade or create a DB_CONFIG file so they
can handle large blocks.

Code is : https://github.com/bitcoin/bitcoin/pull/2373

I chose May 15 arbitrarily; two months seems like a reasonable 'quick'
amount of time to give people to upgrade/workaround.

The fix was written to be trivial to port to previous versions, and to
be as simple as possible.

Some of the exact details may still change before the 0.8.1 release
(e.g. it might not be exactly 4,500 distinct txids).

Schedule:

0.8.1 binaries late tomorrow or Monday.  An expires-after-24-hours
Alert sent on Tuesday to everybody running pre-0.8, pointing to
http://bitcoin.org/may15.html

Another 24-hour Alert sent on April 15, reminding everybody again they
will need to upgrade or workaround.

A final Alert that never expires sent on May 8th.

After May 15, miners will be free to create blocks up to 1MB, and
anybody running old versions who ignored the alerts may be left
behind.

-- 
--
Gavin Andresen



From etotheipi at gmail.com  Sun Mar 17 02:03:31 2013
From: etotheipi at gmail.com (Alan Reiner)
Date: Sat, 16 Mar 2013 22:03:31 -0400
Subject: [Bitcoin-development] 0.8.1 plan
In-Reply-To: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>
References: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>
Message-ID: <51452473.1040301@gmail.com>

On 03/16/2013 09:13 PM, Gavin Andresen wrote:
> I chose May 15 arbitrarily; two months seems like a reasonable 'quick'
> amount of time to give people to upgrade/workaround.
>

Maybe you should wait until after the Bitcoin Conference -- if something
goes wacky on May 15th but then everyone is getting on a plane to go to
San Jose two days later, it may create unnecessary stress.  It's
probably not a big deal, but if the date is arbitrary anyway, why not
just push back one more week?

-Alan



From frankf44 at gmail.com  Sun Mar 17 02:20:14 2013
From: frankf44 at gmail.com (Frank F)
Date: Sat, 16 Mar 2013 21:20:14 -0500
Subject: [Bitcoin-development] 0.8.1 plan
In-Reply-To: <51452473.1040301@gmail.com>
References: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>
	<51452473.1040301@gmail.com>
Message-ID: <CALxyHsXqoCPSc43ty-A6FLw6Z1+MVA9LjbrOOMG6tef4N8Qobg@mail.gmail.com>

On Sat, Mar 16, 2013 at 9:03 PM, Alan Reiner <etotheipi at gmail.com> wrote:

> On 03/16/2013 09:13 PM, Gavin Andresen wrote:
> > I chose May 15 arbitrarily; two months seems like a reasonable 'quick'
> > amount of time to give people to upgrade/workaround.
> >
>
> Maybe you should wait until after the Bitcoin Conference -- if something
> goes wacky on May 15th but then everyone is getting on a plane to go to
> San Jose two days later, it may create unnecessary stress.  It's
> probably not a big deal, but if the date is arbitrary anyway, why not
> just push back one more week?
>

Well, he did make the bitcoin.org/may15.html page already. It would be
crazy to change that now.

>
> -Alan
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>



-- 
*MONEY IS OVER!*
                                IF YOU WANT IT<http://www.zeitgeistmovie.com/>
=====================================================
The causes of my servitude can be traced to the tyranny of money.
-Serj Tankian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130316/c50f31c4/attachment.html>

From gavinandresen at gmail.com  Sun Mar 17 02:31:38 2013
From: gavinandresen at gmail.com (Gavin Andresen)
Date: Sat, 16 Mar 2013 22:31:38 -0400
Subject: [Bitcoin-development] 0.8.1 plan
In-Reply-To: <CALxyHsXqoCPSc43ty-A6FLw6Z1+MVA9LjbrOOMG6tef4N8Qobg@mail.gmail.com>
References: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>
	<51452473.1040301@gmail.com>
	<CALxyHsXqoCPSc43ty-A6FLw6Z1+MVA9LjbrOOMG6tef4N8Qobg@mail.gmail.com>
Message-ID: <CABsx9T05xEPrWA4HMEd+e5aXvj_=X2hr=+Zt+2SkntKu+TvzMA@mail.gmail.com>

> Well, he did make the bitcoin.org/may15.html page already. It would be crazy
> to change that now.

Not crazy, just inconvenient, and possibly confusing.

I'm going to be pretty stubborn about the dates. I'm just not
interested in lots of discussion about what the perfect times/dates
will be, there are much more important things that need to get done
soon.

Like hard-forking to increase the 1MB blocksize limit.  This will be
good practice for that.

-- 
--
Gavin Andresen



From luke at dashjr.org  Sun Mar 17 15:29:37 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sun, 17 Mar 2013 15:29:37 +0000
Subject: [Bitcoin-development] 0.8.1 plan
In-Reply-To: <CALxyHsXqoCPSc43ty-A6FLw6Z1+MVA9LjbrOOMG6tef4N8Qobg@mail.gmail.com>
References: <CABsx9T050Zia=5Xy4fRh_RtjOQzAVi-UPKmhYCuKbdZTF3U7dA@mail.gmail.com>
	<51452473.1040301@gmail.com>
	<CALxyHsXqoCPSc43ty-A6FLw6Z1+MVA9LjbrOOMG6tef4N8Qobg@mail.gmail.com>
Message-ID: <201303171529.39725.luke@dashjr.org>

On Sunday, March 17, 2013 2:20:14 AM Frank F wrote:
> Well, he did make the bitcoin.org/may15.html page already. It would be
> crazy to change that now.

OTOH, the page's recommended config isn't really too ideal. While the new lock 
limit should be good for up to 2 block deep reorgs, I doubt merchants/miners 
want to get stuck if someone pulls off a 3-block deep reorg. Since we usually 
consider 6 blocks to be "confirmed beyond impossibility of reversal", a limit 
of at least 292692 should probably be recommended. Additionally, I suspect 
set_lg_max may need bumping upward - but I'm not quite sure how to calculate 
the correct value there.

Why does the example config do set_lg_dir? That will screw things up should 
the client be using some other directory for any reason..

Also, please add a note that 0.4.x, 0.5.x, 0.6.x, and 0.7.x will be receiving 
backports in their next stable releases sometime before May 15.

Luke



From gavin at bitcoinfoundation.org  Mon Mar 18 15:32:49 2013
From: gavin at bitcoinfoundation.org (Gavin Andresen)
Date: Mon, 18 Mar 2013 11:32:49 -0400
Subject: [Bitcoin-development] Bitcoin-Qt/bitcoind version 0.8.1 available
Message-ID: <CABsx9T1xv1uitv0dEEnHEvphq+OuM+s8CSvTpeyUiFXw3WwkPw@mail.gmail.com>

Bitcoin-Qt/bitcoind version 0.8.1 is available from:
  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/

This is a maintenance release that adds a new network rule to avoid a
chain-forking incompatibility with versions 0.7.2 and earlier.

Source code for this release is in a 0.8.1 tree branched directly from
the 0.8.0 release:
  https://github.com/bitcoin/bitcoin/tree/0.8.1

-- 
--
Gavin Andresen
Chief Scientist, Bitcoin Foundation
https://www.bitcoinfoundation.org/



From willis.randy at ymail.com  Mon Mar 18 18:41:11 2013
From: willis.randy at ymail.com (Randy Willis)
Date: Mon, 18 Mar 2013 11:41:11 -0700 (PDT)
Subject: [Bitcoin-development] [ANNOUNCE] bitcoin erlang daemon
Message-ID: <1363632071.9872.YahooMailNeo@web161604.mail.bf1.yahoo.com>

Hello all!
For some time I was working on bitcoin daemon implementation in erlang. 
Now it's in the early stage of development. I'm trying to implement protocol not looking into bitcoind source, but using specification from https://en.bitcoin.it/wiki (found one bug so far), original paper and looking at the protocol messages which I get from peers.

My goal is to make scalable bitcoin daemon, capable of serving many thousands of peers on relatively low-end servers.
At current state it's capable of connecting and parsing messages from 3000+ peers on 256M RAM VPS without swap. It does not do much besides protocol parsing and peer discovery now, but it's only several days old. Chances are that it connected to your machine - check for /ebtcd:0.0.1/ user-agent in logs.
Short term pans: accept incoming connections, announce own address via addr message.
Mid term plans: add validation and routing (test on testnet), release source under open license (AGPL sounds good).
Long term: full-featured daemon.

P.S. In case someone wants to encourage me with some BTC, I set up donation adress:
1GVmS56pvVL7YZA7YqMBXmaDedCoputKuJ




From etotheipi at gmail.com  Thu Mar 21 19:39:23 2013
From: etotheipi at gmail.com (Alan Reiner)
Date: Thu, 21 Mar 2013 15:39:23 -0400
Subject: [Bitcoin-development] New webpage:  Offline Backups
Message-ID: <514B61EB.8060201@gmail.com>

I noticed the new webpage is up on bitcoin.org.   I still have mixed
feelings about it, but I noticed there is a "You need to know!" section
that suggests offline backups.

As long as you are featuring Armory and Electrum on the "wallets" page,
you should be including them in that blurb as options for offline
storage.  It's kind of silly to say "/You must do this!  But we have no
recommendations for how.  At all.  Good luck/!"  At least have a
dedicated page or (not-ideally, forum post) describing the various
options and leads for them to follow for actually doing it. 

-Alan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130321/6ddafe9a/attachment.html>

From jgarzik at exmulti.com  Sat Mar 23 07:17:06 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 03:17:06 -0400
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
Message-ID: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>

Here is a rough draft implementation of a UDP P2P protocol extension
for bitcoin:

     https://github.com/jgarzik/bitcoin/tree/udp
     http://yyz.us/bitcoin/udp-v0.patch

Protocol specification (such that it is):

- UDP, bound to same port as TCP P2P (normally 8333)
- Active, simultaneous TCP P2P connection required (useful against DoS
and other attacks)
- Same message format as TCP P2P, same pchMessageStart conventions,
etc. (my CNetMessage pull req would be helpful here)
- Multiple P2P messages per UDP packet permitted
- Max UDP packet size 100*1024 bytes
- Advertises NODE_UDP in nServices
- New "getudpcook" TCP P2P command returns a "udpcook" message,
containing a yummy cookie
- UDP P2P commands "inv", "tx" and "addr" are handled as if received via TCP
- UDP P2P command "udpsub" sets a mask, that subscribes to one or more
data broadcasts.
- When USM_INV_BCAST mask bit is set, receive "inv" messages via UDP
rather than TCP.

Project and design goals (or, why do this?):

- It is theorized that UDP may be useful for some messages we
broadcast throughout the network
- A productive discussion STARTS with code, otherwise discussion
continues forever.
- Investigate improving "inv" relay speed
- Investigate unconditional "tx" broadcasting via UDP, as "inv"
alternative, for small tx's.
- Investigate improving block relay speed (or perhaps block header relay speed)
- Open up new design avenues, for P2P patterns more suited to UDP than
TCP in general.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From willis.randy at ymail.com  Sat Mar 23 10:42:26 2013
From: willis.randy at ymail.com (Randy Willis)
Date: Sat, 23 Mar 2013 03:42:26 -0700 (PDT)
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
Message-ID: <1364035346.19716.YahooMailNeo@web161601.mail.bf1.yahoo.com>

Not looked at code yet, some thoughts:

1) In IPv4 max UDP data size is 65507 bytes.
2) What about big messages (block)?
3) I think relay speed can be increased only by reducing network diameter. 

Introducing super-nodes with thousands of connected peers can greatly help here.
4) The only (IMO) UDP advantage: hole punching. But requirement of active 

TCP connection defies it. And hole punching will need protocol extension.
5) unsolicited tx broadcast will increase traffic of nodes (especially well-connected)
and less people will run them.


---- Original Message -----

From: Jeff Garzik <jgarzik at exmulti.com>
To: Bitcoin Development <bitcoin-development at lists.sourceforge.net>
Cc: 
Sent: Saturday, March 23, 2013 7:17 AM
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension

Here is a rough draft implementation of a UDP P2P protocol extension
for bitcoin:

? ? https://github.com/jgarzik/bitcoin/tree/udp
? ?  http://yyz.us/bitcoin/udp-v0.patch

Protocol specification (such that it is):

- UDP, bound to same port as TCP P2P (normally 8333)
- Active, simultaneous TCP P2P connection required (useful against DoS
and other attacks)
- Same message format as TCP P2P, same pchMessageStart conventions,
etc. (my CNetMessage pull req would be helpful here)
- Multiple P2P messages per UDP packet permitted
- Max UDP packet size 100*1024 bytes
- Advertises NODE_UDP in nServices
- New "getudpcook" TCP P2P command returns a "udpcook" message,
containing a yummy cookie
- UDP P2P commands "inv", "tx" and "addr" are handled as if received via TCP
- UDP P2P command "udpsub" sets a mask, that subscribes to one or more
data broadcasts.
- When USM_INV_BCAST mask bit is set, receive "inv" messages via UDP
rather than TCP.

Project and design goals (or, why do this?):

- It is theorized that UDP may be useful for some messages we
broadcast throughout the network
- A productive discussion STARTS with code, otherwise discussion
continues forever.
- Investigate improving "inv" relay speed
- Investigate unconditional "tx" broadcasting via UDP, as "inv"
alternative, for small tx's.
- Investigate improving block relay speed (or perhaps block header relay speed)
- Open up new design avenues, for P2P patterns more suited to UDP than
TCP in general.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com

------------------------------------------------------------------------------
Everyone hates slow websites. So do we.
Make your web apps faster with AppDynamics
Download AppDynamics Lite for free today:
http://p.sf.net/sfu/appdyn_d2d_mar
_______________________________________________
Bitcoin-development mailing list
Bitcoin-development at lists.sourceforge.net
https://lists.sourceforge.net/lists/listinfo/bitcoin-development




From luke at dashjr.org  Sat Mar 23 14:52:20 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 23 Mar 2013 14:52:20 +0000
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <1364035346.19716.YahooMailNeo@web161601.mail.bf1.yahoo.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<1364035346.19716.YahooMailNeo@web161601.mail.bf1.yahoo.com>
Message-ID: <201303231452.23042.luke@dashjr.org>

On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:
> Introducing super-nodes with thousands of connected peers can greatly help
> here.

UDP is connectionless.
I would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/

Luke



From jgarzik at exmulti.com  Sat Mar 23 15:24:41 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 11:24:41 -0400
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <201303231452.23042.luke@dashjr.org>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<1364035346.19716.YahooMailNeo@web161601.mail.bf1.yahoo.com>
	<201303231452.23042.luke@dashjr.org>
Message-ID: <CA+8xBpfvTQ9pEygPmeSf0guOsECu6uecOG-KB=GVXtPKNo23ZQ@mail.gmail.com>

On Sat, Mar 23, 2013 at 10:52 AM, Luke-Jr <luke at dashjr.org> wrote:
> On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:
>> Introducing super-nodes with thousands of connected peers can greatly help
>> here.
>
> UDP is connectionless.
> I would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/

It depends on the usage.  Simply broadcasting a TX or INV to a remote
peer does not require a connection, clearly...  but you probably want
to signal acceptance of those messages somehow.

But other uses, like subscribing to a broadcast, does require some
notion of an association.

In the rough draft, a parallel TCP connection with version/verack
sequence is required, and you may make use of it if a connection is
needed.

But that is just one approach.  A more robust, heavyweight UDP P2P
might be a hole-punching TCP alternative.  It's up to the community
and results of experimentation.

Bittorrent has evolved a full transfer protocol over UDP, to get
around firewalls and the like.
-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From jgarzik at exmulti.com  Sat Mar 23 16:16:19 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 12:16:19 -0400
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
Message-ID: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>

Once a supermajority (95%) of mining reaches block version 2,
nVersion==1 blocks will be rejected.  This event seems likely to occur
in the next week.

Version 2 block specification: https://en.bitcoin.it/wiki/BIP_0034

Watching for the event: http://blockorigin.pfoe.be/top.php  The text
is at the bottom:
"We are currently at 100 out of the latest 1000 blocks on version 1
(10.00%) and 899 out of the latest 1000 blocks on version 2 (89.90%)"

Users should not be impacted.  Some ancient miners will produce
newly-invalid blocks (v1), that will get ignored.  The easy solution
is to mine using a recent bitcoind (0.7 or later).  If you are a miner
and need help upgrading to v2, ping us on #bitcoin-dev or
bitcoin-development at lists.sourceforge.net.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From luke at dashjr.org  Sat Mar 23 17:09:05 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 23 Mar 2013 17:09:05 +0000
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
Message-ID: <201303231709.07059.luke@dashjr.org>

On Saturday, March 23, 2013 4:16:19 PM Jeff Garzik wrote:
> Users should not be impacted.  Some ancient miners will produce
> newly-invalid blocks (v1), that will get ignored.  The easy solution
> is to mine using a recent bitcoind (0.7 or later).  If you are a miner
> and need help upgrading to v2, ping us on #bitcoin-dev or
> bitcoin-development at lists.sourceforge.net.

I don't think anyone is mining using bitcoind 0.7 or later? Deepbit is the 
only pool I know of using bitcoind at all, and it's based on 0.3.21 (or about 
that)...

p2pool has supported v2 blocks since 2012 Aug 8.
Eloipool has supported v2 blocks since 2012 Sep 1.
slush's stratum server has supported v2 blocks since it was written.

I'm not aware of any other maintained open source poolservers.
At least PoolServerJ and ecoinpool are known to break when v2 blocks become 
mandatory.



From luke at dashjr.org  Sat Mar 23 17:43:57 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 23 Mar 2013 17:43:57 +0000
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <CA+8xBpc9n4_CDYTq80+u3V=sD+F-tTnc1NMVnK1Z_UnNix75dg@mail.gmail.com>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231709.07059.luke@dashjr.org>
	<CA+8xBpc9n4_CDYTq80+u3V=sD+F-tTnc1NMVnK1Z_UnNix75dg@mail.gmail.com>
Message-ID: <201303231743.59510.luke@dashjr.org>

On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:
> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:
> > I don't think anyone is mining using bitcoind 0.7 or later?
> 
> slush, BTC Guild, ozcoin too I think, several others.

Not for producing coinbases (where BIP 34 is implemented).



From jgarzik at exmulti.com  Sat Mar 23 17:47:46 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 13:47:46 -0400
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <201303231743.59510.luke@dashjr.org>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231709.07059.luke@dashjr.org>
	<CA+8xBpc9n4_CDYTq80+u3V=sD+F-tTnc1NMVnK1Z_UnNix75dg@mail.gmail.com>
	<201303231743.59510.luke@dashjr.org>
Message-ID: <CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>

On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:
> On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:
>> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:
>> > I don't think anyone is mining using bitcoind 0.7 or later?
>>
>> slush, BTC Guild, ozcoin too I think, several others.
>
> Not for producing coinbases (where BIP 34 is implemented).

Sure, that is largely the pool server layer.  But it is misleading to
imply that bitcoind is nowhere in the stack.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From luke at dashjr.org  Sat Mar 23 17:51:47 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 23 Mar 2013 17:51:47 +0000
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231743.59510.luke@dashjr.org>
	<CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>
Message-ID: <201303231751.48969.luke@dashjr.org>

On Saturday, March 23, 2013 5:47:46 PM Jeff Garzik wrote:
> On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:
> > On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:
> >> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:
> >> > I don't think anyone is mining using bitcoind 0.7 or later?
> >> 
> >> slush, BTC Guild, ozcoin too I think, several others.
> > 
> > Not for producing coinbases (where BIP 34 is implemented).
> 
> Sure, that is largely the pool server layer.  But it is misleading to
> imply that bitcoind is nowhere in the stack.

Context is everything.
bitcoind is nowhere in the implementation of the miner end of BIP 34.



From jgarzik at exmulti.com  Sat Mar 23 17:28:55 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 13:28:55 -0400
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <201303231709.07059.luke@dashjr.org>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231709.07059.luke@dashjr.org>
Message-ID: <CA+8xBpc9n4_CDYTq80+u3V=sD+F-tTnc1NMVnK1Z_UnNix75dg@mail.gmail.com>

On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:
> I don't think anyone is mining using bitcoind 0.7 or later?

slush, BTC Guild, ozcoin too I think, several others.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From jgarzik at exmulti.com  Sat Mar 23 18:21:32 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 14:21:32 -0400
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <201303231751.48969.luke@dashjr.org>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231743.59510.luke@dashjr.org>
	<CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>
	<201303231751.48969.luke@dashjr.org>
Message-ID: <CA+8xBpdSHxbzSZenTCLrh7yfCWMLXokbdupTkjpU0V2+B1YV3w@mail.gmail.com>

On Sat, Mar 23, 2013 at 1:51 PM, Luke-Jr <luke at dashjr.org> wrote:
> bitcoind is nowhere in the implementation of the miner end of BIP 34.

Again, not strictly true.

bitcoind's 'getblocktemplate' RPC call used by some supplies the block
version, selects transactions for the miner, and other tasks integral
to the implementation of the miner and BIP 34.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From luke at dashjr.org  Sat Mar 23 18:27:20 2013
From: luke at dashjr.org (Luke-Jr)
Date: Sat, 23 Mar 2013 18:27:20 +0000
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <CA+8xBpdSHxbzSZenTCLrh7yfCWMLXokbdupTkjpU0V2+B1YV3w@mail.gmail.com>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231751.48969.luke@dashjr.org>
	<CA+8xBpdSHxbzSZenTCLrh7yfCWMLXokbdupTkjpU0V2+B1YV3w@mail.gmail.com>
Message-ID: <201303231827.23273.luke@dashjr.org>

On Saturday, March 23, 2013 6:21:32 PM Jeff Garzik wrote:
> On Sat, Mar 23, 2013 at 1:51 PM, Luke-Jr <luke at dashjr.org> wrote:
> > bitcoind is nowhere in the implementation of the miner end of BIP 34.
> 
> Again, not strictly true.
> 
> bitcoind's 'getblocktemplate' RPC call used by some supplies the block
> version, selects transactions for the miner, and other tasks integral
> to the implementation of the miner and BIP 34.

Transaction selection and everything else bitcoind does, is irrelevant to BIP 
34. It is incompatible with getblocktemplate for coinbase-creating software to 
produce v2 blocks without implementing BIP 34 themselves, even if the upstream 
GBT server specifies it.



From gmaxwell at gmail.com  Sat Mar 23 19:18:03 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 23 Mar 2013 12:18:03 -0700
Subject: [Bitcoin-development] Upcoming network event: block v2 lock-in
In-Reply-To: <CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>
References: <CA+8xBpcwLUt=RBYynbQDwY2Bv1keCPy0pdXP4+8CG-wqvrxOCA@mail.gmail.com>
	<201303231709.07059.luke@dashjr.org>
	<CA+8xBpc9n4_CDYTq80+u3V=sD+F-tTnc1NMVnK1Z_UnNix75dg@mail.gmail.com>
	<201303231743.59510.luke@dashjr.org>
	<CA+8xBpfzNYqFm-zCD8L7KDiL9x+ez-pUM3B3T981D1n69t8gQQ@mail.gmail.com>
Message-ID: <CAAS2fgTq2xz6P1C8kk_HrWsKcJ8rsDSzF_4ceRS+ympj7K-SCA@mail.gmail.com>

On Sat, Mar 23, 2013 at 10:47 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:
> On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:
>> Not for producing coinbases (where BIP 34 is implemented).
> Sure, that is largely the pool server layer.  But it is misleading to
> imply that bitcoind is nowhere in the stack.

You're both right: BIP34's addition of the height is implemented in
the coinbase generator, so for almost everyone the Bitcoind version is
not very relevant for that.  Rejection of invalid chains, however, is
in the Bitcoin daemon.  Upgrading bitcoind alone should be sufficient
to prevent the creation of forks, though if miners would like to avoid
losing income they must update _both_ so that they don't create
invalid blocks or mine on invalid forks.



From calebdelisle at lavabit.com  Sat Mar 23 22:01:45 2013
From: calebdelisle at lavabit.com (Caleb James DeLisle)
Date: Sat, 23 Mar 2013 18:01:45 -0400
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CA+8xBpfvTQ9pEygPmeSf0guOsECu6uecOG-KB=GVXtPKNo23ZQ@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<1364035346.19716.YahooMailNeo@web161601.mail.bf1.yahoo.com>
	<201303231452.23042.luke@dashjr.org>
	<CA+8xBpfvTQ9pEygPmeSf0guOsECu6uecOG-KB=GVXtPKNo23ZQ@mail.gmail.com>
Message-ID: <514E2649.70708@lavabit.com>



On 03/23/2013 11:24 AM, Jeff Garzik wrote:
> On Sat, Mar 23, 2013 at 10:52 AM, Luke-Jr <luke at dashjr.org> wrote:
>> On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:
>>> Introducing super-nodes with thousands of connected peers can greatly help
>>> here.
>>
>> UDP is connectionless.
>> I would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/
> 
> It depends on the usage.  Simply broadcasting a TX or INV to a remote
> peer does not require a connection, clearly...  but you probably want
> to signal acceptance of those messages somehow.
> 
> But other uses, like subscribing to a broadcast, does require some
> notion of an association.
> 
> In the rough draft, a parallel TCP connection with version/verack
> sequence is required, and you may make use of it if a connection is
> needed.
> 
> But that is just one approach.  A more robust, heavyweight UDP P2P
> might be a hole-punching TCP alternative.  It's up to the community
> and results of experimentation.
> 
> Bittorrent has evolved a full transfer protocol over UDP, to get
> around firewalls and the like.
> 

Bittorrent uses UDP in 2 ways and for different reasons.

The tracker protocol is now UDP because large trackers are under such
enormous strain from short lived HTTP connections (40Gb/s) that there
have been instances of upstream routers becoming overloaded from the
storm of SYN, ACK and FIN messages. UDP helps solve that.

The inter-peer protocol is now UDP because TCP does not play nice in
the context of bufferbloat and Bittorrent needs lots of active TCP
connections to work, exacerbating the problem. In this instance
Bittorrent uses a full userspace TCP stack which just sends w/ UDP.


+1 for experimenting with UDP, we might learn some interesting things.

It's worthwhile to actually speed test UDP v. TCP because the time to
send an INV on an established TCP connection with Nagle disabled may
not be significantly longer than that for sending with UDP.

Also +1 for experimentation with sending a small transaction instead
of an INV, if INVs are not being grouped because we want the fastest
possible network propagation, they are mostly overhead anyway. If
b/w is more important than propagation speed then of course TCP/Nagle
is the way to go.

Thanks,
Caleb




From mark at monetize.io  Sat Mar 23 22:30:22 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 23 Mar 2013 15:30:22 -0700
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
Message-ID: <CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>

If you're considering a datagram protocol, you might be interested in some
more modern alternatives to UDP:

UDT: Breaking the Data Transfer Bottleneck
http://udt.sourceforge.net/

Stream Control Transmission Protocol
http://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol



On Sat, Mar 23, 2013 at 12:17 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:

> Here is a rough draft implementation of a UDP P2P protocol extension
> for bitcoin:
>
>      https://github.com/jgarzik/bitcoin/tree/udp
>      http://yyz.us/bitcoin/udp-v0.patch
>
> Protocol specification (such that it is):
>
> - UDP, bound to same port as TCP P2P (normally 8333)
> - Active, simultaneous TCP P2P connection required (useful against DoS
> and other attacks)
> - Same message format as TCP P2P, same pchMessageStart conventions,
> etc. (my CNetMessage pull req would be helpful here)
> - Multiple P2P messages per UDP packet permitted
> - Max UDP packet size 100*1024 bytes
> - Advertises NODE_UDP in nServices
> - New "getudpcook" TCP P2P command returns a "udpcook" message,
> containing a yummy cookie
> - UDP P2P commands "inv", "tx" and "addr" are handled as if received via
> TCP
> - UDP P2P command "udpsub" sets a mask, that subscribes to one or more
> data broadcasts.
> - When USM_INV_BCAST mask bit is set, receive "inv" messages via UDP
> rather than TCP.
>
> Project and design goals (or, why do this?):
>
> - It is theorized that UDP may be useful for some messages we
> broadcast throughout the network
> - A productive discussion STARTS with code, otherwise discussion
> continues forever.
> - Investigate improving "inv" relay speed
> - Investigate unconditional "tx" broadcasting via UDP, as "inv"
> alternative, for small tx's.
> - Investigate improving block relay speed (or perhaps block header relay
> speed)
> - Open up new design avenues, for P2P patterns more suited to UDP than
> TCP in general.
>
> --
> Jeff Garzik
> exMULTI, Inc.
> jgarzik at exmulti.com
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130323/8332c01d/attachment.html>

From jayf at outlook.com  Sun Mar 24 00:57:09 2013
From: jayf at outlook.com (Jay F)
Date: Sat, 23 Mar 2013 17:57:09 -0700
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
Message-ID: <BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>

My first concern was that I and about everyone else only has TCP/UDP 
port forwarding, but at least for the first:

UDT uses UDP to transfer bulk data with its own reliability control and 
congestion control mechanisms. Multiple UDT flows can share a single UDP 
port, thus a firewall can open only one UDP port for all UDT connections.

The latter appears not so friendly to NAT.


On 3/23/2013 3:30 PM, Mark Friedenbach wrote:
> If you're considering a datagram protocol, you might be interested in 
> some more modern alternatives to UDP:
>
> UDT: Breaking the Data Transfer Bottleneck
> http://udt.sourceforge.net/
>
> Stream Control Transmission Protocol
> http://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol
>
>
>




From gmaxwell at gmail.com  Sun Mar 24 01:22:24 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Sat, 23 Mar 2013 18:22:24 -0700
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
	<BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
Message-ID: <CAAS2fgSaHereTkS41ZzErMU6b4ox74hThA_BDfv=b7tkHnoZ3w@mail.gmail.com>

On Sat, Mar 23, 2013 at 5:57 PM, Jay F <jayf at outlook.com> wrote:
> My first concern was that I and about everyone else only has TCP/UDP
> port forwarding,

You tunnel it!
http://tools.ietf.org/html/draft-tuexen-tsvwg-sctp-dtls-encaps-00

You could do worse to have a data stream that looks like WEBRTC traffic?

In some ways SCTP is a pretty optimal transport for Bitcoin like messaging.



From jgarzik at exmulti.com  Sun Mar 24 02:08:41 2013
From: jgarzik at exmulti.com (Jeff Garzik)
Date: Sat, 23 Mar 2013 22:08:41 -0400
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CAAS2fgSaHereTkS41ZzErMU6b4ox74hThA_BDfv=b7tkHnoZ3w@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
	<BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
	<CAAS2fgSaHereTkS41ZzErMU6b4ox74hThA_BDfv=b7tkHnoZ3w@mail.gmail.com>
Message-ID: <CA+8xBpeHfzhmfRFs6CYusjy8AJHzPUMqD6sko=qOg=Y6oxmDEg@mail.gmail.com>

On Sat, Mar 23, 2013 at 9:22 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:
> In some ways SCTP is a pretty optimal transport for Bitcoin like messaging.

Darn near everything can be shoehorned into a "message"   So
absolutely agreed... in theory.  Been an SCTP fan for years.

Firewall practices tend to put a damper on cool new protocols like that, though.

-- 
Jeff Garzik
exMULTI, Inc.
jgarzik at exmulti.com



From mark at monetize.io  Sun Mar 24 02:27:31 2013
From: mark at monetize.io (Mark Friedenbach)
Date: Sat, 23 Mar 2013 19:27:31 -0700
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
	<BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
Message-ID: <CACh7GpFVcXt+k52PBZLpdt=VTmH7dbQoC+2Z4ZenYPBjDZKY3g@mail.gmail.com>

Nearly all of these new(er) user-mode transports run over UDP, so you can
hole-punch and port forward just the same. Some which don't can
nevertheless be tunneled, to the same effect.

Ultimately I don't have any skin in this game though. Just trying to save
someone from reinventing a perfectly good wheel ;)


On Sat, Mar 23, 2013 at 5:57 PM, Jay F <jayf at outlook.com> wrote:

> My first concern was that I and about everyone else only has TCP/UDP
> port forwarding, but at least for the first:
>
> UDT uses UDP to transfer bulk data with its own reliability control and
> congestion control mechanisms. Multiple UDT flows can share a single UDP
> port, thus a firewall can open only one UDP port for all UDT connections.
>
> The latter appears not so friendly to NAT.
>
>
> On 3/23/2013 3:30 PM, Mark Friedenbach wrote:
> > If you're considering a datagram protocol, you might be interested in
> > some more modern alternatives to UDP:
> >
> > UDT: Breaking the Data Transfer Bottleneck
> > http://udt.sourceforge.net/
> >
> > Stream Control Transmission Protocol
> > http://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol
> >
> >
> >
>
>
>
> ------------------------------------------------------------------------------
> Everyone hates slow websites. So do we.
> Make your web apps faster with AppDynamics
> Download AppDynamics Lite for free today:
> http://p.sf.net/sfu/appdyn_d2d_mar
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130323/882902c5/attachment.html>

From rmayer at nerd-residenz.de  Sun Mar 24 09:11:24 2013
From: rmayer at nerd-residenz.de (Ralph J.Mayer)
Date: Sun, 24 Mar 2013 10:11:24 +0100
Subject: [Bitcoin-development] A bitcoin UDP P2P protocol extension
In-Reply-To: <CA+8xBpeHfzhmfRFs6CYusjy8AJHzPUMqD6sko=qOg=Y6oxmDEg@mail.gmail.com>
References: <CA+8xBpe9D=poPyJ=soGdN3sovqdmvyGGij6FM8PHYGUB5aUkzQ@mail.gmail.com>
	<CACh7GpFqZtWVQFjM-w1uoB+74sVvE=_mXwBQ4P-qGMp2=HJ_yQ@mail.gmail.com>
	<BLU0-SMTP30A4EFEB3349A94802E930C8D60@phx.gbl>
	<CAAS2fgSaHereTkS41ZzErMU6b4ox74hThA_BDfv=b7tkHnoZ3w@mail.gmail.com>
	<CA+8xBpeHfzhmfRFs6CYusjy8AJHzPUMqD6sko=qOg=Y6oxmDEg@mail.gmail.com>
Message-ID: <794A5118-2B41-47B1-8F79-D11C87E348C4@nerd-residenz.de>

> Been an SCTP fan for years.

I have never seen SCTP out there. 
Any example where it is used?

> Firewall practices tend to put a damper on cool new protocols like that, though.

We are a bit old fashioned, indeed. 


rm
sec-guy


From roy at gnomon.org.uk  Mon Mar 25 20:49:11 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Mon, 25 Mar 2013 20:49:11 +0000
Subject: [Bitcoin-development] Key retirement and key compromise
In-Reply-To: <20130225172353.GA7782@malakian.dd-wrt>
References: <20130222230851.GO2030@giles.gnomon.org.uk>
	<20130225172353.GA7782@malakian.dd-wrt>
Message-ID: <20130325204911.GD65880@giles.gnomon.org.uk>

On Fri, Feb 22, 2013 at 11:08:51PM +0000, I wrote:

> What would be really nice is for bitcoin to have a big key compromise
> button, which would automatically transfer all coins to newly
> generated addresses (optionally with a pause between generation and
> transaction - to allow for a new wallet backup).  Optionally, too, the
> compromised/retired addresses could be marked with a flag such that if
> someone sends coins to that address bitcoind immediately generates a
> transaction to transfer the coins to address(es) which are good.

On Mon, Feb 25, 2013 at 09:23:53AM -0800, Andrew Poelstra wrote:

> The problem with automatic transactions would be: by repeatedly sending
> money to an address and seeing if it always moves quickly, an attacker
> can identify (a) that an address is in use, (b) which public key it has
> (if this isn't already public), and (c) that the key is believed to be
> compromised.

I realise on reflection that what I really want is not automatic
transmissions, but a means to revoke an address.

The problem is that after transfering the coins from the compromised
addresses to a new, hopefully safe address, what to do about the fact
that third parties might still try to send me coins to an old,
compromised address.  So what I think I'm suggesting is that there
should be an address revocation protocol, such that clients will give
an error if their user tries to send coins to a revoked address.

Unless we think that direct payments to addresses will become
completely obsolete once the payment protocol is in use, in which case
(maybe) this functionality belongs in the payment protocol instead -
but I remain unconvinced of that.

I'm not envisaging something as drastic as changing the rules to make
transactions to revoked addresses invalid - just an overlay protocol.
Although to be useful such a protocol would have to be pretty much
universally implemented by clients.

Thoughts?

roy



From gmaxwell at gmail.com  Mon Mar 25 21:10:53 2013
From: gmaxwell at gmail.com (Gregory Maxwell)
Date: Mon, 25 Mar 2013 14:10:53 -0700
Subject: [Bitcoin-development] Key retirement and key compromise
In-Reply-To: <20130325204911.GD65880@giles.gnomon.org.uk>
References: <20130222230851.GO2030@giles.gnomon.org.uk>
	<20130225172353.GA7782@malakian.dd-wrt>
	<20130325204911.GD65880@giles.gnomon.org.uk>
Message-ID: <CAAS2fgQSMvCwmeoFSJUyrcikj0wV_r_hLRDrE_v5sA4xt48PDQ@mail.gmail.com>

On Mon, Mar 25, 2013 at 1:49 PM, Roy Badami <roy at gnomon.org.uk> wrote:
> I'm not envisaging something as drastic as changing the rules to make
> transactions to revoked addresses invalid - just an overlay protocol.
> Although to be useful such a protocol would have to be pretty much
> universally implemented by clients.

That is quite drastic enough, as it requires adding more perpetual
data that must remain in fast lookup for all validating nodes (the set
of revoked 'addresses').

Keep in mind that this is only improvement for what is a usually
inadvisable usage of Bitcoin to begin with... you should not be
reusing addresses.



From roy at gnomon.org.uk  Mon Mar 25 21:35:45 2013
From: roy at gnomon.org.uk (Roy Badami)
Date: Mon, 25 Mar 2013 21:35:45 +0000
Subject: [Bitcoin-development] Key retirement and key compromise
In-Reply-To: <CAAS2fgQSMvCwmeoFSJUyrcikj0wV_r_hLRDrE_v5sA4xt48PDQ@mail.gmail.com>
References: <20130222230851.GO2030@giles.gnomon.org.uk>
	<20130225172353.GA7782@malakian.dd-wrt>
	<20130325204911.GD65880@giles.gnomon.org.uk>
	<CAAS2fgQSMvCwmeoFSJUyrcikj0wV_r_hLRDrE_v5sA4xt48PDQ@mail.gmail.com>
Message-ID: <20130325213545.GE65880@giles.gnomon.org.uk>

On Mon, Mar 25, 2013 at 02:10:53PM -0700, Gregory Maxwell wrote:
> On Mon, Mar 25, 2013 at 1:49 PM, Roy Badami <roy at gnomon.org.uk> wrote:
> > I'm not envisaging something as drastic as changing the rules to make
> > transactions to revoked addresses invalid - just an overlay protocol.
> > Although to be useful such a protocol would have to be pretty much
> > universally implemented by clients.
> 
> That is quite drastic enough, as it requires adding more perpetual
> data that must remain in fast lookup for all validating nodes (the set
> of revoked 'addresses').

Maybe it should be possible for addresses to contain expiry dates, so
that revocation lists don't need to hang around forever.

> Keep in mind that this is only improvement for what is a usually
> inadvisable usage of Bitcoin to begin with... you should not be
> reusing addresses.

It may be inadvisable but in many cases it is pretty much unavoidable
as Bitcoin stands today.  Granted, the payment protocol will help with
that in many use cases...

roy



